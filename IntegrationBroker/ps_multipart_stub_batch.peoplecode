import X_PP_IB_HNDLR_X:ServiceIntegration;

Local array of string &arrXXXResponse_, &arrHdr_, &arrBody_, &arrFiles_;
Component array of array of string &arrReturnValues_;
Local time &startTime_, &endTime_;
Local string &sFileName_, &sDBcharset_, &sOutputPath_, &sFlName_;
Local integer &i_;

&arrHdr_ = CreateArrayRept("", 0);
&arrBody_ = CreateArrayRept("", 0);
rem &arrReturnValues_ = CreateArrayRept(CreateArray("", 0), 0);

If None(&oSvcCall_) Then
   &oSvcCall_ = create X_PP_IB_HNDLR_X:ServiceIntegration();
End-If;
REM Populate Header Array;
&arrHdr_.Push("appId: YOUR VALUE");
&arrHdr_.Push("tenantId: test");
REM Populate Body Array in this sequence;
&arrBody_.Push("engine");
&arrBody_.Push("documentFile");
&startTime_ = %PerfTime;
REM initialise;
&arrFiles_ = CreateArrayRept("", 0);
REM pass directory without leading slash to fetch files to be passed to Svc;
&arrFiles_ = &oSvcCall_.retrieveFiles("YOUR PATH", True);
&arrFiles_.Sort("A");
&sOutputPath_ = &oSvcCall_.sUserFilePath_;
MessageBox(0, "", 0, 0, "Array Lenth : " | &arrFiles_.Len);
For &i_ = 1 To &arrFiles_.Len
   If &arrFiles_ [&i_] = &sOutputPath_ | "." Or
         &arrFiles_ [&i_] = &sOutputPath_ | ".." Then
      Continue;
   Else
      &arrReturnValues_ = CreateArrayRept(CreateArray("", 0), 0);
      /* Arrive at file name */
      &sFlName_ = Substring(&arrFiles_ [&i_], Len(&sOutputPath_) + 1, Len(&arrFiles_ [&i_]) - Len(&sOutputPath_));
      MessageBox(0, "", 63, 118, "Processing file: %1", &sFlName_);
      &oSvcCall_.debug("--><--");
      &oSvcCall_.debug("File Name from AE : " | &sFlName_);
      &arrXXXResponse_ = &oSvcCall_.callService(&arrHdr_, &arrBody_, &sFlName_); /* Initiate the call to Svc */
      If Not (&oSvcCall_.sGUID_ = "") Then
         MessageBox(0, "", 0, 0, "File: " | &sFlName_ | " processed with GUID: " | &oSvcCall_.sGUID_);
      Else
         MessageBox(0, "", 0, 0, "File: " | &sFlName_ | " NOT processed");
      End-If;
      If &oSvcCall_.bCallSvc_ Then
         &oSvcCall_.parseSvcResponse(&oSvcCall_.sSvcRespPayload_); /* Parse Svc Response */
      Else
         &oSvcCall_.debug("JSON parsing skipped for file : " | &sFlName_);
         &oSvcCall_.logRequest("JSON parsing skipped for file : " | &sFlName_, "");
         &oSvcCall_.debug("<---->");
      End-If;
   End-If;
End-For;
&endTime_ = %PerfTime;
Local string &sTimeTaken_ = NumberToString("%6.3", Value(&endTime_ - &startTime_)) | " (s)";
MessageBox(0, "", 0, 0, "Total time taken : " | &sTimeTaken_);
&oSvcCall_.cleanup();

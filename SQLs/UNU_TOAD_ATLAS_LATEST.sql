--AP Query - 2012
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, D.PYMNT_ID, F.PYMNT_ID_REF, A.INVOICE_DT, A.VENDOR_ID, A.ENTRY_STATUS, C.XLATLONGNAME, A.CLOSE_STATUS,
       A.ACCOUNTING_DT, A.BASE_CURRENCY, A.GROSS_AMT_BSE, A.PAY_AMT_BASE, A.TXN_CURRENCY_CD, A.GROSS_AMT, A.MERCHANDISE_AMT, A.PAY_AMT,
       A.POST_STATUS_AP, B.XLATLONGNAME, A.PO_ID, A.CNTRCT_ID, A.UNMTCH_PAY_FLG,
       D.PYMNT_HOLD, D.PYMNT_SELCT_STATUS, E.XLATLONGNAME, D.PAID_AMT, D.PYMNT_GROSS_AMT, 
       D.BANK_SETID, D.BANK_CD, D.BANK_ACCT_KEY, F.PYMNT_ID, F.PYMNT_ID_REF, F.PAY_CYCLE
FROM PS_VOUCHER A, PSXLATITEM B, PSXLATITEM C, PS_PYMNT_VCHR_XREF D, PSXLATITEM E, PS_PAYMENT_TBL F
WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.VOUCHER_ID = D.VOUCHER_ID
  AND D.BANK_SETID = F.BANK_SETID
  AND D.BANK_CD= F.BANK_CD
  AND D.BANK_ACCT_KEY = F.BANK_ACCT_KEY
  AND D.PYMNT_ID = F.PYMNT_ID
  AND A.BUSINESS_UNIT = '605UU'
  AND TO_CHAR(A.ACCOUNTING_DT,'YYYY') = '2012'
  AND B.FIELDNAME = 'POST_STATUS_AP'
  AND B.FIELDVALUE = A.POST_STATUS_AP
  AND C.FIELDNAME = 'ENTRY_STATUS'
  AND C.FIELDVALUE = ENTRY_STATUS
  AND E.FIELDNAME = 'PYMNT_SELCT_STATUS'
  AND E.FIELDVALUE = PYMNT_SELCT_STATUS
ORDER BY 1, 2, 11;

--AP Query - 2012
--NO XLAT Tables
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, D.PYMNT_ID, F.PYMNT_ID_REF, A.INVOICE_DT, A.VENDOR_ID, A.ENTRY_STATUS, A.CLOSE_STATUS,
       A.ACCOUNTING_DT, A.BASE_CURRENCY, A.GROSS_AMT_BSE, A.PAY_AMT_BASE, A.TXN_CURRENCY_CD, A.GROSS_AMT, A.MERCHANDISE_AMT, A.PAY_AMT, A.POST_STATUS_AP, 
       A.PO_ID, A.CNTRCT_ID, A.UNMTCH_PAY_FLG, D.PYMNT_HOLD, D.PYMNT_SELCT_STATUS, F.PYMNT_STATUS, D.PAID_AMT, D.PYMNT_GROSS_AMT, D.BANK_SETID, D.BANK_CD, D.BANK_ACCT_KEY       
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF D, PS_PAYMENT_TBL F
WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.VOUCHER_ID = D.VOUCHER_ID
  AND D.BANK_SETID = F.BANK_SETID
  AND D.BANK_CD= F.BANK_CD
  AND D.BANK_ACCT_KEY = F.BANK_ACCT_KEY
  AND D.PYMNT_ID = F.PYMNT_ID
  AND A.BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(A.ACCOUNTING_DT,'YYYY') = '2012'
  AND F.SOURCE_TXN = 'VCHR'
  --AND F.PYMNT_STATUS IN ('P','X') 
ORDER BY 1, 2, 10;

SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.VENDOR_ID, B.NAME1, A.VOUCHER_STYLE, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), 
       A.TXN_CURRENCY_CD,  C.PYMNT_GROSS_AMT, C.PAID_AMT, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_STATUS_VCHR, A.POST_STATUS_AP, 
       A.OPRID, A.GROSS_AMT_BSE, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'), TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD'), A.OPRID_LAST_UPDT, C.PYMNT_ID, 
       TO_CHAR(C.SCHEDULED_PAY_DT,'YYYY-MM-DD'), C.BANK_CD, C.BANK_ACCT_KEY, C.PYMNT_METHOD, D.PYMNT_ID_REF
FROM PS_VOUCHER A, PS_VENDOR B, PS_PYMNT_VCHR_XREF C, PS_PAYMENT_TBL D
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
  --AND A.ENTRY_STATUS <> 'X'
  AND A.BUSINESS_UNIT = '600UU'  
  AND B.VENDOR_ID =  A.VENDOR_ID
  AND B.SETID = 'UNUNI'
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.VOUCHER_ID = C.VOUCHER_ID
  --AND C.PYMNT_ACTION <> 'X'
  --AND RTRIM( C.PYMNT_ID,' ') IS NOT NULL
  --AND A.CLOSE_STATUS = 'O'
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2011-01-01','YYYY-MM-DD') AND TO_DATE('2011-12-31','YYYY-MM-DD')
  --AND A.POST_STATUS_AP <> 'P'
  AND D.BANK_SETID = C.BANK_SETID
  AND D.BANK_CD = C.BANK_CD
  AND D.BANK_ACCT_KEY = C.BANK_ACCT_KEY
  AND D.PYMNT_ID = C.PYMNT_ID
  AND B.VENDOR_CLASS IN ('P', 'R')
  AND A.GROSS_AMT_BSE <= 4000
ORDER BY 1, 2

--UN Custom Bank Defaults
SELECT * FROM PS_UN_AP_BNKDFT_D WHERE BANK_CD LIKE '6%';

SELECT '20050101000000 topu ' || x.usr || ' ' || trunc(x.dur) || ' ' || x.freq
FROM (
  SELECT   usr, dur, RANK() OVER (ORDER BY dur DESC) prcrnk,freq
  FROM (
    SELECT oprid usr, --SUM(TRUNC((enddttm-begindttm)*86400 dur,
    SUM(TRUNC((CAST(enddttm AS DATE)- CAST(begindttm AS DATE)))*86400) dur, 
    count(*) freq    
    FROM psprcsrqst p
    WHERE begindttm IS NOT NULL
    AND enddttm IS NOT NULL --*have completed
    AND runstatus IN(9,17) --*successful proc
    GROUP BY oprid
       )
     ) x
WHERE x.prcrnk <= 20
ORDER BY x.usr, x.dur desc 

SELECT * FROM PSSTATUS
SELECT * FROM PSLANGUAGES WHERE INSTALLED = 1

SELECT SETID 
 , PROCESS_GROUP 
 , DESCR 
  FROM PS_COMBO_GROUP_TBL 
 WHERE COMBO_EDIT_OPTION = 'D'
 
SELECT * FROM PS_DEPT_TBL WHERE DEPTID = '66001';
SELECT * FROM PS_OPER_UNIT_TBL WHERE OPERATING_UNIT = '618';
SELECT * FROM PS_FUND_TBL WHERE FUND_CODE IN ('03500', '11000');
SELECT * FROM PS_CHARTFIELD2_TBL WHERE CHARTFIELD2 IN ('10044');
SELECT * FROM PS_PROJECT_FS WHERE PROJECT_ID IN ('00077315', '00073470');


SELECT DISTINCT A.BUSINESS_UNIT 
 , A.CONTRACT_NUM 
 , B.PROJECT_ID 
 , Substr(A.TITLE56,1,30) 
 , A.EMPLID 
 , A.PROPOSAL_ID 
 , A.AWARD_TYPE 
 , A.AWARD_STATUS 
  FROM PS_GM_AWARD A LEFT JOIN PS_CA_DETAIL_PROJ B ON A.CONTRACT_NUM = B.CONTRACT_NUM
  AND A.BUSINESS_UNIT = 'UNUNI'
  
SELECT DISTINCT A.EMPLID 
FROM PS_GM_AWARD A LEFT JOIN PS_CA_DETAIL_PROJ B ON A.CONTRACT_NUM = B.CONTRACT_NUM
AND A.BUSINESS_UNIT = 'UNUNI'


SELECT DISTINCT A.EMPLID, A.NAME, B.NAME, B.EMPLID, INSTR(B.NAME, ',')
FROM PS_PERS_DATA_EFFDT A, PS_PERSONAL_DATA B
WHERE A.EMPLID = B.EMPLID
  AND A.NAME <> B.NAME
  AND A.NAME <> ' ' 
  AND B.NAME <> ' '
  AND INSTR(B.NAME, ',') = 0
  AND A.EMPLID IN (SELECT DISTINCT A.EMPLID FROM PS_GM_AWARD A WHERE A.BUSINESS_UNIT = 'UNUNI')
ORDER BY A.EMPLID ASC

SELECT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.NAME1, A.NAME2, L.UN_NATIONALITY, A.VENDOR_STATUS, A.VENDOR_CLASS, A.AR_NUM,
       TO_CHAR(CAST((A.CREATED_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.CREATED_BY_USER, 
       TO_CHAR(CAST((A.LAST_MODIFIED_DATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.ENTERED_BY, TO_CHAR(A.LAST_ACTIVITY_DT,'YYYY-MM-DD'), 
       B.VNDR_LOC, I.DESCR, TO_CHAR(B.EFFDT,'YYYY-MM-DD'), B.EFF_STATUS, B.CURRENCY_CD, C.PYMNT_METHOD, C.BANK_CD, C.BANK_ACCT_KEY, C.CURRENCY_PYMNT, 
       E.ADDRESS_SEQ_NUM, TO_CHAR(E.EFFDT,'YYYY-MM-DD'), E.EFF_STATUS, E.NAME1, E.NAME2, E.EMAILID, E.ADDRESS1, E.ADDRESS2, E.ADDRESS3, E.ADDRESS4, 
       E.CITY, E.STATE, H.DESCR, E.POSTAL, E.COUNTRY, F.PHONE, G.COUNTRY_CODE, G.PHONE, D.BANK_ACCT_SEQ_NBR, F.COUNTRY_CODE, D.DESCR, D.DEFAULT_IND, 
       D.COUNTRY, D.BENEFICIARY_BANK, D.BANK_ID_QUAL, D.BNK_ID_NBR, D.BENEF_BRANCH, D.BRANCH_ID, D.BANK_ACCT_TYPE, D.BANK_ACCOUNT_NUM, D.IBAN_ID, 
       D.DFI_ID_QUAL, D.DFI_ID_NUM, K.INTRMED_SEQ_NO, K.STL_ROUTING_METHOD, K.INTRMED_DFI_ID, K.INTRMED_BANK_CD, K.INTRMED_ACCT_KEY, K.INTRMED_PYMNT_MSG, 
       J.CNTCT_SEQ_NUM, TO_CHAR(J.EFFDT,'YYYY-MM-DD'), J.EFF_STATUS, J.CONTACT_NAME, J.CONTACT_TYPE 
FROM PS_VENDOR A, PS_VENDOR_LOC B, PS_VENDOR_PAY C, PS_VNDR_BANK_ACCT D, PS_VENDOR_ADDR E, PS_VENDOR_ADDR_PHN F, PS_VENDOR_ADDR_PHN G, 
     PS_STATE_TBL H, PS_VNDR_LOC_SCROL I, PS_VENDOR_CNTCT J, PS_VNDR_IBANK_ACCT K, PS_UN_VENDOR L 
  WHERE A.SETID = 'UNUNI' 
     AND A.SETID = B.SETID 
     AND A.VENDOR_ID = B.VENDOR_ID 
     AND B.EFFDT = 
        (SELECT MAX(B_ED.EFFDT) FROM PS_VENDOR_LOC B_ED 
        WHERE B.SETID = B_ED.SETID 
          AND B.VENDOR_ID = B_ED.VENDOR_ID 
          AND B.VNDR_LOC = B_ED.VNDR_LOC) 
     AND B.SETID = C.SETID 
     AND B.VENDOR_ID = C.VENDOR_ID 
     AND B.VNDR_LOC = C.VNDR_LOC 
     AND C.EFFDT = B.EFFDT 
     AND B.SETID = D.SETID 
     AND B.VENDOR_ID = D.VENDOR_ID 
     AND B.VNDR_LOC = D.VNDR_LOC 
     AND D.EFFDT = B.EFFDT 
     AND A.SETID = E.SETID 
     AND A.VENDOR_ID = E.VENDOR_ID 
     AND E.EFFDT = 
        (SELECT MAX(E_ED.EFFDT) FROM PS_VENDOR_ADDR E_ED 
        WHERE E.SETID = E_ED.SETID 
          AND E.VENDOR_ID = E_ED.VENDOR_ID 
          AND E.ADDRESS_SEQ_NUM = E_ED.ADDRESS_SEQ_NUM) 
     AND E.ADDRESS_SEQ_NUM = B.REMIT_ADDR_SEQ_NUM 
     AND E.SETID =  F.SETID (+) 
     AND E.VENDOR_ID =  F.VENDOR_ID (+) 
     AND E.ADDRESS_SEQ_NUM =  F.ADDRESS_SEQ_NUM (+) 
     AND E.EFFDT =  F.EFFDT (+) 
     AND E.SETID =  G.SETID (+) 
     AND E.VENDOR_ID =  G.VENDOR_ID (+) 
     AND E.ADDRESS_SEQ_NUM =  G.ADDRESS_SEQ_NUM (+) 
     AND E.EFFDT =  G.EFFDT (+) 
     AND  F.PHONE_TYPE (+) = 'MAIN' 
     AND  G.PHONE_TYPE (+) = 'FAX' 
     AND E.COUNTRY =  H.COUNTRY (+) 
     AND E.STATE =  H.STATE (+) 
     --AND E.COUNTRY LIKE :1 
     --AND A.CREATED_BY_USER LIKE :2 
     AND A.SETID = I.SETID 
     AND A.VENDOR_ID = I.VENDOR_ID 
     AND B.VNDR_LOC = I.VNDR_LOC 
     --AND A.VENDOR_STATUS LIKE :3 
     AND A.SETID =  J.SETID (+) 
     AND A.VENDOR_ID =  J.VENDOR_ID (+) 
     AND ( J.EFFDT = 
        (SELECT MAX(J_ED.EFFDT) FROM PS_VENDOR_CNTCT J_ED 
        WHERE J.SETID = J_ED.SETID 
          AND J.VENDOR_ID = J_ED.VENDOR_ID 
          AND J.CNTCT_SEQ_NUM = J_ED.CNTCT_SEQ_NUM) 
     OR J.EFFDT IS NULL) 
     --AND A.VENDOR_ID >= :4 
     --AND A.VENDOR_ID <= :5 
     AND D.SETID =  K.SETID (+) 
     AND D.VENDOR_ID =  K.VENDOR_ID (+) 
     AND D.VNDR_LOC =  K.VNDR_LOC (+) 
     AND D.EFFDT =  K.EFFDT (+) 
     AND D.BANK_ACCT_SEQ_NBR =  K.BANK_ACCT_SEQ_NBR (+)
     AND A.SETID = L.SETID
     AND A.VENDOR_ID = L.VENDOR_ID
     AND A.VENDOR_ID = '0000005935' 
  ORDER BY 1, 2, 14, 41, 56, 62

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID LIKE '%5935'
SELECT * FROM PSRECDEFN WHERE RECNAME LIKE 'UN%VENDOR%'
SELECT * FROM PS_UN_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000000157'

SELECT * FROM PSOPRDEFN WHERE OPRID LIKE '%hu%xue%'
--wang.su-mei
--lu.xin-yi
--chen.zhuo
--zhao.gang
--fu.xin
--hu-xue.wen
SELECT * FROM PS_PC_PRJ_STAT_VW2 WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_TYPE = '00000'
SELECT * FROM PS_PC_PRJ_STAT_LVW WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_TYPE = '00000'
SELECT * FROM PS_PROJ_TYPE_TBL WHERE SETID = 'UNUNI' AND PROJECT_TYPE = '00000'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'prakash.prashant'
SELECT * FROM PS_PROJECT WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID LIKE 'UU608A%'

SELECT D.PNLGRPNAME, C.PNLNAME, D.ADDSRCHRECNAME, D.SEARCHRECNAME, R.RECNAME, DB.SUBRECORD, P.OCCURSLEVEL, R.SQLTABLENAME, R.BUILDSEQNO,
       R.AUDITRECNAME, DB.RECNAME_PARENT, P.FIELDNAME, P.OCCURSLEVEL, DB.DEFFIELDNAME, P.FIELDTYPE,
       DB.EDITTABLE, DB.SETCNTRLFLD, P.LABEL_ID, P.LBLTEXT, P.SUBPNLNAME
FROM PSPNLGROUP C, PSPNLFIELD P, PSRECDEFN R, PSRECFIELDDB DB, PSPNLGRPDEFN D
WHERE C.PNLNAME = P.PNLNAME
  AND R.RECNAME = P.RECNAME
  AND DB.RECNAME = R.RECNAME (+) 
  AND DB.FIELDNAME = P.FIELDNAME (+)
  AND C.PNLGRPNAME = D.PNLGRPNAME 
  AND C.MARKET = D.MARKET
  AND C.PNLGRPNAME = 'GM_PROPOSAL'
  AND C.PNLNAME = 'GM_PROPOSAL_PROJ'
  --AND R.RECTYPE = 0
ORDER BY P.OCCURSLEVEL;

SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'UN_GM_FA_DEP_VW'
SELECT * FROM PS_GM_PROP_PROJ WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID LIKE 'UU%'
SELECT * FROM PS_PROJ_TYPE_TBL WHERE SETID = 'SHARE'
SELECT * FROM PS_INTFC_PROJ_GEN
SELECT * FROM PS_PERSONAL_DATA WHERE EMPLID = 'UNU001635'
SELECT * FROM PS_PERS_DATA_EFFDT WHERE EMPLID = 'UNU001635';
SELECT * FROM PS_PERSONAL_DATA WHERE EMPLID = 'UNU001616'
SELECT * FROM PS_PERS_DATA_EFFDT WHERE EMPLID = 'UNU001616';
SELECT * FROM PS_GM_PERS_DATA WHERE EMPLID = 'UNU001635'
SELECT * FROM PS_GM_JOB WHERE EMPLID = 'UNU001635'
SELECT * FROM PS_JOB WHERE EMPLID = 'UNU001635'
SELECT * FROM PS_JOB WHERE EMPLID = 'UNU001616'
SELECT * FROM PS_JOB WHERE EMPLID = 'UNU003023'

SELECT * FROM PS_PAY_TRMS_TIME
SELECT * FROM PS_PAY_TRMS_TBL
SELECT * FROM PS_PAY_TRMS_NET
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00011058'

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'eric.lin'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'mariko.shimazu-oberhoff'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'way-peng.yong'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'nobuyuki.kawade'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'steve.crouch'
--UN_JE_APPROVER
--UN_UNU_AP_PAYCYCLE_APPR
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'ATLASSRV'
SELECT * FROM PSROLEDEFN WHERE ROLENAME = 'CORIOSRV'
SELECT * FROM PSWEBPROFNVP
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'CMBATCH'
SELECT * FROM PSOPRDEFN WHERE OPRID = 'CMBATCH'

-------------------------------------------------
--Verification Queries
SELECT * FROM PS_PO_ACCTG_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000006238' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_PO_ACCTG_LN_VW WHERE BUSINESS_UNIT = '614UU' AND PO_ID = '0000004883' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000006238'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '614UU' AND PO_ID = '0000004883'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0053228193' AND LINE_NBR IN (2,5)
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0053228193' AND LEDGER_GROUP = 'DET_UU'
--Find the lines where Monetary Amount <> 0, Note the KK_TRAN_LN number(s)
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0053228193' AND LEDGER_GROUP = 'DET_UU' --AND KK_TRAN_LN IN (2,3,10,11)
--Find the actual PO Line Numbers which are responsible
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0053228193' AND KK_TRAN_LN IN (2,3,10,11)
-------------------------------------------------
SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.PO_STATUS, A.BUDGET_CHECK, TO_CHAR(A.PO_DT,'YYYY-MM-DD'), 
       B.CNTRCT_SETID, B.CNTRCT_ID, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, A.MATCH_STATUS_PO,
       A.PO_POST_STATUS, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_Amt, A.CURRENCY_CD, 
       D.MERCHANDISE_AMT AS PO_Foreign_Amt, A.VENDOR_ID, TO_CHAR(C.DUE_DT,'YYYY-MM-DD'), B.DESCR254_MIXED, C.SHIPTO_ID, D.REQ_ID, 
       D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE, 
       G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_ENC, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, G.FOREIGN_CURRENCY, 
       G.LEDGER_GROUP, G.PC_DISTRIB_STATUS
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, 
    (((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT 
                                                             AND D.PO_ID = E.PO_ID) 
       LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT 
                                        AND E.KK_TRAN_ID = F.KK_TRAN_ID 
                                        AND D.LINE_NBR = F.LINE_NBR 
                                        AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM 
                                        AND D.SCHED_NBR = F.SCHED_NBR) 
      LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID 
                                         AND F.KK_TRAN_DT = G.KK_TRAN_DT 
                                         AND F.KK_TRAN_LN = G.KK_TRAN_LN)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND D.PROJECT_ID = '00064335'
  --AND D.FUND_CODE < '11000'
  --AND D.ACTIVITY_ID = 'ADMIN'
  --AND D.ACCOUNT = '71605'
  AND TO_CHAR( A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND G.LEDGER_GROUP = 'DET_UU'
  AND G.MONETARY_AMOUNT <> 0
ORDER BY 1, 3;

----------------------------------
SELECT A.BUSINESS_UNIT, D.BUSINESS_UNIT_PC, D.BUSINESS_UNIT_GL, A.REQ_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.REQ_STATUS, 
       A.BUDGET_CHECK, TO_CHAR(A.REQ_DT,'YYYY-MM-DD'), B.BUYER_ID, A.REQUESTOR_ID, A.OPRID_ENTERED_BY, A.OPRID_MODIFIED_BY, A.OPRID_APPROVED_BY, 
       A.PO_POST_STATUS, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), D.QTY_REQ, D.MERCH_AMT_BSE AS REQ_USD_Amt, A.CURRENCY_CD, 
       D.MERCHANDISE_AMT AS REQ_Foreign_Amt, B.VENDOR_ID, TO_CHAR(C.DUE_DT,'YYYY-MM-DD'), B.DESCR254_MIXED, C.SHIPTO_ID, 
       D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD1, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE, 
       G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_PRE, G.FOREIGN_CURRENCY, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, 
       G.LEDGER_GROUP, G.PC_DISTRIB_STATUS
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, 
    (((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT 
                                                             AND D.REQ_ID = E.REQ_ID) 
       LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT 
                                        AND E.KK_TRAN_ID = F.KK_TRAN_ID 
                                        AND D.LINE_NBR = F.LINE_NBR 
                                        AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM 
                                        AND D.SCHED_NBR = F.SCHED_NBR) 
      LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID 
                                         AND F.KK_TRAN_DT = G.KK_TRAN_DT 
                                         AND F.KK_TRAN_LN = G.KK_TRAN_LN)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.REQ_ID = B.REQ_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.REQ_ID = C.REQ_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.REQ_ID = D.REQ_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND D.PROJECT_ID = '00064335'
  AND D.FUND_CODE < '11000'
  --AND D.ACTIVITY_ID = 'ADMIN'
  --AND D.ACCOUNT = '71605'
  AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND G.LEDGER_GROUP = 'ALT_UU'
  AND G.MONETARY_AMOUNT <> 0
ORDER BY 1, 3;

SELECT * FROM PSOPRDEFN WHERE OPRID = 'ICC.Admin'
--HvyauGcnse10B8SsTpK78FxGnZo=
SELECT * FROM PSOPRDEFN WHERE OPRID = 'prakash.prashant'
--rJ+qUzvd/zXTCWKbyRey03OsAT4=
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'ICC.Admin'

select psq.se, psq.de, xlatshortname xl, psq.sl, psq.hb, psq.ma
from 
(select psd.SERVERNAME se,
       DESCR de,  
       SERVERSTATUS ss,     
       SLEEPTIME sl,  
       HEARTBEAT hb,
       MAXAPIAWARE ma 
from ps_serverdefn psd, psserverstat pss
where psd.servername=pss.servername
order by psd.servername) psq, psxlatitem psx
where psq.ss=psx.FIELDVALUE
and psx.FIELDNAME='SERVERSTATUS'


select psd.SERVERNAME se, DESCR de, PRCSTYPE ty, PRCSPRIORITY pr, MAXCONCURRENT mx
from ps_serverclass psc,ps_serverdefn psd, psserverstat pss
where psc.servername=psd.servername
and psc.servername=pss.servername

select psd.SERVERNAME se, DESCR de, 
decode(DAYOFWEEK,'0','Dimanche','1','Lundi','2','Mardi','3','Mercredi','4','Jeudi','5','Vendredi','6','Samedi',DAYOFWEEK) da,
(trunc(STARTTIME/60) || ':' || (STARTTIME- ((trunc(STARTTIME/60))*60))) st , 
(trunc(ENDTIME/60) || ':' || (ENDTIME- ((trunc(ENDTIME/60))*60))) en
from ps_serverdefn psd, psserverstat pss, ps_serveroprtn pso
where pso.servername=psd.servername
and pso.servername=pss.servername

select xlatshortname xl,psp.dbp, decode(psp.en,'1','Yes','0','No') en
from 
(select RUNSTATUS ru,DAYSBEFOREPURGE dbp,ENABLED en
from PS_PRCSPURGELIST) psp, psxlatitem psx
where psp.ru=psx.FIELDVALUE
and psx.FIELDNAME='RUNSTATUS'

select to_char(PRCSPURGENEXTDTTM,'DD/MM/YYYY') nd,RETENTIONDAYS re ,PRCSPURGERECURNAME rn,decode(PURGEPRCSFILES,'1','Yes','0','No') pf,  ARCH_PROCESSED ar   
from ps_prcssystem;

select substr(to_char(begindttm,'YYYYMMDD'),1,8) || '000000 pspj tps ' || SUM(enddttm-begindttm)*86400
FROM psprcsrqst p
WHERE begindttm IS NOT NULL
AND enddttm IS NOT NULL /*have completed*/
AND runstatus IN(9,17) /*successful proc*/
group by substr(to_char(begindttm,'YYYYMMDD'),1,8)
order by substr(to_char(begindttm,'YYYYMMDD'),1,8)

SELECT substr(to_char(begindttm,'YYYYMMDD'),1,8) || '000000 pspj nbr ' || count(*)
FROM psprcsrqst p
WHERE begindttm IS NOT NULL
AND enddttm IS NOT NULL /*have completed*/
AND runstatus IN(9,17) /*successful proc*/
group by substr(to_char(begindttm,'YYYYMMDD'),1,8)
order by substr(to_char(begindttm,'YYYYMMDD'),1,8)

SELECT * FROM PS_PMN_SRVRLIST

    
SELECT A.BUSINESS_UNIT, ABS ( A.FOREIGN_AMOUNT), A.ACCOUNT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, C.DESCR, A.BUSINESS_UNIT_GL, A.FOREIGN_AMOUNT, A.TXN_CURRENCY_CD, A.MONETARY_AMOUNT, A.OPEN_ITEM_STATUS, A.ANALYSIS_TYPE, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD1, A.CHARTFIELD2, A.PROJECT_ID, A.RATE_MULT, A.RATE_DIV, A.MONETARY_AMT_BSE,C.SETID,C.ACCOUNT,TO_CHAR(C.EFFDT,'YYYY-MM-DD')
FROM PS_DISTRIB_LINE A, PS_GL_ACCOUNT_TBL C
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
  AND NOT EXISTS (SELECT 'X' FROM PS_DISTRIB_LINE B 
                  WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
                    AND A.VOUCHER_ID = B.VOUCHER_ID
                    AND (( B.ACCOUNT BETWEEN '14020' AND '14055')
                      OR ( B.ACCOUNT IN ('11015','14085','16005','16010','16015','14057','14056','11005'))
                      OR ( B.ACCOUNT BETWEEN '21005' AND '21030')
                      OR ( B.ACCOUNT BETWEEN '22005' AND '22010')
                      OR ( C.ACCOUNT BETWEEN '60000' AND '79999')
                      OR ( B.ACCOUNT BETWEEN '23010' AND '23100')))
                   AND C.ACCOUNT = A.ACCOUNT
                   AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL C_ED 
                                  WHERE C.SETID = C_ED.SETID
                                    AND C.ACCOUNT = C_ED.ACCOUNT
                                    AND C_ED.EFFDT <= SYSDATE)
   AND A.ACCOUNT NOT BETWEEN '15005' AND '15100'
   AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1, 2, 3, 17, 4, 5

SELECT A.BUSINESS_UNIT, A.FISCAL_YEAR, A.OPERATING_UNIT, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD1, A.FUND_CODE, SUM( DECODE(SUBSTR( A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0))
  FROM PS_LEDGER_KK A
  WHERE A.LEDGER LIKE 'AX1%BUD'
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.FISCAL_YEAR = '2012'
     --AND A.FUND_CODE LIKE :4
     --AND A.DEPTID LIKE :5
  GROUP BY  A.BUSINESS_UNIT,  A.FISCAL_YEAR,  A.OPERATING_UNIT,  A.DEPTID,  A.PROJECT_ID,  A.CHARTFIELD1,  A.FUND_CODE
  ORDER BY 5, 6, 7

    
SELECT B.BUSINESS_UNIT, B.VOUCHER_ID, D.DEPTID, C.GROSS_AMT
  FROM PSWORKLIST A, PS_VCHR_WL1 B, PS_VOUCHER C, PS_DISTRIB_LINE D, PS_WF_SYS_DEFAULTS E
  WHERE A.BUSPROCNAME = B.BUSPROCNAME
     AND A.ACTIVITYNAME = B.ACTIVITYNAME
     AND A.EVENTNAME = B.EVENTNAME
     AND A.WORKLISTNAME = B.WORKLISTNAME
     AND A.INSTANCEID = B.INSTANCEID
     AND B.TRANSACTIONID = A.TRANSACTIONID
     AND B.BUSPROCNAME = C.BUSPROCNAME
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.VOUCHER_ID = C.VOUCHER_ID
     AND C.APPR_STATUS = 'P'
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.VOUCHER_ID = D.VOUCHER_ID
     AND D.VOUCHER_LINE_NUM = 1
     AND D.DISTRIB_LINE_NUM = 1
     AND A.OPRID = E.ROLEUSER
  ORDER BY 1, 2 
 

SELECT * FROM PS_PO_RC_WB_SCR WHERE BUSINESS_UNIT = '614UU'
SELECT * FROM PS_PO_RC_WB_POS WHERE BUSINESS_UNIT LIKE '6%'

--UN Case Balance, Not sure how useful it is
SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, A.PROJECT_ID, A.FUND_CODE, A.CHARTFIELD2,
       SUM( DECODE(SUBSTR( A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0)) AS Opening_Balance, 
       SUM( DECODE(SUBSTR( A.LEDGER,8,3),'COL',0- A.POSTED_BASE_AMT,0)) AS Collected_Revenue, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'COL',0-POSTED_BASE_AMT,0)) AS Available_Cash, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PreEncumbrance, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) AS Encumbrance, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS Disbursement, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS Total_Expenditure, 
       SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'COL',0-POSTED_BASE_AMT,'ENC',0-POSTED_BASE_AMT,'EXP',0-POSTED_BASE_AMT,0)) AS Balance
FROM PS_LEDGER_KK A, PS_GM_PRJ_DEPT B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PROJECT_ID = B.PROJECT_ID
  AND A.BUSINESS_UNIT = 'UNUNI'
  AND A.BUDGET_PERIOD IN ('2012')
  AND ( A.LEDGER LIKE 'AX1%' OR A.LEDGER LIKE 'REV_%_COL')   
GROUP BY  A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, A.PROJECT_ID, A.FUND_CODE, A.CHARTFIELD2
ORDER BY 3, 4, 5, 6

--UNU KK Budget Details
SELECT X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD,  
SUM(BUD) AS BUD, SUM(EXP) AS EXP, SUM(ENC) AS ENC, SUM(PRE) AS PRE, SUM((-1*BUD) - (EXP + (ENC))) AS AVAILABLE
FROM (
SELECT LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, 
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE
FROM PS_KK_INQ_BDLD_VW2
WHERE BUSINESS_UNIT = 'UNUNI'   
GROUP BY LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, LEDGER
) X
WHERE (X.BUDGET_PERIOD IN ('2012', '2013') OR X.BUDGET_PERIOD = ' ') 
  --AND X.DEPTID = '10201'
GROUP BY X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.LEDGER_GROUP, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID

SELECT A.BUSINESS_UNIT, A.PO_ID, A.VENDOR_ID, A.BUYER_ID, A.ACCOUNTING_DT,
       B.PRCSNAME, B.OPRID, B.RUNCNTLID, B.RUNSTATUS, B.RUNDTTM 
FROM PS_PO_HDR A, PSPRCSRQST B
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)  
  AND A.IN_PROCESS_FLG = 'Y'
  AND A.BUSINESS_UNIT LIKE '6%'
  
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004023'

SELECT * FROM PS_PV_PO_REQV_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000002753'
SELECT * FROM PS_PV_PO_VCHR_VW1 WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000002753'

SELECT DISTINCT PL.CNTRCT_SETID, PL.CNTRCT_ID, PL.BUSINESS_UNIT, PL.PO_ID,
       PV.VOUCHER_ID, PV.BANK_SETID, PV.BANK_CD, PV.BANK_ACCT_KEY, PV.PYMNT_ID, PV.PYMNT_SELCT_STATUS,
       PV.PYMNT_ACTION, PV.PYMNT_GROSS_AMT, PV.PAID_AMT_GROSS, PV.BASE_CURRENCY,
       PY.PYMNT_ID_REF, PY.INVOICE_ID, PY.VENDOR_ID
FROM PS_PYMNT_VCHR_XREF PV, PS_VOUCHER_LINE V, PS_PO_LINE PL, PS_PYMNT_XREF_VW PY 
 WHERE --PV.PYMNT_SELCT_STATUS = 'P' 
   --AND 
   PV.BUSINESS_UNIT = V.BUSINESS_UNIT 
   AND PV.VOUCHER_ID = V.VOUCHER_ID 
   AND V.BUSINESS_UNIT_PO = PL.BUSINESS_UNIT 
   AND V.PO_ID = PL.PO_ID 
   AND V.LINE_NBR = PL.LINE_NBR
   AND PV.BANK_SETID = PY.BANK_SETID
   AND PV.BANK_CD = PY.BANK_CD
   AND PV.BANK_ACCT_KEY = PY.BANK_ACCT_KEY
   AND PV.PYMNT_ID = PY.PYMNT_ID
   AND PV.BUSINESS_UNIT = PY.BUSINESS_UNIT 
   AND PV.VOUCHER_ID = PY.VOUCHER_ID
   AND PV.PYMNT_CNT = PY.PYMNT_CNT   
   AND PL.BUSINESS_UNIT = '600UU' 
   AND PL.PO_ID = '0000002753'
   
SELECT * FROM PS_VOUCHER_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000002753'
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '600UU'AND VOUCHER_ID = '00010028'

SELECT * FROM PS_VOUCHER_LINE WHERE BUSINESS_UNIT = '605UU' AND PO_ID = '0000000597'
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '605UU'AND VOUCHER_ID = '00001242'

--Pos that can be closed
SELECT BUSINESS_UNIT, PO_ID, PO_STATUS, PO_REF, PO_DT, VENDOR_ID, POST_DOC, BUDGET_HDR_STATUS, PO_POST_STATUS 
FROM PS_PO_HDR 
WHERE PO_STATUS NOT IN ('C', 'X', 'PX') 
  AND HOLD_STATUS <> 'Y' 
  AND IN_PROCESS_FLG = 'N'
  AND BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(ACCOUNTING_DT, 'YYYY') IN ('2011', '2010')
  

SELECT 'Processes in Initiated Status ',
       prcsinstance,
       oprid,
       prcsname,
       servernamerqst,
       servernamerun,
       rundttm,
       lastupddttm
FROM   psprcsrqst
WHERE  runstatus = 6

--List of Crystals
SELECT PRCSNAME, DESCR, SERVERNAME, PARMLIST  
FROM PS_PRCSDEFN 
WHERE PRCSNAME LIKE 'UN%' 
  AND PRCSTYPE IN ('Crw Online', 'Crystal', 'Crystal Check')


--List of Batch Processes in queued status
SELECT b.prcsinstance, b.prcstype, b.prcsname, 
       (SELECT e.descr FROM ps_prcsdefn e WHERE  e.prcstype = b.prcstype AND e.prcsname = b.prcsname) descr,
       b.oprid, 
       (SELECT a.oprdefndesc FROM psoprdefn a WHERE  a.oprid = b.oprid) NAME,
       runcntlid,
       (SELECT f.qryname || ', ' || f.descr FROM ps_query_run_cntrl f WHERE  f.oprid = b.oprid AND f.run_cntl_id = b.runcntlid) qryname,
       recurname, runstatus,
       (SELECT xlatshortname FROM   psxlatitem c WHERE  c.fieldname = 'RUNSTATUS' AND c.fieldvalue = b.runstatus)  rundescr,
       diststatus,
       (SELECT d.xlatshortname FROM   psxlatitem d WHERE  d.fieldname = 'DISTSTATUS' AND d.fieldvalue = b.diststatus) distdescr,
       pt_retentiondays, rundttm, rqstdttm, lastupddttm, servernamerqst
FROM psprcsrqst b
WHERE runstatus IN ( 5 )
ORDER BY rundttm DESC;

--SQL to determine Scheduled Processes and user account is locked
SELECT b.prcsinstance, b.prcstype, b.prcsname,
       (SELECT e.descr FROM ps_prcsdefn e WHERE e.prcstype = b.prcstype AND e.prcsname = b.prcsname) descr,
       b.oprid, 
       (SELECT a.oprdefndesc FROM psoprdefn a WHERE a.oprid = b.oprid)NAME,
       runcntlid,
       (SELECT f.qryname || ', ' || f.descr FROM ps_query_run_cntrl f WHERE  f.oprid = b.oprid AND f.run_cntl_id = b.runcntlid) qryname,
       recurname, runstatus,
       (SELECT xlatshortname FROM   psxlatitem c WHERE c.fieldname = 'RUNSTATUS' AND c.fieldvalue = b.runstatus)  rundescr,
       diststatus,
       (SELECT d.xlatshortname FROM psxlatitem d WHERE d.fieldname = 'DISTSTATUS' AND d.fieldvalue = b.diststatus) distdescr,
       pt_retentiondays, rundttm, rqstdttm, b.lastupddttm, servernamerqst
FROM   psprcsrqst b, psoprdefn z
WHERE  b.runstatus IN ( 5 )
   AND b.oprid = z.oprid
   AND z.acctlock = 1
ORDER  BY rundttm DESC;

--Vendors UNU pays the most
SELECT *
FROM (SELECT A.BUSINESS_UNIT, A.VENDOR_ID, B.NAME1, SUM(A.GROSS_AMT) AS INVOICE_AMT, SUM(A.GROSS_AMT_BSE) AS BASE_AMT, A.BASE_CURRENCY, COUNT(*) AS CNT
      FROM PS_VOUCHER A, PS_VENDOR B 
      WHERE B.SETID = 'UNUNI' 
        AND A.VENDOR_ID = B.VENDOR_ID 
        AND A.BUSINESS_UNIT LIKE '6%'
        AND A.POST_STATUS_AP = 'P'
      GROUP BY A.BUSINESS_UNIT, A.VENDOR_ID, B.NAME1, A.BASE_CURRENCY
      ORDER BY CNT DESC)
--WHERE ROWNUM <= 10

--Languages Installed
SELECT A.LANGUAGE_CD 
 , B.XLATLONGNAME 
 , B.XLATSHORTNAME 
  FROM PSLANGUAGES A 
  , PSXLATITEM B 
 WHERE B.FIELDNAME = 'LANGUAGE_CD' 
   AND A.LANGUAGE_CD = B.FIELDVALUE 
   AND A.INSTALLED = 1 


SELECT
SERVERNAMERUN,
case when RUNSTATUS=7 then 'Processing'
when RUNSTATUS=1 then 'Cancel'
when RUNSTATUS=2 then 'Delete'
when RUNSTATUS=3 then 'Error'
when RUNSTATUS=4 then 'Hold'
when RUNSTATUS=5 then 'Queued'
when RUNSTATUS=6 then 'Initiated'
when RUNSTATUS=7 then 'Processing'
when RUNSTATUS=8 then 'Cancelled'
when RUNSTATUS=9 then 'Success'
when RUNSTATUS=10 then 'Not Successful'
when RUNSTATUS=11 then 'Posted'
when RUNSTATUS=12 then 'Unable to Post'
when RUNSTATUS=13 then 'Resend'
when RUNSTATUS=14 then 'Posting'
when RUNSTATUS=15 then 'Content Generated'
when RUNSTATUS=16 then 'Pending'
when RUNSTATUS=17 then 'Success with Warning'
when RUNSTATUS=18 then 'Blocked'
when RUNSTATUS=19 then 'Restart'
else RUNSTATUS END status,
COUNT(*) COUNT
FROM PSPRCSRQST
GROUP BY SERVERNAMERUN,
case when RUNSTATUS=7 then 'Processing'
when RUNSTATUS=1 then 'Cancel'
when RUNSTATUS=2 then 'Delete'
when RUNSTATUS=3 then 'Error'
when RUNSTATUS=4 then 'Hold'
when RUNSTATUS=5 then 'Queued'
when RUNSTATUS=6 then 'Initiated'
when RUNSTATUS=7 then 'Processing'
when RUNSTATUS=8 then 'Cancelled'
when RUNSTATUS=9 then 'Success'
when RUNSTATUS=10 then 'Not Successful'
when RUNSTATUS=11 then 'Posted'
when RUNSTATUS=12 then 'Unable to Post'
when RUNSTATUS=13 then 'Resend'
when RUNSTATUS=14 then 'Posting'
when RUNSTATUS=15 then 'Content Generated'
when RUNSTATUS=16 then 'Pending'
when RUNSTATUS=17 then 'Success with Warning'
when RUNSTATUS=18 then 'Blocked'
when RUNSTATUS=19 then 'Restart'
else RUNSTATUS END

SELECT
PRCSINSTANCE,
PRCSNAME,
OPRID,
DECODE (FLOOR(TO_CHAR((enddttm-begindttm)*24*60))||':'||LPAD(FLOOR(((TO_CHAR((enddttm-begindttm)*24*60))- FLOOR(TO_CHAR((enddttm-begindttm)*24*60)))*60) ,2,0), ':',' ',FLOOR(TO_CHAR((enddttm- begindttm)*24*60))||':'||LPAD(FLOOR(((TO_CHAR((enddttm-begindttm)*24*60))-FLOOR(TO_CHAR((enddttm-begindttm)*24*60)))*60) ,2,0)) AS MINSEC
FROM PSPRCSRQST


--VOUCHER_PO_INQUIRY 
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.FOREIGN_AMOUNT, A.INVOICE_ID, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'), A.VENDOR_ID, A.MATCH_STATUS_VCHR, 
       A.PO_ID, B.BUSINESS_UNIT, B.ACCOUNT, B.PO_ID, B.CHARTFIELD2, B.DEPTID, B.OPERATING_UNIT, C.PYMNT_SELCT_STATUS, 
       C.PYMNT_METHOD, B.BUSINESS_UNIT_PO, B.LINE_NBR, B.SCHED_NBR
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_PYMNT_VCHR_XREF C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.VOUCHER_ID = C.VOUCHER_ID
  --AND A.VOUCHER_ID LIKE :6
  --AND B.PO_ID LIKE :7
  AND A.VENDOR_SETID = 'UNUNI'
  AND A.VENDOR_ID = '0000005935'
  AND B.BUSINESS_UNIT_PO = '600UU'
  AND C.PYMNT_SELCT_STATUS NOT IN ('X')
ORDER BY 2 

    
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'), A.OPRID, A.INVOICE_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD'), 
       A.VENDOR_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), A.TXN_CURRENCY_CD, B.FOREIGN_AMOUNT, B.ACCOUNT, B.FUND_CODE, B.DEPTID, 
       B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD1, B.MONETARY_AMOUNT, A.CLOSE_STATUS, A.ENTRY_STATUS, A.POST_STATUS_AP, A.BUDGET_HDR_STATUS, 
       A.PO_ID, C.DESCR
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_VOUCHER_LINE C
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.VOUCHER_ID = C.VOUCHER_ID
  AND C.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND C.VOUCHER_ID = B.VOUCHER_ID
  AND C.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM
  AND A.BUSINESS_UNIT LIKE '6%'
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-04-01','YYYY-MM-DD') AND TO_DATE('2012-04-04','YYYY-MM-DD')
ORDER BY 1, 2, 11, 12, 13 

--PPs expenditure detail
SELECT X.PROJECT_ID, X.ACCOUNT, X.CURRENCY_CD, SUM(BUD) AS Budget, SUM(ACT) AS Actuals, SUM(ENC) AS Encumbered, SUM(PRE) AS PreEncumbered
FROM(SELECT A.PROJECT_ID, A.ACCOUNT, A.CURRENCY_CD,
CASE B.ANALYSIS_GROUP WHEN 'BUD' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS BUD,
CASE B.ANALYSIS_GROUP WHEN 'GMACT' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS ACT,
CASE B.ANALYSIS_GROUP WHEN 'COM' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS ENC,
CASE B.ANALYSIS_GROUP WHEN 'REQ' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS PRE
FROM PS_PROJ_RESOURCE A, PS_PROJ_AN_GRP_MAP B, PS_PROJ_AN_GRP_TBL C 
WHERE C.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = A.BUSINESS_UNIT AND G.RECNAME = 'PROJ_AN_GRP_TBL') 
  AND C.ANALYSIS_GROUP IN ('BUD', 'COM', 'REQ', 'GMACT') 
  AND B.SETID = C.SETID 
  AND B.ANALYSIS_GROUP = C.ANALYSIS_GROUP 
  AND B.ANALYSIS_TYPE = A.ANALYSIS_TYPE
  AND A.BUSINESS_UNIT = 'UNUNI' 
  AND A.PROJECT_ID= '00064159'
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
GROUP BY A.PROJECT_ID, A.ACCOUNT, A.CURRENCY_CD, B.ANALYSIS_GROUP
) X
GROUP BY X.PROJECT_ID, X.ACCOUNT, X.CURRENCY_CD
ORDER BY 1,2;

--SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159' AND ANALYSIS_TYPE = 'BUD'
--SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND BUSINESS_UNIT_GL = 'UNUNI' AND JOURNAL_ID = '0004189722'
SELECT * FROM PS_VOUCHER_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00019378'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00019378'

SELECT * FROM PS_PAYMENT_TBL WHERE PYMNT_ID_REF = '5030002353'

--Expenditure Detail
SELECT G.CONTRACT_NUM, A.BUSINESS_UNIT, DECODE(A.ANALYSIS_TYPE,'REV', A.DEPTID, DECODE(SUBSTR( A.DEPTID,1,1), 'B', A.DEPTID, 'B0'||SUBSTR( A.DEPTID,1,3))) AS B_DEPT, 
       A.DEPTID, A.PROJECT_ID, A.ACTIVITY_ID, A.ACCOUNT, (SELECT DESCR FROM PS_GL_ACCOUNT_TBL ACCT WHERE ACCT.SETID = 'SHARE' AND ACCT.ACCOUNT = A.ACCOUNT AND ACCT.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL A_ED WHERE ACCT.SETID = A_ED.SETID AND ACCT.ACCOUNT = A_ED.ACCOUNT AND A_ED.EFFDT <= SYSDATE)) AS DESCR, 
       SUM(A.FOREIGN_AMOUNT * J.SIGNED_VALUE) AS FOR_AMT, A.FOREIGN_CURRENCY, SUM(A.RESOURCE_AMOUNT * J.SIGNED_VALUE) AS RES_AMT, 
       DECODE(A.RATE_MULT,0,NULL, A.RATE_DIV/ A.RATE_MULT) AS EXCH_RATE, A.VENDOR_ID, B.NAME1, B.AR_NUM, A.BUSINESS_UNIT_AP, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, 
       C.DESCR,
       C.CURRENCY_CD,
       (SELECT SUM(MERCHANDISE_AMT) FROM PS_VOUCHER_LINE LN WHERE LN.BUSINESS_UNIT = A.BUSINESS_UNIT_AP AND LN.VOUCHER_ID = A.VOUCHER_ID AND LN.VOUCHER_LINE_NUM = A.VOUCHER_LINE_NUM) AS V_AMT,
       C.BASE_CURRENCY,
       (SELECT SUM(MERCH_AMT_BSE) FROM PS_VOUCHER_LINE L WHERE L.BUSINESS_UNIT = A.BUSINESS_UNIT_AP AND L.VOUCHER_ID = A.VOUCHER_ID AND L.VOUCHER_LINE_NUM = A.VOUCHER_LINE_NUM) AS V_AMT_BSE,
       SUM(I.PYMNT_AMT),
       A.REQ_ID, A.PO_ID, 
       DECODE(A.ANALYSIS_TYPE, 'BD1',SUBSTR(TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), 'CBU',SUBSTR(TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BDA',SUBSTR( TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BUD',SUBSTR(TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD')) AS ANAL_TYPE, 
       A.BUSINESS_UNIT_GL, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, J.ANALYSIS_GROUP, 
       A.ANALYSIS_TYPE, F.ADDRESS1, F.CITY, F.STATE, F.POSTAL, E.INVOICE_ID, I.PYMNT_ID_REF, TO_CHAR(I.PYMNT_DT,'YYYY-MM-DD') AS PYMNT_DATE, A.JOURNAL_ID, 
       TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DATE, A.ACCOUNTING_PERIOD
FROM PS_PROJ_RESOURCE A, PS_VENDOR B, PS_VOUCHER_LINE C, PS_SET_CNTRL_REC D, PS_VOUCHER E, 
         PS_VENDOR_ADDR F, PS_GM_AWD_PROJT_VW G, 
         PS_PYMNT_VCHR_XREF H, PS_PAYMENT_TBL I, PS_PROJ_AN_GRP_MAP J, PS_PROJ_AN_GRP_TBL K
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND A.PROJECT_ID = '00064159' 
  --AND A.OPERATING_UNIT = '619'
  --AND A.DEPTID = 'B0119'  
  AND C.BUSINESS_UNIT (+) = A.BUSINESS_UNIT_AP
  AND C.VOUCHER_ID (+) = A.VOUCHER_ID
  AND C.VOUCHER_LINE_NUM (+) = A.VOUCHER_LINE_NUM
  AND D.RECNAME (+) = 'VENDOR'
  AND D.SETCNTRLVALUE (+) = A.BUSINESS_UNIT_AP
  AND B.SETID (+) = D.SETID
  AND (B.VENDOR_ID = A.VENDOR_ID OR B.VENDOR_ID IS NULL)
  AND E.BUSINESS_UNIT  (+) = C.BUSINESS_UNIT
  AND E.VOUCHER_ID (+) = C.VOUCHER_ID
  AND F.VENDOR_ID (+) = E.VENDOR_ID
  AND F.ADDRESS_SEQ_NUM (+) = E.ADDRESS_SEQ_NUM
  AND (F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_VENDOR_ADDR F_ED WHERE F.SETID = F_ED.SETID AND F.VENDOR_ID = F_ED.VENDOR_ID AND F.ADDRESS_SEQ_NUM = F_ED.ADDRESS_SEQ_NUM AND F_ED.EFFDT <= SYSDATE)
         OR F.VENDOR_ID IS NULL)
  AND F.SETID (+) = E.VENDOR_SETID
  --AND ( DECODE(SUBSTR( A.DEPTID,1,1), 'B', A.DEPTID, 'B0'||SUBSTR( A.DEPTID,1,3)) LIKE 'B%' OR A.ANALYSIS_TYPE = 'REV')
  AND A.PROJECT_ID =  G.PROJECT_ID (+)
  AND A.BUSINESS_UNIT_AP =  H.BUSINESS_UNIT (+)
  AND A.VOUCHER_ID =  H.VOUCHER_ID (+)
  AND A.PYMNT_CNT =  H.PYMNT_CNT (+)
  AND H.BANK_SETID =  I.BANK_SETID (+)
  AND H.BANK_CD =  I.BANK_CD (+)
  AND H.BANK_ACCT_KEY =  I.BANK_ACCT_KEY (+)
  AND H.PYMNT_ID =  I.PYMNT_ID (+)
  AND J.ANALYSIS_TYPE = A.ANALYSIS_TYPE
  AND J.SETID = K.SETID 
  AND J.ANALYSIS_GROUP = K.ANALYSIS_GROUP
  AND J.SETID = 'SHARE'
  AND K.ANALYSIS_GROUP IN ('BUD', 'COM', 'GMACT', 'REQ')
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ACCOUNT > '5'
GROUP BY G.CONTRACT_NUM,  A.BUSINESS_UNIT, DECODE(A.ANALYSIS_TYPE,'REV', A.DEPTID, DECODE(SUBSTR( A.DEPTID,1,1), 'B', A.DEPTID, 'B0'||SUBSTR( A.DEPTID,1,3))),  
         A.DEPTID, A.PROJECT_ID, A.ACTIVITY_ID, A.FOREIGN_CURRENCY, DECODE( A.RATE_MULT,0,NULL, A.RATE_DIV/ A.RATE_MULT), A.VENDOR_ID, B.NAME1, B.AR_NUM, A.BUSINESS_UNIT_AP, A.VOUCHER_ID, 
         A.VOUCHER_LINE_NUM, C.DESCR, C.CURRENCY_CD, C.BASE_CURRENCY, A.REQ_ID, A.PO_ID, 
         DECODE( A.ANALYSIS_TYPE, 'BD1',SUBSTR( TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), 'CBU',SUBSTR( TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BDA',SUBSTR( TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BUD',SUBSTR( TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),          TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD')), 
         A.BUSINESS_UNIT_GL, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACCOUNT, J.ANALYSIS_GROUP,  A.ANALYSIS_TYPE,  F.ADDRESS1,  F.CITY,  F.STATE,  F.POSTAL, E.INVOICE_ID, I.PYMNT_ID_REF, 
         TO_CHAR(I.PYMNT_DT,'YYYY-MM-DD'), A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD'), A.ACCOUNTING_PERIOD
--ORDER BY 2, 3, 4, 5, 6, 23, 24, 25, 26, 27, 28
ORDER BY A.ACCOUNT, A.VENDOR_ID;

SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.PYMNT_ID_REF, A.PAID_AMT, A.CURRENCY_PYMNT, A.PAID_AMT_GROSS, B.PYMNT_METHOD, A.REMIT_SETID, A.REMIT_VENDOR, 
       TO_CHAR(B.PYMNT_DT,'YYYY-MM-DD'), TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD'), B.RECONCILE_OPRID, B.RECON_STATUS
FROM PS_PYMNT_VCHR_XREF A, PS_PAYMENT_TBL B
WHERE B.BANK_SETID = A.BANK_SETID
  AND B.BANK_CD = A.BANK_CD
  AND B.BANK_ACCT_KEY = A.BANK_ACCT_KEY
  AND B.PYMNT_ID = A.PYMNT_ID
  AND A.BANK_CD = '60002'
  AND A.BANK_ACCT_KEY = '1001'
  AND B.PYMNT_DT > TO_DATE('2012-03-23','YYYY-MM-DD')
  AND B.PYMNT_DT < TO_DATE('2012-04-01','YYYY-MM-DD')
  

--List Of POs by REQ Requester   
SELECT B.BUSINESS_UNIT, A.REQ_ID, B.PO_ID, E.VOUCHER_ID, D.ENTRY_STATUS, SUM(E.MERCH_AMT_BSE)
FROM PS_REQ_HDR A, PS_PO_LINE_DISTRIB B, PS_VOUCHER D, PS_DISTRIB_LINE E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.REQ_ID = B.REQ_ID  
  AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
  AND D.VOUCHER_ID = E.VOUCHER_ID  
  AND B.BUSINESS_UNIT = E.BUSINESS_UNIT_PO
  AND B.PO_ID = E.PO_ID
  AND B.LINE_NBR = E.LINE_NBR
  AND B.SCHED_NBR = E.SCHED_NBR
  AND B.DISTRIB_LINE_NUM = E.PO_DIST_LINE_NUM
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND A.REQUESTOR_ID = :1
GROUP BY  B.BUSINESS_UNIT, A.REQ_ID, B.PO_ID, E.VOUCHER_ID, D.ENTRY_STATUS 

--AP Voucher Payment Totals    
SELECT A.BUSINESS_UNIT, B.BANK_SETID, B.BANK_CD, B.BANK_ACCT_KEY, B.PYMNT_METHOD, COUNT(*), SUM( B.PAID_AMT), B.CURRENCY_PYMNT, 
       SUM( B.PAID_AMT_BNK_BSE), B.BASE_CURRENCY_BNK
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_PAYMENT_TBL C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND B.BUSINESS_UNIT LIKE '6%'
  AND B.PYMNT_SELCT_STATUS = 'P'
  AND B.BANK_SETID = 'SHARE'
  --AND B.BANK_CD LIKE :3
  --AND B.BANK_ACCT_KEY LIKE :4
  AND C.BANK_SETID = B.BANK_SETID
  AND C.BANK_CD = B.BANK_CD
  AND C.BANK_ACCT_KEY = B.BANK_ACCT_KEY
  AND C.PYMNT_ID = B.PYMNT_ID
  --AND C.PYMNT_DT >= TO_DATE(:5,'YYYY-MM-DD')
  --AND C.PYMNT_DT <= TO_DATE(:6,'YYYY-MM-DD')
GROUP BY A.BUSINESS_UNIT, B.BANK_SETID, B.BANK_CD, B.BANK_ACCT_KEY, B.PYMNT_METHOD, B.CURRENCY_PYMNT, B.BASE_CURRENCY_BNK
ORDER BY 1, 2, 3, 4, 5 

--List of Awarded Projects
SELECT A.NAME, A.EMPLID, G.DESCR, F.DESCR, J.NAME1, A.TITLE56, A.PROPOSAL_STATUS_GR, A.PROPOSAL_ID, TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD'), 
       SUM( DECODE(SIGN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'DD-MON-YYYY'),8,4)) - TO_NUMBER(SUBSTR(TO_CHAR( TO_CHAR(E.BEGIN_DT,'YYYY-MM-DD'),'DD-MON-YYYY'),8,4))),0, E.TARGET_BUDGET_AMT,0)), 
       SUM( DECODE(SIGN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'DD-MON-YYYY'),8,4)) - TO_NUMBER(SUBSTR(TO_CHAR( TO_CHAR(E.BEGIN_DT,'YYYY-MM-DD'),'DD-MON-YYYY'),8,4))),0, E.ANTICIPATED_AMT,0)), 
       SUM( DECODE(SIGN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'DD-MON-YYYY'),8,4)) - TO_NUMBER(SUBSTR(TO_CHAR( TO_CHAR(E.BEGIN_DT,'YYYY-MM-DD'),'DD-MON-YYYY'),8,4))),-1, E.TARGET_BUDGET_AMT,0)), 
       SUM( DECODE(SIGN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'DD-MON-YYYY'),8,4)) - TO_NUMBER(SUBSTR(TO_CHAR( TO_CHAR(E.BEGIN_DT,'YYYY-MM-DD'),'DD-MON-YYYY'),8,4))),-1, E.ANTICIPATED_AMT,0)), 
       TO_CHAR(K.LAST_UPDATE_DT,'YYYY-MM-DD')
  FROM PS_GM_PROPOSAL A, PS_GM_PROP_PROJ B, PS_GM_PROP_J_LOC C, PS_GM_BUD_HDR D, PS_GM_BUD_PERIOD E, PS_COUNTRY_TBL F, PS_DEPT_TBL G, PS_PROJ_ACT_TBL H, PS_GM_INSTITUTION I, PS_CUSTOMER J, PS_GM_AWARD K
  WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PROPOSAL_ID = B.PROPOSAL_ID
    AND A.VERSION_ID = B.VERSION_ID
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PROPOSAL_ID = C.PROPOSAL_ID
    AND A.VERSION_ID = C.VERSION_ID
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.PROPOSAL_ID = D.PROPOSAL_ID
    AND A.VERSION_ID = D.VERSION_ID
    AND A.BUSINESS_UNIT = E.BUSINESS_UNIT
    AND A.PROPOSAL_ID = E.PROPOSAL_ID
    AND A.VERSION_ID = E.VERSION_ID
    AND F.COUNTRY = C.COUNTRY
    AND G.DEPTID = B.DEPTID
    AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_DEPT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.DEPTID = G_ED.DEPTID AND G_ED.EFFDT <= SYSDATE)
    AND H.ACTIVITY_TYPE = D.ACTIVITY_TYPE
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_PROJ_ACT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.ACTIVITY_TYPE = H_ED.ACTIVITY_TYPE AND H_ED.EFFDT <= SYSDATE)
    AND I.INSTID = B.INSTID
    AND J.CUST_ID = A.CUST_ID
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.PROPOSAL_STATUS_GR = 'AWD'
    AND A.PROPOSAL_TYPE <> 'REN'
    AND G.SETID = A.BUSINESS_UNIT
    AND H.SETID = A.BUSINESS_UNIT
    AND I.SETID = A.BUSINESS_UNIT
    AND J.SETID = A.BUSINESS_UNIT
    AND SIGN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'DD-MON-YYYY'),8,4)) - TO_NUMBER(SUBSTR(TO_CHAR( E.BEGIN_DT,'DD-MON-YYYY'),8,4))) IN (0,-1)
    AND D.SUB_PROP_NBR = E.SUB_PROP_NBR
    AND D.SUB_PROP_NBR = B.SUB_PROP_NBR
    AND D.SUB_PROP_NBR = C.SUB_PROP_NBR
    AND D.BUDGET_ID = E.BUDGET_ID
    AND A.BUSINESS_UNIT = K.BUSINESS_UNIT
    AND A.PROPOSAL_ID = K.PROPOSAL_ID
    AND A.VERSION_ID = K.VERSION_ID
    AND K.CONTRACT_NUM = A.CONTRACT_NUM
    --AND K.LAST_UPDATE_DT BETWEEN TO_DATE(:2,'YYYY-MM-DD') AND TO_DATE(:3,'YYYY-MM-DD')
    --AND A.CUST_ID LIKE :7
    --AND B.DEPTID LIKE :6
    --AND A.EMPLID LIKE :5
    --AND C.COUNTRY LIKE :4
GROUP BY A.NAME, A.EMPLID, G.DESCR, F.DESCR, J.NAME1, A.TITLE56, A.PROPOSAL_STATUS_GR, A.PROPOSAL_ID, TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD'), 
           TO_CHAR(K.LAST_UPDATE_DT,'YYYY-MM-DD')

--AP Budget Overrides
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.VENDOR_ID, D.NAME1, 
       A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.BASE_CURRENCY, C.BUDGET_PERIOD, C.LEDGER_GROUP, 
       C.BUSINESS_UNIT, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, C.KK_BD_OVER_FLAG, C.KK_BD_OVER_OPRID, 
       TO_CHAR(CAST((C.KK_BD_OVER_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS BDSTAMP, C.KK_TRAN_OVER_FLAG, C.KK_TRAN_OVER_OPRID, 
       TO_CHAR(CAST((C.KK_TRAN_OVER_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS TRSTAMP
FROM PS_VOUCHER A, PS_VENDOR D, PS_KK_SOURCE_HDR B, PS_KK_OVERRIDE_TBL C
WHERE D.VENDOR_ID = A.VENDOR_ID
  AND D.SETID = A.VENDOR_SETID
  --AND A.ACCOUNTING_DT >= TO_DATE(:3,'YYYY-MM-DD')
  --AND A.ACCOUNTING_DT <= TO_DATE(:4,'YYYY-MM-DD')
  AND A.ENTRY_STATUS NOT IN ('X','T')
  AND A.CLOSE_STATUS <> 'C'
  AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND B.KK_SOURCE_TRAN = 'AP_VOUCHER'
  AND B.KK_TRAN_ID = C.KK_TRAN_ID
  AND B.KK_TRAN_DT = C.KK_TRAN_DT
  AND A.BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2013')
  --AND (C.KK_BD_OVER_OPRID LIKE :2 OR C.KK_TRAN_OVER_OPRID LIKE :2)
  AND (C.KK_BD_OVER_FLAG = 'Y' OR C.KK_TRAN_OVER_FLAG = 'Y')
ORDER BY 1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


-- AX1 Cash Budgets 
SELECT B.FUND_CODE, C.DESCR, B.OPERATING_UNIT, C.EFF_STATUS, SUM(B.MONETARY_AMOUNT) AS BUDGET
FROM PS_KK_BUDGET_HDR A, PS_KK_BUDGET_LN B, PS_FUND_TBL C
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND A.BD_HDR_STATUS IN ('P','U')
  AND A.LEDGER_GROUP = 'AX1_UU'
  AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.JOURNAL_ID = B.JOURNAL_ID
  AND A.JOURNAL_DATE = B.JOURNAL_DATE
  --AND B.BUDGET_PERIOD = '2012'
  AND C.SETID = 'UNUNI'
  AND C.FUND_CODE = B.FUND_CODE
  AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_FUND_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.FUND_CODE = C_ED.FUND_CODE AND C_ED.EFFDT <= SYSDATE)
GROUP BY B.FUND_CODE, C.DESCR, B.OPERATING_UNIT, C.EFF_STATUS
ORDER BY 1;

--Details for the GM Awd and Res
SELECT A.BUSINESS_UNIT, D.CONTRACT_NUM, D.TITLE56, D.INSTID, G.DESCR, D.PURPOSE, TO_CHAR(D.BEGIN_DT,'YYYY-MM-DD'), TO_CHAR(D.END_DT,'YYYY-MM-DD'), 
       D.NAME, D.AWARD_STATUS, SUM( A.RESOURCE_AMOUNT)
FROM PS_PROJ_RESOURCE A, PS_PROJ_AN_GRP_MAP B, PS_GM_AWD_PROJT_VW C, PS_GM_AWARD D, PS_SET_CNTRL_REC F, PS_GM_INSTITUTION G
WHERE A.BUSINESS_UNIT = 'UNUNI'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE(:2,'YYYY-MM-DD') AND TO_DATE(:3,'YYYY-MM-DD')
  AND A.ANALYSIS_TYPE = B.ANALYSIS_TYPE
  AND B.SETID = 'SHARE'
  --AND B.ANALYSIS_GROUP = 'UNBUD'
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT_PC
  AND A.PROJECT_ID = C.PROJECT_ID
  AND C.BUSINESS_UNIT_PC = D.BUSINESS_UNIT
  AND C.CONTRACT_NUM = D.CONTRACT_NUM
  AND D.BUSINESS_UNIT = F.SETCNTRLVALUE
  AND F.RECNAME = 'GM_INSTITUTION'
  AND F.SETID = G.SETID
  AND D.INSTID = G.INSTID
  AND D.INSTID <> ' '
GROUP BY A.BUSINESS_UNIT, D.CONTRACT_NUM, D.TITLE56, D.INSTID, G.DESCR, D.PURPOSE, TO_CHAR(D.BEGIN_DT,'YYYY-MM-DD'), TO_CHAR(D.END_DT,'YYYY-MM-DD'), D.NAME, D.AWARD_STATUS
UNION
SELECT H.BUSINESS_UNIT, K.CONTRACT_NUM, K.TITLE56, K.INSTID, ' ', K.PURPOSE, TO_CHAR(K.BEGIN_DT,'YYYY-MM-DD'), TO_CHAR(K.END_DT,'YYYY-MM-DD'), K.NAME, K.AWARD_STATUS, SUM( H.RESOURCE_AMOUNT)
  FROM PS_PROJ_RESOURCE H, PS_PROJ_AN_GRP_MAP I, PS_GM_AWD_PROJT_VW J, PS_GM_AWARD K
  WHERE H.BUSINESS_UNIT = :1
     AND H.ACCOUNTING_DT BETWEEN TO_DATE(:2,'YYYY-MM-DD') AND TO_DATE(:3,'YYYY-MM-DD')
     AND H.ANALYSIS_TYPE = I.ANALYSIS_TYPE
     AND I.SETID = 'SHARE'
     AND I.ANALYSIS_GROUP = 'UNBUD'
     AND H.BUSINESS_UNIT = J.BUSINESS_UNIT_PC
     AND H.PROJECT_ID = J.PROJECT_ID
     AND J.BUSINESS_UNIT_PC = K.BUSINESS_UNIT
     AND J.CONTRACT_NUM = K.CONTRACT_NUM
     AND K.INSTID = ' '
GROUP BY  H.BUSINESS_UNIT,  K.CONTRACT_NUM,  K.TITLE56,  K.INSTID,  ' ',  K.PURPOSE,  TO_CHAR(K.BEGIN_DT,'YYYY-MM-DD'),  TO_CHAR(K.END_DT,'YYYY-MM-DD'),  K.NAME,  K.AWARD_STATUS
ORDER BY 1, 2

--Payments for AR GLJE's
SELECT B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.ITEM_SEQ_NUM, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, 
       B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, B.CHARTFIELD1, B.CHARTFIELD2, 
       D.BUSINESS_UNIT_PC, B.PROJECT_ID, D.ACTIVITY_ID, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, B.CURRENCY_CD, B.MONETARY_AMOUNT, 
       TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.BUSINESS_UNIT_GL, B.JOURNAL_ID, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, B.FISCAL_YEAR, 
       B.ACCOUNTING_PERIOD, B.JOURNAL_LINE, D.MONETARY_AMOUNT, C.JRNL_HDR_STATUS, C.OPRID
FROM PS_ITEM_ACTIVITY A, PS_ITEM_DST B, PS_JRNL_HEADER C, PS_JRNL_LN D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.CUST_ID = B.CUST_ID
  AND A.ITEM = B.ITEM
  AND A.ITEM_LINE = B.ITEM_LINE
  AND A.ITEM_SEQ_NUM = B.ITEM_SEQ_NUM
  AND B.BUSINESS_UNIT_GL = C.BUSINESS_UNIT
  AND B.JOURNAL_ID = C.JOURNAL_ID
  AND B.JOURNAL_DATE = C.JOURNAL_DATE
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.JOURNAL_ID = D.JOURNAL_ID
  AND C.JOURNAL_DATE = D.JOURNAL_DATE
  AND C.UNPOST_SEQ = D.UNPOST_SEQ
  AND B.JOURNAL_LINE = D.JOURNAL_LINE
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND A.ITEM LIKE :2
  --AND A.DEPOSIT_BU LIKE :3
  --AND A.DEPOSIT_ID LIKE :4
  AND C.BUSINESS_UNIT = 'UNUNI'
  AND ( C.JOURNAL_ID LIKE 'AR%' OR C.JOURNAL_ID LIKE 'BI%')
  --AND C.JOURNAL_ID LIKE :6
  AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  --AND B.ACCOUNT LIKE :9
  AND D.LEDGER = 'USD'
  AND A.ENTRY_TYPE = 'WO'
ORDER BY 1, 2, 3, 4, 5

--UNU DEPOSIT INFO
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.CONTROL_AMT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
       A.CONTROL_CURRENCY, A.RECON_STATUS, TO_CHAR(A.STTLMNT_DT_ACTUAL,'YYYY-MM-DD') AS STTLMNT_DT
  FROM PS_DEPOSIT_CONTROL A
  WHERE A.DEPOSIT_BU LIKE '6%'
     --AND A.BNK_ID_NBR = :1
     --AND A.BANK_ACCOUNT_NUM = :2
     AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2011', '2012')
     --AND A.ACCOUNTING_DT >= TO_DATE(:3,'YYYY-MM-DD')
     --AND A.ACCOUNTING_DT <= TO_DATE(:4,'YYYY-MM-DD') 

--Vouchers not Budget Checked
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, A.VENDOR_SETID, A.VENDOR_ID, A.OPRID, 
       A.GROSS_AMT, A.TXN_CURRENCY_CD, TO_CHAR(A.DUE_DT,'YYYY-MM-DD') AS DUE_DT, A.APPR_STATUS, A.BUDGET_HDR_STATUS, B.PYMNT_SELCT_STATUS
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND A.BUDGET_HDR_STATUS = 'N'
  AND A.ENTRY_STATUS <> 'X'
  AND A.CLOSE_STATUS <> 'C'
  AND A.APPR_STATUS = 'A'
  AND A.BUSINESS_UNIT LIKE '6%'
  AND A.BUSINESS_UNIT_GL = 'UNUNI'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE(:3,'YYYY-MM-DD') AND TO_DATE(:4,'YYYY-MM-DD')
ORDER BY 1, 2

--UNU_REQ_OPEN_BY_BU
--List of Unsourced Requisitions
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, A.REQ_DT, A.REQUESTOR_ID, A.BUDGET_HDR_STATUS, B.LINE_NBR, B.VENDOR_ID, B.CATEGORY_ID, C.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            C.SHIPTO_ID, D.DEPTID, B.BUYER_ID, D.BUDGET_LINE_STATUS, B.DESCR254_MIXED
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.REQ_ID = B.REQ_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.REQ_ID = C.REQ_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.REQ_ID = D.REQ_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.REQ_STATUS NOT IN ('X','C')
  AND D.KK_CLOSE_FLAG = 'N'
  AND B.SOURCE_STATUS = 'A'
  AND B.CURR_STATUS NOT IN ('C','X')
  AND A.BUSINESS_UNIT LIKE '6%'  
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
ORDER BY 1, 2, 7, 8, 9;

--Who Sent a project to KK
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.OPRID, A.BD_HDR_STATUS, B.LEDGER, B.PROJECT_ID, B.FUND_CODE, 
       B.DEPTID, B.CHARTFIELD2, SUM(B.MONETARY_AMOUNT), B.BUDGET_PERIOD
  FROM PS_KK_BUDGET_HDR A, PS_KK_BUDGET_LN B
  WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     --AND B.PROJECT_ID = :2
     --AND B.BUDGET_PERIOD = '2012'
GROUP BY A.BUSINESS_UNIT, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD'), A.OPRID, A.BD_HDR_STATUS, B.LEDGER, B.PROJECT_ID, B.FUND_CODE, 
         B.DEPTID, B.CHARTFIELD2, B.BUDGET_PERIOD
ORDER BY 2;

SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, B.ACCOUNT, B.DEPTID, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
       B.FUND_CODE, B.CHARTFIELD2, B.OPERATING_UNIT, B.PROJECT_ID, B.MONETARY_AMOUNT, B.MERCHANDISE_AMT, B.RATE_MULT, B.RATE_DIV, C.DESCR,
       B.BUSINESS_UNIT_GL, B.JOURNAL_ID, B.ACCOUNTING_PERIOD, b.FISCAL_YEAR, B.BUSINESS_UNIT_PO, B.PO_ID
FROM PS_VOUCHER A, PS_VCHR_ACCTG_LINE B, PS_VOUCHER_LINE C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND B.BUSINESS_UNIT_GL = 'UNUNI'
  AND B.APPL_JRNL_ID IN ('ACCRUAL','CLOSE')
  AND B.ACCOUNT <> '21005'
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.VOUCHER_ID = C.VOUCHER_ID
  AND B.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
  AND A.BUSINESS_UNIT LIKE '6%'
  AND A.VENDOR_ID = '0000005935'

--KK Override Details
SELECT B.KK_TRAN_ID, TO_CHAR(B.KK_TRAN_DT,'YYYY-MM-DD') As KK_TRAN_DT, B.KK_SOURCE_TRAN, B.KK_PROCESS_STATUS, D.EXCPTN_TYPE, E.XLATLONGNAME,
       B.KK_PROC_INSTANCE, B.BUSINESS_UNIT, B.DEPOSIT_ID, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DATE, B.JOURNAL_ID, B.PO_ID,
       B.REQ_ID, B.VOUCHER_ID, B.KEYLIST,
       C.BUDGET_PERIOD, C.LEDGER_GROUP, C.BUSINESS_UNIT, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, 
       C.KK_BD_OVER_FLAG, C.KK_TRAN_OVER_FLAG, C.KK_BD_OVER_OPRID, C.KK_TRAN_OVER_OPRID
FROM PS_KK_SOURCE_HDR B, PS_KK_OVERRIDE_TBL C, PS_KK_EXCPTN_TBL D, PSXLATITEM E
WHERE B.KK_TRAN_ID = C.KK_TRAN_ID
  AND B.KK_TRAN_DT = C.KK_TRAN_DT
  AND B.KK_TRAN_ID = D.KK_TRAN_ID
  AND B.KK_TRAN_DT = D.KK_TRAN_DT
  AND (C.KK_BD_OVER_FLAG = 'Y' OR C.KK_TRAN_OVER_FLAG = 'Y')
  AND (B.BUSINESS_UNIT = 'UNUNI' OR B.BUSINESS_UNIT LIKE '6%')
  AND C.LEDGER_GROUP = D.LEDGER_GROUP
  --AND B.KK_SOURCE_TRAN = 'AP_VOUCHER' 
  --AND A.KK_PROCESS_STATUS NOT IN ('V', 'W')
  --AND TO_CHAR(B.KK_TRAN_DT, 'YYYY') IN ('2013')
  AND C.BUDGET_PERIOD IN ('2013')
  --AND C.LEDGER_GROUP = 'ALT_UU'
  AND E.FIELDNAME = 'EXCPTN_TYPE'
  AND E.FIELDVALUE = D.EXCPTN_TYPE

--KK Override Details
--Version 2 - Enhancements
--Added Budget Period and included KK_SOURCE_LN
SELECT B.KK_TRAN_ID, TO_CHAR(B.KK_TRAN_DT,'YYYY-MM-DD') As KK_TRAN_DT, B.KK_SOURCE_TRAN, B.KK_PROCESS_STATUS, D.EXCPTN_TYPE, E.XLATLONGNAME,
       B.KK_PROC_INSTANCE, B.BUSINESS_UNIT, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DATE, B.JOURNAL_ID, B.UNPOST_SEQ, LN.JOURNAL_LINE, LN.LEDGER,
       B.CUST_ID, B.ITEM, B.ITEM_LINE, B.DEPOSIT_ID, B.PAYMENT_SEQ_NUM,
       B.PO_ID, B.REQ_ID, B.VOUCHER_ID, LN.VOUCHER_LINE_NUM, LN.LINE_NBR, LN.SCHED_NBR, LN.DISTRIB_LINE_NUM, LN.ACCTG_LINE_NO, B.INVOICE, LN.LINE_SEQ_NUM, B.KEYLIST,
       C.BUDGET_PERIOD, C.LEDGER_GROUP, C.BUSINESS_UNIT, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, 
       C.KK_BD_OVER_FLAG, C.KK_TRAN_OVER_FLAG, C.KK_BD_OVER_OPRID, C.KK_TRAN_OVER_OPRID
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_OVERRIDE_TBL C, PS_KK_EXCPTN_TBL D, PSXLATITEM E, PS_KK_SOURCE_LN LN
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND B.KK_TRAN_ID = C.KK_TRAN_ID
    AND B.KK_TRAN_DT = C.KK_TRAN_DT
    AND B.KK_TRAN_ID = D.KK_TRAN_ID
    AND B.KK_TRAN_DT = D.KK_TRAN_DT
    AND B.KK_TRAN_ID = LN.KK_TRAN_ID
    AND B.KK_TRAN_DT = LN.KK_TRAN_DT
    AND A.KK_TRAN_LN = LN.KK_TRAN_LN
    AND A.KK_TRAN_LN = D.KK_TRAN_LN 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.LEDGER_GROUP = D.LEDGER_GROUP
    AND C.LEDGER_GROUP = D.LEDGER_GROUP
    AND A.BALANCING_LINE <> 'Y'
    AND (C.KK_BD_OVER_FLAG = 'Y' OR C.KK_TRAN_OVER_FLAG = 'Y')
    AND (A.BUSINESS_UNIT = 'UNUNI' OR A.BUSINESS_UNIT LIKE '6%')
    --AND A.LEDGER_GROUP = 'ALT_UU'
    AND C.BUDGET_PERIOD IN ('2014')
    AND C.ACCOUNT = A.ACCOUNT
    AND C.DEPTID = A.DEPTID
    AND D.ACCOUNT = A.ACCOUNT
    AND D.DEPTID = A.DEPTID
    --AND B.KK_TRAN_ID = '0060380860'
    AND E.FIELDNAME = 'EXCPTN_TYPE'
    AND E.FIELDVALUE = D.EXCPTN_TYPE
ORDER BY 1,2;

--KK Override Details
--Version 3 - Enhancements
--Added MONETARY_AMOUNT from KK_ACTIVITY_LOG
SELECT B.KK_TRAN_ID, B.KK_TRAN_DT, B.KK_SOURCE_TRAN, B.KK_PROCESS_STATUS, D.EXCPTN_TYPE, E.XLATLONGNAME, B.KK_PROC_INSTANCE, B.BUSINESS_UNIT, B.JOURNAL_DATE, 
            B.JOURNAL_ID, B.UNPOST_SEQ, LN.JOURNAL_LINE, LN.LEDGER, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.DEPOSIT_ID, B.PAYMENT_SEQ_NUM, B.PO_ID, B.REQ_ID, B.VOUCHER_ID, 
            LN.VOUCHER_LINE_NUM, LN.LINE_NBR, LN.SCHED_NBR, LN.DISTRIB_LINE_NUM, LN.ACCTG_LINE_NO, B.INVOICE, LN.LINE_SEQ_NUM, B.KEYLIST, C.BUDGET_PERIOD, C.LEDGER_GROUP, 
            C.BUSINESS_UNIT, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, 
            C.KK_BD_OVER_FLAG, C.KK_TRAN_OVER_FLAG, C.KK_BD_OVER_OPRID, C.KK_TRAN_OVER_OPRID, A.MONETARY_AMOUNT
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_OVERRIDE_TBL C, PS_KK_EXCPTN_TBL D, PSXLATITEM E, PS_KK_SOURCE_LN LN
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND B.KK_TRAN_ID = C.KK_TRAN_ID
    AND B.KK_TRAN_DT = C.KK_TRAN_DT
    AND B.KK_TRAN_ID = D.KK_TRAN_ID
    AND B.KK_TRAN_DT = D.KK_TRAN_DT
    AND B.KK_TRAN_ID = LN.KK_TRAN_ID
    AND B.KK_TRAN_DT = LN.KK_TRAN_DT
    AND A.KK_TRAN_LN = LN.KK_TRAN_LN
    AND A.KK_TRAN_LN = D.KK_TRAN_LN 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.LEDGER_GROUP = D.LEDGER_GROUP
    AND C.LEDGER_GROUP = D.LEDGER_GROUP
    AND A.BALANCING_LINE <> 'Y'
    AND (C.KK_BD_OVER_FLAG = 'Y' OR C.KK_TRAN_OVER_FLAG = 'Y')
    AND (A.BUSINESS_UNIT = 'UNUNI' OR A.BUSINESS_UNIT LIKE '6%')
    --AND A.LEDGER_GROUP = 'ALT_UU'
    AND (C.BUDGET_PERIOD IN ('2014', '2015') OR C.BUDGET_PERIOD = ' ')
    AND TO_CHAR(B.KK_TRAN_DT, 'YYYY') >= '2014'
    AND C.ACCOUNT = A.ACCOUNT
    AND C.DEPTID = A.DEPTID
    AND D.ACCOUNT = A.ACCOUNT
    AND D.DEPTID = A.DEPTID
    --AND B.KK_TRAN_ID = '0060380860'
    AND E.FIELDNAME = 'EXCPTN_TYPE'
    AND E.FIELDVALUE = D.EXCPTN_TYPE
ORDER BY 2 DESC;

--Verification Queries
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0058268810' AND LEDGER_GROUP = 'ALT_UU' AND BUDGET_PERIOD = '2013' AND BALANCING_LINE <> 'Y'
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0060380860' AND LEDGER_GROUP = 'ALT_UU' AND BUDGET_PERIOD = '2013' AND BALANCING_LINE <> 'Y'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0058116952'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0058116952'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0058268810'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0060380860'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0058116952'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0059322051'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0058268810'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0060380860'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0058116952'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0059322051'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0058268810'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0060380860'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00021329'

SELECT A.EMPLID, A.NAME, B.NAME, B.EMPLID
FROM PS_PERS_DATA_EFFDT A, PS_PERSONAL_DATA B
WHERE A.EMPLID = B.EMPLID
  AND A.EMPLID IN ('928142', '780579')

SELECT * FROM PS_PERSONAL_DATA WHERE EMPLID = '780579'
SELECT * FROM PS_PERS_DATA_EFFDT WHERE EMPLID = '780579'
SELECT * FROM PSAPMSGPUBHDR WHERE IB_OPERATIONNAME = 'USER_PROFILE' AND PUBLISHER LIKE 'ICC%'
SELECT * FROM PSAPMSGPUBDATA WHERE IBTRANSACTIONID = '32f778b2-728c-11e1-97b5-b61e1c314370'

SELECT * FROM v$session_longops WHERE sofar < totalwork;

SELECT l.sid, l.sofar, l.totalwork, l.start_time, l.last_update_time, s.sql_text
FROM   v$session_longops l
       LEFT OUTER JOIN v$sql s ON s.hash_value = l.sql_hash_value
AND    s.address = l.sql_address
AND    s.child_number = 0

SELECT  l.sql_hash_value
,     SUM(l.last_update_time-l.start_time)*86400 secs
,     COUNT(*) execs
FROM  v$session_longops l
GROUP BY l.sql_hash_value
ORDER BY secs

select * from (
  select opname, target, sofar, totalwork,
         units, elapsed_seconds, message
  from v$session_longops order by start_time desc)
where rownum <=1;

SELECT DISTINCT PL.CNTRCT_SETID, PL.CNTRCT_ID, PL.BUSINESS_UNIT AS PO_BU, PL.PO_ID, 
                V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.VENDOR_ID, V.DESCR, V.MERCHANDISE_AMT                
FROM PS_VOUCHER_LINE V, PS_PO_LINE PL
WHERE PL.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+)
  AND PL.PO_ID = V.PO_ID (+)
  AND PL.LINE_NBR = V.LINE_NBR (+)  
  AND PL.CNTRCT_SETID = '600UU' 
  AND PL.CNTRCT_ID = '0000000000000000000000834'
ORDER BY 2,4,6

SELECT * FROM PS_CNTRCT_INQ_AP1 WHERE SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000834'
SELECT * FROM PS_PO_VCHPOCNTR_VW WHERE CNTRCT_SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000834'

SELECT * FROM PS_CNTRCT_VNDR_VW WHERE SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000834'

SELECT L.SETID, L.CNTRCT_ID, L.CNTRCT_LINE_NBR, H.VENDOR_SETID, H.VENDOR_ID, U.VNDR_LOC, U.UNIT_OF_MEASURE, H.CNTRCT_BEGIN_DT, H.OPRID_MODIFIED_BY, 
       H.CNTRCT_EXPIRE_DT, H.AMT_CNTRCT_MAX, H.AMT_RELSD_OPEN_ITM, L.CNTRCT_LN_TYPE, L.CNTR_LN_TYPE_ID, L.INV_ITEM_ID, L.DESCR254_MIXED, 
       L.CATEGORY_ID, CAT.CATEGORY_CD, CAT.DESCR, CAT.ACCOUNT,
       L.QTY_LINE_MIN, L.QTY_LINE_MAX, L.AMT_LINE_MIN, L.AMT_LINE_MAX, U.PRICE_CNTRCT_BASE, U.CURRENCY_CD, U.DFLT_UOM, R.SUM_AMT 
FROM PS_CNTRCT_HDR H, PS_CNTRCT_LINE L, PS_CNTRCT_LINE_UOM U, PS_CNTRCT_RLAMT_VW R, PS_ITM_CAT_TBL CAT
WHERE H.SETID = U.SETID  
  AND H.CNTRCT_ID = U.CNTRCT_ID  
  AND H.CNTRCT_STATUS = 'A'  
  AND L.AMT_ONLY_FLG = 'N'  
  AND L.CNTRCT_LINE_NBR = U.CNTRCT_LINE_NBR  
  AND H.SETID = L.SETID  
  AND H.CNTRCT_ID = L.CNTRCT_ID  
  AND L.SETID = R.SETID  
  AND L.CNTRCT_ID = R.CNTRCT_ID
  AND CAT.SETID = 'UNUNI'
  AND CAT.CATEGORY_ID = L.CATEGORY_ID
  AND H.SETID = '600UU' 
  --AND H.CNTRCT_ID = '0000000000000000000000834'
  AND CAT.EFFDT = 
        (SELECT MAX(CAT_ED.EFFDT) FROM PS_ITM_CAT_TBL CAT_ED 
        WHERE CAT.SETID = CAT_ED.SETID 
          AND CAT.CATEGORY_TYPE = CAT_ED.CATEGORY_TYPE 
          AND CAT.CATEGORY_CD = CAT_ED.CATEGORY_CD 
          AND CAT.CATEGORY_ID = CAT_ED.CATEGORY_ID 
          AND CAT_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,5
  
SELECT * FROM PS_ITM_CAT_TBL WHERE SETID = 'UNUNI' AND CATEGORY_ID = '00017'

--Obligatio PO's 31-12-2011
SELECT HDR.BUSINESS_UNIT, HDR.PO_ID, E.XLATLONGNAME AS PO_STATUS, POL.LINE_NBR, SHIP.SCHED_NBR, DIST.DISTRIB_LINE_NUM, HDR.PO_REF, HDR.BUYER_ID,
       DIST.CURRENCY_CD, DIST.MERCHANDISE_AMT, DIST.CURRENCY_CD_BASE, DIST.MERCH_AMT_BSE,
       DIST.ACCOUNT, DIST.DEPTID, DIST.FUND_CODE, DIST.OPERATING_UNIT, DIST.CHARTFIELD2, DIST.BUSINESS_UNIT_PC, DIST.PROJECT_ID, DIST.ACTIVITY_ID,
       V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.MERCHANDISE_AMT AS VCHR_MERCH_AMT
FROM PS_PO_HDR HDR, PS_PO_LINE POL, PS_PO_LINE_SHIP SHIP, PS_PO_LINE_DISTRIB DIST, PSXLATITEM E, PS_DISTRIB_LINE V
WHERE HDR.BUSINESS_UNIT = POL.BUSINESS_UNIT
  AND HDR.PO_ID = POL.PO_ID
  
  AND HDR.BUSINESS_UNIT = SHIP.BUSINESS_UNIT
  AND HDR.PO_ID = SHIP.PO_ID
  AND POL.LINE_NBR = SHIP.LINE_NBR
  
  AND HDR.BUSINESS_UNIT = DIST.BUSINESS_UNIT
  AND HDR.PO_ID = DIST.PO_ID
  AND POL.LINE_NBR = DIST.LINE_NBR
  AND SHIP.SCHED_NBR = DIST.SCHED_NBR
  
  AND E.FIELDNAME = 'PO_STATUS'
  AND E.FIELDVALUE = HDR.PO_STATUS
  
  AND DIST.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+) 
  AND DIST.PO_ID = V.PO_ID (+)
  AND DIST.LINE_NBR = V.LINE_NBR (+) 
  AND DIST.SCHED_NBR = V.SCHED_NBR (+)
  AND DIST.DISTRIB_LINE_NUM = V.PO_DIST_LINE_NUM (+)
  
  AND HDR.BUSINESS_UNIT IN ('600UU') 
  AND HDR.PO_REF LIKE 'Obligation%' 
  AND HDR.PO_DT = TO_DATE('2011-12-31','YYYY-MM-DD')
  
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID, C.PO_STATUS, TO_CHAR(C.PO_DT,'YYYY-MM-DD'), C.VENDOR_ID, C.BUYER_ID, A.LINE_NBR, 
       A.SCHED_NBR, A.CANCEL_STATUS, TO_CHAR(A.DUE_DT,'YYYY-MM-DD'), A.QTY_PO, A.CURRENCY_CD, A.MERCHANDISE_AMT, B.INV_ITEM_ID, 
       E.ACCOUNT, E.DESCR, B.CNTRCT_ID
FROM PS_PO_LINE_SHIP A, PS_PO_LINE B, PS_PO_HDR C, PS_ITM_CAT_TBL E, PS_SET_CNTRL_REC F
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND A.LINE_NBR = B.LINE_NBR
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND E.CATEGORY_ID = B.CATEGORY_ID
  AND E.SETID = F.SETID
  AND F.RECNAME = 'ITM_CAT_TBL'
  AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED
                 WHERE E.SETID = E_ED.SETID
                   AND E.CATEGORY_TYPE = E_ED.CATEGORY_TYPE
                   AND E.CATEGORY_CD = E_ED.CATEGORY_CD
                   AND E.CATEGORY_ID = E_ED.CATEGORY_ID
                   AND E_ED.EFFDT <= SYSDATE)  
  AND A.BUSINESS_UNIT IN ('600UU')
  --AND A.PO_ID = '0000004424'
ORDER BY 1, 2, 3


--Obligatio PO's 31-12-2011 from VCHR_ACCTG_LINE
SELECT HDR.BUSINESS_UNIT, HDR.PO_ID, E.XLATLONGNAME AS PO_STATUS, POL.LINE_NBR, SHIP.SCHED_NBR, DIST.DISTRIB_LINE_NUM, HDR.PO_REF, HDR.BUYER_ID,
       DIST.CURRENCY_CD, DIST.MERCHANDISE_AMT, DIST.CURRENCY_CD_BASE, DIST.MERCH_AMT_BSE,
       DIST.ACCOUNT, DIST.DEPTID, DIST.FUND_CODE, DIST.OPERATING_UNIT, DIST.CHARTFIELD2, DIST.BUSINESS_UNIT_PC, DIST.PROJECT_ID, DIST.ACTIVITY_ID,
       V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.FOREIGN_AMOUNT AS VCHR_AMT, V.FOREIGN_CURRENCY, V.MONETARY_AMOUNT, V.MERCHANDISE_AMT, V.MERCH_AMT_BSE,
       V.BUSINESS_UNIT_GL, V.JOURNAL_ID, V.JOURNAL_DATE, V.GL_DISTRIB_STATUS 
FROM PS_PO_HDR HDR, PS_PO_LINE POL, PS_PO_LINE_SHIP SHIP, PS_PO_LINE_DISTRIB DIST, PSXLATITEM E, PS_VCHR_ACCTG_LINE V
WHERE HDR.BUSINESS_UNIT = POL.BUSINESS_UNIT
  AND HDR.PO_ID = POL.PO_ID
  
  AND HDR.BUSINESS_UNIT = SHIP.BUSINESS_UNIT
  AND HDR.PO_ID = SHIP.PO_ID
  AND POL.LINE_NBR = SHIP.LINE_NBR
  
  AND HDR.BUSINESS_UNIT = DIST.BUSINESS_UNIT
  AND HDR.PO_ID = DIST.PO_ID
  AND POL.LINE_NBR = DIST.LINE_NBR
  AND SHIP.SCHED_NBR = DIST.SCHED_NBR
  
  AND E.FIELDNAME = 'PO_STATUS'
  AND E.FIELDVALUE = HDR.PO_STATUS
  
  AND DIST.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+) 
  AND DIST.PO_ID = V.PO_ID (+)
  AND DIST.LINE_NBR = V.LINE_NBR (+) 
  AND DIST.SCHED_NBR = V.SCHED_NBR (+)
  AND DIST.DISTRIB_LINE_NUM = V.PO_DIST_LINE_NUM (+)
   
  AND HDR.BUSINESS_UNIT LIKE '6%'
  --AND HDR.PO_ID = '0000000936' 
  AND HDR.PO_REF LIKE 'Obligation%' 
  AND HDR.PO_DT = TO_DATE('2011-12-31','YYYY-MM-DD')
  

--CONTRACT INFORMATION
SELECT L.SETID, L.CNTRCT_ID, L.CNTRCT_LINE_NBR, H.VENDOR_SETID, H.VENDOR_ID, VEN.NAME1, U.VNDR_LOC, U.UNIT_OF_MEASURE, H.CNTRCT_BEGIN_DT, H.OPRID_MODIFIED_BY, 
       H.CNTRCT_EXPIRE_DT, H.AMT_CNTRCT_MAX, H.AMT_RELSD_OPEN_ITM, L.CNTRCT_LN_TYPE, L.CNTR_LN_TYPE_ID, L.INV_ITEM_ID, L.DESCR254_MIXED, 
       L.CATEGORY_ID, CAT.CATEGORY_CD, CAT.DESCR, CAT.ACCOUNT,
       L.QTY_LINE_MIN, L.QTY_LINE_MAX, L.AMT_LINE_MIN, L.AMT_LINE_MAX, U.PRICE_CNTRCT_BASE, U.CURRENCY_CD, U.DFLT_UOM, R.SUM_AMT,
       POL.BUSINESS_UNIT AS PO_BU, POL.PO_ID,
       V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.DESCR AS VCHR_DESCR, V.MERCHANDISE_AMT, V.TXN_CURRENCY_CD, V.MERCH_AMT_BSE, V.BASE_CURRENCY,
       TO_CHAR(VCH.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT
FROM PS_CNTRCT_HDR H, PS_CNTRCT_LINE L, PS_CNTRCT_LINE_UOM U, PS_CNTRCT_RLAMT_VW R, 
     PS_ITM_CAT_TBL CAT, PS_PO_LINE POL, PS_VOUCHER_LINE V, PS_VENDOR VEN, PS_VOUCHER VCH
WHERE H.SETID = U.SETID  
  AND H.CNTRCT_ID = U.CNTRCT_ID  
  AND H.CNTRCT_STATUS = 'A'  
  AND L.AMT_ONLY_FLG = 'N'  
  AND L.CNTRCT_LINE_NBR = U.CNTRCT_LINE_NBR  
  AND H.SETID = L.SETID  
  AND H.CNTRCT_ID = L.CNTRCT_ID  
  AND L.SETID = R.SETID  
  AND L.CNTRCT_ID = R.CNTRCT_ID
  AND CAT.SETID = 'UNUNI'
  AND CAT.CATEGORY_ID = L.CATEGORY_ID
  AND POL.BUSINESS_UNIT LIKE '6%'
  AND H.SETID = POL.CNTRCT_SETID
  AND H.CNTRCT_ID = POL.CNTRCT_ID 
  AND L.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR
  AND H.VENDOR_SETID = VEN.SETID
  AND H.VENDOR_ID = VEN.VENDOR_ID
  AND POL.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+) 
  AND POL.PO_ID = V.PO_ID (+)
  AND POL.LINE_NBR = V.LINE_NBR (+)
  AND VCH.BUSINESS_UNIT = V.BUSINESS_UNIT (+)
  AND VCH.VOUCHER_ID = V.VOUCHER_ID (+)  
  AND H.SETID LIKE '600UU' 
  AND H.CNTRCT_ID = '0000000000000000000000834'
  AND CAT.EFFDT = (SELECT MAX(CAT_ED.EFFDT) FROM PS_ITM_CAT_TBL CAT_ED 
                   WHERE CAT.SETID = CAT_ED.SETID 
                     AND CAT.CATEGORY_TYPE = CAT_ED.CATEGORY_TYPE 
                     AND CAT.CATEGORY_CD = CAT_ED.CATEGORY_CD 
                     AND CAT.CATEGORY_ID = CAT_ED.CATEGORY_ID 
                     AND CAT_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,5, VOUCHER_ID

--CONTRACT INFORMATION FROM VCHR ACCTG LINE
SELECT L.SETID, L.CNTRCT_ID, L.CNTRCT_LINE_NBR, H.VENDOR_SETID, H.VENDOR_ID, VEN.NAME1, U.VNDR_LOC, U.UNIT_OF_MEASURE, H.CNTRCT_BEGIN_DT, H.OPRID_MODIFIED_BY, 
       H.CNTRCT_EXPIRE_DT, H.AMT_CNTRCT_MAX, H.AMT_RELSD_OPEN_ITM, L.CNTRCT_LN_TYPE, L.CNTR_LN_TYPE_ID, L.INV_ITEM_ID, L.DESCR254_MIXED, 
       L.CATEGORY_ID, CAT.CATEGORY_CD, CAT.DESCR, CAT.ACCOUNT,
       L.QTY_LINE_MIN, L.QTY_LINE_MAX, L.AMT_LINE_MIN, L.AMT_LINE_MAX, U.PRICE_CNTRCT_BASE, U.CURRENCY_CD, U.DFLT_UOM, R.SUM_AMT,
       POL.BUSINESS_UNIT AS PO_BU, POL.PO_ID,
       V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, TO_CHAR(V.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, V.MERCHANDISE_AMT, V.MERCH_AMT_BSE, V.FOREIGN_AMOUNT AS VCHR_AMT, V.FOREIGN_CURRENCY, V.MONETARY_AMOUNT,
       V.BUSINESS_UNIT_GL, V.JOURNAL_ID, V.JOURNAL_DATE, V.GL_DISTRIB_STATUS
FROM PS_CNTRCT_HDR H, PS_CNTRCT_LINE L, PS_CNTRCT_LINE_UOM U, PS_CNTRCT_RLAMT_VW R, 
     PS_ITM_CAT_TBL CAT, PS_PO_LINE POL, PS_VCHR_ACCTG_LINE V, PS_VENDOR VEN
WHERE H.SETID = U.SETID  
  AND H.CNTRCT_ID = U.CNTRCT_ID  
  AND H.CNTRCT_STATUS = 'A'  
  AND L.AMT_ONLY_FLG = 'N'  
  AND L.CNTRCT_LINE_NBR = U.CNTRCT_LINE_NBR  
  AND H.SETID = L.SETID  
  AND H.CNTRCT_ID = L.CNTRCT_ID  
  AND L.SETID = R.SETID  
  AND L.CNTRCT_ID = R.CNTRCT_ID
  AND CAT.SETID = 'UNUNI'
  AND CAT.CATEGORY_ID = L.CATEGORY_ID
  AND POL.BUSINESS_UNIT LIKE '6%'
  AND H.SETID = POL.CNTRCT_SETID
  AND H.CNTRCT_ID = POL.CNTRCT_ID 
  AND L.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR
  AND H.VENDOR_SETID = VEN.SETID
  AND H.VENDOR_ID = VEN.VENDOR_ID
  AND POL.BUSINESS_UNIT = V.BUSINESS_UNIT_PO
  AND POL.PO_ID = V.PO_ID
  AND POL.LINE_NBR = V.LINE_NBR
  AND TO_CHAR(V.ACCOUNTING_DT, 'YYYY') = '2012'
  AND H.SETID LIKE '6%' 
  AND H.CNTRCT_ID = '0000000000000000000000834'
  AND CAT.EFFDT = (SELECT MAX(CAT_ED.EFFDT) FROM PS_ITM_CAT_TBL CAT_ED 
                   WHERE CAT.SETID = CAT_ED.SETID 
                     AND CAT.CATEGORY_TYPE = CAT_ED.CATEGORY_TYPE 
                     AND CAT.CATEGORY_CD = CAT_ED.CATEGORY_CD 
                     AND CAT.CATEGORY_ID = CAT_ED.CATEGORY_ID 
                     AND CAT_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,5, VOUCHER_ID

SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '614UU' AND PO_ID LIKE '%4146'

--AP Vouchers Realized Gain and Loss
SELECT A.KK_TRAN_ID, TO_CHAR(A.KK_TRAN_DT,'YYYY-MM-DD') As KK_TRAN_DT, A.KK_SOURCE_TRAN, A.KK_PROCESS_STATUS, C.EXCPTN_TYPE, D.XLATLONGNAME, 
       A.KK_PROC_INSTANCE, A.BUSINESS_UNIT, A.DEPOSIT_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DATE, A.JOURNAL_ID, A.PO_ID, 
       F.PO_STATUS, F.VENDOR_ID, F.BUYER_ID, F.OPRID_ENTERED_BY, F.OPRID_APPROVED_BY, F.IN_PROCESS_FLG, F.BUDGET_HDR_STATUS, 
       A.REQ_ID, G.REQ_STATUS, G.REQUESTOR_ID, G.OPRID_APPROVED_BY, G.IN_PROCESS_FLG, G.BUDGET_HDR_STATUS, G.BUDGET_CHECK, 
       A.VOUCHER_ID, A.KEYLIST, B.KK_TRAN_LN, B.JOURNAL_LINE, B.LEDGER, B.UNPOST_SEQ, C.LEDGER_GROUP, C.BUSINESS_UNIT, 
       C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, 
       C.BUDGET_PERIOD, C.MESSAGE_NBR, C.MESSAGE_PARM1, C.MESSAGE_PARM2, C.MESSAGE_PARM3, C.MESSAGE_PARM4, C.PROCESS_INSTANCE, 
       E.PRCSTYPE, E.PRCSNAME, E.OPRID, E.RUNSTATUS, TO_CHAR(CAST((E.BEGINDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS BEGINDTTM, 
       TO_CHAR(CAST((E.ENDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS ENDDTTM, E.RUNCNTLID      
FROM PS_KK_SOURCE_HDR A, PS_KK_SOURCE_LN B, PS_KK_EXCPTN_TBL C, PSXLATITEM D, PSPRCSRQST E, PS_PO_HDR F, PS_REQ_HDR G
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
  AND A.KK_TRAN_DT = B.KK_TRAN_DT
  AND B.KK_TRAN_ID = C.KK_TRAN_ID
  AND B.KK_TRAN_DT = C.KK_TRAN_DT
  AND B.KK_TRAN_LN = C.KK_TRAN_LN
  AND ( A.BUSINESS_UNIT = 'UNUNI' OR A.BUSINESS_UNIT LIKE '6%')
  --AND A.KK_PROCESS_STATUS NOT IN ('V', 'W')
  AND A.KK_SOURCE_TRAN = 'AP_ACCT_LN'
  AND TO_CHAR( A.KK_TRAN_DT, 'YYYY') IN ('2012')
  AND D.FIELDNAME = 'EXCPTN_TYPE'
  AND D.FIELDVALUE = C.EXCPTN_TYPE
  AND C.PROCESS_INSTANCE =  E.PRCSINSTANCE (+)
  AND A.BUSINESS_UNIT =  F.BUSINESS_UNIT (+)
  AND A.PO_ID =  F.PO_ID (+)
  AND A.BUSINESS_UNIT =  G.BUSINESS_UNIT (+)
  AND A.REQ_ID =  G.REQ_ID (+)
  --AND OPRID = 'sharon.koh'
ORDER BY 2 DESC

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'prakash.prashant'
SELECT * FROM PSROLEDEFN WHERE ROLENAME LIKE 'UN%'
SELECT * FROM PSROLEDEFN WHERE ROLENAME LIKE '%XML%'
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_EMAIL_QRY_OP'
SELECT * FROM PSROLEUSER WHERE ROLENAME LIKE '%XML%'

--UNU Names Issue
SELECT A.EMPLID, A.NAME, B.NAME, B.EMPLID
FROM PS_PERSONAL_DATA A, PS_PERS_DATA_EFFDT B
WHERE A.EMPLID (+) = B.EMPLID
  AND B.EFFDT =(SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT C WHERE C.EMPLID = B.EMPLID AND EFFDT <= SYSDATE)
  AND B.EMPLID IN ('985129', '147212', '147682', '829926', '100852', '265466', '140791', '256461', '775767', '978207', '499286', '257533', '730192', '111393',
                   '103362', '258702', '783966', '152531', '259022', '792261', '491481', '878131', '360406', '330480', '88356', '985540', '592003', '289707',
                   '810486', '873758', '622331', '608754', '95375', '569476', '143714', '551736', '759899', '781943', '984869', '987654', '350396', '756770',
                   '101871', '111202', '258912', '755470', '722966', '558504', '19234', '979070', '579283', '769672', '317896', '437633', '998546', '998750',
                   '169544', '255458', '975253', '244871', '371460', '845852', '571560', '403599', '261449', '768433', '831061', '948243', '241628', '522503',
                   '177441', '714215', '560916', '579654', '338598', '32488', '107617', '535759', '259970', '780579', '776079', '256890', '761280', '258065',
                   '260185', '461357', '987617', '264932', '258276', '264294', '961678', '129885', '703657', '108600', '987585', '686206', '899997', '786081',
                   '62935', '065395', '112526', '044613', '434347', '107947', '928142', '522881', '445121', '262813', '305677', '739188', '319177', '72019',
                   '103291', '280083', '280596', '283034', '755881', '788754', '106379', '280185', '039011', '387067', '912365', '281515')
ORDER BY 1

SELECT DISTINCT A.EMPLID, A.NAME, B.NAME, B.EMPLID, INSTR(B.NAME, ',')
FROM PS_PERS_DATA_EFFDT A, PS_PERSONAL_DATA B
WHERE A.EMPLID = B.EMPLID
  --AND A.NAME <> B.NAME
  AND A.NAME <> ' ' 
  AND B.NAME <> ' '
  AND INSTR(B.NAME, ',') = 0
  AND A.EFFDT =(SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT C WHERE C.EMPLID = A.EMPLID AND EFFDT <= SYSDATE)
  AND A.EMPLID IN ('985129', '147212', '147682', '829926', '100852', '265466', '140791', '256461', '775767', '978207', '499286', '257533', '730192', '111393',
                   '103362', '258702', '783966', '152531', '259022', '792261', '491481', '878131', '360406', '330480', '88356', '985540', '592003', '289707',
                   '810486', '873758', '622331', '608754', '95375', '569476', '143714', '551736', '759899', '781943', '984869', '987654', '350396', '756770',
                   '101871', '111202', '258912', '755470', '722966', '558504', '19234', '979070', '579283', '769672', '317896', '437633', '998546', '998750',
                   '169544', '255458', '975253', '244871', '371460', '845852', '571560', '403599', '261449', '768433', '831061', '948243', '241628', '522503',
                   '177441', '714215', '560916', '579654', '338598', '32488', '107617', '535759', '259970', '780579', '776079', '256890', '761280', '258065',
                   '260185', '461357', '987617', '264932', '258276', '264294', '961678', '129885', '703657', '108600', '987585', '686206', '899997', '786081',
                   '62935', '065395', '112526', '044613', '434347', '107947', '928142', '522881', '445121', '262813', '305677', '739188', '319177', '72019',
                   '103291', '280083', '280596', '283034', '755881', '788754', '106379', '280185', '039011', '387067', '912365', '281515')
ORDER BY 1

--UNU Contract SVCS Details    
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.VENDOR_ID, F.VENDOR_NAME_SHORT, F.NAME1, TO_CHAR(B.REVISION_DT,'YYYY-MM-DD') AS REV_DT, 
       B.UN_AMEND_NUM, B.UN_REVISION_TYPE, B.UN_FINALIZED, B.UN_CNTRCT_TYPE, B.UN_RELATE_CNTRCT, B.UN_FUNC_TITLE, TO_CHAR(B.UN_INIT_START_DT,'YYYY-MM-DD'), 
       TO_CHAR(B.START_DT,'YYYY-MM-DD') AS START_DT, TO_CHAR(B.EXPIRATION_DT,'YYYY-MM-DD') AS EXP_DT, 
       B.UN_TOR, B.UN_REMUN_AMT, B.UN_CNTRCT_FREQ, B.UN_CNTRCT_DUR, 
       B.UN_EXPENSE_AMT, B.UN_CNTRCT_AMT, B.UN_SCHED_COND, B.CURRENCY_CD, B.UN_SIGNATORY, B.COMMENTS, B.OPRID_ENTERED_BY, 
       TO_CHAR(B.DATE_ENTERED,'YYYY-MM-DD') AS ENTERED_DT, B.OPRID_MODIFIED_BY, TO_CHAR(B.MODIFIED_DT,'YYYY-MM-DD') AS MOD_DT, B.APPROVER_OPRID, 
       TO_CHAR(B.APPROVAL_DT,'YYYY-MM-DD') AS APPR_DT, B.UN_PRE_OBL, B.UN_PRE_OBL_BSE, B.UN_PRE_DISB, B.UN_PRE_DISB_BSE, B.UN_PRE_CONTNT_REF
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B
WHERE A.SETID = '600UU'
  AND A.CNTRCT_ID LIKE '%834'
  AND F.SETID = A.VENDOR_SETID
  AND F.VENDOR_ID = A.VENDOR_ID
  AND A.SETID = B.SETID
  AND A.CNTRCT_ID = B.CNTRCT_ID
ORDER BY 1, 2, 7 DESC 

--UNU Contract Information
SELECT L.SETID, L.CNTRCT_ID, L.CNTRCT_LINE_NBR, H.VENDOR_SETID, H.VENDOR_ID, VEN.NAME1, UNV.GENDER, UNV.UN_NATIONALITY, U.VNDR_LOC, 
       U.UNIT_OF_MEASURE, H.CNTRCT_BEGIN_DT, H.OPRID_MODIFIED_BY, H.CNTRCT_EXPIRE_DT, H.AMT_CNTRCT_MAX, H.AMT_RELSD_OPEN_ITM, L.CNTRCT_LN_TYPE, 
       L.CNTR_LN_TYPE_ID, L.INV_ITEM_ID, L.DESCR254_MIXED, L.CATEGORY_ID, CAT.CATEGORY_CD, CAT.DESCR, CAT.ACCOUNT,
       L.QTY_LINE_MIN, L.QTY_LINE_MAX, L.AMT_LINE_MIN, L.AMT_LINE_MAX, U.PRICE_CNTRCT_BASE, U.CURRENCY_CD, U.DFLT_UOM, R.SUM_AMT,
       POL.BUSINESS_UNIT AS PO_BU, POL.PO_ID,       
       V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.DESCR AS VCHR_DESCR, V.MERCHANDISE_AMT, V.TXN_CURRENCY_CD, V.MERCH_AMT_BSE, V.BASE_CURRENCY,
       VD.OPERATING_UNIT, VD.FUND_CODE, VD.CHARTFIELD2 AS DONOR, VD.PROJECT_ID
FROM PS_CNTRCT_HDR H, PS_CNTRCT_LINE L, PS_CNTRCT_LINE_UOM U, PS_CNTRCT_RLAMT_VW R, PS_ITM_CAT_TBL CAT, 
     PS_PO_LINE POL, PS_VOUCHER_LINE V, PS_VENDOR VEN, PS_DISTRIB_LINE VD, PS_UN_VENDOR UNV
WHERE H.SETID = U.SETID  
  AND H.CNTRCT_ID = U.CNTRCT_ID    
  AND H.CNTRCT_STATUS = 'A'  
  AND L.AMT_ONLY_FLG = 'N'  
  AND L.CNTRCT_LINE_NBR = U.CNTRCT_LINE_NBR  
  AND H.SETID = L.SETID  
  AND H.CNTRCT_ID = L.CNTRCT_ID  
  AND L.SETID = R.SETID  
  AND L.CNTRCT_ID = R.CNTRCT_ID
  AND CAT.SETID = 'UNUNI'
  AND CAT.CATEGORY_ID = L.CATEGORY_ID
  AND POL.BUSINESS_UNIT LIKE '6%'
  AND H.SETID = POL.CNTRCT_SETID
  AND H.CNTRCT_ID = POL.CNTRCT_ID 
  AND L.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR
  AND H.VENDOR_SETID = VEN.SETID
  AND H.VENDOR_ID = VEN.VENDOR_ID
  AND VEN.SETID = UNV.SETID
  AND VEN.VENDOR_ID = UNV.VENDOR_ID
  AND POL.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+)
  AND POL.PO_ID = V.PO_ID (+)
  AND POL.LINE_NBR = V.LINE_NBR (+)
  AND V.BUSINESS_UNIT = VD.BUSINESS_UNIT 
  AND V.VOUCHER_ID = VD.VOUCHER_ID 
  AND V.VOUCHER_LINE_NUM = VD.VOUCHER_LINE_NUM 
  AND H.SETID LIKE '6%' 
  --AND H.CNTRCT_ID = '0000000000000000000000834'
  AND CAT.EFFDT = (SELECT MAX(CAT_ED.EFFDT) FROM PS_ITM_CAT_TBL CAT_ED 
                   WHERE CAT.SETID = CAT_ED.SETID 
                     AND CAT.CATEGORY_TYPE = CAT_ED.CATEGORY_TYPE 
                     AND CAT.CATEGORY_CD = CAT_ED.CATEGORY_CD 
                     AND CAT.CATEGORY_ID = CAT_ED.CATEGORY_ID 
                     AND CAT_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,5, VOUCHER_ID

--PO's by Project
SELECT A.BUSINESS_UNIT, D.PROJECT_ID, E.DESCR, TO_CHAR(A.PO_DT, 'YYYY') AS YEAR, TO_CHAR(A.PO_DT, 'MM')AS MONTH, 
       SUM(D.MERCHANDISE_AMT)AS ACTUAL, D.CURRENCY_CD, SUM(D.MERCH_AMT_BSE) AS BASE, D.CURRENCY_CD_BASE, COUNT(1) AS PO_COUNT 
FROM PS_PO_HDR A, PS_PO_LINE_DISTRIB D, PS_PROJECT E
WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.PO_ID = D.PO_ID
  AND E.BUSINESS_UNIT = 'UNUNI'
  AND D.PROJECT_ID = E.PROJECT_ID
  AND A.BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(A.PO_DT, 'YYYY') > 2011
GROUP BY A.BUSINESS_UNIT, D.PROJECT_ID, E.DESCR, TO_CHAR(A.PO_DT, 'YYYY'), TO_CHAR(A.PO_DT, 'MM'), D.CURRENCY_CD, D.CURRENCY_CD_BASE
ORDER BY 1,2,4,5

SELECT * FROM PS_PRCSRECUR WHERE RECURNAME LIKE 'UNU%'
SELECT * FROM PS_SCHDLDEFN WHERE SCHEDULENAME LIKE 'UNU%'
SELECT * FROM PS_SCHDLITEM WHERE SCHEDULENAME LIKE 'UNU%'
SELECT * FROM PS_SCHDLITEM WHERE PRCSTYPE Like '%Crystal%'
SELECT * FROM PS_SCHDLNODEPARM

--UNU Schedule JobSet information
SELECT A.SCHEDULENAME, A.JOBNAMESRC, A.DESCR, A.OPRID, C.XLATLONGNAME AS SCHEDULESTATUS, A.RUN_CNTL_ID, TO_CHAR(A.STARTDATETIME, 'YYYY-MM-DD') AS START_DT, 
       A.RECURNAME, 
       B.PRCSNAME, B.PRCSTYPE, B.PRCSJOBSEQ, B.EMAIL_LOG_FLAG, D.XLATLONGNAME AS EMAIL_WEB_RPT,
       E.DESCR AS RUN_CNTL_DESCR, E.QRYNAME,
       F.BNDNUM, F.FIELDNAME, F.BNDNAME, F.BNDVALUE,
       R.MAINJOBINSTANCE, R.RUNSTATUS, R.RQSTDTTM, R.RUNDTTM, R.BEGINDTTM, R.ENDDTTM
FROM PS_SCHDLDEFN A, PS_SCHDLITEM B, PSXLATITEM C, PSXLATITEM D, PS_QUERY_RUN_CNTRL E, PS_QUERY_RUN_PARM F, PSPRCSRQST R
WHERE A.SCHEDULENAME = B.SCHEDULENAME
  AND A.JOBNAMESRC = B.JOBNAMESRC
  AND C.FIELDNAME = 'SCHEDULESTATUS'
  AND C.FIELDVALUE = A.SCHEDULESTATUS
  AND D.FIELDNAME = 'EMAIL_WEB_RPT'
  AND D.FIELDVALUE = B.EMAIL_WEB_RPT
  AND A.RUN_CNTL_ID = E.RUN_CNTL_ID
  AND E.OPRID = F.OPRID (+)
  AND E.RUN_CNTL_ID = F.RUN_CNTL_ID (+)
  AND R.MAINJOBINSTANCE > 0 
  AND R.PRCSINSTANCE = R.MAINJOBINSTANCE 
  AND R.SCHEDULENAME = A.SCHEDULENAME 
  AND R.MAINJOBNAME = A.JOBNAMESRC
  AND A.SCHEDULENAME LIKE 'UNU%'
  AND A.OPRID IN ('CMBATCH', 'prakash.prashant')
ORDER BY 1,10,15;

SELECT * FROM PS_QUERY_RUN_CNTRL WHERE RUN_CNTL_ID LIKE 'UNU%' 
--OPRID = 'prakash.prashant'
SELECT * FROM PS_QUERY_RUN_PARM WHERE RUN_CNTL_ID LIKE 'UNU%'
--OPRID = 'prakash.prashant'

SELECT 'Budget_Journals_Stuck', A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.LEDGER_GROUP, 
             B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_KK_BUDGET_HDR A, PSPRCSRQST B, PSXLATITEM C 
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE(+) 
    AND C.FIELDNAME = 'RUNSTATUS' 
    AND C.FIELDVALUE = RUNSTATUS 
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.IN_PROCESS_FLG = 'Y'
ORDER BY 2,3;

SELECT 'AR_ITEMS_Stuck', A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.LEDGER_GROUP, 
             B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_ITEM_DST A, PSPRCSRQST B, PSXLATITEM C 
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE(+) 
    AND C.FIELDNAME = 'RUNSTATUS' 
    AND C.FIELDVALUE = RUNSTATUS 
    AND A.BUSINESS_UNIT LIKE '6%' 
    AND A.IN_PROCESS_FLG = 'Y'
ORDER BY 2,3;

SELECT 'CNTRCT_RELEASE_Stuck', A.SETID, A.CNTRCT_ID, A.RELEASE_STATUS, A.BUYER_ID, 
             B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_CNTRCT_RLS_HDR A, PSPRCSRQST B, PSXLATITEM C 
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE(+) 
    AND C.FIELDNAME = 'RUNSTATUS' 
    AND C.FIELDVALUE = RUNSTATUS 
    AND A.SETID LIKE '6%' 
    AND A.IN_PROCESS_FLG = 'Y'
ORDER BY 2,3;

SELECT * FROM PS_CNTRCT_RLS_HDR WHERE SETID = '611UU' AND CNTRCT_ID = '0000000000000000000000259'
SELECT * FROM PS_CNTRCT_RLS_LN WHERE SETID = '611UU' AND CNTRCT_ID = '0000000000000000000000259'
SELECT * FROM PS_CNTRCT_RLS_DTL WHERE SETID = '611UU' AND CNTRCT_ID = '0000000000000000000000259'
SELECT * FROM PS_CNTRCT_RLS_TBL WHERE SETID = '611UU' AND CNTRCT_ID = '0000000000000000000000259'

SELECT 'DEPOSITIDs_Stuck', A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.DST_SEQ_NUM, 
             B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_PAY_MISC_DST A, PSPRCSRQST B, PSXLATITEM C 
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE(+) 
    AND C.FIELDNAME = 'RUNSTATUS' 
    AND C.FIELDVALUE = RUNSTATUS 
    AND A.DEPOSIT_BU LIKE '6%' 
    AND A.IN_PROCESS_FLG = 'Y'
ORDER BY 2,3;

--Req's Stuck in Batch
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQUESTOR_ID, A.OPRID_ENTERED_BY, A.OPRID_MODIFIED_BY,
       B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_REQ_HDR A, PSPRCSRQST B, PSXLATITEM C
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)
  AND C.FIELDNAME = 'RUNSTATUS'
  AND C.FIELDVALUE = RUNSTATUS
  AND A.IN_PROCESS_FLG = 'Y'
  AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1,2,3;

--PO's Stuck in Batch
SELECT A.BUSINESS_UNIT, A.PO_ID, A.VENDOR_ID, A.BUYER_ID,
       B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_PO_HDR A, PSPRCSRQST B, PSXLATITEM C
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)
  AND C.FIELDNAME = 'RUNSTATUS'
  AND C.FIELDVALUE = RUNSTATUS
  AND A.IN_PROCESS_FLG = 'Y'
  AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1,2,3;

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN ('28241873', '28270627', '28242273', '28272023')
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN ('28703092', '28703113')
--Matching Run Control records
SELECT * FROM PS_MTCH_RUN_CNTRL WHERE RUN_CNTL_ID = '1001'
SELECT * FROM PS_MTCH_RUN_BU WHERE RUN_CNTL_ID = '1001'
SELECT * FROM PS_MTCH_RUN_VCHR WHERE RUN_CNTL_ID = '1001'

--Vouchers Stuck in Batch
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VENDOR_ID, 
       B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_VOUCHER A, PSPRCSRQST B, PSXLATITEM C
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)
  AND C.FIELDNAME = 'RUNSTATUS'
  AND C.FIELDVALUE = RUNSTATUS
  AND A.IN_PROCESS_FLG = 'Y'
  AND A.BUSINESS_UNIT LIKE '6%'

--Payments Stuck in Batch
SELECT A.BANK_SETID, A.BANK_CD, A.PYMNT_ID, A.PYMNT_ID_REF, A.REMIT_VENDOR, NAME1, A.PYMNT_DT, A.PAY_CYCLE,
            B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_PAYMENT_TBL A, PSPRCSRQST B, PSXLATITEM C
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)
  AND C.FIELDNAME = 'RUNSTATUS'
  AND C.FIELDVALUE = RUNSTATUS
  AND A.IN_PROCESS_FLG = 'Y'
  AND A.REMIT_SETID = 'UNUNI';

--SELECT * FROM PS_PAYMENT_TBL WHERE REMIT_SETID = 'UNUNI' AND IN_PROCESS_FLG = 'Y';

--Documents Stuck in KK
SELECT BUSINESS_UNIT, KK_PROCESS_STATUS, DEPOSIT_ID, INTFC_ID, INVOICE, JOURNAL_ID, PO_ID, REQ_ID, VOUCHER_ID, RECEIVER_ID, COUNT(1) 
FROM PS_KK_SOURCE_HDR 
WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI')
    AND KK_PROCESS_STATUS = 'I'
    AND TO_CHAR(KK_TRAN_DT, 'YYYY') = '2012'
    --AND TO_CHAR(KK_TRAN_DT, 'MM') = '10'
GROUP BY BUSINESS_UNIT, KK_PROCESS_STATUS, DEPOSIT_ID, INTFC_ID, INVOICE, JOURNAL_ID, PO_ID, REQ_ID, VOUCHER_ID, RECEIVER_ID
ORDER BY 1, 2

--SELECT * FROM PS_AELOCKMGR
--Receipts Stuck in Batch
--For receipts need to check both (MATCH_PROCESS_FLG = I) and (IN_PROCESS_FLG = Y)
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.INVOICE_ID, A.MATCH_PROCESS_FLG, A.IN_PROCESS_FLG, A.OPRID, A.RECEIPT_DT, A.SETID, A.VENDOR_ID,
       B.PRCSNAME, B.PRCSINSTANCE, B.OPRID, B.RUNCNTLID, C.XLATLONGNAME AS RUNSTATUS_DESC, B.RUNDTTM 
FROM PS_RECV_HDR A, PSPRCSRQST B, PSXLATITEM C
WHERE A.PROCESS_INSTANCE = B.PRCSINSTANCE (+)
  AND C.FIELDNAME = 'RUNSTATUS'
  AND C.FIELDVALUE = RUNSTATUS
  AND (A.IN_PROCESS_FLG = 'Y' OR A.MATCH_PROCESS_FLG = 'I')
  AND A.BUSINESS_UNIT LIKE '6%'

--Locked Pending Items
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND POSTED_FLAG = 'I';

--Monitor AR_ERROR_CD for UNU AR BUs
SELECT GROUP_BU, AR_ERROR_CD, COUNT(1) FROM PS_PENDING_ITEM 
WHERE GROUP_BU LIKE '6%'
GROUP BY GROUP_BU, AR_ERROR_CD
ORDER BY 1,2;

SELECT * FROM PS_AP_VCHR_LN_SUM WHERE BUSINESS_UNIT = '608UU' AND VOUCHER_ID IN ('00000991','00000993');
SELECT * FROM PS_AP_VCHR_HDR_SUM WHERE BUSINESS_UNIT = '608UU' AND VOUCHER_ID IN ('00000991','00000993');
SELECT * FROM PS_AP_VCHRLSUM_T;
SELECT * FROM PS_AP_MTVCHR_T WHERE PROCESS_INSTANCE = 28734403;

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '608UU' AND VOUCHER_ID IN ('00000991','00000993');
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID IN ('00003971', '00004065');
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID IN ('00004088', '00004085');
--UPDATE PS_VOUCHER SET IN_PROCESS_FLG = 'N' WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID IN ('00004198');
--Check KK_PROCESS_STATUS for every document that is stuck in the batch
--UPDATE PS_KK_SOURCE_HDR SET KK_PROCESS_STATUS = 'N' WHERE BUSINESS_UNIT IN ('604UU','605UU','608UU','609UU','610UU','613UU','621UU','622UU') AND KK_PROCESS_STATUS = 'I';
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '608UU' AND VOUCHER_ID IN ('00000991','00000993');
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID IN ('00012622');
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID IN ('00003971', '00004065');
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID IN ('00004088', '00004085');
SELECT * FROM PS_KK_SOURCE_HDR WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI') AND KK_PROCESS_STATUS = 'I' AND TO_CHAR(KK_TRAN_DT, 'YYYY') = '2012';

--UNU Schedule JobSet information
--Version 1
SELECT A.SCHEDULENAME, A.JOBNAMESRC, A.DESCR, A.OPRID, C.XLATLONGNAME AS SCHEDULESTATUS, A.RUN_CNTL_ID, 
       TO_CHAR(A.STARTDATETIME, 'YYYY-MM-DD') AS START_DT, A.RECURNAME, 
       TO_CHAR(R.BEGINDTTM, 'YYYY-MM-DD') AS BEGIN_DT, R.REPEATRECURRENCE, R.REPEATUNIT, R.DURATION, R.DURATIONUNIT,
       B.PRCSNAME, B.PRCSTYPE, B.PRCSJOBSEQ, B.EMAIL_LOG_FLAG, D.XLATLONGNAME AS EMAIL_WEB_RPT,
       E.DESCR AS RUN_CNTL_DESCR, E.QRYNAME,
       F.BNDNUM, F.FIELDNAME, F.BNDNAME, F.BNDVALUE
FROM PS_SCHDLITEM B, PSXLATITEM C, PSXLATITEM D, PS_PRCSRECUR R, 
     ((PS_SCHDLDEFN A LEFT OUTER JOIN PS_QUERY_RUN_CNTRL E ON A.RUN_CNTL_ID = E.RUN_CNTL_ID) 
     LEFT OUTER JOIN PS_QUERY_RUN_PARM F ON E.OPRID = F.OPRID AND E.RUN_CNTL_ID = F.RUN_CNTL_ID)
WHERE A.SCHEDULENAME = B.SCHEDULENAME
  AND A.JOBNAMESRC = B.JOBNAMESRC
  AND C.FIELDNAME = 'SCHEDULESTATUS'
  AND C.FIELDVALUE = A.SCHEDULESTATUS
  AND D.FIELDNAME = 'EMAIL_WEB_RPT'
  AND D.FIELDVALUE = B.EMAIL_WEB_RPT
  AND A.RECURNAME = R.RECURNAME  
  AND A.SCHEDULENAME LIKE 'UNU%'
  AND A.OPRID IN ('CMBATCH', 'prakash.prashant')
ORDER BY A.SCHEDULENAME, B.PRCSJOBSEQ, F.BNDNUM;

--Version 2
--UNU Schedule JobSet Information
SELECT A.SCHEDULENAME, A.JOBNAMESRC, A.DESCR, A.OPRID, A.SCHEDULESTATUS, C.XLATLONGNAME AS SCHEDSTS, A.RUN_CNTL_ID, TO_CHAR(A.STARTDATETIME, 'YYYY-MM-DD') AS START_DT, A.RECURNAME, 
       TO_CHAR(R.BEGINDTTM, 'YYYY-MM-DD') AS BEGIN_DT, 
       R.REPEATRECURRENCE, R.REPEATUNIT, R.DURATION, R.DURATIONUNIT, B.PRCSNAME, B.PRCSTYPE, B.PRCSJOBSEQ, B.EMAIL_LOG_FLAG, D.XLATLONGNAME AS EMAIL_WEB_RPT, 
       E.DESCR AS RUN_CNTL_DESCR, E.QRYNAME, F.BNDNUM, F.FIELDNAME, F.BNDNAME, --F.BNDVALUE,
       RD.SCHEDULENAME, RD.DISTIDTYPE, G.XLATLONGNAME, LISTAGG(RD.DISTID, ' > ') WITHIN GROUP (ORDER BY RD.SCHEDULENAME) AS "User IDs"
FROM ((((((((PS_SCHDLDEFN A LEFT OUTER JOIN PS_QUERY_RUN_CNTRL E ON A.RUN_CNTL_ID = E.RUN_CNTL_ID) 
       LEFT OUTER JOIN PS_QUERY_RUN_PARM F ON E.OPRID = F.OPRID AND E.RUN_CNTL_ID = F.RUN_CNTL_ID)
       LEFT OUTER JOIN PS_SCHDLITEM B ON A.SCHEDULENAME = B.SCHEDULENAME AND A.JOBNAMESRC = B.JOBNAMESRC) 
       LEFT OUTER JOIN PSXLATITEM C ON C.FIELDNAME = 'SCHEDULESTATUS' AND C.FIELDVALUE = A.SCHEDULESTATUS)
       LEFT OUTER JOIN PSXLATITEM D ON D.FIELDNAME = 'EMAIL_WEB_RPT' AND D.FIELDVALUE = B.EMAIL_WEB_RPT)
       LEFT OUTER JOIN PS_PRCSRECUR R ON A.RECURNAME = R.RECURNAME)
       LEFT OUTER JOIN PS_SCHDLRPTDIST RD ON RD.SCHEDULENAME = B.SCHEDULENAME AND RD.JOBNAMESRC = B.JOBNAMESRC AND RD.ITEM_NODE = B.ITEM_NODE AND RD.PARENT_ITEM_NODE = B.PARENT_ITEM_NODE)
       LEFT OUTER JOIN PSXLATITEM G ON G.FIELDNAME = 'DISTIDTYPE' AND G.FIELDVALUE = RD.DISTIDTYPE)
WHERE (A.SCHEDULENAME LIKE 'UNU%' OR A.OPRID IN ('prakash.prashant'))
  AND A.SCHEDULESTATUS = 1
GROUP BY A.SCHEDULENAME, A.JOBNAMESRC, A.DESCR, A.OPRID, A.SCHEDULESTATUS, C.XLATLONGNAME, A.RUN_CNTL_ID, TO_CHAR(A.STARTDATETIME, 'YYYY-MM-DD'), A.RECURNAME, 
         TO_CHAR(R.BEGINDTTM, 'YYYY-MM-DD'), R.REPEATRECURRENCE, R.REPEATUNIT, R.DURATION, R.DURATIONUNIT, B.PRCSNAME, B.PRCSTYPE, B.PRCSJOBSEQ, B.EMAIL_LOG_FLAG, D.XLATLONGNAME,
         E.DESCR, E.QRYNAME, F.BNDNUM, F.FIELDNAME, F.BNDNAME, --F.BNDVALUE, 
         RD.SCHEDULENAME, RD.DISTIDTYPE, G.XLATLONGNAME
ORDER BY 1;

SELECT * FROM PS_SCHDLRPTDIST WHERE SCHEDULENAME LIKE 'UNU%';
SELECT * FROM PS_SCHDLITEM WHERE SCHEDULENAME LIKE 'UNU%';

SELECT * FROM PS_ENTRY_TYPE_TBL WHERE SETID = 'UNUNI';

--UNU Monthly Trial Balance
SELECT A.FISCAL_YEAR, A.BUSINESS_UNIT, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2, SUM( A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
FROM PS_LEDGER A
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND A.LEDGER = 'USD'
  AND A.ACCOUNT >= '00000'
  AND A.ACCOUNT <= '99999'
  AND A.FISCAL_YEAR = '2012'
  --AND A.DEPTID = '11901'
  --AND A.FUND_CODE = '03500'
  --AND A.OPERATING_UNIT = '619'
  AND A.ACCOUNT > '5'
  AND A.ACCOUNTING_PERIOD BETWEEN 1 AND 12
GROUP BY A.FISCAL_YEAR, A.BUSINESS_UNIT, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9;

--AR Reports
SELECT I.BUSINESS_UNIT, I.CUST_ID, I.ITEM, I.ITEM_LINE, IA.ITEM_SEQ_NUM, I.ENTRY_TYPE, ENT.DESCR, I.BAL_AMT_BASE,  
       IA.ACCOUNTING_DT, IA.POST_DT, IA.DEPOSIT_BU, IA.DEPOSIT_ID, IA.PAYMENT_SEQ_NUM, IA.PAYMENT_AMT, IA.VOUCHER_ID,
       P.PAYMENT_ID, P.PAYMENT_AMT, X1.XLATLONGNAME AS PAYMENT_STATUS, P.PAYMENT_METHOD, P.BANK_ACCOUNT_NUM, P.PAYMENT_CURRENCY, P.OPRID_APPROVED_BY,
       DC.OPRID, DC.BANK_SETID, DC.BANK_CD, DC.BANK_ACCT_KEY, DC.BANK_ACCOUNT_NUM, DC.POSTED_TOTAL, 
       X3.XLATLONGNAME AS GL_DISTRIB_STATUS, X2.XLATLONGNAME AS DEPOSIT_STATUS,
       DST.LEDGER_GROUP, DST.LEDGER, DST.BUSINESS_UNIT_GL, DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.CHARTFIELD2, DST.PROJECT_ID,
       DST.MONETARY_AMOUNT, DST.JOURNAL_ID, DST.APPL_JRNL_ID, DST.FOREIGN_CURRENCY, DST.FOREIGN_AMOUNT, DST.FISCAL_YEAR, DST.ACCOUNTING_PERIOD 
FROM PS_ITEM I, PS_ITEM_ACTIVITY IA, PS_PAYMENT P, PS_DEPOSIT_CONTROL DC, PS_ITEM_DST DST, PS_ENTRY_TYPE_TBL ENT, 
     PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3 
WHERE I.BUSINESS_UNIT = IA.BUSINESS_UNIT
  AND I.CUST_ID = IA.CUST_ID
  AND I.ITEM = IA.ITEM
  AND I.ITEM_LINE = IA.ITEM_LINE
  --ITEM_ACTIVITY & PAYMENT
  AND IA.DEPOSIT_BU = P.DEPOSIT_BU
  AND IA.DEPOSIT_ID = P.DEPOSIT_ID
  AND IA.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM
  --ITEM_ACTIVITY & DEPOSIT_CONTROL
  AND IA.DEPOSIT_BU = DC.DEPOSIT_BU
  AND IA.DEPOSIT_ID = DC.DEPOSIT_ID
  --ITEM_ACTIVITY AND ITEM_DST
  AND IA.BUSINESS_UNIT = DST.BUSINESS_UNIT
  AND IA.CUST_ID = DST.CUST_ID
  AND IA.ITEM = DST.ITEM
  AND IA.ITEM_LINE = DST.ITEM_LINE
  AND IA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
  --ENTRY_TYPE_TBL
  AND ENT.SETID = 'UNUNI'
  AND I.ENTRY_TYPE = ENT.ENTRY_TYPE
  --XLAT X1
  AND X1.FIELDNAME = 'PAYMENT_STATUS'
  AND X1.FIELDVALUE = P.PAYMENT_STATUS
  --XLAT X2
  AND X2.FIELDNAME = 'DEPOSIT_STATUS'
  AND X2.FIELDVALUE = DC.DEPOSIT_STATUS
  --XLAT X3
  AND X3.FIELDNAME = 'GL_DISTRIB_STATUS'
  AND X3.FIELDVALUE = DC.GL_DISTRIB_STATUS
  --VALUES
  AND I.BUSINESS_UNIT = '600UU'
  AND I.CUST_ID = '10014'


--Without PS_ITEM
--AR Reports
SELECT IA.DEPOSIT_BU, IA.DEPOSIT_ID, IA.PAYMENT_SEQ_NUM, IA.PAYMENT_ID, IA.BUSINESS_UNIT, IA.CUST_ID, C.NAME1, C.CURRENCY_CD AS CUST_CURR, C.SPNSR_TYPE,
       IA.POST_DT, IA.GROUP_BU, IA.GROUP_ID, IA.REAL_GAIN_LOSS, IA.ENTRY_TYPE, IA.PC_DISTRIB_STATUS,          
       DC.PAY_WS_TYPE, DC.OPRID, DC.BANK_SETID, DC.BANK_CD, DC.BANK_ACCT_KEY, DC.BANK_ACCOUNT_NUM, DC.CONTROL_CURRENCY, DC.CONTROL_AMT, 
       DC.ENTERED_AMT, DC.POSTED_TOTAL, DC.DEPOSIT_TYPE,
       X3.XLATLONGNAME AS GL_DISTRIB_STATUS, X2.XLATLONGNAME AS DEPOSIT_STATUS,
       DST.LEDGER_GROUP, DST.LEDGER, DST.BUSINESS_UNIT_GL, DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.CHARTFIELD2, DST.PROJECT_ID,
       DST.CURRENCY_CD, DST.MONETARY_AMOUNT, DST.JOURNAL_ID, DST.APPL_JRNL_ID, DST.FOREIGN_CURRENCY, DST.FOREIGN_AMOUNT, DST.FISCAL_YEAR, DST.ACCOUNTING_PERIOD,
       HDR.JRNL_TOTAL_DEBITS, HDR.JRNL_TOT_CREDITS, X1.XLATLONGNAME AS KK_AMOUNT_TYPE 
FROM PS_ITEM_ACTIVITY IA, PS_DEPOSIT_CONTROL DC, PS_ITEM_DST DST, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_JRNL_HEADER HDR,
     PS_CUSTOMER C
WHERE  
  --ITEM_ACTIVITY AND DEPOSIT_CONTROL
      IA.DEPOSIT_BU = DC.DEPOSIT_BU
  AND IA.DEPOSIT_ID = DC.DEPOSIT_ID
  --ITEM_ACTIVITY AND ITEM_DST
  AND IA.BUSINESS_UNIT = DST.BUSINESS_UNIT
  AND IA.CUST_ID = DST.CUST_ID
  AND IA.ITEM = DST.ITEM
  AND IA.ITEM_LINE = DST.ITEM_LINE
  AND IA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
  --ITEM_ACTIVITY AND CUSTOMER
  AND C.SETID = 'UNUNI'
  AND IA.CUST_ID = C.CUST_ID
  --XLAT X1
  AND X1.FIELDNAME = 'KK_AMOUNT_TYPE'
  AND X1.FIELDVALUE = HDR.KK_AMOUNT_TYPE  
  --XLAT X2
  AND X2.FIELDNAME = 'DEPOSIT_STATUS'
  AND X2.FIELDVALUE = DC.DEPOSIT_STATUS
  --XLAT X3
  AND X3.FIELDNAME = 'GL_DISTRIB_STATUS'
  AND X3.FIELDVALUE = DC.GL_DISTRIB_STATUS
  --ITEM_DST AND JRNL_HDR
  AND DST.BUSINESS_UNIT_GL = HDR.BUSINESS_UNIT
  AND DST.JOURNAL_ID = HDR.JOURNAL_ID
  --VALUES
  AND DST.ACCOUNT <> '15100' 
  AND IA.BUSINESS_UNIT LIKE '6%' 
  AND IA.CUST_ID = '10019'
  --AND IA.PC_DISTRIB_STATUS = 'D'   
  --AND DST.FOREIGN_CURRENCY <> 'USD'
ORDER BY 1,2,3,6

SELECT * FROM PS_DEPOST_TYPE_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND CUST_ID = '10014'
SELECT * FROM PS_GM_SPNSR_TYPE WHERE SETID = 'UNUNI'

--Sponsor Count
SELECT A.SPNSR_TYPE, B.DESCR, COUNT(1) AS SPONSOR_COUNT 
FROM PS_CUSTOMER A, PS_GM_SPNSR_TYPE B
WHERE A.SETID = B.SETID (+)
  AND A.SPNSR_TYPE = B.SPNSR_TYPE (+)
  AND A.SETID = 'UNUNI' 
GROUP BY A.SPNSR_TYPE, B.DESCR
ORDER BY 1

--Sponsor Count by Type
SELECT A.SPNSR_TYPE, B.DESCR, COUNT(1) AS SPONSOR_COUNT 
FROM PS_CUSTOMER A, PS_GM_SPNSR_TYPE B
WHERE A.SETID = B.SETID (+)
  AND A.SPNSR_TYPE = B.SPNSR_TYPE (+)
  AND A.SETID = 'UNUNI' 
GROUP BY A.SPNSR_TYPE, B.DESCR
ORDER BY 1;

--Spending by Sponsor Type
SELECT A.SPNSR_TYPE, DST.FISCAL_YEAR, DST.FOREIGN_CURRENCY AS CURRENCY, SUM(DST.FOREIGN_AMOUNT) AS AMOUNT
FROM PS_CUSTOMER A, PS_ITEM_DST DST
WHERE A.CUST_ID = DST.CUST_ID
  AND DST.BUSINESS_UNIT LIKE '6%'
  AND A.SETID = 'UNUNI'
  AND DST.ACCOUNT <> '15100'    
  --AND A.CUST_ID = '10014' 
GROUP BY A.SPNSR_TYPE, DST.FISCAL_YEAR, DST.FOREIGN_CURRENCY
--HAVING SUM(DST.FOREIGN_AMOUNT) <> 0
ORDER BY 1,2,3,4;

--Spending by Customer
SELECT A.CUST_ID, A.NAME1, DST.FISCAL_YEAR, --DST.FOREIGN_CURRENCY AS CURRENCY, SUM(DST.FOREIGN_AMOUNT) AS F_AMOUNT, 
            DST.CURRENCY_CD, SUM(DST.MONETARY_AMOUNT) AS USD_AMOUNT
FROM PS_CUSTOMER A, PS_ITEM_DST DST
WHERE A.CUST_ID = DST.CUST_ID
    AND DST.BUSINESS_UNIT_GL = 'UNUNI'
    AND DST.GL_DISTRIB_STATUS = 'D'
    --AND DST.APPL_JRNL_ID = 'AR_PAYMENT'
    AND A.SETID = 'UNUNI'
    AND DST.ACCOUNT = '51005'
    --AND A.CUST_ID = '10566'
    AND A.CUST_ID IN ('10030', '10240', '10566')
GROUP BY A.CUST_ID, A.NAME1, DST.FISCAL_YEAR, DST.CURRENCY_CD--DST.FOREIGN_CURRENCY
--HAVING SUM(DST.FOREIGN_AMOUNT) <> 0
ORDER BY 1,2,3,4;

SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND UPPER(NAME1) LIKE '%CHE%';
SELECT * FROM PS_UN_CUST_COP_TBL WHERE SETID = 'UNUNI' AND UPPER(DESCRLONG) LIKE '%SWED%';
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT_GL = 'UNUNI' AND CUST_ID = '10045' AND FISCAL_YEAR = 2011 AND ACCOUNT = '14015' AND APPL_JRNL_ID = 'AR_PAYMENT';
SELECT * FROM PSQRYRECORD WHERE QRYNAME = 'UNU_AR_POSTED_TRANS_DETAIL_LNG';
--Project Forecast for 80342
SELECT X.PROJECT_ID, X.ACCOUNT, SUM(BUD) AS Budget, SUM(ACT) AS Actuals, SUM(ENC) AS Encumbered, SUM(PRE) AS PreEncumbered
FROM(
SELECT A.PROJECT_ID, A.ACCOUNT,
CASE B.ANALYSIS_GROUP WHEN 'BUD' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS BUD,
CASE B.ANALYSIS_GROUP WHEN 'GMACT' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS ACT,
CASE B.ANALYSIS_GROUP WHEN 'COM' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS ENC,
CASE B.ANALYSIS_GROUP WHEN 'REQ' THEN SUM(A.RESOURCE_AMOUNT) ELSE 0 END AS PRE
FROM PS_PROJ_RESOURCE A, PS_PROJ_AN_GRP_MAP B, PS_PROJ_AN_GRP_TBL C 
WHERE C.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = A.BUSINESS_UNIT AND G.RECNAME = 'PROJ_AN_GRP_TBL') 
  AND C.ANALYSIS_GROUP IN ('BUD', 'COM', 'REQ', 'GMACT') 
  AND B.SETID = C.SETID 
  AND B.ANALYSIS_GROUP = C.ANALYSIS_GROUP 
  AND B.ANALYSIS_TYPE = A.ANALYSIS_TYPE
  AND A.BUSINESS_UNIT = 'UNUNI' 
  AND A.PROJECT_ID= '00064159'  
GROUP BY A.PROJECT_ID, A.ACCOUNT, B.ANALYSIS_GROUP
) X
GROUP BY X.PROJECT_ID, X.ACCOUNT
ORDER BY 1,2

--UNU AWARD PROJECT LIST
SELECT A.BUSINESS_UNIT, A.CONTRACT_NUM, A.TITLE56, A.DESCR254, A.AWARD_STATUS, A.PURPOSE, A.EMPLID, A.NAME, TO_CHAR(A.BEGIN_DT,'YYYY-MM-DD'), 
       TO_CHAR(A.END_DT,'YYYY-MM-DD'), A.CUST_ID, A.DEPTID, A.INSTID, D.ATTR_CODE_VALUE, C.PROJECT_ID, C.DESCR, C.PROJECT_TYPE, H.PROJECT_STATUS, 
       J.PARENT_NODE_NAME, G.LOCATION, F.DEPTID, F.MAJOR_SUBDIVISION, F.INSTID, E.ACTIVITY_ID, E.DESCR, E.ACTIVITY_TYPE
FROM PS_GM_AWARD A, PS_GM_AWD_PROJT_VW B, PS_PROJECT C, PS_GM_AWD_ATTR D, PS_PROJ_ACTIVITY E, PS_GM_PRJ_DEPT F, 
     PS_PROJ_LOCATION G, PS_PROJECT_STATUS H, PSTREENODE J
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND A.CONTRACT_NUM = B.CONTRACT_NUM
  AND B.PROJECT_ID = C.PROJECT_ID
  AND C.BUSINESS_UNIT = B.BUSINESS_UNIT_PC
  AND A.CONTRACT_NUM =  D.CONTRACT_NUM (+)
  AND D.ATTR_CODE (+) = 'FBPMS_PROJ'
  AND C.BUSINESS_UNIT = E.BUSINESS_UNIT
  AND C.PROJECT_ID = E.PROJECT_ID
  AND C.BUSINESS_UNIT = F.BUSINESS_UNIT
  AND C.PROJECT_ID = F.PROJECT_ID
  AND C.BUSINESS_UNIT = G.BUSINESS_UNIT
  AND C.PROJECT_ID = G.PROJECT_ID
  AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_PROJ_LOCATION G_ED WHERE G.BUSINESS_UNIT = G_ED.BUSINESS_UNIT AND G.PROJECT_ID = G_ED.PROJECT_ID AND G_ED.EFFDT <= SYSDATE)
  AND G.EFFSEQ = (SELECT MAX(G_ES.EFFSEQ) FROM PS_PROJ_LOCATION G_ES WHERE G.BUSINESS_UNIT = G_ES.BUSINESS_UNIT AND G.PROJECT_ID = G_ES.PROJECT_ID AND G.EFFDT = G_ES.EFFDT)
  AND (( C.BUSINESS_UNIT = H.BUSINESS_UNIT
  AND C.PROJECT_ID = H.PROJECT_ID
  AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_PROJECT_STATUS H_ED WHERE H.BUSINESS_UNIT = H_ED.BUSINESS_UNIT AND H.PROJECT_ID = H_ED.PROJECT_ID AND H_ED.EFFDT <= SYSDATE)
  AND H.EFFSEQ = (SELECT MAX(H_ES.EFFSEQ) FROM PS_PROJECT_STATUS H_ES WHERE H.BUSINESS_UNIT = H_ES.BUSINESS_UNIT AND H.PROJECT_ID = H_ES.PROJECT_ID AND H.EFFDT = H_ES.EFFDT))
  OR NOT EXISTS (SELECT 'X' FROM PS_PROJECT_STATUS I
                 WHERE I.BUSINESS_UNIT = C.BUSINESS_UNIT
                   AND I.PROJECT_ID = C.PROJECT_ID
                   AND I.EFFDT <= SYSDATE))
   AND F.INSTID = '607'
   AND F.DEPTID = 'B0390'
   AND C.PROJECT_ID =  J.TREE_NODE (+)
   AND  J.SETID (+) = 'UNUNI'
   AND  J.TREE_NAME (+) = 'UNU_PROGRAMME'
ORDER BY 15,24;


--WITHOUT ITEM_DST
SELECT IA.DEPOSIT_BU, IA.DEPOSIT_ID, IA.PAYMENT_SEQ_NUM, IA.PAYMENT_ID, IA.BUSINESS_UNIT, IA.CUST_ID, C.NAME1, C.CURRENCY_CD AS CUST_CURR, C.SPNSR_TYPE,
       IA.POST_DT, IA.GROUP_BU, IA.GROUP_ID, IA.REAL_GAIN_LOSS, IA.ENTRY_TYPE, IA.PC_DISTRIB_STATUS,          
       DC.PAY_WS_TYPE, DC.OPRID, DC.BANK_SETID, DC.BANK_CD, DC.BANK_ACCT_KEY, DC.BANK_ACCOUNT_NUM, DC.CONTROL_CURRENCY, DC.CONTROL_AMT, 
       DC.ENTERED_AMT, DC.POSTED_TOTAL, DC.DEPOSIT_TYPE,
       X3.XLATLONGNAME AS GL_DISTRIB_STATUS, X2.XLATLONGNAME AS DEPOSIT_STATUS       
FROM PS_ITEM_ACTIVITY IA, PS_DEPOSIT_CONTROL DC, PSXLATITEM X2, PSXLATITEM X3,
     PS_CUSTOMER C
WHERE  
  --ITEM_ACTIVITY AND DEPOSIT_CONTROL
      IA.DEPOSIT_BU = DC.DEPOSIT_BU
  AND IA.DEPOSIT_ID = DC.DEPOSIT_ID  
  --ITEM_ACTIVITY AND CUSTOMER
  AND C.SETID = 'UNUNI'
  AND IA.CUST_ID = C.CUST_ID
  --XLAT X2
  AND X2.FIELDNAME = 'DEPOSIT_STATUS'
  AND X2.FIELDVALUE = DC.DEPOSIT_STATUS
  --XLAT X3
  AND X3.FIELDNAME = 'GL_DISTRIB_STATUS'
  AND X3.FIELDVALUE = DC.GL_DISTRIB_STATUS  
  --VALUES   
  AND IA.BUSINESS_UNIT LIKE '6%' 
  AND IA.CUST_ID = '10002'
  --AND IA.PC_DISTRIB_STATUS = 'D'   
  --AND DST.FOREIGN_CURRENCY <> 'USD'
ORDER BY 1,2,3,6

--Total Donations by Customer
SELECT C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY') AS YEAR, TO_CHAR(P.ACCOUNTING_DT, 'MM') AS MONTH, P.PAYMENT_CURRENCY, SUM(P.PAYMENT_AMT) 
FROM PS_PAYMENT P, PS_ITEM_ACTIVITY I, PS_CUSTOMER C
WHERE P.DEPOSIT_BU = I.DEPOSIT_BU 
  AND P.DEPOSIT_ID = I.DEPOSIT_ID 
  AND P.PAYMENT_SEQ_NUM = I.PAYMENT_SEQ_NUM
  AND I.DEPOSIT_BU <> ' '
  AND C.SETID = 'UNUNI'
  AND I.CUST_ID = C.CUST_ID
  AND I.BUSINESS_UNIT LIKE '6%'
  AND I.ENTRY_TYPE = 'PY'
  AND I.GROUP_TYPE = 'P'
  AND I.CUST_ID = '10004'  
GROUP BY C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY'), TO_CHAR(P.ACCOUNTING_DT, 'MM'), P.PAYMENT_CURRENCY
ORDER BY 1,2,3;

SELECT C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY') AS YEAR, I.ENTRY_CURRENCY, NVL(SUM(I.ENTRY_AMT), 0) AS CONTRIBUTION,
       I.CURRENCY_CD, SUM(I.ENTRY_AMT_BASE) AS USD_AMT 
FROM PS_PAYMENT P, PS_ITEM_ACTIVITY I, PS_CUSTOMER C
WHERE P.DEPOSIT_BU = I.DEPOSIT_BU 
  AND P.DEPOSIT_ID = I.DEPOSIT_ID  
  AND P.PAYMENT_SEQ_NUM = I.PAYMENT_SEQ_NUM  
  AND I.DEPOSIT_BU <> ' '
  AND C.SETID = 'UNUNI'
  AND I.CUST_ID = C.CUST_ID  
  AND I.BUSINESS_UNIT LIKE '6%'
  AND I.ENTRY_TYPE IN ('PY','WO')
  --AND I.GROUP_TYPE = 'P'
  AND I.CUST_ID = '10004'  
GROUP BY C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY'), I.ENTRY_CURRENCY, I.CURRENCY_CD
ORDER BY 1,2,3;

SELECT I.CUST_ID, I.DEPOSIT_ID, TO_CHAR(P.ACCOUNTING_DT, 'YYYY') AS YEAR, 
       P.PAYMENT_CURRENCY, NVL(SUM(P.PAYMENT_AMT), 0) AS AMOUNT, I.ENTRY_CURRENCY, NVL(SUM(I.ENTRY_AMT), 0) AS CONTRIBUTION,
       NVL(ROUND(SUM((I.ENTRY_AMT * P.PYMT_RATE_MULT)/P.PYMT_RATE_DIV), 2), 0) AS USD_AMT 
FROM PS_PAYMENT P, PS_ITEM_ACTIVITY I
WHERE P.DEPOSIT_BU = I.DEPOSIT_BU 
  AND P.DEPOSIT_ID = I.DEPOSIT_ID  
  AND P.PAYMENT_SEQ_NUM = I.PAYMENT_SEQ_NUM  
  AND I.DEPOSIT_BU <> ' '  
  AND I.BUSINESS_UNIT LIKE '6%'
  AND I.ENTRY_TYPE = 'PY'
  --AND I.GROUP_TYPE = 'P'
  --AND I.CUST_ID = '10004'
GROUP BY I.CUST_ID, I.DEPOSIT_ID, TO_CHAR(P.ACCOUNTING_DT, 'YYYY'), P.PAYMENT_CURRENCY, I.ENTRY_CURRENCY
ORDER BY 1,2,3;

--587976
SELECT * FROM PS_PAYMENT_ITEM WHERE DEPOSIT_BU LIKE '6%'
SELECT * FROM PS_PAYMENT_ID_ITEM WHERE DEPOSIT_BU LIKE '6%'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '606UU' AND DEPOSIT_ID IN ('100', '111', '121', '123', '75', '88', '93')
SELECT * FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = '606UU' AND CUST_ID = '10347' AND DEPOSIT_ID IN ('100', '111', '121', '123', '75', '88', '93')
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '614UU' AND DEPOSIT_ID IN ('325')
SELECT * FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = '600UU' AND CUST_ID = '10132' AND DEPOSIT_ID IN ('325')
SELECT PYMT_RATE_DIV FROM PS_PAYMENT WHERE DEPOSIT_BU = '614UU' AND DEPOSIT_ID IN ('398','403','406','428','450','454','476','477','478','491','509')


SELECT A.BUSINESS_UNIT, B.DESCR, COUNT(DISTINCT A.CHARTFIELD2)
FROM PS_PC_RES_FUND A, PS_BUS_UNIT_TBL_FS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
GROUP BY A.BUSINESS_UNIT, B.DESCR

--SETID and BU setup tables
SELECT * FROM PS_SETID_TBL WHERE (SETID = 'UNUNI' OR SETID LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_FS WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
--Module specific tables
SELECT * FROM PS_BUS_UNIT_TBL_AM WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_AP WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_AR WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_BI WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_CA WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_GL WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_PC WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_PM WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');
SELECT * FROM PS_BUS_UNIT_TBL_TR WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');

SELECT * FROM PS_GROUP_CONTROL 
WHERE GROUP_BU = '600UU'
  --AND GROUP_TYPE <> 'U'   
  AND GROUP_ID IN (SELECT DISTINCT GROUP_ID FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10014'AND ENTRY_TYPE IN ('PY','WO'));

SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10014' AND ENTRY_TYPE IN ('PY','WO') 
AND GROUP_ID = '5146'
SELECT * FROM PS_GROUP_TYPE_TBL;
SELECT * FROM PS_ORIGIN_TBL
SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684' AND GROUP_ID = 41
SELECT * FROM PS_ITEM WHERE ITEM LIKE '%ISEEC%' 


SELECT C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY') AS YEAR,       
       NVL(ROUND(SUM((P.PAYMENT_AMT * P.PYMT_RATE_MULT)/P.PYMT_RATE_DIV), 2), 0) AS PYMNT_AMT, P.PAYMENT_CURRENCY, SUM(D.ENTERED_AMT)       
FROM PS_PAYMENT P, PS_ITEM_ACTIVITY I, PS_CUSTOMER C, PS_DEPOSIT_CONTROL D
WHERE P.DEPOSIT_BU = I.DEPOSIT_BU 
  AND P.DEPOSIT_ID = I.DEPOSIT_ID  
  AND P.PAYMENT_SEQ_NUM = I.PAYMENT_SEQ_NUM  
  AND I.DEPOSIT_BU <> ' ' 
  AND I.DEPOSIT_BU = D.DEPOSIT_BU
  AND I.DEPOSIT_ID = D.DEPOSIT_ID  
  AND C.SETID = 'UNUNI'
  AND D.DEP_POST_STATUS = 'C'
  AND I.CUST_ID = C.CUST_ID  
  AND I.BUSINESS_UNIT LIKE '6%'
  AND I.ENTRY_TYPE IN ('PY','WO')  
  --AND I.CUST_ID = '10132'  
  AND I.CUST_ID = '10014'
GROUP BY C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY'), P.PAYMENT_CURRENCY
ORDER BY 1,2,3

SELECT * FROM PS_PENDING_DST WHERE GROUP_BU = '600UU' AND CUST_ID = '10014'
SELECT * FROM PS_CUST_DATA WHERE BUSINESS_UNIT = '600UU' AND CUST_ID = '10014'
SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT = '600UU' AND CUST_ID = '10014'

SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10132' AND ENTRY_TYPE IN ('PY','WO') 
AND GROUP_ID = '5146'

SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD'), A.DEP_POST_STATUS, 
       TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), B.PAYMENT_SEQ_NUM, B.PAYMENT_ID, B.PAYMENT_AMT, B.PAYMENT_STATUS, 
       B.PAYMENT_CURRENCY, B.PYMT_RATE_MULT, B.PYMT_RATE_DIV, B.CURRENCY_CD,
       ROUND(((((( B.PAYMENT_AMT) / (  B.PYMT_RATE_DIV)))) * (   B.PYMT_RATE_MULT)),2)
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
  AND A.DEPOSIT_ID = B.DEPOSIT_ID
  AND B.DEPOSIT_BU LIKE '6%'


SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.BUSINESS_UNIT, A.DEPOSIT_TYPE, 
       MAX( E.DESCRSHORT), MAX( A.BNK_ID_NBR), A.BANK_ACCT_KEY, A.BANK_ACCOUNT_NUM, MAX( A.BAL_STATUS), A.DEP_POST_STATUS, MAX( A.CONTROL_AMT), 
       A.BANK_CD, MAX( A.ENTERED_AMT), MAX( A.POSTED_TOTAL), MAX( A.MISC_DST_TOTAL), TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD'), 
       TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), MAX( A.GL_DISTRIB_STATUS), A.DEPOSIT_STATUS, A.CONTROL_CURRENCY, A.FORMAT_CURRENCY, A.PYMT_RATE_MULT, 
       MAX( A.PYMT_RATE_DIV), MAX( A.PYMT_RT_TYPE), C.BUSINESS_UNIT_GL, MAX( D.BASE_CURRENCY), 
       CASE  A.CONTROL_CURRENCY WHEN ' ' THEN SUM(ROUND(((((( G.PAYMENT_AMT) / (  G.PYMT_RATE_DIV)))) * (  G.PYMT_RATE_MULT)),2))
       ELSE (ROUND(((((( MAX( A.ENTERED_AMT)) / (  MAX( A.PYMT_RATE_DIV))))) * (  A.PYMT_RATE_MULT)),2)) 
       END,  ROUND(((((( MAX( A.CONTROL_AMT)) / (  MAX( A.PYMT_RATE_DIV))))) * (  A.PYMT_RATE_MULT)),2), 
       CASE  A.CONTROL_CURRENCY 
       WHEN ' ' THEN SUM(CASE  G.PAYMENT_STATUS 
       WHEN 'C' THEN (ROUND(((((( G.PAYMENT_AMT) / (  G.PYMT_RATE_DIV)))) * (  G.PYMT_RATE_MULT)),2))
       ELSE 0 END )
       ELSE
       (ROUND(((((( MAX( A.POSTED_TOTAL)) / (  MAX( A.PYMT_RATE_DIV))))) * (  A.PYMT_RATE_MULT)),2)) 
       END, 
       CASE  A.CONTROL_CURRENCY 
       WHEN ' ' THEN SUM(CASE  G.MISC_DST_BAL 
       WHEN 'C' THEN (ROUND(((((( G.PAYMENT_AMT) / (  G.PYMT_RATE_DIV)))) * (  G.PYMT_RATE_MULT)),2))
       ELSE 0 END )
       ELSE
(ROUND(((((( MAX( A.MISC_DST_TOTAL)) / (  MAX( A.PYMT_RATE_DIV))))) * (  A.PYMT_RATE_MULT)),2)) END, 
       F.CURRENCY_AMT_TYPE, F.OPERATOR, F.POST_STATUS, F.PIT_TYPE
FROM PS_DEPOSIT_CONTROL A, PS_BUS_UNIT_TBL_AR C, PS_BUS_UNIT_TBL_GL D, PS_DEPOST_TYPE_TBL E, PS_SET_CNTRL_REC E2, PS_AR_PIT_REQ F, PS_PAYMENT G
WHERE E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
  AND E2.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND E2.RECNAME = 'DEPOST_TYPE_TBL'
  AND E2.SETID = E.SETID
  AND ( A.DEPOSIT_BU = G.DEPOSIT_BU
    AND A.DEPOSIT_ID = G.DEPOSIT_ID
    AND C.BUSINESS_UNIT = A.DEPOSIT_BU
    AND C.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPOST_TYPE_TBL E_ED
        WHERE E.SETID = E_ED.SETID
          AND E.DEPOSIT_TYPE = E_ED.DEPOSIT_TYPE
          AND E_ED.EFFDT <= A.ACCOUNTING_DT)
     AND E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
     AND E.SETID = (SELECT B.SETID
  FROM PS_SET_CNTRL_REC B
  WHERE B.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B.RECNAME = 'DEPOST_TYPE_TBL')
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_AR_PIT_REQ F_ED
        WHERE F.OPRID = F_ED.OPRID
          AND F.RUN_CNTL_ID = F_ED.RUN_CNTL_ID
          AND F_ED.EFFDT <= SYSDATE)
     AND A.ENTRY_DT BETWEEN F.FROM_DT AND F.TO_DT
     AND F.OPRID = :3
     AND F.RUN_CNTL_ID = :4 )
GROUP BY  A.DEPOSIT_BU,  A.DEPOSIT_ID,  A.OPRID,  A.ASSN_OPRID,  A.BUSINESS_UNIT,  A.DEPOSIT_TYPE,  A.BANK_ACCT_KEY,  A.BANK_ACCOUNT_NUM,  A.DEP_POST_STATUS,  A.BANK_CD,  TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD'),  TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),  A.DEPOSIT_STATUS,  A.CONTROL_CURRENCY,  A.FORMAT_CURRENCY,  A.PYMT_RATE_MULT,  C.BUSINESS_UNIT_GL,  F.CURRENCY_AMT_TYPE,  F.OPERATOR,  F.POST_STATUS,  F.PIT_TYPE,  TO_CHAR(F.FROM_DT,'YYYY-MM-DD'),  TO_CHAR(F.TO_DT,'YYYY-MM-DD'),  F.DEPOSIT_TYPE,  F.BANK_CD,  F.BANK_ACCT_KEY,  F.DEPOSIT_BU,E.SETID,E.DEPOSIT_TYPE,TO_CHAR(E.EFFDT,'YYYY-MM-DD')
ORDER BY 11, 33

--Total Paid to Vendor by Currency
SELECT NAME1, TO_CHAR(PYMNT_DT, 'YYYY') AS YEAR, CURRENCY_PYMNT AS CURRENCY, SUM(PYMNT_AMT) AS AMT_PAID 
FROM PS_PMT_INQ_SRCH_VW
WHERE REMIT_SETID = 'UNUNI' 
  --AND REMIT_VENDOR LIKE '%5935'
  --AND (UPPER(NAME1) LIKE '%TOUR%' OR UPPER(NAME1) LIKE '%TRAVEL%')
  AND PYMNT_STATUS NOT IN ('V', 'X')
  AND POST_STATUS_AP = 'P'
  AND TO_CHAR(PYMNT_DT, 'YYYY') = '2013'
GROUP BY NAME1, TO_CHAR(PYMNT_DT, 'YYYY'), CURRENCY_PYMNT
ORDER BY 1,2;

--UNU Requisition Details
SELECT A.BUSINESS_UNIT, A.REQ_ID, (SELECT SUM(MONETARY_AMOUNT) FROM PS_REQ_LN_DISTRIB D_D WHERE D.BUSINESS_UNIT = D_D.BUSINESS_UNIT AND D.REQ_ID = D_D.REQ_ID) AS TOTAL_AMT, 
            A.CURRENCY_CD, E.XLATLONGNAME AS REQ_STATUS, A.REQ_DT, A.REQUESTOR_ID, A.OPRID_APPROVED_BY, A.APPROVAL_DT, F.XLATLONGNAME AS BUDGET_HDR_STATUS, B.LINE_NBR, 
            H.XLATLONGNAME AS SOURCE_STATUS, B.DESCR254_MIXED, B.QTY_REQ, B.VENDOR_ID, B.BUYER_ID, C.SCHED_NBR, C.SHIPTO_ID, D.DISTRIB_LINE_NUM, D.LOCATION, 
            D.ACCOUNT, D.DEPTID, D.OPERATING_UNIT, D.FUND_CODE, D.CHARTFIELD2, D.BUSINESS_UNIT_PC, D.PROJECT_ID, D.ACTIVITY_ID, D.BUSINESS_UNIT_GL, D.BUDGET_DT, 
            G.XLATLONGNAME AS BUDGET_LINE_STATUS, D.CURRENCY_CD, D.MONETARY_AMOUNT, D.CURRENCY_CD_BASE, D.MONETARY_AMT_BSE
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D, PSXLATITEM E, PSXLATITEM F, PSXLATITEM G, PSXLATITEM H
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
     AND A.REQ_ID = B.REQ_ID 
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT 
     AND B.REQ_ID = C.REQ_ID 
     AND B.LINE_NBR = C.LINE_NBR 
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT 
     AND C.REQ_ID = D.REQ_ID 
     AND C.LINE_NBR = D.LINE_NBR 
     AND C.SCHED_NBR = D.SCHED_NBR
     AND E.FIELDNAME = 'REQ_STATUS'
     AND E.FIELDVALUE = A.REQ_STATUS
     AND F.FIELDNAME = 'BUDGET_HDR_STATUS'
     AND F.FIELDVALUE = A.BUDGET_HDR_STATUS
     AND G.FIELDNAME = 'BUDGET_LINE_STATUS'
     AND G.FIELDVALUE = D.BUDGET_LINE_STATUS
     AND H.FIELDNAME = 'SOURCE_STATUS'
     AND H.FIELDVALUE = B.SOURCE_STATUS
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.VENDOR_SETID = 'UNUNI'
     AND A.OPRID_APPROVED_BY = 'bryan.bond'
     --AND D.BUSINESS_UNIT_PC = 'UNUNI'
     --AND D.PROJECT_ID = '00064159'
     --AND B.VENDOR_ID = '0000005935'
     AND A.REQ_DT >= TO_DATE('2008-01-01','YYYY-MM-DD') 
     AND A.REQ_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
ORDER BY 1, 2;

--UNU_AP_DTL_UNPAID_VCHR_BY_PROJ
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, D.VOUCHER_LINE_NUM, D.DISTRIB_LINE_NUM, D.PROJECT_ID, A.VOUCHER_STYLE, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), A.OPRID, A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.BASE_CURRENCY, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_STATUS_VCHR, A.POST_STATUS_AP, A.VOUCHER_ID_RELATED, TO_CHAR(SYSDATE,'YYYY-MM-DD'), TO_CHAR(SYSDATE,'YYYY-MM-DD'), TO_CHAR(SYSDATE,'YYYY-MM-DD'), TO_CHAR(SYSDATE,'YYYY-MM-DD'), TO_CHAR(SYSDATE,'YYYY-MM-DD')
FROM PS_VOUCHER A, PS_DISTRIB_LINE D
WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.VOUCHER_ID = D.VOUCHER_ID
  AND A.ENTRY_STATUS <> 'X'
  AND A.BUDGET_HDR_STATUS = 'V'
  AND A.MATCH_STATUS_VCHR <> 'E'
  AND A.CLOSE_STATUS = 'O'
  AND A.VOUCHER_STYLE NOT IN ('TMPL','CORR')
  AND D.BUSINESS_UNIT_PC = 'UNUNI'
  AND A.VOUCHER_ID NOT IN (SELECT B.VOUCHER_ID_RELATED FROM PS_VOUCHER B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT)
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-05-31','YYYY-MM-DD')
  AND EXISTS (SELECT C.VOUCHER_ID FROM PS_PYMNT_VCHR_XREF C WHERE C.BUSINESS_UNIT = A.BUSINESS_UNIT AND C.VOUCHER_ID = A.VOUCHER_ID AND C.PYMNT_SELCT_STATUS NOT IN ('P','X','C'))
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.PROJECT_ID LIKE '00064158'
ORDER BY 1, 2


SELECT 'UNAPPROVED', A.BUSINESS_UNIT, C.LC_CNTRY, B.OPRID, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD'), B.BUSINESS_UNIT_IU, B.FISCAL_YEAR, 
       B.ACCOUNTING_PERIOD, B.SOURCE, B.JRNL_HDR_STATUS, B.JRNL_EDIT_ERR_STAT, B.BUDGET_HDR_STATUS, B.JRNL_PROCESS_REQST, B.DESCR, E.ACCOUNT, E.DEPTID, 
       E.OPERATING_UNIT, E.FUND_CODE, J.DESCR, E.CHARTFIELD1, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.MONETARY_AMOUNT, E.FOREIGN_CURRENCY, 
       E.FOREIGN_AMOUNT, TO_CHAR(CAST((B.DTTM_STAMP_SEC) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF')
FROM PS_JRNL_APPR_LOG A, PS_JRNL_HEADER B, PS_UN_OPRDEF_PM_VW C, PS_JRNL_LN E, PS_FUND_TBL J
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND B.FISCAL_YEAR = '2012'
  AND B.ACCOUNTING_PERIOD BETWEEN '1' AND '5'
  --AND C.LC_CNTRY LIKE :4
  --AND B.OPRID LIKE :5
  AND B.SOURCE IN ('ONL','EXT')
  AND B.JRNL_HDR_STATUS NOT IN ('P','U')
  AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.JOURNAL_ID = B.JOURNAL_ID
  AND A.JOURNAL_DATE = B.JOURNAL_DATE
  AND A.UNPOST_SEQ = B.UNPOST_SEQ
  AND B.BUSINESS_UNIT = E.BUSINESS_UNIT
  AND B.JOURNAL_ID = E.JOURNAL_ID
  AND B.JOURNAL_DATE = E.JOURNAL_DATE
  AND B.UNPOST_SEQ = E.UNPOST_SEQ
  AND C.OPRID = B.OPRID
  --AND E.ACCOUNT LIKE :6
  --AND E.FUND_CODE LIKE :7
  --AND E.OPERATING_UNIT LIKE :8
  AND A.APPR_INSTANCE IN (SELECT F.APPR_INSTANCE FROM PS_APPR_INST_LOG F WHERE A.APPR_INSTANCE = F.APPR_INSTANCE AND F.APPR_INST_STATUS = 'P')
  AND J.SETID = 'UNUNI'
  AND J.FUND_CODE = E.FUND_CODE
  AND J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_FUND_TBL J_ED WHERE J.SETID = J_ED.SETID AND J.FUND_CODE = J_ED.FUND_CODE AND J_ED.EFFDT <= SYSDATE)

UNION
SELECT 'NOT INITIATED', D.BUSINESS_UNIT, H.LC_CNTRY, D.OPRID, D.JOURNAL_ID, TO_CHAR(D.JOURNAL_DATE,'YYYY-MM-DD'), D.BUSINESS_UNIT_IU, D.FISCAL_YEAR, 
       D.ACCOUNTING_PERIOD, D.SOURCE, D.JRNL_HDR_STATUS, D.JRNL_EDIT_ERR_STAT, D.BUDGET_HDR_STATUS, D.JRNL_PROCESS_REQST, D.DESCR, G.ACCOUNT, G.DEPTID, 
       G.OPERATING_UNIT, G.FUND_CODE, I.DESCR, G.CHARTFIELD1, G.CHARTFIELD2, G.PROJECT_ID, G.ACTIVITY_ID, G.MONETARY_AMOUNT, G.FOREIGN_CURRENCY, 
       G.FOREIGN_AMOUNT, TO_CHAR(CAST((D.DTTM_STAMP_SEC) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF')
FROM PS_JRNL_HEADER D, PS_JRNL_LN G, PS_UN_OPRDEF_PM_VW H, PS_FUND_TBL I
WHERE D.BUSINESS_UNIT = 'UNDP1'
  AND D.BUSINESS_UNIT = G.BUSINESS_UNIT
  AND D.FISCAL_YEAR = :1
  AND D.ACCOUNTING_PERIOD BETWEEN :2 AND :3
  AND D.OPRID = H.OPRID
  AND H.LC_CNTRY LIKE :4
  AND D.OPRID LIKE :5
  AND D.JOURNAL_ID = G.JOURNAL_ID
  AND D.JOURNAL_DATE = G.JOURNAL_DATE
  AND D.UNPOST_SEQ = G.UNPOST_SEQ
  AND D.SOURCE IN ('ONL','EXT')
  AND D.JRNL_HDR_STATUS NOT IN ('P','U')
  AND G.ACCOUNT LIKE :6
  AND G.FUND_CODE LIKE :7
  AND G.OPERATING_UNIT LIKE :8
  AND NOT EXISTS (SELECT K.BUSINESS_UNIT FROM PS_JRNL_APPR_LOG K WHERE K.BUSINESS_UNIT = D.BUSINESS_UNIT AND K.JOURNAL_ID = D.JOURNAL_ID AND K.JOURNAL_DATE = D.JOURNAL_DATE)
  AND I.SETID = 'UNDP1'
  AND I.EFFDT = (SELECT MAX(I_ED.EFFDT) FROM PS_FUND_TBL I_ED WHERE I.SETID = I_ED.SETID AND I.FUND_CODE = I_ED.FUND_CODE AND I_ED.EFFDT <= SYSDATE)
  AND I.FUND_CODE = G.FUND_CODE

SELECT * FROM PS_CNTRCT_HDR WHERE SETID = '600UU' AND BUYER_ID = ' ' 
AND CNTRCT_ID LIKE '%220'

--Find out locked Vouchers
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y'
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00011839'

--Find out locked POs
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y'

SELECT * FROM v$sql WHERE SQL_TEXT LIKE '%UPDATE%IN_PROCESS_FLG%'

SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y'
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y'

SELECT * FROM PSROLEDEFN WHERE ROLENAME = 'UN_UNU_HR'
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_HR'

SELECT * FROM PS_PRCSDEFN WHERE PRCSTYPE LIKE '%Crystal%' AND LASTUPDOPRID = 'PPLSOFT'

SELECT BUSINESS_UNIT, 'PO', ' ', PO_ID AS DOCUMENT_ID FROM PS_PO_HDR WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y'
UNION
SELECT BUSINESS_UNIT, ' ','VCHR', VOUCHER_ID AS DOCUMENT_ID FROM PS_VOUCHER WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'N'

SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'VNDR_BANK_ACCT'


--UNU Vendor IBAN information
--Version 1
SELECT V.VENDOR_ID, V.NAME1, ACCT.VNDR_LOC, ACCT.BANK_ID_QUAL, ACCT.BNK_ID_NBR, ACCT.BRANCH_ID, ACCT.BANK_ACCT_TYPE, ACCT.BANK_ACCOUNT_NUM,
       ACCT.CHECK_DIGIT, ACCT.DFI_ID_QUAL, ACCT.DFI_ID_NUM, ACCT.BENEFICIARY_BANK, 
       ACCT.COUNTRY, ACCT.STATE, ACCT.POSTAL, ACCT.IBAN_CHECK_DIGIT,
       ACCT.IBAN_ID 
FROM PS_VENDOR V, PS_VNDR_BANK_ACCT ACCT 
WHERE V.SETID = ACCT.SETID
  AND V.VENDOR_ID = ACCT.VENDOR_ID
  AND ACCT.EFFDT = (SELECT MAX(ACCT_ED.EFFDT) FROM PS_VNDR_BANK_ACCT ACCT_ED WHERE ACCT.SETID = ACCT_ED.SETID AND ACCT.VENDOR_ID = ACCT_ED.VENDOR_ID AND ACCT.VNDR_LOC = ACCT_ED.VNDR_LOC AND ACCT_ED.EFFDT <= SYSDATE) 
  AND V.SETID = 'UNUNI'
ORDER BY 1,2;


--Version 2
--UNU Vendor IBAN information
SELECT V.VENDOR_ID, V.NAME1, V.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS, V.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS, 
       ACCT.VNDR_LOC, ACCT.BANK_ID_QUAL, ACCT.BNK_ID_NBR, ACCT.BRANCH_ID, ACCT.BANK_ACCT_TYPE, X4.XLATLONGNAME AS BANK_ACCT_TYPE_DESCR, ACCT.BANK_ACCOUNT_NUM,
       ACCT.CHECK_DIGIT, ACCT.DFI_ID_QUAL, ACCT.DFI_ID_NUM, ACCT.BENEFICIARY_BANK, ACCT.COUNTRY, ACCT.STATE, ACCT.POSTAL, ACCT.IBAN_CHECK_DIGIT, ACCT.IBAN_ID,
       VBNK.INTRMED_SEQ_NO, VBNK.INTRMED_ACCT_KEY, VBNK.INTRMED_DFI_ID, VBNK.INTRMED_PYMNT_MSG, VBNK.STL_ROUTING_METHOD, X3.XLATLONGNAME AS ROUTING_METHOD,
       IBAN.COUNTRY AS IBAN_CNTRY, IBCN.DESCR AS CNTRY_DESCR, IBAN.COUNTRY_2CHAR, IBAN.IBAN_ENTERABLE, IBAN.IBAN_BANKID_POS, IBAN.IBAN_BANKID_LEN, IBAN.IBAN_BANKID_PAD, 
       IBAN.IBAN_DFI_ID_POS, IBAN.IBAN_DFI_ID_LEN, IBAN.IBAN_DFI_ID_PAD, IBAN.IBAN_BRANCHID_POS, 
       IBAN.IBAN_BRANCHID_LEN, IBAN.IBAN_BRANCHID_PAD, IBAN.IBAN_ACCOUNT_POS, IBAN.IBAN_ACCOUNT_LEN, IBAN.IBAN_ACCOUNT_PAD, IBAN.IBAN_CHKDIGIT_POS, IBAN.IBAN_CHKDIGIT_LEN
FROM ((((((PS_VENDOR V 
       LEFT OUTER JOIN PS_VNDR_BANK_ACCT ACCT ON V.SETID = ACCT.SETID AND V.VENDOR_ID = ACCT.VENDOR_ID)
       LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'BANK_ACCT_TYPE' AND X4.FIELDVALUE = ACCT.BANK_ACCT_TYPE)
       LEFT OUTER JOIN PS_IBAN_FORMAT_TBL IBAN ON ACCT.COUNTRY = IBAN.COUNTRY)
       LEFT OUTER JOIN PS_IBAN_COUNTRY_VW IBCN ON IBAN.COUNTRY = IBCN.COUNTRY)
       LEFT OUTER JOIN PS_VNDR_IBANK_ACCT VBNK ON ACCT.SETID = VBNK.SETID AND ACCT.VENDOR_ID = VBNK.VENDOR_ID AND ACCT.VNDR_LOC = VBNK.VNDR_LOC AND ACCT.EFFDT = VBNK.EFFDT AND ACCT.BANK_ACCT_SEQ_NBR = VBNK.BANK_ACCT_SEQ_NBR)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'STL_ROUTING_METHOD' AND X3.FIELDVALUE = VBNK.STL_ROUTING_METHOD)
       ,PSXLATITEM X1, PSXLATITEM X2
WHERE (ACCT.EFFDT = (SELECT MAX(ACCT_ED.EFFDT) FROM PS_VNDR_BANK_ACCT ACCT_ED WHERE ACCT.SETID = ACCT_ED.SETID AND ACCT.VENDOR_ID = ACCT_ED.VENDOR_ID AND ACCT.VNDR_LOC = ACCT_ED.VNDR_LOC AND ACCT_ED.EFFDT <= SYSDATE)
    OR ACCT.EFFDT IS NULL)
  AND X1.FIELDNAME = 'VENDOR_CLASS'
  AND X1.FIELDVALUE = V.VENDOR_CLASS
  AND X1.EFF_STATUS = 'A' 
  AND X2.FIELDNAME = 'VENDOR_STATUS'
  AND X2.FIELDVALUE = V.VENDOR_STATUS
  AND X2.EFF_STATUS = 'A'
  AND (VBNK.EFFDT = (SELECT MAX(VBNK_ED.EFFDT) FROM PS_VNDR_IBANK_ACCT VBNK_ED WHERE VBNK.SETID = VBNK_ED.SETID AND VBNK.VENDOR_ID = VBNK_ED.VENDOR_ID AND VBNK.VNDR_LOC = VBNK_ED.VNDR_LOC AND VBNK_ED.EFFDT <= SYSDATE)
    OR VBNK.EFFDT IS NULL)
  AND V.SETID = 'UNUNI'
  --AND V.VENDOR_ID = '0000001007'
ORDER BY 1,2;

--Version 3
--UNU Vendor IBAN information
--Added VENDOR_LOC
--Added additional columns from Vendor table
SELECT V.VENDOR_ID, V.NAME1, V.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS, V.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS, 
       VLC.VNDR_LOC AS VNDR_LOC_LOC, VLC.EFFDT, VLC.EFF_STATUS, VLC.REMIT_LOC, VLC.REMIT_ADDR_SEQ_NUM,
       ACCT.VNDR_LOC AS VNDR_LOC_ACCT, ACCT.BANK_ID_QUAL, ACCT.BNK_ID_NBR, ACCT.BRANCH_ID, ACCT.BANK_ACCT_TYPE, X4.XLATLONGNAME AS BANK_ACCT_TYPE_DESCR, ACCT.BANK_ACCOUNT_NUM,
       ACCT.CHECK_DIGIT, ACCT.DFI_ID_QUAL, ACCT.DFI_ID_NUM, ACCT.BENEFICIARY_BANK, ACCT.COUNTRY, ACCT.STATE, ACCT.POSTAL, ACCT.IBAN_CHECK_DIGIT, ACCT.IBAN_ID,
       VBNK.INTRMED_SEQ_NO, VBNK.INTRMED_ACCT_KEY, VBNK.INTRMED_DFI_ID, VBNK.INTRMED_PYMNT_MSG, VBNK.STL_ROUTING_METHOD, X3.XLATLONGNAME AS ROUTING_METHOD,
       IBAN.COUNTRY AS IBAN_CNTRY, IBCN.DESCR AS CNTRY_DESCR, IBAN.COUNTRY_2CHAR, IBAN.IBAN_ENTERABLE, IBAN.IBAN_BANKID_POS, IBAN.IBAN_BANKID_LEN, IBAN.IBAN_BANKID_PAD, 
       IBAN.IBAN_DFI_ID_POS, IBAN.IBAN_DFI_ID_LEN, IBAN.IBAN_DFI_ID_PAD, IBAN.IBAN_BRANCHID_POS, 
       IBAN.IBAN_BRANCHID_LEN, IBAN.IBAN_BRANCHID_PAD, IBAN.IBAN_ACCOUNT_POS, IBAN.IBAN_ACCOUNT_LEN, IBAN.IBAN_ACCOUNT_PAD, IBAN.IBAN_CHKDIGIT_POS, IBAN.IBAN_CHKDIGIT_LEN,
       V.CREATED_DTTM, V.CREATED_BY_USER, V.LAST_MODIFIED_DATE, V.ENTERED_BY
FROM (((((((PS_VENDOR V 
       LEFT OUTER JOIN PS_VENDOR_LOC VLC ON V.SETID = VLC.SETID AND V.VENDOR_ID = VLC.VENDOR_ID)
       LEFT OUTER JOIN PS_VNDR_BANK_ACCT ACCT ON V.SETID = ACCT.SETID AND V.VENDOR_ID = ACCT.VENDOR_ID AND VLC.VNDR_LOC = ACCT.VNDR_LOC)
       LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'BANK_ACCT_TYPE' AND X4.FIELDVALUE = ACCT.BANK_ACCT_TYPE)
       LEFT OUTER JOIN PS_IBAN_FORMAT_TBL IBAN ON ACCT.COUNTRY = IBAN.COUNTRY)
       LEFT OUTER JOIN PS_IBAN_COUNTRY_VW IBCN ON IBAN.COUNTRY = IBCN.COUNTRY)
       LEFT OUTER JOIN PS_VNDR_IBANK_ACCT VBNK ON ACCT.SETID = VBNK.SETID AND ACCT.VENDOR_ID = VBNK.VENDOR_ID AND ACCT.VNDR_LOC = VBNK.VNDR_LOC AND ACCT.EFFDT = VBNK.EFFDT AND ACCT.BANK_ACCT_SEQ_NBR = VBNK.BANK_ACCT_SEQ_NBR)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'STL_ROUTING_METHOD' AND X3.FIELDVALUE = VBNK.STL_ROUTING_METHOD)
       ,PSXLATITEM X1, PSXLATITEM X2
WHERE V.SETID = 'UNUNI'
  AND (VLC.EFFDT = (SELECT MAX(VLC_ED.EFFDT) FROM PS_VENDOR_LOC VLC_ED WHERE VLC.SETID = VLC_ED.SETID AND VLC.VENDOR_ID = VLC_ED.VENDOR_ID AND VLC.VNDR_LOC = VLC_ED.VNDR_LOC AND VLC_ED.EFFDT <= SYSDATE) 
    OR VLC.EFFDT IS NULL)
  AND (ACCT.EFFDT = (SELECT MAX(ACCT_ED.EFFDT) FROM PS_VNDR_BANK_ACCT ACCT_ED WHERE ACCT.SETID = ACCT_ED.SETID AND ACCT.VENDOR_ID = ACCT_ED.VENDOR_ID AND ACCT.VNDR_LOC = ACCT_ED.VNDR_LOC AND ACCT_ED.EFFDT <= SYSDATE)
    OR ACCT.EFFDT IS NULL)
  AND (VBNK.EFFDT = (SELECT MAX(VBNK_ED.EFFDT) FROM PS_VNDR_IBANK_ACCT VBNK_ED WHERE VBNK.SETID = VBNK_ED.SETID AND VBNK.VENDOR_ID = VBNK_ED.VENDOR_ID AND VBNK.VNDR_LOC = VBNK_ED.VNDR_LOC AND VBNK_ED.EFFDT <= SYSDATE)
    OR VBNK.EFFDT IS NULL)
  AND X1.FIELDNAME = 'VENDOR_CLASS'
  AND X1.FIELDVALUE = V.VENDOR_CLASS
  AND X1.EFF_STATUS = 'A' 
  AND X2.FIELDNAME = 'VENDOR_STATUS'
  AND X2.FIELDVALUE = V.VENDOR_STATUS
  AND X2.EFF_STATUS = 'A'
  --AND V.VENDOR_ID = '0000001177'
ORDER BY 1,2;

--Version 4
--Added VENDOR_ADDR
--Still under testing
SELECT V.VENDOR_ID, V.NAME1, V.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS, V.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS, 
       VLC.VNDR_LOC AS VNDR_LOC_LOC, VLC.EFFDT, VLC.EFF_STATUS, VLC.REMIT_LOC, VLC.REMIT_ADDR_SEQ_NUM, VAD.NAME1 AS "Payment Alternate Name",
       ACCT.VNDR_LOC AS VNDR_LOC_ACCT, ACCT.BANK_ID_QUAL, ACCT.BNK_ID_NBR, ACCT.BRANCH_ID, ACCT.BANK_ACCT_TYPE, X4.XLATLONGNAME AS BANK_ACCT_TYPE_DESCR, ACCT.BANK_ACCOUNT_NUM,
       ACCT.CHECK_DIGIT, ACCT.DFI_ID_QUAL, ACCT.DFI_ID_NUM, ACCT.BENEFICIARY_BANK, ACCT.COUNTRY, ACCT.STATE, ACCT.POSTAL, ACCT.IBAN_CHECK_DIGIT, ACCT.IBAN_ID,
       VBNK.INTRMED_SEQ_NO, VBNK.INTRMED_ACCT_KEY, VBNK.INTRMED_DFI_ID, VBNK.INTRMED_PYMNT_MSG, VBNK.STL_ROUTING_METHOD, X3.XLATLONGNAME AS ROUTING_METHOD,
       IBAN.COUNTRY AS IBAN_CNTRY, IBCN.DESCR AS CNTRY_DESCR, IBAN.COUNTRY_2CHAR, IBAN.IBAN_ENTERABLE, IBAN.IBAN_BANKID_POS, IBAN.IBAN_BANKID_LEN, IBAN.IBAN_BANKID_PAD, 
       IBAN.IBAN_DFI_ID_POS, IBAN.IBAN_DFI_ID_LEN, IBAN.IBAN_DFI_ID_PAD, IBAN.IBAN_BRANCHID_POS, 
       IBAN.IBAN_BRANCHID_LEN, IBAN.IBAN_BRANCHID_PAD, IBAN.IBAN_ACCOUNT_POS, IBAN.IBAN_ACCOUNT_LEN, IBAN.IBAN_ACCOUNT_PAD, IBAN.IBAN_CHKDIGIT_POS, IBAN.IBAN_CHKDIGIT_LEN,
       V.CREATED_DTTM, V.CREATED_BY_USER, V.LAST_MODIFIED_DATE, V.ENTERED_BY
FROM ((((((((PS_VENDOR V 
       LEFT OUTER JOIN PS_VENDOR_LOC VLC ON V.SETID = VLC.SETID AND V.VENDOR_ID = VLC.VENDOR_ID)
       LEFT OUTER JOIN PS_VENDOR_ADDR VAD ON VLC.SETID = VAD.SETID AND VLC.VENDOR_ID = VAD.VENDOR_ID AND VLC.ADDR_SEQ_NUM_ORDR = VAD.ADDRESS_SEQ_NUM)
       LEFT OUTER JOIN PS_VNDR_BANK_ACCT ACCT ON V.SETID = ACCT.SETID AND V.VENDOR_ID = ACCT.VENDOR_ID AND VLC.VNDR_LOC = ACCT.VNDR_LOC)
       LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'BANK_ACCT_TYPE' AND X4.FIELDVALUE = ACCT.BANK_ACCT_TYPE)
       LEFT OUTER JOIN PS_IBAN_FORMAT_TBL IBAN ON ACCT.COUNTRY = IBAN.COUNTRY)
       LEFT OUTER JOIN PS_IBAN_COUNTRY_VW IBCN ON IBAN.COUNTRY = IBCN.COUNTRY)
       LEFT OUTER JOIN PS_VNDR_IBANK_ACCT VBNK ON ACCT.SETID = VBNK.SETID AND ACCT.VENDOR_ID = VBNK.VENDOR_ID AND ACCT.VNDR_LOC = VBNK.VNDR_LOC AND ACCT.EFFDT = VBNK.EFFDT AND ACCT.BANK_ACCT_SEQ_NBR = VBNK.BANK_ACCT_SEQ_NBR)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'STL_ROUTING_METHOD' AND X3.FIELDVALUE = VBNK.STL_ROUTING_METHOD)
       ,PSXLATITEM X1, PSXLATITEM X2
WHERE V.SETID = 'UNUNI'
  AND (VLC.EFFDT = (SELECT MAX(VLC_ED.EFFDT) FROM PS_VENDOR_LOC VLC_ED WHERE VLC.SETID = VLC_ED.SETID AND VLC.VENDOR_ID = VLC_ED.VENDOR_ID AND VLC.VNDR_LOC = VLC_ED.VNDR_LOC AND VLC_ED.EFFDT <= SYSDATE) 
    OR VLC.EFFDT IS NULL)
  AND (ACCT.EFFDT = (SELECT MAX(ACCT_ED.EFFDT) FROM PS_VNDR_BANK_ACCT ACCT_ED WHERE ACCT.SETID = ACCT_ED.SETID AND ACCT.VENDOR_ID = ACCT_ED.VENDOR_ID AND ACCT.VNDR_LOC = ACCT_ED.VNDR_LOC AND ACCT_ED.EFFDT <= SYSDATE)
    OR ACCT.EFFDT IS NULL)
  AND (VBNK.EFFDT = (SELECT MAX(VBNK_ED.EFFDT) FROM PS_VNDR_IBANK_ACCT VBNK_ED WHERE VBNK.SETID = VBNK_ED.SETID AND VBNK.VENDOR_ID = VBNK_ED.VENDOR_ID AND VBNK.VNDR_LOC = VBNK_ED.VNDR_LOC AND VBNK_ED.EFFDT <= SYSDATE)
    OR VBNK.EFFDT IS NULL)
  AND (VAD.EFFDT = (SELECT MAX(VAD_ED.EFFDT) FROM PS_VENDOR_ADDR VAD_ED WHERE VAD_ED.SETID = VAD.SETID AND VAD_ED.VENDOR_ID = VAD.VENDOR_ID AND VAD_ED.ADDRESS_SEQ_NUM = VLC.ADDR_SEQ_NUM_ORDR AND VAD_ED.EFFDT <= SYSDATE)
    OR VAD.EFFDT IS NULL)  
  AND X1.FIELDNAME = 'VENDOR_CLASS'
  AND X1.FIELDVALUE = V.VENDOR_CLASS
  AND X1.EFF_STATUS = 'A' 
  AND X2.FIELDNAME = 'VENDOR_STATUS'
  AND X2.FIELDVALUE = V.VENDOR_STATUS
  AND X2.EFF_STATUS = 'A'
  --AND V.VENDOR_ID = '0000001177'
ORDER BY 1,2;

--Version 5
--Added VENDOR_PAY to capture the Bank Code information at Vendor Level
--how to tackle bank defaulting customization at Voucher level??
--Domestic Costs field is important
SELECT V.VENDOR_ID, V.NAME1, V.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS, V.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS, 
       VLC.VNDR_LOC AS VNDR_LOC_LOC, VLC.EFFDT, VLC.EFF_STATUS, VLC.REMIT_LOC, VLC.REMIT_ADDR_SEQ_NUM, VAD.NAME1 AS "Payment Alternate Name", VPAY.PYMNT_METHOD, VPAY.EFT_LAYOUT_CD,
       VPAY.SEQ_NUM, VPAY.BANK_CD, VPAY.BANK_ACCT_KEY, VPAY.CURRENCY_PYMNT, VPAY.CUR_RT_TYPE_PYMNT, VPAY.EFT_PYMNT_FMT_CD, X5.XLATLONGNAME AS EFT_PYMNT_CODE, VPAY.EFT_TRANS_HANDLING, X6.XLATLONGNAME AS EFT_TRANS_CD,
       VPAY.EFT_DOM_COSTS_CD AS "Domestic Costs", X7.XLATLONGNAME AS EFT_DOM_COST_DESCR,
       ACCT.VNDR_LOC AS VNDR_LOC_ACCT, ACCT.BANK_ID_QUAL, ACCT.BNK_ID_NBR, ACCT.BRANCH_ID, ACCT.BANK_ACCT_TYPE, X4.XLATLONGNAME AS BANK_ACCT_TYPE_DESCR, ACCT.BANK_ACCOUNT_NUM,
       ACCT.CHECK_DIGIT, ACCT.DFI_ID_QUAL, ACCT.DFI_ID_NUM, ACCT.BENEFICIARY_BANK, ACCT.COUNTRY, ACCT.STATE, ACCT.POSTAL, ACCT.IBAN_CHECK_DIGIT, ACCT.IBAN_ID,
       VBNK.INTRMED_SEQ_NO, VBNK.INTRMED_ACCT_KEY, VBNK.INTRMED_DFI_ID, VBNK.INTRMED_PYMNT_MSG, VBNK.STL_ROUTING_METHOD, X3.XLATLONGNAME AS ROUTING_METHOD,
       IBAN.COUNTRY AS IBAN_CNTRY, IBCN.DESCR AS CNTRY_DESCR, IBAN.COUNTRY_2CHAR, IBAN.IBAN_ENTERABLE, IBAN.IBAN_BANKID_POS, IBAN.IBAN_BANKID_LEN, IBAN.IBAN_BANKID_PAD, 
       IBAN.IBAN_DFI_ID_POS, IBAN.IBAN_DFI_ID_LEN, IBAN.IBAN_DFI_ID_PAD, IBAN.IBAN_BRANCHID_POS, 
       IBAN.IBAN_BRANCHID_LEN, IBAN.IBAN_BRANCHID_PAD, IBAN.IBAN_ACCOUNT_POS, IBAN.IBAN_ACCOUNT_LEN, IBAN.IBAN_ACCOUNT_PAD, IBAN.IBAN_CHKDIGIT_POS, IBAN.IBAN_CHKDIGIT_LEN,
       V.CREATED_DTTM, V.CREATED_BY_USER, V.LAST_MODIFIED_DATE, V.ENTERED_BY
FROM ((((((((((((PS_VENDOR V 
       LEFT OUTER JOIN PS_VENDOR_LOC VLC ON V.SETID = VLC.SETID AND V.VENDOR_ID = VLC.VENDOR_ID)
       LEFT OUTER JOIN PS_VENDOR_ADDR VAD ON VLC.SETID = VAD.SETID AND VLC.VENDOR_ID = VAD.VENDOR_ID AND VLC.ADDR_SEQ_NUM_ORDR = VAD.ADDRESS_SEQ_NUM)
       LEFT OUTER JOIN PS_VENDOR_PAY VPAY ON V.SETID = VPAY.SETID AND V.VENDOR_ID = VPAY.VENDOR_ID AND VLC.VNDR_LOC = VPAY.VNDR_LOC AND VPAY.SEQ_NUM = 1)
       LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'EFT_PYMNT_FMT_CD' AND X5.FIELDVALUE = VPAY.EFT_PYMNT_FMT_CD AND X5.EFF_STATUS = 'A')
       LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'EFT_TRANS_HANDLING' AND X6.FIELDVALUE = VPAY.EFT_TRANS_HANDLING AND X6.EFF_STATUS = 'A')
       LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'EFT_DOM_COSTS_CD' AND X7.FIELDVALUE = VPAY.EFT_DOM_COSTS_CD AND X7.EFF_STATUS = 'A')
       LEFT OUTER JOIN PS_VNDR_BANK_ACCT ACCT ON V.SETID = ACCT.SETID AND V.VENDOR_ID = ACCT.VENDOR_ID AND VLC.VNDR_LOC = ACCT.VNDR_LOC)
       LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'BANK_ACCT_TYPE' AND X4.FIELDVALUE = ACCT.BANK_ACCT_TYPE)
       LEFT OUTER JOIN PS_IBAN_FORMAT_TBL IBAN ON ACCT.COUNTRY = IBAN.COUNTRY)
       LEFT OUTER JOIN PS_IBAN_COUNTRY_VW IBCN ON IBAN.COUNTRY = IBCN.COUNTRY)
       LEFT OUTER JOIN PS_VNDR_IBANK_ACCT VBNK ON ACCT.SETID = VBNK.SETID AND ACCT.VENDOR_ID = VBNK.VENDOR_ID AND ACCT.VNDR_LOC = VBNK.VNDR_LOC AND ACCT.EFFDT = VBNK.EFFDT AND ACCT.BANK_ACCT_SEQ_NBR = VBNK.BANK_ACCT_SEQ_NBR)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'STL_ROUTING_METHOD' AND X3.FIELDVALUE = VBNK.STL_ROUTING_METHOD)
       ,PSXLATITEM X1, PSXLATITEM X2
WHERE V.SETID = 'UNUNI'
  AND (VLC.EFFDT = (SELECT MAX(VLC_ED.EFFDT) FROM PS_VENDOR_LOC VLC_ED WHERE VLC.SETID = VLC_ED.SETID AND VLC.VENDOR_ID = VLC_ED.VENDOR_ID AND VLC.VNDR_LOC = VLC_ED.VNDR_LOC AND VLC_ED.EFFDT <= SYSDATE) 
    OR VLC.EFFDT IS NULL)
  AND (ACCT.EFFDT = (SELECT MAX(ACCT_ED.EFFDT) FROM PS_VNDR_BANK_ACCT ACCT_ED WHERE ACCT.SETID = ACCT_ED.SETID AND ACCT.VENDOR_ID = ACCT_ED.VENDOR_ID AND ACCT.VNDR_LOC = ACCT_ED.VNDR_LOC AND ACCT_ED.EFFDT <= SYSDATE)
    OR ACCT.EFFDT IS NULL)
  AND (VBNK.EFFDT = (SELECT MAX(VBNK_ED.EFFDT) FROM PS_VNDR_IBANK_ACCT VBNK_ED WHERE VBNK.SETID = VBNK_ED.SETID AND VBNK.VENDOR_ID = VBNK_ED.VENDOR_ID AND VBNK.VNDR_LOC = VBNK_ED.VNDR_LOC AND VBNK_ED.EFFDT <= SYSDATE)
    OR VBNK.EFFDT IS NULL)
  AND (VAD.EFFDT = (SELECT MAX(VAD_ED.EFFDT) FROM PS_VENDOR_ADDR VAD_ED WHERE VAD_ED.SETID = VAD.SETID AND VAD_ED.VENDOR_ID = VAD.VENDOR_ID AND VAD_ED.ADDRESS_SEQ_NUM = VLC.ADDR_SEQ_NUM_ORDR AND VAD_ED.EFFDT <= SYSDATE)
    OR VAD.EFFDT IS NULL)  
  AND (VPAY.EFFDT = (SELECT MAX(VPAY_ED.EFFDT) FROM PS_VENDOR_PAY VPAY_ED WHERE VPAY_ED.SETID = VPAY.SETID AND VPAY_ED.VENDOR_ID = VPAY.VENDOR_ID AND VPAY_ED.VNDR_LOC = VPAY.VNDR_LOC AND VPAY_ED.SEQ_NUM = VPAY.SEQ_NUM 
                                                                            AND VPAY_ED.EFFDT <= SYSDATE)
    OR VAD.EFFDT IS NULL) 
  AND X1.FIELDNAME = 'VENDOR_CLASS'
  AND X1.FIELDVALUE = V.VENDOR_CLASS
  AND X1.EFF_STATUS = 'A' 
  AND X2.FIELDNAME = 'VENDOR_STATUS'
  AND X2.FIELDVALUE = V.VENDOR_STATUS
  AND X2.EFF_STATUS = 'A'
  --AND V.VENDOR_ID = '0000005935'
ORDER BY 1,2;

--Find Vendors which share Bank Account
SELECT A.VENDOR_ID, A.BANK_ACCOUNT_NUM, B.VENDOR_ID, B.BANK_ACCOUNT_NUM 
FROM PS_VNDR_BANK_ACCT A, PS_VNDR_BANK_ACCT B
WHERE A.SETID = B.SETID
  AND A.VENDOR_ID <> B.VENDOR_ID
  AND (A.BANK_ACCOUNT_NUM = B.BANK_ACCOUNT_NUM AND (A.BANK_ACCOUNT_NUM <> 'N/A' AND A.BANK_ACCOUNT_NUM <> ' '))
  AND A.SETID = 'UNUNI'
  AND EXISTS (SELECT VENDOR_ID FROM PS_VENDOR V WHERE SETID = 'UNUNI' AND A.VENDOR_ID = V.VENDOR_ID AND VENDOR_STATUS = 'A')
ORDER BY 1,2;

SELECT * FROM PS_VENDOR_PAY WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000005935';
SELECT * FROM PS_VENDOR_PAY WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000004786';

SELECT * FROM PS_VENDOR_PAY WHERE SETID = 'UNUNI' AND SEQ_NUM > 1;

SELECT * FROM PS_IBAN_FORMAT_TBL ORDER BY 1,2;

SELECT * FROM PS_IBAN_COUNTRY_VW;

SELECT IBAN.*, IBC.DESCR 
FROM PS_IBAN_FORMAT_TBL IBAN, PS_IBAN_COUNTRY_VW IBC
WHERE IBAN.COUNTRY = IBC.COUNTRY
ORDER BY 1,2;

SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'IBAN_FORMAT_TBL' ORDER BY FIELDNUM;

SELECT IBAN.COUNTRY, IBC.DESCR, IBAN.COUNTRY_2CHAR, UNC.LEVEL_FIELDSIZE, 
       (IBAN.IBAN_BANKID_LEN + IBAN.IBAN_DFI_ID_LEN + IBAN.IBAN_BRANCHID_LEN + IBAN.IBAN_ACCOUNT_LEN + IBAN.IBAN_CHKDIGIT_LEN + 4) AS IBAN_LENGTH_CALC,
       LENGTH(IBAN.IBAN_ID) AS IBAN_LENGTH_EXMPL,
       IBAN.IBAN_ENTERABLE, IBAN.IBAN_BANKID_POS, IBAN.IBAN_BANKID_LEN, IBAN.IBAN_BANKID_PAD, IBAN.IBAN_DFI_ID_POS, IBAN.IBAN_DFI_ID_LEN, IBAN.IBAN_DFI_ID_PAD, 
       IBAN.IBAN_BRANCHID_POS, IBAN.IBAN_BRANCHID_LEN, IBAN.IBAN_BRANCHID_PAD, IBAN.IBAN_ACCOUNT_POS, IBAN.IBAN_ACCOUNT_LEN, IBAN.IBAN_ACCOUNT_PAD, IBAN.IBAN_CHKDIGIT_POS, IBAN.IBAN_CHKDIGIT_LEN, IBAN.IBAN_ID
FROM ((PS_IBAN_FORMAT_TBL IBAN LEFT OUTER JOIN PS_IBAN_COUNTRY_VW IBC ON IBAN.COUNTRY = IBC.COUNTRY)
       LEFT OUTER JOIN PS_UN_IBAN_COUNTRY UNC ON IBAN.COUNTRY = UNC.COUNTRY)
ORDER BY 1,2;

SELECT * FROM PS_UN_IBAN_COUNTRY;

     
SELECT A.VENDOR_ID, A.NAME1, B.VNDR_LOC, B.BANK_ACCT_SEQ_NBR, C.COUNTRY, C.LEVEL_FIELDSIZE
FROM ((PS_VENDOR A LEFT OUTER JOIN PS_VNDR_BANK_ACCT B ON A.SETID = B.SETID AND A.VENDOR_ID = B.VENDOR_ID AND LENGTH( B.ADDRESS4) = 1)
       LEFT OUTER JOIN PS_UN_IBAN_COUNTRY C ON C.COUNTRY = B.COUNTRY)
WHERE A.SETID = 'UNUNI'
  AND A.VENDOR_STATUS = 'A'
  AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_VNDR_BANK_ACCT B_ED WHERE B.SETID = B_ED.SETID AND B.VENDOR_ID = B_ED.VENDOR_ID AND B.VNDR_LOC = B_ED.VNDR_LOC AND B_ED.EFFDT <= SYSDATE) OR B.EFFDT IS NULL)
ORDER BY 1; 

SELECT * FROM PS_BANK_AR_DRPT_VW WHERE BUSINESS_UNIT LIKE '6%';
SELECT * FROM PS_BANK_AR_BD_VW WHERE SETID = 'SHARE';

SELECT * FROM PS_VOUCHER_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00015148'
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00005171'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND CNTRCT_SETID = '600UU' AND CNTRCT_ID LIKE '%834'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%04959'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%04959'

--Find vouchers that need to be matched
SELECT * FROM PS_VCHR_MM_VW 
WHERE BUSINESS_UNIT LIKE '6%' 
  AND MATCH_STATUS_VCHR <> 'M'
ORDER BY 1,2

--Contract Document Status
SELECT * FROM PS_PO_LNDSCNTRQ_VW WHERE CNTRCT_SETID LIKE '6%'
SELECT * FROM PS_PO_PAYVCPOLN_VW WHERE CNTRCT_SETID = '600UU' AND CNTRCT_ID LIKE '%834'
SELECT * FROM PS_PO_PAYVCNTRC_VW WHERE CNTRCT_SETID = '600UU' AND CNTRCT_ID LIKE '%834'
SELECT * FROM PS_PRCR_DS_CNT_VW WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%834'

--Document Status for Vendor
SELECT DISTINCT PL.CNTRCT_SETID, PL.CNTRCT_ID, PD.BUSINESS_UNIT_REQ AS BU_REQ, PD.REQ_ID, PL.BUSINESS_UNIT AS BU_PO, PL.PO_ID,
       PD.CURRENCY_CD,
       (SELECT SUM(MERCHANDISE_AMT) FROM PS_PO_LINE_DISTRIB DIST WHERE DIST.BUSINESS_UNIT = PD.BUSINESS_UNIT AND DIST.PO_ID = PD.PO_ID) AS MERCH_AMT,
       PD.CURRENCY_CD_BASE,    
       (SELECT SUM(MERCH_AMT_BSE) FROM PS_PO_LINE_DISTRIB D WHERE D.BUSINESS_UNIT = PD.BUSINESS_UNIT AND D.PO_ID = PD.PO_ID) AS MERCH_AMT_BSE
FROM PS_PO_LINE_DISTRIB PD, PS_PO_LINE PL 
WHERE PL.BUSINESS_UNIT = PD.BUSINESS_UNIT 
  AND PL.PO_ID = PD.PO_ID 
  AND PL.LINE_NBR = PD.LINE_NBR
  AND PL.BUSINESS_UNIT LIKE '6%'
  AND EXISTS (SELECT 'X' FROM PS_PO_HDR HDR 
              WHERE HDR.BUSINESS_UNIT = PL.BUSINESS_UNIT 
                AND HDR.PO_ID = PL.PO_ID
                AND PO_STATUS <> 'X' 
                AND HDR.VENDOR_SETID = 'UNUNI' 
                AND HDR.VENDOR_ID = '0000005935')

--Audit Vendor
SELECT * FROM PS_AUDIT_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID LIKE '%5935' ORDER BY 2;

SELECT * FROM PS_PYMNT_ADVICE WHERE BANK_SETID = 'SHARE' AND BANK_CD = '60002' AND VENDOR_ID = '0000005935';
SELECT * FROM PS_AP_VCHR_LN_SUM WHERE VENDOR_SETID = 'UNUNI' AND VENDOR_ID = '0000005935';
SELECT * FROM PS_VCHR_MTCH_DETLS WHERE VENDOR_SETID = 'UNUNI' AND VENDOR_ID = '0000005935';

--Complete Vendor Payout Details (Salary, DSA, F10, Salary Adv, Home Leave etc)
SELECT DISTINCT S.SETID, VCHR.BUSINESS_UNIT AS BU_VCHR, VCHR.VOUCHER_ID, VCHR.INVOICE_ID, 
       TO_CHAR(VCHR.INVOICE_DT, 'YYYY') AS INV_YEAR, TO_CHAR(VCHR.INVOICE_DT, 'MM') AS INV_MTH, TO_CHAR(VCHR.INVOICE_DT, 'DD') AS INV_DAY, 
       PV.BANK_CD, PV.BANK_ACCT_KEY, PV.PYMNT_ID, F.PYMNT_ID_REF, X1.XLATLONGNAME AS POST_STATUS_AP,
       V.DESCR, TO_CHAR(F.PYMNT_DT, 'YYYY') AS PYMNT_YEAR, TO_CHAR(F.PYMNT_DT, 'MM') AS PYMNT_MTH, TO_CHAR(F.PYMNT_DT, 'DD') AS PYMNT_DAY,
       V.QTY_VCHR, V.UNIT_OF_MEASURE AS UOM, V.BUSINESS_UNIT_PO AS BU_PO, V.PO_ID, V.VENDOR_ID, VEN.NAME1, 
       V.VNDR_LOC, X2.XLATLONGNAME AS VNDR_STATUS, X3.XLATLONGNAME AS VNDR_CLASS,
       POL.CNTRCT_SETID, POL.CNTRCT_ID, PD.BUSINESS_UNIT_REQ AS BU_REQ, PD.REQ_ID, VCHR.RATE_MULT, VCHR.RATE_DIV,
       V.CURRENCY_CD, 
       (SELECT SUM(MERCHANDISE_AMT) FROM PS_VOUCHER_LINE LN WHERE LN.BUSINESS_UNIT = V.BUSINESS_UNIT AND LN.VOUCHER_ID = V.VOUCHER_ID 
                                                                                                           AND LN.VOUCHER_LINE_NUM = V.VOUCHER_LINE_NUM) AS V_AMT,
       V.BASE_CURRENCY,    
       (SELECT SUM(MERCH_AMT_BSE) FROM PS_VOUCHER_LINE L WHERE L.BUSINESS_UNIT = V.BUSINESS_UNIT AND L.VOUCHER_ID = V.VOUCHER_ID 
                                                                                                     AND L.VOUCHER_LINE_NUM = V.VOUCHER_LINE_NUM) AS V_AMT_BSE,
       F.PYMNT_AMT, F.CURRENCY_PYMNT, X4.XLATLONGNAME AS PYMNT_STATUS
FROM PS_VOUCHER_LINE V, PS_VENDOR VEN, PS_VOUCHER VCHR, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X4, 
     PS_PO_LINE POL, PS_PO_LINE_DISTRIB PD, PS_PYMNT_VCHR_XREF PV, PS_PAYMENT_TBL F, PS_SET_CNTRL_REC S
WHERE VCHR.BUSINESS_UNIT = V.BUSINESS_UNIT
  AND VCHR.VOUCHER_ID = V.VOUCHER_ID
  --Voucher Line AND Contract Header
  AND S.SETCNTRLVALUE = V.BUSINESS_UNIT 
  AND S.RECNAME = 'CNTRCT_HDR'  
  --Voucher AND XREF
  AND VCHR.BUSINESS_UNIT = PV.BUSINESS_UNIT 
  AND VCHR.VOUCHER_ID = PV.VOUCHER_ID
  --AND PV.PYMNT_SELCT_STATUS = 'P'
  --Voucher AND Vendor  
  AND VCHR.VENDOR_SETID = VEN.SETID
  AND VCHR.VENDOR_ID = VEN.VENDOR_ID
  AND VCHR.ENTRY_STATUS NOT IN ('T', 'X')
  --Voucher Line AND PO Line
  AND V.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT (+)
  AND V.PO_ID = POL.PO_ID (+)
  AND V.LINE_NBR = POL.LINE_NBR (+)
  AND 'X' <> POL.CANCEL_STATUS (+)
  --Voucher Line AND PO Distrib
  AND V.BUSINESS_UNIT_PO = PD.BUSINESS_UNIT (+)
  AND V.PO_ID = PD.PO_ID (+)
  AND V.LINE_NBR = PD.LINE_NBR (+)  
  --XREF AND Payment
  AND PV.BANK_SETID = F.BANK_SETID (+)
  AND PV.BANK_CD= F.BANK_CD (+)
  AND PV.BANK_ACCT_KEY = F.BANK_ACCT_KEY (+)
  AND PV.PYMNT_ID = F.PYMNT_ID (+)  
  --Xlat AND XREF
  AND X1.FIELDNAME = 'POST_STATUS_AP'
  AND X1.FIELDVALUE = PV.POST_STATUS_AP
  --Xlat AND Vendor
  AND X2.FIELDNAME = 'VENDOR_STATUS'
  AND X2.FIELDVALUE = VEN.VENDOR_STATUS
  AND X3.FIELDNAME = 'VENDOR_CLASS'
  AND X3.FIELDVALUE = VEN.VENDOR_CLASS
  --Xlat AND Payment
  AND X4.FIELDNAME  (+) = 'PYMNT_STATUS'
  AND X4.FIELDVALUE (+) = F.PYMNT_STATUS
  --Input conditions
  AND VCHR.BUSINESS_UNIT LIKE '6%'
  --AND V.VENDOR_ID = '0000004677'
  --My Vendor ID
  AND VEN.SETID = 'UNUNI'
  AND V.VENDOR_ID = '0000005935'
  --AND V.VENDOR_ID = '0000000157'
  --AND V.VENDOR_ID = '0000003932'
  --AND V.VENDOR_ID = '0000000001'
  --AND V.VENDOR_ID = '0000007608'
  --AND V.VENDOR_ID = '0000000627'
  --UNIFI Vendor
  --AND V.VENDOR_ID = '0000000751'
  --AND V.VENDOR_ID = '0000008281'
  --AND V.VENDOR_ID = '0000008806' -- La Paz Management Services
  --AND V.VENDOR_ID = '0000000621'
ORDER BY VCHR.BUSINESS_UNIT, VCHR.VOUCHER_ID, TO_CHAR(VCHR.INVOICE_DT, 'YYYY'), TO_CHAR(VCHR.INVOICE_DT, 'MM');

--Check Exchange Rate
SELECT * FROM PS_RT_RATE_TBL 
WHERE RT_RATE_INDEX = 'UNORE' 
    AND TO_CHAR(EFFDT, 'YYYY') = '2014'
    AND TO_CHAR(EFFDT, 'MM') = :1
    AND FROM_CUR = 'MYR'

--Vendor Information by Vendor Class
SELECT V.VENDOR_CLASS, X1.XLATLONGNAME, COUNT(1) "Vendor Count" 
FROM PS_VENDOR V, PSXLATITEM X1
WHERE V.SETID = 'UNUNI'
     AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
     AND X1.FIELDVALUE (+) = V.VENDOR_CLASS
     AND X1.EFF_STATUS (+)  = 'A' 
GROUP BY V.VENDOR_CLASS, X1.XLATLONGNAME
ORDER BY V.VENDOR_CLASS, X1.XLATLONGNAME;

--Vendor Information by Vendor Class and Status
SELECT V.VENDOR_CLASS, X1.XLATLONGNAME "Vendor Class", V.VENDOR_STATUS, X2.XLATLONGNAME "Vendor Status", COUNT(1) "Vendor Count" 
FROM PS_VENDOR V, PSXLATITEM X1, PSXLATITEM X2
WHERE V.SETID = 'UNUNI'
     AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
     AND X1.FIELDVALUE (+) = V.VENDOR_CLASS
     AND X1.EFF_STATUS (+)  = 'A' 
     AND X2.FIELDNAME (+) = 'VENDOR_STATUS'
     AND X2.FIELDVALUE (+) = V.VENDOR_STATUS
     AND X2.EFF_STATUS (+)  = 'A'
GROUP BY V.VENDOR_CLASS, X1.XLATLONGNAME, V.VENDOR_STATUS, X2.XLATLONGNAME
ORDER BY V.VENDOR_CLASS, X1.XLATLONGNAME;

--Vendor Information by Vendor Class, Status and Country
--Added UN custom Vendor table to inlcude Country
SELECT UV.UN_NATIONALITY, V.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS_DESCR, V.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS_DESCR, COUNT(1) "Vendor Count" 
FROM PS_VENDOR V, PS_UN_VENDOR UV, PSXLATITEM X1, PSXLATITEM X2
WHERE V.SETID = 'UNUNI'
  AND UV.SETID = V.SETID 
  AND UV.VENDOR_ID = V.VENDOR_ID
  AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
  AND X1.FIELDVALUE (+) = V.VENDOR_CLASS
  AND X1.EFF_STATUS (+)  = 'A' 
  AND X2.FIELDNAME (+) = 'VENDOR_STATUS'
  AND X2.FIELDVALUE (+) = V.VENDOR_STATUS
  AND X2.EFF_STATUS (+)  = 'A'
GROUP BY UV.UN_NATIONALITY, V.VENDOR_CLASS, X1.XLATLONGNAME, V.VENDOR_STATUS, X2.XLATLONGNAME
ORDER BY UV.UN_NATIONALITY, V.VENDOR_CLASS, X1.XLATLONGNAME;

--PPs Vendor Register
--Experimental Version 1
SELECT DISTINCT S.SETID, VCHR.BUSINESS_UNIT AS BU_VCHR, VCHR.VOUCHER_ID, VCHR.INVOICE_ID, 
       TO_CHAR(VCHR.INVOICE_DT, 'YYYY') AS INV_YEAR, TO_CHAR(VCHR.INVOICE_DT, 'MM') AS INV_MTH, TO_CHAR(VCHR.INVOICE_DT, 'DD') AS INV_DAY, 
       PV.BANK_CD, PV.BANK_ACCT_KEY, PV.PYMNT_ID, F.PYMNT_ID_REF, X1.XLATLONGNAME AS POST_STATUS_AP,
       V.DESCR, TO_CHAR(F.PYMNT_DT, 'YYYY') AS PYMNT_YEAR, TO_CHAR(F.PYMNT_DT, 'MM') AS PYMNT_MTH, TO_CHAR(F.PYMNT_DT, 'DD') AS PYMNT_DAY,
       V.QTY_VCHR, V.UNIT_OF_MEASURE AS UOM, V.BUSINESS_UNIT_PO AS BU_PO, V.PO_ID, V.VENDOR_ID, VEN.NAME1, 
       V.VNDR_LOC, X2.XLATLONGNAME AS VNDR_STATUS, X3.XLATLONGNAME AS VNDR_CLASS,
       POL.CNTRCT_SETID, POL.CNTRCT_ID, PD.BUSINESS_UNIT_REQ AS BU_REQ, PD.REQ_ID, VCHR.RATE_MULT, VCHR.RATE_DIV,
       V.CURRENCY_CD, 
       (SELECT SUM(MERCHANDISE_AMT) FROM PS_VOUCHER_LINE LN WHERE LN.BUSINESS_UNIT = V.BUSINESS_UNIT AND LN.VOUCHER_ID = V.VOUCHER_ID 
                                                                                                           AND LN.VOUCHER_LINE_NUM = V.VOUCHER_LINE_NUM) AS V_AMT,
       V.BASE_CURRENCY,    
       (SELECT SUM(MERCH_AMT_BSE) FROM PS_VOUCHER_LINE L WHERE L.BUSINESS_UNIT = V.BUSINESS_UNIT AND L.VOUCHER_ID = V.VOUCHER_ID 
                                                                                                     AND L.VOUCHER_LINE_NUM = V.VOUCHER_LINE_NUM) AS V_AMT_BSE,
       F.PYMNT_AMT, F.CURRENCY_PYMNT, X4.XLATLONGNAME AS PYMNT_STATUS,
       PV.VNDR_LOC, PV.REMIT_ADDR_SEQ_NUM, PV.PYMNT_MESSAGE,
       F.BRANCH_ID, F.BRANCH_NAME, F.BANK_ACCOUNT_NUM, F.BUSINESS_UNIT_GL, F.CREATION_DT, F.OPRID, F.PYMNT_METHOD, F.PYMNT_RECONCILE_DT, F.ACCOUNTING_DT, F.PAY_CYCLE, F.PAY_CYCLE_SEQ_NUM, 
       F.RECON_TYPE, F.RECONCILE_OPRID, F.RECON_STATUS, 
       F.BNK_ID_NBR, F.DFI_ID_NUM, F.DFI_ID_QUAL, F.REMIT_BANK_ACCOUNT, F.REMIT_BRANCH_ID, F.REMIT_CHECK_DIGIT, F.COUNTRY, F.ADDRESS1, F.CITY, F.MICR_LINE, F.EFT_LAYOUT_CD
FROM ((PS_VENDOR VEN LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'VENDOR_STATUS' AND X2.FIELDVALUE = VEN.VENDOR_STATUS)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'VENDOR_CLASS' AND X3.FIELDVALUE = VEN.VENDOR_CLASS),
     ((((PS_VOUCHER VCHR LEFT OUTER JOIN PS_PYMNT_VCHR_XREF PV ON VCHR.BUSINESS_UNIT = PV.BUSINESS_UNIT AND VCHR.VOUCHER_ID = PV.VOUCHER_ID)
       LEFT OUTER JOIN PS_PAYMENT_TBL F ON PV.BANK_SETID = F.BANK_SETID AND PV.BANK_CD= F.BANK_CD AND PV.BANK_ACCT_KEY = F.BANK_ACCT_KEY AND PV.PYMNT_ID = F.PYMNT_ID)
       LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'POST_STATUS_AP' AND X1.FIELDVALUE = PV.POST_STATUS_AP)
       LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PYMNT_STATUS' AND X4.FIELDVALUE = F.PYMNT_STATUS),
     ((PS_VOUCHER_LINE V LEFT OUTER JOIN PS_PO_LINE POL ON V.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND V.PO_ID = POL.PO_ID AND V.LINE_NBR = POL.LINE_NBR)
       LEFT OUTER JOIN PS_PO_LINE_DISTRIB PD ON POL.BUSINESS_UNIT = PD.BUSINESS_UNIT AND POL.PO_ID = PD.PO_ID AND POL.LINE_NBR = PD.LINE_NBR), 
     PS_SET_CNTRL_REC S
WHERE VCHR.BUSINESS_UNIT = V.BUSINESS_UNIT
  AND VCHR.VOUCHER_ID = V.VOUCHER_ID
  --Voucher Line AND Contract Header
  AND S.SETCNTRLVALUE = V.BUSINESS_UNIT 
  AND S.RECNAME = 'CNTRCT_HDR'
  --Voucher AND Vendor
  AND VCHR.VENDOR_SETID = VEN.SETID
  AND VCHR.VENDOR_ID = VEN.VENDOR_ID
  AND VCHR.ENTRY_STATUS NOT IN ('T', 'X')
  --Input conditions
  AND VCHR.BUSINESS_UNIT LIKE '6%'
  AND VEN.SETID = 'UNUNI'
  --AND V.VENDOR_ID = '0000005935'
  AND V.VENDOR_ID = '0000001269'
ORDER BY V.VENDOR_ID, VCHR.BUSINESS_UNIT, VCHR.VOUCHER_ID, TO_CHAR(VCHR.INVOICE_DT, 'YYYY'), TO_CHAR(VCHR.INVOICE_DT, 'MM');

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'VENDOR_CLASS';

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID IN ('0000000117', '0000005935');
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_CLASS = 'T' ORDER BY VENDOR_ID;
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'VENDOR_CLASS' AND EFF_STATUS = 'A';
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID IN ('0000000270');

--PO Spend by category
SELECT TO_CHAR(A.PO_DT, 'YYYY') AS FISCAL_YEAR, G.CATEGORY_CD || '-' || G.DESCR, D.CURRENCY_CD_BASE, SUM(D.MERCH_AMT_BSE) AS AMOUNT
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_DISTRIB D, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.PO_ID = D.PO_ID
  AND B.LINE_NBR = D.LINE_NBR
  AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND G.CATEGORY_ID = B.CATEGORY_ID 
  AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
          AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE) 
  AND G.SETID = F.SETID 
  AND F.RECNAME = 'ITM_CAT_TBL'
  AND A.BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(A.PO_DT, 'YYYY') = '2012'
  AND A.PO_STATUS NOT IN ('X', 'PA', 'PX')
  AND B.CANCEL_STATUS NOT IN ('H', 'X')
  AND D.DISTRIB_LN_STATUS NOT IN ('X')
GROUP BY TO_CHAR(A.PO_DT, 'YYYY'), G.CATEGORY_CD, G.DESCR, D.CURRENCY_CD_BASE
ORDER BY 1, 2;

--Verification Query
SELECT D.CURRENCY_CD_BASE, SUM(D.MERCH_AMT_BSE) AS AMOUNT FROM PS_PO_LINE_DISTRIB D WHERE D.BUSINESS_UNIT LIKE '6%' AND D.DISTRIB_LN_STATUS NOT IN ('X') 
AND D.PO_ID IN  
(SELECT A.PO_ID FROM PS_PO_HDR A 
WHERE D.BUSINESS_UNIT = A.BUSINESS_UNIT
    AND D.PO_ID = A.PO_ID
    AND A.BUSINESS_UNIT LIKE '6%' 
    AND TO_CHAR(A.PO_DT, 'YYYY') = '2012'
    AND A.PO_STATUS NOT IN ('X', 'PA', 'PX') 
    AND A.PO_ID IN 
    (SELECT B.PO_ID FROM PS_PO_LINE B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.PO_ID = B.PO_ID AND B.LINE_NBR = D.LINE_NBR AND B.BUSINESS_UNIT LIKE '6%' AND B.CATEGORY_ID = '00016' AND B.CANCEL_STATUS NOT IN ('H', 'X')))
GROUP BY D.CURRENCY_CD_BASE

SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4424' 

--Donor Queries
SELECT DISTINCT IA.DEPOSIT_BU, IA.DEPOSIT_ID, IA.PAYMENT_SEQ_NUM, IA.PAYMENT_ID, IA.BUSINESS_UNIT, IA.CUST_ID, C.NAME1, C.CURRENCY_CD AS CUST_CURR, C.SPNSR_TYPE, IA.POST_DT, IA.GROUP_BU, IA.GROUP_ID, IA.REAL_GAIN_LOSS, IA.ENTRY_TYPE, IA.PC_DISTRIB_STATUS,          
       DC.PAY_WS_TYPE, DC.OPRID, DC.BANK_SETID, DC.BANK_CD, DC.BANK_ACCT_KEY, DC.BANK_ACCOUNT_NUM, DC.CONTROL_CURRENCY, DC.CONTROL_AMT,  DC.ENTERED_AMT, DC.POSTED_TOTAL, DC.DEPOSIT_TYPE,
       X3.XLATLONGNAME AS GL_DISTRIB_STATUS, X2.XLATLONGNAME AS DEPOSIT_STATUS, DST.LEDGER_GROUP, DST.LEDGER, DST.BUSINESS_UNIT_GL, DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.CHARTFIELD2, DST.PROJECT_ID,
       DST.CURRENCY_CD, DST.MONETARY_AMOUNT, DST.JOURNAL_ID, DST.APPL_JRNL_ID, DST.FOREIGN_CURRENCY, DST.FOREIGN_AMOUNT, DST.FISCAL_YEAR, DST.ACCOUNTING_PERIOD,  HDR.JRNL_TOTAL_DEBITS, HDR.JRNL_TOT_CREDITS, X1.XLATLONGNAME AS KK_AMOUNT_TYPE,
       ART.BUDGET_HDR_STATUS, ART.RATE_MULT, ART.RATE_DIV 
FROM PS_ITEM_ACTIVITY IA, PS_DEPOSIT_CONTROL DC, PS_ITEM_DST DST, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_JRNL_HEADER HDR, PS_CUSTOMER C, PS_AR_CC_TRAN_HDR ART
WHERE  
  --ITEM_ACTIVITY AND DEPOSIT_CONTROL
      IA.DEPOSIT_BU = DC.DEPOSIT_BU
  AND IA.DEPOSIT_ID = DC.DEPOSIT_ID
  --ITEM_ACTIVITY AND ITEM_DST
  AND IA.BUSINESS_UNIT = DST.BUSINESS_UNIT
  AND IA.CUST_ID = DST.CUST_ID
  AND IA.ITEM = DST.ITEM
  AND IA.ITEM_LINE = DST.ITEM_LINE
  AND IA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
  --ITEM_ACTIVITY AND CUSTOMER
  AND C.SETID = 'UNUNI'
  AND IA.CUST_ID = C.CUST_ID
  --XLAT X1
  AND X1.FIELDNAME = 'KK_AMOUNT_TYPE'
  AND X1.FIELDVALUE = HDR.KK_AMOUNT_TYPE  
  --XLAT X2
  AND X2.FIELDNAME = 'DEPOSIT_STATUS'
  AND X2.FIELDVALUE = DC.DEPOSIT_STATUS
  --XLAT X3
  AND X3.FIELDNAME = 'GL_DISTRIB_STATUS'
  AND X3.FIELDVALUE = DC.GL_DISTRIB_STATUS
  --ITEM_DST AND JRNL_HDR
  AND DST.BUSINESS_UNIT_GL = HDR.BUSINESS_UNIT
  AND DST.JOURNAL_ID = HDR.JOURNAL_ID
  --ITEM_ACTIVITY AND AR Tran
  AND IA.CUST_ID =  ART.CUST_ID (+)
  AND IA.ITEM =  ART.ITEM (+)
  AND IA.ITEM_LINE =  ART.ITEM_LINE (+)
  AND IA.ITEM_SEQ_NUM =  ART.ITEM_SEQ_NUM (+) 
  --VALUES
  --AND DST.ACCOUNT <> '15100'
  --14070 --Unapplied 
  AND DST.ACCOUNT IN ('51005')
  AND IA.BUSINESS_UNIT LIKE '6%' 
  --AND IA.CUST_ID = '10141'
  --AND IA.PC_DISTRIB_STATUS = 'D'  
ORDER BY 1,2,3,6;

SELECT * FROM PS_AR_CC_TRAN_HDR WHERE BUSINESS_UNIT LIKE '6%'

SELECT * FROM PS_GL_ACCOUNT_TBL WHERE ACCOUNT IN ('14070', '55030', '51005', '56025', '55035')
SELECT * FROM PS_GL_ACCOUNT_TBL WHERE UPPER(DESCR) LIKE '%RECEIVABLE%'

SELECT * FROM PSCONTDEFN where CONTTYPE = 8;

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000001258'
SELECT * FROM PS_VNDR_BANK_ACCT WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000001258'

SELECT * FROM PS_CNTRCT_HDR WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%000963'
SELECT * FROM PS_CNTRCT_LINE WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%000963'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4514'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4926'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4926'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = '27854077'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_PO_APPROVAL WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005049'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005049'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005049'

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID LIKE '%15544'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID LIKE '%15544'
SELECT * FROM PS_PROJECT WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00074452'

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND UPPER(NAME1) LIKE '%JESSICA%'
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND UPPER(NAME1) LIKE '%MEI%'

SELECT H.BUSINESS_UNIT, H.REQ_ID, H.REQUESTOR_ID, H.REQ_DT
FROM PS_REQ_HDR H  
WHERE H.BUSINESS_UNIT = '600UU'
    AND H.IN_PROCESS_FLG = 'N'  
    AND H.HOLD_STATUS = 'N'  
    AND H.BUDGET_HDR_STATUS = 'V'  
    AND EXISTS (SELECT 'X' FROM PS_REQ_LINE L, PS_REQ_LINE_SHIP S, PS_REQ_LN_DISTRIB D 
    WHERE H.BUSINESS_UNIT = L.BUSINESS_UNIT  
        AND H.REQ_ID = L.REQ_ID  
        AND L.BUSINESS_UNIT = S.BUSINESS_UNIT  
        AND L.REQ_ID = S.REQ_ID  
        AND L.LINE_NBR = S.LINE_NBR  
        AND S.BUSINESS_UNIT = D.BUSINESS_UNIT  
        AND S.REQ_ID = D.REQ_ID  
        AND S.LINE_NBR = D.LINE_NBR  
        AND S.SCHED_NBR = D.SCHED_NBR  
        AND L.RFQ_IND = 'N'  
        AND L.SOURCE_DATE <= SYSDATE  
        AND L.IN_PROCESS_FLG = 'N'  
        AND L.SOURCE_STATUS = 'A'  
        AND L.CURR_STATUS = 'A'
        AND L.INVENTORY_SRC_FLG = 'N'
        AND S.BAL_STATUS = 'I'
       AND (D.QTY_OPEN > 0 OR D.AMT_OPEN > 0))

SELECT MATCH_STATUS_VCHR, A.* FROM PS_VOUCHER A WHERE A.BUSINESS_UNIT = '600UU' AND A.VOUCHER_ID LIKE '%18160'
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'MATCH_STATUS_VCHR'

--PO Line 6 Amount was editable even after it was dispatched - This is because Line 6 is Amount Only
SELECT AMT_ONLY_FLG, CANCEL_STATUS, A.* FROM PS_PO_LINE A WHERE A.BUSINESS_UNIT = '600UU' AND A.PO_ID = '0000004540'

--Revaluation
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'FSPCCURR'
SELECT * FROM PS_CURR_REQUEST WHERE RUN_CNTL_ID = 'sk'

SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '611UU' AND CNTRCT_SETID = '611UU' AND CNTRCT_ID LIKE '%000180'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '611UU' AND PO_ID = '0000001571'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '611UU' AND PO_ID = '0000001571';

--Requisitions Ready for Approval
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.APPROVAL_TYPE,  A.APPROVAL_STATUS,  B.REQ_STATUS, B.HOLD_STATUS
FROM PS_REQ_APPROVAL A, PS_REQ_HDR B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.REQ_ID = B.REQ_ID 
    AND A.APPROVAL_TYPE = 'AMT'
    AND A.APPROVAL_STATUS <> 'A' 
    AND B.REQ_STATUS = 'P' 
    AND B.HOLD_STATUS = 'N'
    AND A.BUSINESS_UNIT LIKE '6%'
    --AND A.REQ_ID LIKE '%1342'
ORDER BY 1,2;
 
--Contracts
SELECT H.SETID, H.CNTRCT_ID, H.TRANS_DATE, H.BUSINESS_UNIT, H.SEQ_NUM, H.RELEASE_STATUS, H.VNDR_LOC, H.BUYER_ID, O.OPRDEFNDESC, 0, H.CURRENCY_CD 
FROM PS_CNTRCT_RLS_HDR H, PSOPRDEFN O 
WHERE --H.RELEASE_TYPE = 'P' 
     AND H.BUYER_ID = O.OPRID

--UNU Contracts which are still not CLOSED or COMPLETED
SELECT R.SETID, R.CNTRCT_ID, R.BUSINESS_UNIT, HDR.CNTRCT_BEGIN_DT, HDR.CNTRCT_EXPIRE_DT, R.TRANS_DATE, R.SEQ_NUM, 
            R.RELEASE_TYPE, X1.XLATLONGNAME AS RELEASE_STATUS, R.VNDR_LOC, R.BUYER_ID, 
            R.ORIGIN, R.OPRID, R.BILL_LOCATION, R.CURRENCY_CD, R.RT_TYPE, R.RATE_DATE, R.VENDOR_SETID, R.VENDOR_ID,  V.NAME1, R.DESCR, R.PROCESS_INSTANCE
FROM PS_CNTRCT_RLS_HDR R, PS_CNTRCT_HDR HDR, PS_VENDOR V, PSXLATITEM X1
WHERE R.SETID = HDR.SETID
     AND R.CNTRCT_ID = HDR.CNTRCT_ID
     --Vendor
     AND V.SETID = HDR.VENDOR_SETID
     AND V.VENDOR_ID = HDR.VENDOR_ID
    --XLAT X1
    AND X1.FIELDNAME = 'RELEASE_STATUS'
    AND X1.FIELDVALUE = R.RELEASE_STATUS 
    AND R.SETID LIKE '6%'
    AND TO_CHAR(HDR.CNTRCT_EXPIRE_DT, 'YYYY') <= 2020 AND TO_CHAR(HDR.CNTRCT_EXPIRE_DT, 'MM') <=  12
    AND R.RELEASE_STATUS NOT IN ('C', 'CL')

--Contracts going to expire    
SELECT HDR.SETID, HDR.CNTRCT_ID, HDR.VENDOR_SETID, HDR.VENDOR_ID, V.NAME1, X3.XLATLONGNAME AS VENDOR_STATUS, X2.XLATLONGNAME AS VENDOR_CLASS, 
            X1.XLATLONGNAME AS CNTRCT_STATUS, HDR.CNTRCT_TYPE, HDR.DESCR,
            HDR.CNTRCT_BEGIN_DT, HDR.CNTRCT_EXPIRE_DT,  HDR.CURRENCY_CD,  HDR.ENTERED_DT, HDR.OPRID_ENTERED_BY
FROM PS_CNTRCT_HDR HDR, PS_VENDOR V, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE --Vendor
            V.SETID = HDR.VENDOR_SETID
     AND V.VENDOR_ID = HDR.VENDOR_ID
     --XLAT X1
    AND X1.FIELDNAME = 'CNTRCT_STATUS'
    AND X1.FIELDVALUE = HDR.CNTRCT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'VENDOR_CLASS'
    AND X2.FIELDVALUE = V.VENDOR_CLASS
     --XLAT X3
    AND X3.FIELDNAME = 'VENDOR_STATUS'
    AND X3.FIELDVALUE = V.VENDOR_STATUS
     AND HDR.SETID LIKE '6%'
     AND HDR.CNTRCT_EXPIRE_DT between TO_DATE('01/07/2012', 'DD/MM/YYYY') AND TO_DATE('31/12/2012', 'DD/MM/YYYY')
ORDER BY 1, 2 

SELECT * FROM PS_PROJECT WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID IN ('00064338','00064373')

SELECT * FROM PS_PC_PRJ_STATPATH
SELECT * FROM PS_PROJ_STATUS_TBL

SELECT PC.BUSINESS_UNIT, PC.PROJECT_TYPE, PC.PROJECT_STATUS, PC.PROJECT_STATUS_TO 
FROM PS_PC_PRJ_STATPATH PC
WHERE PC.BUSINESS_UNIT = 'UNUNI'
    AND PROJECT_TYPE IN (SELECT PROJECT_TYPE FROM PS_PROJ_TYPE_TBL WHERE SETID = 'UNUNI' AND PC_STATUS_PATH_FLG = 'Y') 
    AND PC.PROJECT_TYPE = 'ORGSP'

SELECT A.PC_STATUS_PATH_FLG 
FROM PS_PROJ_TYPE_TBL A, PS_SET_CNTRL_REC B 
WHERE A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_PROJ_TYPE_TBL A_ED WHERE A.SETID = A_ED.SETID 
                                                                     AND A.PROJECT_TYPE = A_ED.PROJECT_TYPE 
                                                                     AND A_ED.EFFDT <= SYSDATE) 
           AND A.PROJECT_TYPE = 'ORGSP' 
           AND B.SETID = A.SETID 
           AND B.RECNAME = 'PROJ_TYPE_TBL' 
           AND B.SETCNTRLVALUE = 'UNUNI'


SELECT A.BUSINESS_UNIT, A.PROJECT_TYPE, A.PROJECT_STATUS, A.PROJECT_STATUS_TO, B.DESCR 
FROM PS_PC_PRJ_STATPATH A, PS_PROJ_STATUS_TBL B, PS_SET_CNTRL_REC C
WHERE B.EFF_STATUS = 'A' 
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_PROJ_STATUS_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.PROJECT_STATUS = B_ED.PROJECT_STATUS 
                                                                    AND B_ED.EFFDT <= SYSDATE) 
   AND C.SETID = B.SETID 
   AND C.RECNAME = 'PROJ_STATUS_TBL' 
   AND C.SETCNTRLVALUE = A.BUSINESS_UNIT 
   AND A.PROJECT_STATUS_TO = B.PROJECT_STATUS
   AND A.BUSINESS_UNIT = 'UNUNI'
   AND A.PROJECT_TYPE = 'ORGSP'
ORDER BY 1,2,3

SELECT * FROM PS_PROJ_TYPE_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_VCHRBLD'
SELECT * FROM PS_SOURCE_TBL
--Check Journal Status for 2012
SELECT JRNL_HDR_STATUS, SOURCE, TO_CHAR(JOURNAL_DATE, 'YYYY') AS JRNL_DT, COUNT(1) 
FROM PS_JRNL_HEADER 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND TO_CHAR(JOURNAL_DATE, 'YYYY') = '2012' 
    --AND SOURCE IN ('AR', 'AP')
GROUP BY JRNL_HDR_STATUS, SOURCE, TO_CHAR(JOURNAL_DATE, 'YYYY')
ORDER BY 1,2

--UNDP's commitment journals Run Control ID
SELECT * FROM PS_JRNLGEN_REQUEST WHERE ACCTG_DEF_NAME = 'GENERIC';

SELECT * FROM PS_JRNLGEN_REQUEST WHERE OPRID = 'CMBATCH'
SELECT * FROM PS_JRNLGEN_REQUEST WHERE RUN_CNTL_ID = 'AP_GEN_JOURNALS'
SELECT * FROM PS_JRNL_EDIT_REQ WHERE OPRID = 'CMBATCH'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('AP04422943', 'AP04419357', 'AP04423066', 'AP04420967')
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID LIKE 'FXR%'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'GLPPPOST'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28253468

--Contracts expired As of Today with Release information
SELECT HDR.SETID, HDR.CNTRCT_ID, HDR.VENDOR_SETID, HDR.VENDOR_ID, V.NAME1, X3.XLATLONGNAME AS VENDOR_STATUS, X2.XLATLONGNAME AS VENDOR_CLASS, 
            X1.XLATLONGNAME AS CNTRCT_STATUS, HDR.CNTRCT_TYPE, HDR.DESCR,
            HDR.CNTRCT_BEGIN_DT, HDR.CNTRCT_EXPIRE_DT,  HDR.CURRENCY_CD,  HDR.ENTERED_DT, HDR.OPRID_ENTERED_BY,
            R.TRANS_DATE, R.SEQ_NUM, R.RELEASE_TYPE, X4.XLATLONGNAME AS RELEASE_STATUS, R.VNDR_LOC, R.BUYER_ID, 
            R.ORIGIN, R.OPRID, R.BILL_LOCATION, R.RT_TYPE, R.RATE_DATE, R.PROCESS_INSTANCE
FROM PS_CNTRCT_HDR HDR, PS_VENDOR V, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X4, PS_CNTRCT_RLS_HDR R
WHERE --Vendor
            V.SETID = HDR.VENDOR_SETID
     AND V.VENDOR_ID = HDR.VENDOR_ID
     --R and HDR
     AND R.SETID = HDR.SETID
     AND R.CNTRCT_ID = HDR.CNTRCT_ID
     --XLAT X1
    AND X1.FIELDNAME = 'CNTRCT_STATUS'
    AND X1.FIELDVALUE = HDR.CNTRCT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'VENDOR_CLASS'
    AND X2.FIELDVALUE = V.VENDOR_CLASS
     --XLAT X3
    AND X3.FIELDNAME = 'VENDOR_STATUS'
    AND X3.FIELDVALUE = V.VENDOR_STATUS
    --XLAT X4
    AND X4.FIELDNAME = 'RELEASE_STATUS'
    AND X4.FIELDVALUE = R.RELEASE_STATUS
     AND HDR.SETID LIKE '6%'
     AND HDR.CNTRCT_STATUS NOT IN ('C', 'X')
     AND HDR.CNTRCT_EXPIRE_DT <= SYSDATE 
ORDER BY 1, 2, R.SEQ_NUM

--Contracts expired As of Today
SELECT HDR.SETID, HDR.CNTRCT_ID, HDR.VENDOR_SETID, HDR.VENDOR_ID, V.NAME1, X3.XLATLONGNAME AS VENDOR_STATUS, X2.XLATLONGNAME AS VENDOR_CLASS, 
            X1.XLATLONGNAME AS CNTRCT_STATUS, HDR.CNTRCT_TYPE, HDR.DESCR,
            (SELECT SUM(AMT_LINE_RELEASED) FROM PS_CNTRCT_LINE L WHERE L.SETID = HDR.SETID AND L.CNTRCT_ID = HDR.CNTRCT_ID) AS C_AMT_RLSD,
            HDR.CNTRCT_BEGIN_DT, HDR.CNTRCT_EXPIRE_DT,  HDR.CURRENCY_CD,  HDR.ENTERED_DT, HDR.OPRID_ENTERED_BY, HDR.OPRID_APPROVED_BY
FROM PS_CNTRCT_HDR HDR, PS_VENDOR V, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE --Vendor
            V.SETID = HDR.VENDOR_SETID
     AND V.VENDOR_ID = HDR.VENDOR_ID    
     --XLAT X1
    AND X1.FIELDNAME = 'CNTRCT_STATUS'
    AND X1.FIELDVALUE = HDR.CNTRCT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'VENDOR_CLASS'
    AND X2.FIELDVALUE = V.VENDOR_CLASS
     --XLAT X3
    AND X3.FIELDNAME = 'VENDOR_STATUS'
    AND X3.FIELDVALUE = V.VENDOR_STATUS    
     AND HDR.SETID LIKE '6%'
     AND HDR.CNTRCT_STATUS NOT IN ('C', 'X')
     AND HDR.CNTRCT_EXPIRE_DT <= SYSDATE 
ORDER BY 1, 2

SELECT * FROM PS_CNTRCT_LINE WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%0000050'
SELECT * FROM PS_CNTRCT_LINE WHERE SETID LIKE '6%' AND LINE_STATUS <> 'O'
--Requisitions Pending Approval
SELECT A.BUSINESS_UNIT, A.REQ_ID, X2.XLATLONGNAME AS REQ_STATUS, B.REQ_DT, B.REQUESTOR_ID, B.CHNG_ORD_BATCH, 
            X1.XLATLONGNAME AS APPROVAL_STATUS
FROM PS_REQ_APPROVAL A, PS_REQ_HDR B, PSXLATITEM X1, PSXLATITEM X2
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.REQ_ID = B.REQ_ID 
    AND A.APPROVAL_TYPE = 'AMT' 
    AND A.APPROVAL_STATUS <> 'A' 
    AND B.REQ_STATUS = 'P' 
    AND B.HOLD_STATUS = 'N'
    --XLAT X1
    AND X1.FIELDNAME = 'APPROVAL_STATUS'
    AND X1.FIELDVALUE = APPROVAL_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'REQ_STATUS'
    AND X2.FIELDVALUE = REQ_STATUS    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND TO_CHAR(B.REQ_DT, 'YYYY') < 2014
ORDER BY 1,2,4;

SELECT A.BUSINESS_UNIT, A.APPROVAL_STATUS, TO_CHAR(B.REQ_DT, 'YYYY') AS YEAR, COUNT(1) 
FROM PS_REQ_APPROVAL A, PS_REQ_HDR B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.REQ_ID = B.REQ_ID 
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.APPROVAL_STATUS <> 'A'
GROUP BY A.BUSINESS_UNIT, A.APPROVAL_STATUS, TO_CHAR(B.REQ_DT, 'YYYY')
ORDER BY 1,2, TO_CHAR(B.REQ_DT, 'YYYY');


SELECT * FROM PS_REQ_HDR WHERE BUSINESS_UNIT = '600UU' AND REQ_ID LIKE '%1324'
SELECT * FROM PS_REQ_LINE WHERE BUSINESS_UNIT = '600UU' AND REQ_ID LIKE '%1324'
SELECT * FROM PS_REQ_LINE_SHIP WHERE BUSINESS_UNIT = '600UU' AND REQ_ID LIKE '%1324'
SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND REQ_ID LIKE '%1324'

--Requisition with Approval issues
SELECT * FROM PS_REQ_HDR H 
WHERE H.BUSINESS_UNIT LIKE '6%' 
    AND REQ_STATUS = 'A' 
    AND EXISTS (SELECT 'X' FROM PS_REQ_LINE L WHERE H.BUSINESS_UNIT = L.BUSINESS_UNIT AND H.REQ_ID = L.REQ_ID AND L.CURR_STATUS IN ('H', 'O', 'P') )

--Requisition Approval Problem
SELECT H.BUSINESS_UNIT, H.REQ_ID, X1.XLATLONGNAME AS REQ_STATUS, H.REQ_DT, H.REQUESTOR_ID, H.OPRID_ENTERED_BY, H.OPRID_APPROVED_BY, H.BUDGET_HDR_STATUS,
       L.LINE_NBR, L.IN_PROCESS_FLG, X2.XLATLONGNAME AS CURR_STATUS, L.CATEGORY_ID, L.MERCHANDISE_AMT,  L.SOURCE_STATUS
FROM PS_REQ_HDR H, PS_REQ_LINE L, PSXLATITEM X1, PSXLATITEM X2
WHERE H.BUSINESS_UNIT = L.BUSINESS_UNIT 
    AND H.REQ_ID = L.REQ_ID
     --XLAT X1
    AND X1.FIELDNAME = 'REQ_STATUS'
    AND X1.FIELDVALUE = H.REQ_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'CURR_STATUS'
    AND X2.FIELDVALUE = L.CURR_STATUS
    AND H.BUSINESS_UNIT LIKE '6%' 
    AND H.REQ_STATUS = 'A'
    --AND L.CURR_STATUS IN ('H', 'O', 'P')
    AND L.CURR_STATUS NOT IN ('A', 'C', 'X')
ORDER BY H.BUSINESS_UNIT, H.REQ_ID, L.LINE_NBR;

--Doc ID 1568313.1
--When canceling a req line using the Requester's workbench, the SOURCE_STATUS remains A, it should be updated to C.  Due to this issue, the canceled req line sources when it should not
SELECT CURR_STATUS, SOURCE_STATUS, A.* FROM PS_REQ_LINE A WHERE BUSINESS_UNIT LIKE '6%' AND CURR_STATUS = 'X' AND SOURCE_STATUS <> 'C';

--UNU PO sourcing status    
SELECT A.PROCESS_INSTANCE, A.BUSINESS_UNIT, A.PO_STG_TYPE, A.PO_STG_ID, A.LINE_NBR, A.SCHED_NBR, A.BUYER_ID, A.CNTRCT_ID, 
            A.CNTRCT_LINE_NBR, A.CNTRCT_SETID, A.CURRENCY_CD, A.CURRENCY_CD_BASE, 
            TO_CHAR(CAST((A.DATETIME_MODIFIED) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), TO_CHAR(A.DUE_DT,'YYYY-MM-DD'), 
            A.ITM_ID_VNDR, A.ITM_SETID, A.OPRID, A.PO_ID, A.PO_LINE_NBR, A.PO_PROCESS_ID, A.STAGE_STATUS, A.VENDOR_ID, A.VENDOR_SETID, 
            A.MERCHANDISE_AMT, A.MESSAGE_SET_NBR, A.MESSAGE_NBR, B.MESSAGE_TEXT, B.DESCRLONG
FROM PS_PO_ITM_STG A, PSMSGCATDEFN B
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND B.MESSAGE_SET_NBR = A.MESSAGE_SET_NBR
    AND B.MESSAGE_NBR = A.MESSAGE_NBR
    --AND A.STAGE_STATUS IN ('B','E','I','N','P','S','V')
    AND A.STAGE_STATUS <> 'C'
ORDER BY 13 DESC;

--UNU AP Posted Trans Detail
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.VENDOR_ID, C.NAME1, C.NAME2, B.INVOICE_ID, TO_CHAR(B.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, 
            A.UNPOST_SEQ, A.POSTING_PROCESS, A.PYMNT_CNT, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, 
            A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, A.SHIPTO_ID, 
            TO_CHAR(A.POSTING_DATE,'YYYY-MM-DD') AS POSTNG_DT, A.BUSINESS_UNIT_GL, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, 
            A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.OPEN_ITEM_KEY, TO_CHAR(A.BUDGET_DT,'YYYY-MM-DD') AS BD_DT, 
            A.DESCR, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DT, A.JOURNAL_LINE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_AMOUNT, 
            A.FOREIGN_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.MONETARY_AMOUNT, A.QTY_VCHR
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_HEADER D
WHERE A.DST_ACCT_TYPE IN ('DST','RXL','RXG')
     AND A.GL_DISTRIB_STATUS = 'D'
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.OPERATING_UNIT LIKE :2
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND C.VENDOR_ID = B.VENDOR_ID
     AND C.SETID = B.VENDOR_SETID
     AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
     AND D.JOURNAL_ID = A.JOURNAL_ID
     AND D.JOURNAL_DATE = A.JOURNAL_DATE
     AND D.JRNL_HDR_STATUS IN ('P','U')
     AND D.UNPOST_SEQ = 0
     AND A.DEPTID LIKE :3
     AND A.PROJECT_ID LIKE :4
     AND A.CHARTFIELD2 LIKE :5     
     AND A.ACCOUNTING_DT >= TO_DATE(:8,'YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE(:9,'YYYY-MM-DD')
ORDER BY 1, 2, 9, 10, 11, 12, 13, 14;

--Route Control
SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_JE_APPROVER';
SELECT * FROM PS_RTE_CNTL_HDR WHERE RTE_CNTL_PROFILE = 'UN_BU_UNU_ALL';
SELECT * FROM PS_RTE_CNTL_LN WHERE RTE_CNTL_PROFILE = 'UN_BU_UNU_ALL';

SELECT * FROM PS_DEPT_NS_VW;
SELECT * FROM PSAUTHITEM;
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'nur-hasanah.ahmad-akhir';
SELECT * FROM PSROLECLASS WHERE ROLENAME = 'UN_UNU_HR';
SELECT * FROM PSCLASSDEFN WHERE CLASSID = 'UN_UNU_CA_SRVCS';
SELECT * FROM PSROLECLASS WHERE CLASSID = 'UN_UNU_CA_SRVCS';
SELECT * FROM PSROLEDEFN WHERE ROLENAME = 'UN_UNU_BUYER';
SELECT * FROM PSROLEDEFN WHERE ROLENAME = 'UN_UNU_HR';

--ALL AR Payments
SELECT DISTINCT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, C.CUST_ID, C.NAME1, B.OPRID, B.ASSN_OPRID, X1.XLATLONGNAME AS PAYMENT_STATUS, X2.XLATLONGNAME AS DEP_POST_STATUS,
       A.ACCOUNTING_DT, A.ENTRY_DT, B.PAY_WS_TYPE, A.PP_SW, B.BANK_SETID, B.BANK_CD, B.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.GROUP_ID, A.PAYMENT_AMT, A.PAYMENT_CURRENCY, A.UNPOST_REASON, 
       B.DEPOSIT_TYPE, B.PYMT_RATE_MULT, B.PYMT_RATE_DIV, X3.XLATLONGNAME AS DEPOSIT_STATUS, D.OPEN_ITEM_KEY, J.JOURNAL_ID, J.JOURNAL_DATE, J.FISCAL_YEAR, J.ACCOUNTING_PERIOD,
       J.SOURCE, J.JRNL_HDR_STATUS, J.JRNL_TOTAL_DEBITS, J.JRNL_TOT_CREDITS, J.PROCESS_INSTANCE
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B,  PS_PAYMENT_ID_CUST C, PS_PAY_MISC_DST D, PS_JRNL_HEADER J,
     PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X4 
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU 
  AND A.DEPOSIT_ID = B.DEPOSIT_ID
  AND A.DEPOSIT_BU = D.DEPOSIT_BU 
  AND A.DEPOSIT_ID = D.DEPOSIT_ID
  AND A.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM
  AND A.DEPOSIT_BU = C.DEPOSIT_BU 
  AND A.DEPOSIT_ID = C.DEPOSIT_ID
  AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
  AND D.BUSINESS_UNIT_GL = J.BUSINESS_UNIT (+)
  AND D.JOURNAL_ID = J.JOURNAL_ID (+)    
  --XLAT X1
  AND X1.FIELDNAME = 'PAYMENT_STATUS'
  AND X1.FIELDVALUE = A.PAYMENT_STATUS
  --XLAT X2
  AND X2.FIELDNAME = 'DEP_POST_STATUS'
  AND X2.FIELDVALUE = B.DEP_POST_STATUS
  --XLAT X3
  AND X3.FIELDNAME = 'DEPOSIT_STATUS'
  AND X3.FIELDVALUE = B.DEPOSIT_STATUS
  --XLAT X4
  AND X4.FIELDNAME = 'GL_DISTRIB_STATUS'
  AND X4.FIELDVALUE = A.GL_DISTRIB_STATUS
  AND A.DEPOSIT_BU LIKE '6%'
  AND TO_CHAR(A.ENTRY_DT, 'YYYY-MM-DD') >= '2012-06-01'
  AND TO_CHAR(A.ENTRY_DT, 'YYYY-MM-DD') <= '2012-07-31'
  --AND A.DEPOSIT_ID = 3556
ORDER BY A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM;

SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU LIKE '6%' AND DEPOSIT_ID LIKE '355%';
SELECT * FROM PS_DEPOST_TYPE_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'PAY_WS_TYPE';

SELECT DISTINCT BUSINESS_UNIT FROM PS_PROJECT;
SELECT * FROM PS_DEPT_TBL WHERE SETID = 'UNUNI' AND DEPTID = 'B0720';
SELECT * FROM PS_OPER_UNIT_TBL WHERE OPERATING_UNIT = '720';
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND OPERATING_UNIT = '720'; 
SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI';
SELECT * FROM PS_PYCYCL_BNK WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_PYCYCL_BU WHERE BUSINESS_UNIT LIKE '6%' AND PAY_CYCLE LIKE '6%';
SELECT * FROM PS_PYCYCL WHERE PAY_CYCLE = '600UUA';

--KK Expense Documents for a CF combination
SELECT * FROM PS_KK_DRL_ALOG_VW 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND LEDGER = 'PAR_UU_EXP'
    AND BUDGET_PERIOD = '2012'
    AND PROJECT_ID = '00064159'
    AND KK_SOURCE_TRAN = 'AP_VOUCHER'
 
SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.PO_STATUS, A.BUDGET_CHECK, TO_CHAR(A.PO_DT,'YYYY-MM-DD'), 
       B.CNTRCT_SETID, B.CNTRCT_ID, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, A.MATCH_STATUS_PO,
       A.PO_POST_STATUS, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_Amt, A.CURRENCY_CD, 
       D.MERCHANDISE_AMT AS PO_Foreign_Amt, A.VENDOR_ID, TO_CHAR(C.DUE_DT,'YYYY-MM-DD'), B.DESCR254_MIXED, C.SHIPTO_ID, D.REQ_ID, 
       D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE, 
       G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_ENC, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, G.FOREIGN_CURRENCY, 
       G.LEDGER_GROUP, G.PC_DISTRIB_STATUS
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, 
    (((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT 
                                                             AND D.PO_ID = E.PO_ID) 
       LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT 
                                        AND E.KK_TRAN_ID = F.KK_TRAN_ID 
                                        AND D.LINE_NBR = F.LINE_NBR 
                                        AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM 
                                        AND D.SCHED_NBR = F.SCHED_NBR) 
      LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID 
                                         AND F.KK_TRAN_DT = G.KK_TRAN_DT 
                                         AND F.KK_TRAN_LN = G.KK_TRAN_LN)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  AND D.PROJECT_ID = '00064159'
  AND D.FUND_CODE = '03500'
  --AND D.ACTIVITY_ID = 'ADMIN'
  --AND D.ACCOUNT = '71605'
  AND TO_CHAR( A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  --AND G.LEDGER_GROUP = 'ALT_UU'
  --AND G.MONETARY_AMOUNT <> 0
ORDER BY 1, 3

SELECT * FROM PS_VENDOR WHERE UPPER(NAME1) LIKE '%NOORDH%'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004381788'

--UNU KK Revenue Not Associated
SELECT DECODE( A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '), A.BUSINESS_UNIT, A.LEDGER, 
            A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2, SUM( A.POSTED_BASE_AMT), C.INSTID, C.DEPTID
FROM PS_LEDGER_KK A, PS_GM_PRJ_DEPT C
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.LEDGER LIKE 'REV_UU%'
     AND NOT EXISTS (SELECT B.BUSINESS_UNIT FROM PS_KK_REV_XREF B 
                                 WHERE B.LEDGER_GROUP = 'REV_UU' 
                                     AND B.ACCOUNT = A.ACCOUNT
                                     AND B.DEPTID = A.DEPTID
                                     AND B.OPERATING_UNIT = A.OPERATING_UNIT
                                     AND B.FUND_CODE = A.FUND_CODE
                                     AND B.CHARTFIELD2 = A.CHARTFIELD2
                                     AND B.PROJECT_ID = A.PROJECT_ID)
     AND A.PROJECT_ID =  C.PROJECT_ID (+)
     AND DECODE( A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' ') LIKE 'R'
GROUP BY DECODE( A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '),  A.BUSINESS_UNIT,  A.LEDGER,  
               A.ACCOUNT,  A.OPERATING_UNIT,  A.FUND_CODE,  A.DEPTID,  A.PROJECT_ID,  A.CHARTFIELD2,  C.INSTID,  C.DEPTID
HAVING SUM( A.POSTED_BASE_AMT) <> 0
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9;

SELECT * FROM PS_KK_BUDGET_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004412033';
SELECT * FROM PS_LEDGER_KK WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = '2012' AND DEPTID = 'B0360' AND FUND_CODE = '12000' AND CHARTFIELD2 = '10134'
SELECT * FROM PS_LEDGER_KK WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = '2012' AND DEPTID = 'B0660' AND FUND_CODE = '12000' AND CHARTFIELD2 = '10521'
SELECT * FROM PS_KK_BUDGET_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004412033';
SELECT * FROM PS_KK_REV_XREF WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'REV_UU' AND CHARTFIELD2 = '10134'
SELECT * FROM PS_KK_REV_XREF WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'REV_UU' AND CHARTFIELD2 = '10028'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = '28199743'
SELECT * FROM PS_KK_TRANS_LOG WHERE FISCAL_YEAR = '2012' AND CHARTFIELD2 = '10134'

--Associated Revenue Budget View
SELECT * FROM PS_KK_ASCRV_BD_VW WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'AX1_UU'
--Associated Revenue Amounts Vw
SELECT * FROM PS_KK_ASCR2_AMT_VW 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND LEDGER_GROUP = 'AX1_UU' 
    AND DEPTID = 'B0360'
    AND FUND_CODE = '12000'
    AND CHARTFIELD2 = '10134'

SELECT * FROM PS_KK_EXCPTN_TBL  WHERE PROCESS_INSTANCE = 28318119

SELECT * FROM PS_GROUP_TYPE_TBL

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3401','3525','3527', '3556', '3561', '3580')
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3401','3525','3527', '3556', '3561', '3580')
SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3401','3525','3527', '3556', '3561', '3580')
SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196','197','200', '201')
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '613UU' AND GROUP_ID IN ('177')
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 31338767
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '613UU' AND (CONTROL_AMT = 12094.06 OR CONTROL_AMT = -12094.06) 
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3401','3525','3527', '3556', '3561', '3580')
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684'

SELECT * FROM PSPNLGRPDEFN WHERE PNLGRPNAME = 'RVW_MISC_PAYMENT'
SELECT * FROM PSPNLGRPDEFN WHERE PNLGRPNAME = 'RVW_CASH_CNTRL'
SELECT * FROM PSPNLGRPDEFN WHERE PNLGRPNAME = 'JOURNAL_ENTRY_IE'
SELECT * FROM PSPNLGROUP WHERE PNLGRPNAME = 'JOURNAL_ENTRY_IE'
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'JOURNAL_ENTRY_A_IC'
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = '13111895'
SELECT * FROM PS_JRNL_APPR_LOG WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004444389'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004444389'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004451286'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28522581
SELECT * FROM PSRECDEFN WHERE RECNAME LIKE '%GL%_WL%'

SELECT * FROM PSQRYRECORD WHERE RECNAME LIKE '%APPR_INST_LOG%'

SELECT P.* FROM PS_PAYMENT P, PS_PAY_MISC_DST D 
WHERE P.DEPOSIT_BU = D.DEPOSIT_BU 
    AND P.DEPOSIT_ID = D.DEPOSIT_ID
    AND P.DEPOSIT_BU = '600UU'
    AND D.APPL_JRNL_ID = 'AR_DIRJRNL'
    AND P.CASH_CNTRL_DONE IN ('Y', 'T')

SELECT * FROM PS_PAYMENT_MCMP_VW WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3525','3527', '3556', '3561', '3580')
SELECT * FROM PS_CASH_CNTRL_VW WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3525','3527', '3556', '3561', '3580')
SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'PAYMENT_MCMP_VW'

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%' AND CASH_CNTRL_DONE IN ('Y', 'T') AND JOURNAL_ID = ' '

SELECT A.DEPOSIT_BU , A.DEPOSIT_ID , A.PAYMENT_SEQ_NUM , A.PAYMENT_ID , B.OPRID , B.ASSN_OPRID , A.ENTRY_DT , A.CASH_CNTRL_USE 
FROM PS_PAYMENT A , PS_DEPOSIT_CONTROL B 
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU 
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND A.DEPOSIT_BU LIKE '6%' 
    AND A.CASH_CNTRL_DONE IN ('Y', 'T')

SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU LIKE '6%' AND POST_ACTION IN ('A','D','E')

SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU LIKE '6%' AND APPL_JRNL_ID = 'AR_DIRJRNL' AND JOURNAL_ID = ' '
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU LIKE 'UN%' AND APPL_JRNL_ID = 'AR_DIRJRNL' AND JOURNAL_ID = ' '

SELECT  *  FROM PS_PENDING_ITEM WHERE GROUP_BU = '600UU'  AND GROUP_ID IN ('6067', '6174', '6176', '6199')
SELECT  *  FROM PS_PENDING_DST WHERE GROUP_BU = '600UU'  AND GROUP_ID IN ('6067', '6174', '6176', '6199')

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'GL_DISTRIB_STATUS'
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'CASH_CNTRL_DONE'

SELECT * FROM PS_PAY_MISC_DST WHERE APPL_JRNL_ID = 'AR_DIRJRNL'
SELECT * FROM PS_PAY_MISC_DST WHERE APPL_JRNL_ID = 'AR_CASHCTL'
SELECT * FROM PS_ITEM_DST WHERE APPL_JRNL_ID = 'AR_BILLING'
SELECT * FROM PS_ITEM_DST WHERE APPL_JRNL_ID = 'AR_MAINT'
SELECT * FROM PS_ITEM_DST WHERE APPL_JRNL_ID = 'AR_PAYMENT'
SELECT * FROM PS_RVL_ACCTG_LN_AR WHERE APPL_JRNL_ID = 'AR_REVALUE'


SELECT C.DEPOSIT_BU, C.DEPOSIT_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.RECON_STATUS, C.PAYMENT_SEQ_NUM, B.MISC_PAYMENT, 
            B.MISC_DST_BAL, B.CASH_CNTRL_DONE, B.CC_AFFECTED, B.BUDGET_HDR_STATUS, C.DST_SEQ_NUM, C.BUSINESS_UNIT_GL, C.ACCOUNT, C.FUND_CODE, C.OPERATING_UNIT, C.DEPTID, 
            C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD1, C.CHARTFIELD2, C.AFFILIATE, C.AFFILIATE_INTRA1, C.AFFILIATE_INTRA2, TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD'), 
            C.FOREIGN_CURRENCY, C.FOREIGN_AMOUNT, C.CURRENCY_CD, C.MONETARY_AMOUNT, C.GL_DISTRIB_STATUS, C.JRNL_LN_REF, C.OPEN_ITEM_KEY, C.LINE_DESCR, C.APPL_JRNL_ID, C.JOURNAL_ID, 
            TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD'), C.FISCAL_YEAR, C.ACCOUNTING_PERIOD, C.JOURNAL_LINE 
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_PAY_MISC_DST C 
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU 
     AND A.DEPOSIT_ID = B.DEPOSIT_ID 
     AND B.DEPOSIT_BU = C.DEPOSIT_BU 
     AND B.DEPOSIT_ID = C.DEPOSIT_ID 
     AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM 
     AND C.GL_DISTRIB_STATUS NOT IN ('D','I') 
     AND C.BUSINESS_UNIT_GL = 'UNUNI'
ORDER BY 1, 2, 9, 15


SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '607UU' AND PO_ID LIKE '%0004'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '607UU' AND CNTRCT_ID = '0000000000000000000000002'

SELECT TO_CHAR(JOURNAL_DATE, 'MM'), COUNT(1) 
FROM PS_JRNL_HEADER 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND TO_CHAR(JOURNAL_DATE, 'YYYY') = '2012'
GROUP BY TO_CHAR(JOURNAL_DATE, 'MM')
ORDER BY 1

SELECT TO_CHAR(JOURNAL_DATE, 'MM'), COUNT(1) 
FROM PS_JRNL_HEADER 
WHERE BUSINESS_UNIT = 'UNFPA' 
    AND TO_CHAR(JOURNAL_DATE, 'YYYY') = '2012'
GROUP BY TO_CHAR(JOURNAL_DATE, 'MM')
ORDER BY 1

SELECT * FROM PS_AGING_TBL
SELECT * FROM PS_JRNLGEN_APPL_ID

SELECT BUSINESS_UNIT, COUNT(1) FROM PS_ASSET
GROUP BY BUSINESS_UNIT
ORDER BY 1

--AR Deposits by selected date    
SELECT B.DEPOSIT_BU, B.DEPOSIT_TYPE, TO_CHAR(B.RECEIVED_DT,'YYYY-MM-DD') AS RCVD_DT, B.DEPOSIT_ID, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
            A.PAYMENT_CURRENCY, A.PAYMENT_AMT, ROUND(D.CUR_EXCHNG_RT, 2) AS EXCHG_RT,  ROUND((A.PAYMENT_AMT * D.CUR_EXCHNG_RT), 2) AS ACT_AMT, 
            TO_CHAR(B.ENTRY_DT,'YYYY-MM-DD') AS ENTRY_DT, C.CUST_ID, TO_CHAR(B.POST_DT,'YYYY-MM-DD') AS POST_DT, B.BANK_CD, B.BANK_ACCOUNT_NUM, 
            A.PAYMENT_ID, A.BUSINESS_UNIT_GL, A.PAYMENT_STATUS
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B, PS_PAYMENT_ID_CUST C, PS_CUR_RT_TBL D
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND B.RECEIVED_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND A.DEPOSIT_BU = '600UU'
    AND A.DEPOSIT_BU = C.DEPOSIT_BU
    AND A.DEPOSIT_ID = C.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
    AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_CUR_RT_TBL D_ED  WHERE D.FROM_CUR = D_ED.FROM_CUR AND D.TO_CUR = D_ED.TO_CUR 
                                                                     AND D.CUR_RT_TYPE = D_ED.CUR_RT_TYPE
                                                                     AND D_ED.EFFDT <= A.ACCOUNTING_DT)
    AND A.PAYMENT_CURRENCY = D.FROM_CUR
    AND D.TO_CUR = 'USD'
    AND D.EFF_STATUS = 'A'
ORDER BY 1, 4, 11 

--AR deposits with GLJE Status
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.PAYMENT_AMT, A.PAYMENT_STATUS, 
            TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD') AS ENTRY_DT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, TO_CHAR(A.POST_DT,'YYYY-MM-DD') AS POST_DT, 
            A.GL_DISTRIB_STATUS, TO_CHAR(A.DST_DT,'YYYY-MM-DD') AS DST_DT, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, 
            A.PAYMENT_CURRENCY, A.MISC_PAYMENT, A.BANK_ACCOUNT_NUM, A.BNK_ID_NBR, A.BUSINESS_UNIT_GL, A.BUDGET_HDR_STATUS, B.JOURNAL_ID, 
            TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DATE, B.GL_DISTRIB_STATUS, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DATE, 
            B.ACCOUNT, C.BUSINESS_UNIT, C.JOURNAL_ID, TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DATE_C, 
            C.UNPOST_SEQ, C.BUDGET_HDR_STATUS, C.JRNL_HDR_STATUS, TO_CHAR(C.POSTED_DATE,'YYYY-MM-DD') AS POSTED_DT, C.OPRID
FROM ((PS_PAYMENT A LEFT OUTER JOIN  PS_PAY_MISC_DST B 
                                ON  A.DEPOSIT_BU = B.DEPOSIT_BU 
                                AND A.DEPOSIT_ID = B.DEPOSIT_ID 
                                AND A.PAYMENT_SEQ_NUM = B.PAYMENT_SEQ_NUM ) 
                                LEFT OUTER JOIN  PS_JRNL_HEADER C 
                                ON  C.BUSINESS_UNIT = B.BUSINESS_UNIT 
                                AND C.JOURNAL_ID = B.JOURNAL_ID 
                                AND C.JOURNAL_DATE = B.JOURNAL_DATE )
WHERE A.DEPOSIT_BU LIKE '6%'
      AND A.ENTRY_DT >= TO_DATE('2012-01-01','YYYY-MM-DD')
      AND A.ENTRY_DT <= TO_DATE('2012-12-31','YYYY-MM-DD')
      AND B.ACCOUNT <> '15100'
ORDER BY 1,2,3

SELECT DISTINCT A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.APPL_JRNL_ID, B.BUSINESS_UNIT, B.JOURNAL_ID, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD'), B.JRNL_HDR_STATUS, A.ITEM_LINE
  FROM PS_ITEM_DST_CC_VW A, PS_JRNL_HEADER B
  WHERE A.BUSINESS_UNIT_GL = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND B.JRNL_HDR_STATUS <> 'P'
     --AND A.ACCOUNTING_PERIOD BETWEEN :1 AND :2
     AND B.BUSINESS_UNIT = 'UNUNI'
     AND A.FISCAL_YEAR = '2012'
  ORDER BY 1, 2, 3
  
--UNU ONL Journals Approval details
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, TO_CHAR(B.POSTED_DATE,'YYYY-MM-DD') AS POSTED_DT, B.OPRID, F.ROLEUSER,
            B.ADJUSTING_ENTRY, B.BUSINESS_UNIT_IU, B.FISCAL_YEAR, B.ACCOUNTING_PERIOD, B.SOURCE, B.JRNL_HDR_STATUS, B.JRNL_EDIT_ERR_STAT, B.BUDGET_HDR_STATUS, 
            B.JRNL_TOTAL_LINES, B.DESCR
FROM PS_JRNL_APPR_LOG A, PS_JRNL_HEADER B, PS_APPR_INST_LOG F
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE
     AND A.UNPOST_SEQ = B.UNPOST_SEQ
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND B.FISCAL_YEAR = 2011
     AND B.ACCOUNTING_PERIOD BETWEEN 0 AND 12
     AND B.SOURCE IN ('ONL','EXT')
     AND B.JRNL_HDR_STATUS IN ('P','U')
     AND A.APPR_INSTANCE = F.APPR_INSTANCE 
     AND F.APPR_INST_STATUS = 'A' 
ORDER BY 1,2,3;

SELECT * FROM PS_CNTRCT_RLS_HDR WHERE SETID = '611UU' AND CNTRCT_ID LIKE '%190';
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 23754784;

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '19045'

SELECT * FROM PS_COMBO_BLD_REQ WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_OPER_UNIT_TBL WHERE OPERATING_UNIT LIKE '6%'

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'huey-miin.lim'

SELECT * FROM PS_REC_GROUP_REC WHERE RECNAME = 'PC_INT_TMPL_GL'
SELECT * FROM PS_REC_GROUP_TBL WHERE REC_GROUP_ID = 'PC_17'
SELECT * FROM PS_SET_CNTRL_GROUP WHERE SETCNTRLVALUE = 'UNUNI' AND REC_GROUP_ID = 'PC_17'
SELECT * FROM PS_PC_INT_TMPL_GL

SELECT X.SETID 
FROM PS_PC_INT_TMPL_GL A, PS_SET_CNTRL_REC X 
WHERE A.SETID = 'UNUNI' 
    AND A.INTEGRATION_TMPL = 'UNUNI' 
    AND A.PRIMARY_GL_BU = 'Y' 
    AND X.SETCNTRLVALUE = A.BUSINESS_UNIT_GL 
    AND X.RECNAME = 'PROJECT_FS'


SELECT * FROM PS_PROJECT WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_GM_INSTITUTION WHERE SETID = 'UNUNI'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND SOURCE = 'OBL' AND FISCAL_YEAR = '2012'
ORDER BY 3

SELECT * FROM PS_PROJECT_FS WHERE BUSINESS_UNIT = 'UNUNI' AND PC_CHC_SW <> 'N'

SELECT * FROM PS_POSTING_REQUEST WHERE OPRID = 'david.white'
SELECT * FROM PS_POSTING_OPTIONS WHERE OPRID = 'david.white' 

SELECT * FROM PSOPRDEFN WHERE OPRID = 'eunice.iwasaki';
SELECT * FROM PS_JRNLGEN_REQUEST WHERE OPRID = 'sarath.patibandla';
SELECT * FROM PS_JRNLGEN_REQUEST WHERE RUN_CNTL_ID = 'AR_Gen_Journals';
SELECT * FROM PS_JRNLGEN_REQUEST WHERE RUN_CNTL_ID = 'AR_UNU_UNFPA_Jrnl_GEN';

SELECT * FROM PS_POSTING_REQUEST WHERE OPRID = 'CMBATCH' AND RUN_CNTL_ID = 'AR_UPDATE_D_01';
SELECT * FROM PS_POSTING_OPTIONS WHERE OPRID = 'CMBATCH' AND RUN_CNTL_ID = 'AR_UPDATE_D_01';
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28659203;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28659616;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28593824;
SELECT * FROM PS_POSTING_REQUEST WHERE OPRID = 'prakash.prashant' AND RUN_CNTL_ID = 'UNU_AR_ARUPDATE_D1';
SELECT * FROM PS_POSTING_OPTIONS WHERE OPRID = 'prakash.prashant' AND RUN_CNTL_ID = 'UNU_AR_ARUPDATE_D1';

SELECT * FROM PS_ITM_CAT_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = 6298;

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID LIKE 'AR%'  AND FISCAL_YEAR = 2012 AND ACCOUNTING_PERIOD = 7;
SELECT * FROM ps_deposit_control WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3601', '3602');
SELECT * FROM PS_PO_CNTRCT_PARM WHERE OPRID = 'CMBATCH';
SELECT * FROM PSPRCSRQST WHERE RUNCNTLID = 'PO_PO_POCNTRCT_D_01' ORDER BY RQSTDTTM DESC;

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%' AND AMT_REM = 0

--UNU Match Exceptions Detail
--UNU_AP_DTL_MATCH_EXCEPTIONS
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.INVOICE_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.VENDOR_ID, C.NAME1, B.MATCH_RULE_ID, E.DESCR50, B.MTCH_EXCPTN_TYPE, 
            B.VCHR_FLDVALUE, B.PO_FLDVALUE, B.RECV_FLDVALUE, D.PO_ID
FROM PS_VOUCHER A, PS_AP_MTCH_EXCPTN B, PS_VENDOR C, PS_VOUCHER_LINE D, PS_AP_MTCH_RULES E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.ENTRY_STATUS NOT IN ('X','C')
    AND A.VOUCHER_STYLE <> 'TMPL'
    AND A.MATCH_STATUS_VCHR = 'E'
    AND C.SETID = A.VENDOR_SETID
    AND C.VENDOR_ID = A.VENDOR_ID
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.VOUCHER_ID = D.VOUCHER_ID
    AND B.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM
    AND B.MATCH_RULE_ID = E.MATCH_RULE_ID
ORDER BY 1, 2, 9;

--UNU_REQ_APPROVERS
SELECT A.ROLEUSER, A.ROLENAME, A.RTE_CNTL_PROFILE, E.DEPTID, E.DESCR,E.SETID,TO_CHAR(E.EFFDT,'YYYY-MM-DD') AS EFFDT
FROM PS_RTE_CNTL_RUSER A, PS_RTE_CNTL_HDR C, PS_RTE_CNTL_LN D, PS_DEPT_TBL E
WHERE A.ROLEUSER LIKE 'francois%'
    AND A.ROLENAME LIKE 'UN_LEVEL%_REQ'
    AND EXISTS (SELECT 'X' FROM PS_RTE_CNTL_RUSER B WHERE B.ROLEUSER = A.ROLEUSER AND B.ROLENAME = A.ROLENAME AND B.RTE_CNTL_PROFILE = 'UN_BU_UNU_ALL')
    AND A.RTE_CNTL_PROFILE = C.RTE_CNTL_PROFILE
    AND C.RTE_CNTL_TYPE = 'UN_DEPT'
    AND C.RTE_CNTL_PROFILE = D.RTE_CNTL_PROFILE
    AND C.RTE_CNTL_TYPE = D.RTE_CNTL_TYPE
    AND E.EFFDT =  (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.DEPTID = E_ED.DEPTID AND E_ED.EFFDT <= SYSDATE)
    AND E.SETID = 'UNUNI'
    AND E.DEPTID BETWEEN D.RTE_FROM_VALUE AND D.RTE_TO_VALUE
ORDER BY 1, 2, 3, 4

--UNU_LEVEL1_BUDGETS
SELECT C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, C.BUDGET_PERIOD, SUM(C.POSTED_BASE_AMT), C.BASE_CURRENCY, D.DEPTID
FROM PS_LED_GRP_TBL A, PS_LED_GRP_LED_TBL B, PS_LEDGER_KK C, PS_GM_PRJ_DEPT D
WHERE A.SETID = 'SHARE'
    AND A.LEDGER_GROUP IN ('ALT_UU','AX1_UU')
    AND A.SETID = B.SETID
    AND A.LEDGER_GROUP = B.LEDGER_GROUP
    AND B.LEDGER = C.LEDGER
    AND C.BUSINESS_UNIT = 'UNUNI'
    AND B.LEDGER_TYPE_KK = '0'
    AND C.PROJECT_ID =  D.PROJECT_ID (+)
    AND D.BUSINESS_UNIT (+) = 'UNUNI'
    AND C.DEPTID = 'B0119'
    --AND C.PROJECT_ID = '00083429'
GROUP BY  C.ACCOUNT, C.DEPTID,  C.OPERATING_UNIT,  C.FUND_CODE,  C.CHARTFIELD2,  C.PROJECT_ID,  C.BUDGET_PERIOD,  C.BASE_CURRENCY,  D.DEPTID
ORDER BY 1,2,7

--UNU_KK_PO_ACTIVITY
SELECT A.BUSINESS_UNIT, E.LEDGER_GROUP, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.FOREIGN_CURRENCY, 
            SUM( E.FOREIGN_AMOUNT), SUM( E.MONETARY_AMOUNT), A.PO_ID, TO_CHAR(A.PO_DT,'YYYY-MM-DD') AS PO_DT, A.PO_REF, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, G.CNTRCT_SETID, G.CNTRCT_ID, G.CNTRCT_LINE_NBR, D.KK_POSTED_AMT, 
            D.MONETARY_AMOUNT, D.KK_FRN_POSTED_AMT, D.FOREIGN_AMOUNT, D.KK_FINAL, F.NAME1, 'A - PO (Encumbrance)'
FROM PS_PO_HDR A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN C, PS_KK_LIQUIDATION D, PS_KK_ACTIVITY_LOG E, PS_VENDOR F, PS_PO_LINE G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.KK_TRAN_ID = C.KK_TRAN_ID
    AND B.KK_TRAN_DT = C.KK_TRAN_DT
    AND C.KK_TRAN_ID = D.KK_TRAN_ID
    AND C.KK_TRAN_DT = D.KK_TRAN_DT
    AND C.KK_TRAN_LN = D.KK_TRAN_LN
    AND C.KK_TRAN_ID = E.KK_TRAN_ID
    AND C.KK_TRAN_DT = E.KK_TRAN_DT
    AND C.KK_TRAN_LN = E.KK_TRAN_LN
    AND D.LEDGER_GROUP = E.LEDGER_GROUP
    AND F.VENDOR_ID = A.VENDOR_ID
    AND A.BUSINESS_UNIT = G.BUSINESS_UNIT
    AND A.PO_ID = G.PO_ID
    AND C.LINE_NBR = G.LINE_NBR
    AND F.SETID = A.VENDOR_SETID
    AND (E.BUSINESS_UNIT LIKE '6%' OR E.BUSINESS_UNIT = 'UNUNI')
    --AND E.LEDGER_GROUP = :2
    --AND E.OPERATING_UNIT LIKE :3
    AND E.DEPTID = 'B0119'
    AND F.NAME1 = 'Prashant Prakash'
    AND B.KK_SOURCE_TRAN = 'PO_POENC'
GROUP BY  A.BUSINESS_UNIT,  E.LEDGER_GROUP,  E.CHARTFIELD2,  E.PROJECT_ID,  E.ACTIVITY_ID,  E.FOREIGN_CURRENCY,  A.PO_ID,  
                TO_CHAR(A.PO_DT,'YYYY-MM-DD'),  A.PO_REF,  TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),  G.CNTRCT_SETID,  G.CNTRCT_ID,  
                G.CNTRCT_LINE_NBR,  D.KK_POSTED_AMT,  D.MONETARY_AMOUNT,  D.KK_FRN_POSTED_AMT,  D.FOREIGN_AMOUNT,  D.KK_FINAL,  F.NAME1,  
                'A - PO (Encumbrance)',F.SETID,F.VENDOR_ID
                

--Invalid Vendor locations
SELECT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.VNDR_NAME_SHRT_USR, A.VNDR_NAME_SEQ_NUM, A.NAME1, A.NAME2, A.DEFAULT_LOC
  FROM PS_VENDOR A
  WHERE A.SETID = 'UNUNI'
     AND NOT EXISTS (SELECT B.VNDR_LOC
  FROM PS_VNDR_LOC_SCROL B
  WHERE B.SETID = A.SETID
     AND B.VENDOR_ID = A.VENDOR_ID
     AND B.VNDR_LOC = A.DEFAULT_LOC) 

--UNU_ALLOTMENTS
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, 
            A.CURRENCY_CD, SUM( A.POSTED_TOTAL_AMT)
FROM PS_LEDGER_KK A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER IN ('ALT_UU_BUD','AX1_UU_BUD')
    AND A.DEPTID = 'B0119'
    AND A.BUDGET_PERIOD = 2012
GROUP BY  A.BUSINESS_UNIT,  A.LEDGER,  A.ACCOUNT,  A.DEPTID,  A.OPERATING_UNIT,  A.FUND_CODE,  A.PROJECT_ID,  A.CHARTFIELD2,  A.BUDGET_PERIOD,  A.CURRENCY_CD
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

--UNU Item Category and Account Map
SELECT A.SETID, A.CATEGORY_CD, TO_CHAR(A.EFFDT,'YYYY-MM-DD') AS EFFDT, B.EFF_STATUS, A.DESCR, A.DESCRSHORT, A.ACCOUNT, B.DESCR AS ACCT_DESCR, B.ACCOUNT_TYPE
FROM (PS_ITM_CAT_TBL A LEFT OUTER JOIN  PS_GL_ACCOUNT_TBL B ON  B.SETID = 'SHARE' AND B.ACCOUNT = A.ACCOUNT )
WHERE A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_ITM_CAT_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.CATEGORY_TYPE = A_ED.CATEGORY_TYPE
          AND A.CATEGORY_CD = A_ED.CATEGORY_CD AND A.CATEGORY_ID = A_ED.CATEGORY_ID AND A_ED.EFFDT <= SYSDATE)
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.ACCOUNT = B_ED.ACCOUNT AND B_ED.EFFDT <= A.EFFDT)
    AND A.SETID = 'UNUNI'
ORDER BY 1, 2

--UNU Vchrs Apprv Pend or Rjct      
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.OPRID, A.GROSS_AMT, A.TXN_CURRENCY_CD, 
            A.GROSS_AMT_BSE, A.BASE_CURRENCY, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_STATUS_VCHR, A.POST_STATUS_AP 
FROM PS_VOUCHER A
WHERE A.ENTRY_STATUS <> 'X'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-07-01','YYYY-MM-DD') AND TO_DATE('2012-07-31','YYYY-MM-DD')
     AND A.CLOSE_STATUS = 'O'
     AND A.VOUCHER_STYLE <> 'TMPL'
     AND A.APPR_STATUS IN ('D','P')
ORDER BY 1, 2

--UNUCON01 Query
SELECT A.SETID, A.CNTRCT_ID, TO_CHAR(A.REVISION_DT,'YYYY-MM-DD'), A.UN_AMEND_NUM, A.UN_FINALIZED, A.UN_CNTRCT_TYPE, 
       A.UN_FUNC_TITLE, TO_CHAR(A.UN_INIT_START_DT,'YYYY-MM-DD'), TO_CHAR(A.START_DT,'YYYY-MM-DD'), 
       TO_CHAR(A.EXPIRATION_DT,'YYYY-MM-DD'), A.UN_TOR, A.UN_REMUN_AMT, A.CURRENCY_CD, A.UN_CNTRCT_FREQ, A.UN_CNTRCT_DUR, 
       A.UN_EXPENSE_AMT, A.UN_CNTRCT_AMT, A.UN_SCHED_COND, A.UN_SIGNATORY, A.COMMENTS, A.UN_REVISION_TYPE, B.DESCR, 
       C.BILL_LOCATION, H.DESCR, H.ADDRESS1, H.ADDRESS2, H.ADDRESS3, H.ADDRESS4, H.CITY, H.STATE, J.DESCR, H.COUNTRY, 
       I.DESCR, H.POSTAL, D.VENDOR_ID, D.NAME1, D.NAME2, E.UN_NATIONALITY, F.DESCR, D.VENDOR_CLASS, K.EMAILID, K.ADDRESS_SEQ_NUM, 
       K.ADDRESS1, K.ADDRESS2, K.ADDRESS3, K.ADDRESS4, K.CITY, K.STATE, M.DESCR, K.POSTAL, K.COUNTRY, L.DESCR, N.PHONE, O.PHONE, 
       P.CONTACT_NAME, A.OPRID_MODIFIED_BY
FROM PS_UN_CNTRCT_DTLS A, PS_SETID_TBL B, PS_UN_CNTR_DOC_VW C, PS_VENDOR D, PS_UN_VENDOR E, 
         PS_COUNTRY_TBL F, PS_SET_CNTRL_REC G, PS_LOCATION_TBL H, PS_COUNTRY_TBL I, PS_STATE_TBL J, 
         PS_VENDOR_ADDR K, PS_COUNTRY_TBL L, PS_STATE_TBL M, PS_VENDOR_ADDR_PHN N, 
         PS_VENDOR_ADDR_PHN O, PS_VENDOR_CNTCT P
WHERE A.SETID = '615UU'
  AND A.CNTRCT_ID = '0000000000000000000000108'
  AND A.REVISION_DT = TO_DATE(SYSDATE,'YYYY-MM-DD')
  AND B.SETID = H.SETID
  AND C.SETID = A.SETID
  AND C.CNTRCT_ID = A.CNTRCT_ID
  AND D.VENDOR_ID = C.VENDOR_ID
  AND D.SETID = C.VENDOR_SETID
  AND D.SETID = E.SETID
  AND D.VENDOR_ID = E.VENDOR_ID
  AND E.UN_NATIONALITY =  F.COUNTRY (+)
  AND G.SETCNTRLVALUE = A.SETID
  AND G.RECNAME = 'LOCATION_TBL'
  AND H.SETID = G.SETID
  AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_LOCATION_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.LOCATION = H_ED.LOCATION AND H_ED.EFFDT <= SYSDATE)
  AND H.LOCATION = C.BILL_LOCATION
  AND H.COUNTRY =  I.COUNTRY (+)
  AND H.COUNTRY =  J.COUNTRY (+)
  AND H.STATE =  J.STATE (+)
  AND D.SETID = K.SETID
  AND D.VENDOR_ID = K.VENDOR_ID
  AND K.ADDRESS_SEQ_NUM = C.ADDRESS_SEQ_NUM
  AND K.EFFDT = (SELECT MAX(K_ED.EFFDT) FROM PS_VENDOR_ADDR K_ED WHERE K.SETID = K_ED.SETID AND K.VENDOR_ID = K_ED.VENDOR_ID 
                 AND K.ADDRESS_SEQ_NUM = K_ED.ADDRESS_SEQ_NUM
                 AND K_ED.EFFDT <= SYSDATE)
  AND K.COUNTRY =  L.COUNTRY (+)
  AND K.COUNTRY =  M.COUNTRY (+)
  AND K.STATE =  M.STATE (+)
  AND K.SETID =  N.SETID (+)
  AND K.VENDOR_ID =  N.VENDOR_ID (+)
  AND K.ADDRESS_SEQ_NUM =  N.ADDRESS_SEQ_NUM (+)
  AND K.EFFDT =  N.EFFDT (+)
  AND 'MAIN' =  N.PHONE_TYPE (+)
  AND K.SETID =  O.SETID (+)
  AND K.VENDOR_ID =  O.VENDOR_ID (+)
  AND K.ADDRESS_SEQ_NUM =  O.ADDRESS_SEQ_NUM (+)
  AND K.EFFDT =  O.EFFDT (+)
  AND 'FAX' =  O.PHONE_TYPE (+)
  AND C.VENDOR_SETID =  P.SETID (+)
  AND C.VENDOR_ID =  P.VENDOR_ID (+)
  AND C.CNTCT_SEQ_NUM =  P.CNTCT_SEQ_NUM (+)
  AND (( P.EFFDT = (SELECT MAX(P_ED.EFFDT) FROM PS_VENDOR_CNTCT P_ED WHERE P.SETID = P_ED.SETID AND P.VENDOR_ID = P_ED.VENDOR_ID
                    AND P.CNTCT_SEQ_NUM = P_ED.CNTCT_SEQ_NUM
                    AND P_ED.EFFDT <= SYSDATE))
                    OR P.EFFDT IS NULL)

SELECT * FROM PS_UN_CNTR_DOC_VW WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%1066'
                    
--Review Contracts by PO
SELECT * FROM PS_PO_ITM_CNTR_VW WHERE SETID = '608UU' AND CNTRCT_ID LIKE '%027'

--UN Budget Unlock
SELECT H.KK_TRAN_ID, H.KK_TRAN_DT, H.KK_SOURCE_TRAN, H.SEQUENCE_NBR_9, H.KK_PROCESS_STATUS, H.KK_PROC_INSTANCE, H.BUSINESS_UNIT, H.KEYLIST 
FROM PS_KK_SOURCE_HDR H 
 WHERE H.KK_PROC_INSTANCE IN ( SELECT /*+ FULL(B) PARALLEL(20) */ B.PRCSINSTANCE FROM PSPRCSRQST B WHERE B.RUNSTATUS <> '7') 
     AND H.KK_PROCESS_STATUS = 'I';

SELECT BUSINESS_UNIT, PROJECT_ID, DESCR, SUMMARY_PRJ, EFF_STATUS
FROM PS_PROJECT 
WHERE BUSINESS_UNIT = 'UNUNI'
    AND PROJECT_ID IN ('00083429','00083528','00083527')
    AND SUMMARY_PRJ = 'N' 
    AND EFF_STATUS IN ('A', 'P','T')
    
SELECT * FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT LIKE '6%'  

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID LIKE 'AR044748%' AND SOURCE = 'AR'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND SOURCE = 'AR' and fiscal_year = 2012 and oprid = 'prakash.prashant'

--Find Insert Statements
SELECT S.SQL_TEXT, S.SQL_FULLTEXT, S.SQL_ID, S.FETCHES, S.EXECUTIONS, S.USERS_EXECUTING, S.FIRST_LOAD_TIME,  S.ROWS_PROCESSED, S.ADDRESS, S.HASH_VALUE, 
            S.MODULE, S.ACTION, V.SID, V.SERIAL#, V.USERNAME, V.OSUSER, V.MACHINE, V.PORT, V.TERMINAL, V.PROGRAM, V.TYPE
FROM V$SQLAREA S, V$SESSION V 
WHERE S.ADDRESS = V.SQL_ADDRESS
    AND SQL_TEXT LIKE '%INSERT INTO PS_PAY_MISC_DST%'
ORDER BY FIRST_LOAD_TIME DESC

--UNU_ARCLS_PAYMISC_NOTJG
SELECT C.DEPOSIT_BU, C.DEPOSIT_ID, B.GROUP_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.RECON_STATUS, A.CASH_CNTRL, A.DEPOSIT_STATUS,
            C.PAYMENT_SEQ_NUM, B.MISC_PAYMENT, B.MISC_DST_BAL, B.CASH_CNTRL_DONE, B.CC_AFFECTED, B.BUDGET_HDR_STATUS, C.DST_SEQ_NUM, 
            C.BUSINESS_UNIT_GL, C.ACCOUNT, C.FUND_CODE, C.OPERATING_UNIT, C.DEPTID, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD1, 
            C.CHARTFIELD2, C.AFFILIATE, C.AFFILIATE_INTRA1, C.AFFILIATE_INTRA2, TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, C.FOREIGN_CURRENCY, 
            C.FOREIGN_AMOUNT, C.CURRENCY_CD, C.MONETARY_AMOUNT, C.GL_DISTRIB_STATUS, C.JRNL_LN_REF, C.OPEN_ITEM_KEY, C.LINE_DESCR, 
            C.APPL_JRNL_ID, C.JOURNAL_ID, TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, C.FISCAL_YEAR, C.ACCOUNTING_PERIOD, C.JOURNAL_LINE, 
            A.ASSN_OPRID, B.OPRID_APPROVED_BY, B.PAYMENT_STATUS
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_PAY_MISC_DST C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND B.DEPOSIT_BU = C.DEPOSIT_BU
     AND B.DEPOSIT_ID = C.DEPOSIT_ID
     AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
     AND C.GL_DISTRIB_STATUS NOT IN ('D','I')
     AND C.BUSINESS_UNIT_GL = 'UNUNI'
     --AND C.ACCOUNTING_DT >= TO_DATE(:2,'YYYY-MM-DD')
     --AND C.ACCOUNTING_DT <= TO_DATE(:3,'YYYY-MM-DD')     
ORDER BY 1, 2, 9, 15

--UNU_ARCLS_ITEMDST_NOTJG     
SELECT A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.LEDGER_GROUP, A.LEDGER, A.DST_SEQ_NUM, B.ARRE_STATUS, C.BUDGET_HDR_STATUS, 
            A.BUSINESS_UNIT_GL, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.AFFILIATE, 
            A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.CURRENCY_CD, A.MONETARY_AMOUNT, 
            A.GL_DISTRIB_STATUS, A.JRNL_LN_REF, A.OPEN_ITEM_KEY, A.LINE_DESCR, A.APPL_JRNL_ID, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.FISCAL_YEAR, 
            A.ACCOUNTING_PERIOD, A.JOURNAL_LINE
FROM PS_ITEM_DST A, PS_ITEM_ACTIVITY B, PS_AR_CC_TRAN_HDR C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.ITEM_SEQ_NUM = B.ITEM_SEQ_NUM
    AND B.BUSINESS_UNIT =  C.BUSINESS_UNIT (+)
    AND B.CUST_ID =  C.CUST_ID (+)
    AND B.ITEM =  C.ITEM (+)
    AND B.ITEM_LINE =  C.ITEM_LINE (+)
    AND B.ITEM_SEQ_NUM =  C.ITEM_SEQ_NUM (+)
    AND A.GL_DISTRIB_STATUS NOT IN ('D','I')
    AND A.BUSINESS_UNIT_GL = 'UNUNI'
    AND A.ACCOUNTING_DT >= TO_DATE('2012-01-01','YYYY-MM-DD')
    AND A.ACCOUNTING_DT <= TO_DATE('2012-12-31','YYYY-MM-DD')
    --AND A.ACCOUNT LIKE :4
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8;

--Payment Posting
SELECT * FROM PS_PST_PYMT_RUN_AP WHERE OPRID = 'david.white'
SELECT * FROM PS_PST_PYMT_RUN_BK WHERE OPRID = 'david.white' AND RUN_CNTL_ID = 'ADHOC'

SELECT * FROM PS_PST_PYMT_RUN_AP WHERE OPRID = 'CMBATCH' AND RUN_CNTL_ID = 'AP_AP_PSTPYMNT_N_01'
SELECT * FROM PS_PST_PYMT_RUN_BK WHERE OPRID = 'CMBATCH' AND RUN_CNTL_ID = 'AP_AP_PSTPYMNT_N_01'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'AP04476660'

--UNU_ARDJ_NOT_BUDGET_CHECKED
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.PAYMENT_AMT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD'), 
            B.BUSINESS_UNIT_GL, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD1, B.CHARTFIELD2, B.BUSINESS_UNIT_PC, 
            B.PROJECT_ID, B.ACTIVITY_ID, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, B.CURRENCY_CD, B.MONETARY_AMOUNT
FROM PS_PAYMENT A, PS_PAY_MISC_DST B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND A.PAYMENT_SEQ_NUM = B.PAYMENT_SEQ_NUM
     AND A.DEPOSIT_BU LIKE '6%'
     --AND A.DEPOSIT_ID LIKE :4
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-07-31','YYYY-MM-DD')
     AND A.MISC_PAYMENT = 'Y'
     AND A.MISC_DST_BAL = 'C'
     AND A.BUDGET_HDR_STATUS NOT IN ('E','V')
     AND B.SYSTEM_DEFINED = 'U'
ORDER BY 1, 2, 3

--UNU_ARDJ_ERROR_OR_INCOMPLETE
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.PAYMENT_CURRENCY, A.PAYMENT_AMT,  
            A.PAYMENT_AMT * A.PYMT_RATE_MULT /  A.PYMT_RATE_DIV, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, B.OPRID, B.BAL_STATUS, 
            B.CONTROL_AMT, B.CONTROL_CNT, B.ENTERED_AMT, B.ENTERED_CNT, TO_CHAR(B.RECEIVED_DT,'YYYY-MM-DD') AS RCVD_DT, 
            TO_CHAR(B.ENTRY_DT,'YYYY-MM-DD') AS ENTRY_DT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT, 
            decode(  A.BUDGET_HDR_STATUS,' ','Budget Not Checked','N','Budget Not Checked','E','Budget Error', 'V','Valid') AS OUTPUT
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND A.DEPOSIT_BU LIKE '6%'
     --AND A.DEPOSIT_ID LIKE :2
     AND A.MISC_PAYMENT = 'Y'
     AND A.MISC_DST_BAL = 'C'
     AND A.BUDGET_HDR_STATUS IN ('E','N',' ')
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE(:3,'YYYY-MM-DD') AND TO_DATE(:4,'YYYY-MM-DD')
UNION
SELECT C.DEPOSIT_BU, C.DEPOSIT_ID, C.PAYMENT_SEQ_NUM, C.PAYMENT_ID, C.PAYMENT_CURRENCY, C.PAYMENT_AMT,  
            ROUND((C.PAYMENT_AMT * C.PYMT_RATE_MULT /  C.PYMT_RATE_DIV), 2), TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') AS C_ACCTG_DT, 
            F.OPRID, F.BAL_STATUS, F.CONTROL_AMT, F.CONTROL_CNT, F.ENTERED_AMT, F.ENTERED_CNT, 
            TO_CHAR(F.RECEIVED_DT,'YYYY-MM-DD') AS F_RCVD_DT, TO_CHAR(F.ENTRY_DT,'YYYY-MM-DD') AS F_ENTRY_DT, 
            TO_CHAR(F.ACCOUNTING_DT,'YYYY-MM-DD') AS F_ACCTG_DT, 
            decode(  C.MISC_DST_BAL,'N','Incomplete Direct Journal','O', 'Out Of Balance',' ', 'Incomplete Direct Journal','I','Balanced But Not Marked Complete') AS OUTPUT
FROM PS_PAYMENT C, PS_DEPOSIT_CONTROL F
WHERE C.DEPOSIT_BU = F.DEPOSIT_BU
     AND C.DEPOSIT_ID = F.DEPOSIT_ID
     AND C.DEPOSIT_BU LIKE '6%'
     AND C.MISC_PAYMENT = 'Y'
     AND C.MISC_DST_BAL <> 'C'
     --AND C.ACCOUNTING_DT BETWEEN TO_DATE(:3,'YYYY-MM-DD') AND TO_DATE(:4,'YYYY-MM-DD')
ORDER BY 1, 2, 3

--UNU_AR_UNAPPLIED_DEPOSITS
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, B.PAYMENT_SEQ_NUM, B.PAYMENT_ID, B.PAYMENT_CURRENCY, B.PAYMENT_AMT,  
            ROUND(B.PYMT_RATE_MULT*(  B.PAYMENT_AMT)/(  B.PYMT_RATE_DIV), 2) AS B_PYMNT_AMT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT, 
            A.OPRID, A.BAL_STATUS, TO_CHAR(A.RECEIVED_DT,'YYYY-MM-DD') AS A_RCVD_DT, A.DEPOSIT_TYPE, F.BANK_CD, A.BANK_ACCT_KEY, 
            F.DESCR, TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD') AS A_ENTRY_DT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, C.CUST_ID, C.NAME1, 
            E.DEP_DESCR, ROUND(SYSDATE-RECEIVED_DT, 2) AS DAYS_AGED,F.SETID
FROM PS_DEPOSIT_CONTROL A,
          (PS_PAYMENT B LEFT OUTER JOIN  PS_PAYMENT_ID_CUST C 
                                  ON B.DEPOSIT_BU = C.DEPOSIT_BU 
                                AND B.DEPOSIT_ID = C.DEPOSIT_ID 
                                AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM 
                                AND C.ID_SEQ_NUM = 1 ), 
          (PS_PAYMENT D LEFT OUTER JOIN  PS_UN_DEP_DSCR E 
                                   ON  D.DEPOSIT_BU = E.DEPOSIT_BU 
                                  AND D.DEPOSIT_ID = E.DEPOSIT_ID 
                                  AND D.PAYMENT_SEQ_NUM = E.PAYMENT_SEQ_NUM 
                                  AND E.ID_SEQ_NUM = 1 ), PS_BANK_CD_TBL F
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND B.DEPOSIT_BU LIKE '6%'
     AND B.MISC_PAYMENT = 'N'
     AND B.POST_DT IS NULL
     AND A.CASH_CNTRL = B.CASH_CNTRL_USE
     AND (( B.CASH_CNTRL_USE = 'Y' AND B.CASH_CNTRL_DONE = 'Y') OR B.CASH_CNTRL_USE = 'N')
     AND A.LB_FORMAT_ERROR = 'N'
     AND B.PROCESS_INSTANCE = 0
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
     AND B.DEPOSIT_BU = D.DEPOSIT_BU
     AND B.DEPOSIT_ID = D.DEPOSIT_ID
     AND B.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM
     AND F.BANK_CD = A.BANK_CD
     AND F.SETID = A.BANK_SETID
ORDER BY 1, 2, 3;

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '201'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '201'

SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID = 'AR04768103' --201
SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID = 'AR04746033' --196
SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID = 'AR04747849' --197

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('AR04768103', 'AR04746033')

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '196'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '196'

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '197'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '197'

SELECT * FROM PSOPRDEFN WHERE OPRID = 'way-peng.yong'
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'UN_CUST_DESC_LONG'
SELECT * FROM PS_UN_CUST_COP_TBL WHERE SETID = 'UNUNI' AND CUST_ID = '10003'

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'antonio.cerone'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'walid.saleh'
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND LOWER(NAME1) = 'antonio cerone'
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND LOWER(NAME1) LIKE '%walid%'

SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000003641'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT_REQ = '600UU' AND REQ_ID = '0000000967' AND REQ_LINE_NBR = 3

--Identify the PO Amounts linked to a specific Req Line
SELECT BUSINESS_UNIT, PO_ID, BUSINESS_UNIT_REQ, REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, DISTRIB_LN_STATUS, SUM(MERCHANDISE_AMT) 
FROM PS_PO_LINE_DISTRIB 
WHERE BUSINESS_UNIT_REQ = '614UU' 
    AND REQ_ID = '0000001865'
GROUP BY BUSINESS_UNIT, PO_ID, BUSINESS_UNIT_REQ, REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, DISTRIB_LN_STATUS
ORDER BY 1,5

SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND OPERATING_UNIT LIKE 'H%'
--Paycycle security
SELECT * FROM PS_SEC_PYCYCL_CLS WHERE OPRCLASS LIKE '6%';
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'angela.lee'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'way-peng.yong'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'yoko.sasaki'

--UNU PO's not fully processed     
SELECT A.BUSINESS_UNIT, A.PO_ID, A.BUYER_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.PO_STATUS, A.BUDGET_HDR_STATUS, 
            A.CHNG_ORD_BATCH, A.PO_REF, A.VENDOR_ID, 
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.BUSINESS_UNIT_PC, E.PROJECT_ID, E.ACTIVITY_ID            
FROM PS_PO_HDR A, PS_PO_LINE C, PS_PO_LINE_SHIP D, PS_PO_LINE_DISTRIB E
  WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
      AND A.PO_ID = C.PO_ID
      AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
      AND C.PO_ID = D.PO_ID
      AND C.LINE_NBR = D.LINE_NBR
      AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
      AND D.PO_ID = E.PO_ID
      AND D.LINE_NBR = E.LINE_NBR
      AND D.SCHED_NBR = E.SCHED_NBR
      AND A.BUSINESS_UNIT LIKE '6%'
      AND E.BUDGET_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
      AND ( A.PO_STATUS IN ('I','O','PA') OR A.BUDGET_HDR_STATUS <> 'V' OR ( A.PO_STATUS = 'A' AND NOT EXISTS (SELECT 'X' FROM PS_CNTRCT_RPO_XREF B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT AND B.PO_ID = A.PO_ID)))
ORDER BY 1, 2

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_PSTPYMNT' ORDER BY RUNDTTM DESC
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_PSTVCHR' ORDER BY RUNDTTM DESC

--Voucher Posting
SELECT * FROM PS_PST_VCHR_RUN_AP WHERE RUN_CNTL_ID = 'AP_AP_PSTVCHR_N_01'
SELECT * FROM PS_PST_VCHR_RUN_BU WHERE RUN_CNTL_ID = 'AP_AP_PSTVCHR_N_01'
SELECT * FROM PS_PST_VCHR_PYMNT WHERE RUN_CNTL_ID = 'AP_AP_PSTVCHR_N_01'

SELECT * FROM PS_PST_VCHR_RUN_AP WHERE RUN_CNTL_ID = 'UNU_AP_AP_PSTVCHR_D1'
SELECT * FROM PS_PST_VCHR_RUN_BU WHERE RUN_CNTL_ID = 'UNU_AP_AP_PSTVCHR_D1'
SELECT * FROM PS_PST_VCHR_PYMNT WHERE RUN_CNTL_ID = 'UNU_AP_AP_PSTVCHR_D1' 

--Payment Posting
SELECT * FROM PS_PST_PYMT_RUN_AP WHERE RUN_CNTL_ID = 'AP_AP_PSTPYMNT_N_01'
SELECT * FROM PS_PST_PYMT_RUN_AP WHERE RUN_CNTL_ID = 'UNU_AP_AP_PSTPYMNT_D1'
SELECT * FROM PS_PST_PYMT_RUN_BK WHERE RUN_CNTL_ID = 'UNU_AP_AP_PSTPYMNT_D1'

SELECT * FROM PS_PAYMENT_TBL WHERE PROCESS_INSTANCE = 28791712

SELECT DISTINCT A.SETID, A.BANK_CD, A.DESCR, A.BANK_TYPE  
FROM PS_BANK_CD_TBL A 
WHERE A.BANK_TYPE = 'E' 
    AND A.AR = 'Y' 
    AND A.BANK_STATUS = 'A'
    AND A.BANK_CD LIKE '6%'

--UN_BNK_AR_BD_VW
SELECT DISTINCT C.DEPOSIT_BU, A.BANK_CD, A.DESCR, A.BANK_TYPE 
FROM PS_BANK_CD_TBL A, PS_BANK_ACCT_DEFN C 
WHERE A.BANK_TYPE = 'E' 
    AND A.AR = 'Y' 
    AND A.BANK_CD = C.BANK_CD
    AND DEPOSIT_BU LIKE '6%'

SELECT * FROM PS_REC_GROUP_REC WHERE RECNAME = 'BANK_CD_TBL'

SELECT DISTINCT DEPOSIT_BU FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU LIKE '6%'

SELECT DISTINCT LN.BUSINESS_UNIT, LN.JOURNAL_ID, LN.JOURNAL_DATE, LN.UNPOST_SEQ, LN.JOURNAL_LINE
FROM PS_PAYMENT PY, PS_PAY_MISC_DST DST, PS_JRNL_HEADER HDR, PS_JRNL_LN LN 
WHERE PY.DEPOSIT_BU = DST.DEPOSIT_BU 
     AND PY.DEPOSIT_ID = DST.DEPOSIT_ID 
     AND PY.PAYMENT_SEQ_NUM = DST.PAYMENT_SEQ_NUM 
     AND DST.BUSINESS_UNIT_GL = HDR.BUSINESS_UNIT 
     AND DST.JOURNAL_ID = HDR.JOURNAL_ID 
     AND DST.JOURNAL_DATE = HDR.JOURNAL_DATE 
     AND DST.JOURNAL_LINE = LN.JOURNAL_LINE 
     AND HDR.BUSINESS_UNIT = LN.BUSINESS_UNIT 
     AND HDR.JOURNAL_ID = LN.JOURNAL_ID 
     AND HDR.JOURNAL_DATE = LN.JOURNAL_DATE 
     AND HDR.UNPOST_SEQ = LN.UNPOST_SEQ 
     AND PY.MISC_PAYMENT = 'Y'
     AND PY.DEPOSIT_BU LIKE '6%'
     AND HDR.BUSINESS_UNIT = 'UNUNI' 

--Identify any corrupted Vouchers/Payments
SELECT PAY.BANK_SETID, PAY.BANK_CD, PAY.BANK_ACCT_KEY, PAY.PYMNT_ID, PAY.PYMNT_METHOD, PAY.PYMNT_ID_REF
FROM PS_PAYMENT_TBL PAY
WHERE PAY.POST_STATUS_AP = 'P' 
    AND PAY.BANK_SETID = 'SHARE'
    AND PAY.BANK_CD LIKE '6%'
    AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF XREF 
                                         WHERE XREF.BANK_SETID = PAY.BANK_SETID 
                                             AND XREF.BANK_CD = PAY.BANK_CD 
                                             AND XREF.BANK_ACCT_KEY = PAY.BANK_ACCT_KEY 
                                             AND XREF.PYMNT_ID = PAY.PYMNT_ID 
                                             AND XREF.POST_STATUS_AP = 'U')
   AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF XREF2, PS_VCHR_ACCTG_LINE ACCT 
                                        WHERE XREF2.BANK_SETID = PAY.BANK_SETID 
                                            AND XREF2.BANK_CD = PAY.BANK_CD 
                                            AND XREF2.BANK_ACCT_KEY = PAY.BANK_ACCT_KEY 
                                            AND XREF2.PYMNT_ID = PAY.PYMNT_ID 
                                            AND XREF2.POST_STATUS_AP = 'P'
                                            AND ACCT.BUSINESS_UNIT = XREF2.BUSINESS_UNIT 
                                            AND ACCT.VOUCHER_ID = XREF2.VOUCHER_ID 
                                            AND ACCT.UNPOST_SEQ = 0 
                                            AND ACCT.APPL_JRNL_ID='PAYMENT' 
                                            AND ACCT.POSTING_PROCESS = 'PYMN')
ORDER BY PAY.BANK_SETID, PAY.BANK_CD, PAY.BANK_ACCT_KEY, PAY.PYMNT_ID

--UNU Vouchers with no PAYMENT entries
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, 
            A.GL_DISTRIB_STATUS,  A.APPL_JRNL_ID, A.DESCR,
            A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2            
FROM PS_VCHR_ACCTG_LINE A
WHERE  A.BUSINESS_UNIT LIKE '6%'
     AND A.VOUCHER_ID = '00018853'  
     --AND A.VOUCHER_ID = '00018783'
     AND A.APPL_JRNL_ID = 'ACCRUAL' 
     AND A.POSTING_PROCESS = 'ACCR'
     AND A.GL_DISTRIB_STATUS = 'D'    
UNION ALL
SELECT B.BUSINESS_UNIT, B.VOUCHER_ID, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT, 
            B.GL_DISTRIB_STATUS, B.APPL_JRNL_ID, B.DESCR,
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.BUSINESS_UNIT_PC, B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD2, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2           
FROM PS_VCHR_ACCTG_LINE B
WHERE B.BUSINESS_UNIT LIKE '6%'
     AND B.VOUCHER_ID = '00018853'  
     --AND B.VOUCHER_ID = '00018783'
     AND B.APPL_JRNL_ID = 'PAYMENT'
     AND B.POSTING_PROCESS  = 'PYMN'
     AND B.GL_DISTRIB_STATUS = 'D'      

--UNU Vouchers with PAYMENT entries not DISTRIBUTED
--Header Level
SELECT DISTINCT A.BUSINESS_UNIT, A.VOUCHER_ID,
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.JOURNAL_DATE,  
            TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT,  B.BUSINESS_UNIT_GL, B.JOURNAL_ID, B.JOURNAL_DATE
FROM PS_VCHR_ACCTG_LINE A, PS_VCHR_ACCTG_LINE B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
      AND A.VOUCHER_ID = B.VOUCHER_ID
      AND A.UNPOST_SEQ = B.UNPOST_SEQ
      AND A.BUSINESS_UNIT LIKE '6%'
      --AND A.VOUCHER_ID = '00018853'  
     --AND A.VOUCHER_ID = '00018783'
     AND A.APPL_JRNL_ID = 'ACCRUAL' 
     AND A.POSTING_PROCESS = 'ACCR'
     AND A.GL_DISTRIB_STATUS = 'D'
     AND B.APPL_JRNL_ID = 'PAYMENT'
     AND B.POSTING_PROCESS  = 'PYMN'
     AND B.GL_DISTRIB_STATUS <> 'D'
ORDER BY 1,2

--UNU_POSTED_PYMTS_NOT_JRNL_GEN
--Detail Level
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.MONETARY_AMOUNT
FROM PS_VCHR_ACCTG_LINE A
WHERE A.GL_DISTRIB_STATUS <> 'D'
     AND A.APPL_JRNL_ID = 'PAYMENT'
     AND A.ACCOUNT = '21005'
     AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1, 2, 3

--UNU_POSTED_VCHRS_NOT_JRNL_GEN     
SELECT DISTINCT A.BUSINESS_UNIT, A.VOUCHER_ID, B.ENTRY_STATUS, B.POST_STATUS_AP, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.BUSINESS_UNIT_PO, A.PO_ID, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.ACCOUNTING_PERIOD, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.MERCH_AMT_BSE
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND A.GL_DISTRIB_STATUS <> 'D'
    AND A.APPL_JRNL_ID = 'ACCRUAL'
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.ACCOUNT NOT LIKE '21%'
ORDER BY 1, 2, 9

--UNU_PO_SOURCING_STATUS     
SELECT A.PROCESS_INSTANCE, A.BUSINESS_UNIT, A.PO_STG_TYPE, A.PO_STG_ID, A.LINE_NBR, A.SCHED_NBR, A.BUYER_ID, A.CNTRCT_ID, A.CNTRCT_LINE_NBR, 
            A.CNTRCT_SETID, A.CURRENCY_CD, A.CURRENCY_CD_BASE, TO_CHAR(CAST((A.DATETIME_MODIFIED) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS MODIFIED_DTTM, 
            TO_CHAR(A.DUE_DT,'YYYY-MM-DD') AS DUE_DT, A.ITM_ID_VNDR, A.ITM_SETID, A.OPRID, A.PO_ID, A.PO_LINE_NBR, A.PO_PROCESS_ID, A.STAGE_STATUS, A.VENDOR_ID, 
            A.VENDOR_SETID, A.MERCHANDISE_AMT, A.MESSAGE_SET_NBR, A.MESSAGE_NBR, B.MESSAGE_TEXT, B.DESCRLONG,B.MESSAGE_SET_NBR,B.MESSAGE_NBR
FROM PS_PO_ITM_STG A, PSMSGCATDEFN B
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND B.MESSAGE_SET_NBR = A.MESSAGE_SET_NBR
     AND B.MESSAGE_NBR = A.MESSAGE_NBR
     AND A.STAGE_STATUS IN ('B','E','I','N','P','S','V')
ORDER BY 13 DESC


SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND APPR_STATUS = 'P'

SELECT * FROM PS_AP_KK_CHK_REQ WHERE KK_SOURCE_TRAN <> 'AP_VOUCHER' ORDER BY DTTM_STAMP_SEC DESC
SELECT * FROM PS_AP_KK_CHK_REQ WHERE RUN_CNTL_ID = 'AP_AP_PSTVCHR_N_01'
SELECT * FROM PS_AP_KK_CHK_REQ2 WHERE RUN_CNTL_ID = 'AP_AP_PSTVCHR_N_01'

--UNU ScheduleJob Set information
SELECT A.SCHEDULENAME, A.JOBNAMESRC, A.DESCR, A.OPRID, C.XLATLONGNAME AS SCHEDULESTATUS, A.RUN_CNTL_ID, 
           TO_CHAR(A.STARTDATETIME, 'YYYY-MM-DD HH24:MI:SS') AS START_DT, A.RECURNAME, 
       B.PRCSNAME, B.PRCSTYPE, B.PRCSJOBSEQ, B.EMAIL_LOG_FLAG, D.XLATLONGNAME AS EMAIL_WEB_RPT
FROM PS_SCHDLDEFN A, PS_SCHDLITEM B, PSXLATITEM C, PSXLATITEM D
WHERE A.SCHEDULENAME = B.SCHEDULENAME
  AND A.JOBNAMESRC = B.JOBNAMESRC
  AND C.FIELDNAME = 'SCHEDULESTATUS'
  AND C.FIELDVALUE = A.SCHEDULESTATUS
  AND D.FIELDNAME = 'EMAIL_WEB_RPT'
  AND D.FIELDVALUE = B.EMAIL_WEB_RPT
  AND A.SCHEDULENAME LIKE 'UNU%'
  AND A.SCHEDULESTATUS = 1
  AND A.RECURNAME = 'UNU_EVERY_2HRS'
  AND A.OPRID IN ('CMBATCH', 'prakash.prashant')
ORDER BY 1,7

--Correct Transcations - AR budget check
SELECT * FROM PS_AR_CCTRAN_EA_VW
--Posting Errors Payment
SELECT * FROM PS_GRP_PYMT_COR_VW

--COMBO BUILD
SELECT * FROM PS_COMBO_BLD_REQ WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%')

--UNU_AP_DST_ACCTG_BY_YEAR
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.GROSS_AMT, B.TXN_CURRENCY_CD, B.GROSS_AMT_BSE, 
            B.BASE_CURRENCY, TO_CHAR(A.ACCOUNTING_DT,'YYYY' ) AS ACCTG_DT, 
            TO_CHAR(A.BUDGET_DT,'YYYY-MM-DD') AS BUDGET_DT, 
            A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD1, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            SUM( A.FOREIGN_AMOUNT), A.FOREIGN_CURRENCY, SUM( A.MONETARY_AMOUNT), A.CURRENCY_CD
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B
WHERE A.DST_ACCT_TYPE = 'DST'
     AND A.BUSINESS_UNIT = '600UU'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     --AND A.VOUCHER_ID LIKE :2
GROUP BY  A.BUSINESS_UNIT,  A.VOUCHER_ID,  B.VOUCHER_STYLE,  B.GROSS_AMT,  B.TXN_CURRENCY_CD,  B.GROSS_AMT_BSE,  B.BASE_CURRENCY,  TO_CHAR(A.ACCOUNTING_DT,'YYYY' ),  TO_CHAR(A.BUDGET_DT,'YYYY-MM-DD'),  A.ACCOUNT,  A.DEPTID,  A.OPERATING_UNIT,  A.FUND_CODE,  A.CHARTFIELD1,  A.CHARTFIELD2,  A.BUSINESS_UNIT_PC,  A.PROJECT_ID,  A.ACTIVITY_ID,  A.FOREIGN_CURRENCY,  A.CURRENCY_CD
ORDER BY 1, 2

--UNU_AP_ACCOUNTING_BY_ACCOUNT
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.APPL_JRNL_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, 
           A.ACCOUNT, A.DEPTID, A.FUND_CODE, A.PROJECT_ID, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, 
           TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.BUSINESS_UNIT_GL, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.JOURNAL_LINE, 
           A.GL_DISTRIB_STATUS, A.JOURNAL_ID, C.VENDOR_ID, C.NAME1, A.REFERENCE_NUMBER, A.JRNL_LN_REF 
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_LN D
WHERE D.ACCOUNT = 71405
    AND A.FISCAL_YEAR = 2012
    AND A.ACCOUNTING_PERIOD BETWEEN 7 AND 8
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND C.VENDOR_ID = B.VENDOR_ID
    AND C.SETID = 'UNUNI'
    AND D.BUSINESS_UNIT = 'UNUNI'
    AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND D.JOURNAL_ID = A.JOURNAL_ID
    AND D.JOURNAL_DATE = A.JOURNAL_DATE
    AND D.JOURNAL_LINE = A.JOURNAL_LINE
    AND D.LEDGER = 'USD'
ORDER BY 1, 2, 4, 5

--UNU_AP_PO_VCHR_PYMNT_BY_COA
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, D.BUSINESS_UNIT_PO, D.PO_ID, TO_CHAR(B.PO_DT,'YYYY-MM-DD') AS PO_DT, 
           C.BUSINESS_UNIT_GL, C.FISCAL_YEAR, C.DEPTID, C.FUND_CODE, C.CHARTFIELD1, C.PROJECT_ID, C.ACTIVITY_ID, C.ACCOUNT, 
           C.MONETARY_AMOUNT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT
FROM PS_VOUCHER A, PS_PO_HDR B, PS_VCHR_ACCTG_LINE C, PS_VOUCHER_LINE D
WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.VOUCHER_ID = D.VOUCHER_ID
     AND D.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND D.VOUCHER_ID = C.VOUCHER_ID
     AND D.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
     AND B.BUSINESS_UNIT = D.BUSINESS_UNIT_PO
     AND B.PO_ID = D.PO_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-07-01','YYYY-MM-DD') AND TO_DATE('2012-07-31','YYYY-MM-DD')
     AND A.ENTRY_STATUS <> 'X'
     AND C.DST_ACCT_TYPE = 'DST'
     AND C.FUND_CODE BETWEEN 03000 AND 03500
ORDER BY 1, 2, 6, 7, 8, 9, 10, 11, 12, 13


--UNU_AP_OPEN_LIABILITY_BY_VCHR
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.INVOICE_ID, B.ORIGIN, B.VENDOR_ID, B.OPRID, 
            TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD'), A.BUSINESS_UNIT_GL, A.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, 
            SUM( A.FOREIGN_AMOUNT), A.FOREIGN_CURRENCY, SUM( A.MONETARY_AMOUNT), A.CURRENCY_CD
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_DISTRIB_LINE C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.DST_ACCT_TYPE = 'APA'
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.VOUCHER_STYLE <> 'JRNL'
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.VOUCHER_ID = C.VOUCHER_ID
     AND A.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
     AND A.DISTRIB_LINE_NUM = C.DISTRIB_LINE_NUM
     --AND C.OPERATING_UNIT LIKE :3
     --AND C.FUND_CODE LIKE :4
     AND A.ACCOUNTING_DT >= TO_DATE('2004-01-01','YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
GROUP BY  A.BUSINESS_UNIT,  A.VOUCHER_ID,  B.VOUCHER_STYLE,  B.INVOICE_ID,  B.ORIGIN,  B.VENDOR_ID,  B.OPRID,  TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD'),  A.BUSINESS_UNIT_GL,  A.ACCOUNT,  C.OPERATING_UNIT,  C.FUND_CODE,  A.FOREIGN_CURRENCY,  A.CURRENCY_CD
HAVING SUM( A.MONETARY_AMOUNT) NOT BETWEEN -0.05 AND 0.05
ORDER BY 1, 2;
    
--UNU_VCHR_APPROVED_BY_DEPT     
SELECT B.BUSINESS_UNIT, TO_CHAR(B.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, B.VOUCHER_ID, B.INVOICE_ID, A.ROLEUSER AS APPROVER, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, B.VENDOR_SETID, B.VENDOR_ID, B.OPRID, 
            TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.POST_STATUS_AP, --B.GROSS_AMT, B.GROSS_AMT_BSE, B.TXN_CURRENCY_CD, 
            TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.RATE_MULT, C.RATE_DIV, C.MONETARY_AMOUNT,
            C.DEPTID, C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2
FROM PS_APPR_INST_LOG A, PS_VOUCHER B, PS_VCHR_ACCTG_LINE C
WHERE A.APPR_INSTANCE = B.APPR_INSTANCE
     AND B.BUSINESS_UNIT = '690UU'
     AND A.APPR_INST_STATUS = 'A'
     AND B.INVOICE_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.VOUCHER_ID = C.VOUCHER_ID
     --AND C.DEPTID = '11901'
     --AND C.ACCOUNT NOT LIKE '21%'
     AND C.DST_ACCT_TYPE = 'DST'
ORDER BY 1, 2, 3;

SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00017060'
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '690UU' AND VOUCHER_ID = '00000765'
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '690UU' AND VOUCHER_ID = '00000765'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'AR04489738'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28828888

SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4424'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%4424'

--User relates queries
--SELECT * FROM PSROLEUSER WHERE ROLEUSER IN ('nur-hasanah.ahmad-akhir', 'mei-mei.kong', 'leanne.cheah')

SELECT A.ROLENAME, A.CLASSID, B.ROLEUSER, D.OPRDEFNDESC, E.OPRALIASVALUE, C.MENUNAME 
FROM PSROLECLASS A, PSROLEUSER B, PSAUTHITEM C, PSOPRDEFN D, PSOPRALIAS E 
WHERE A.ROLENAME=B.ROLENAME 
    AND A.CLASSID=C.CLASSID 
    AND B.ROLEUSER = D.OPRID
    AND D.OPRID = E.OPRID
    AND E.OPRALIASTYPE = 'A02'
    AND C.MENUNAME = 'UN_IP_ED_GRANT'
    
SELECT CLASSID  FROM PSAUTHITEM  WHERE BARITEMNAME = 'UN_IP_ED_CLAIM_ADV'
SELECT * FROM PSUSERTYPEVW --A02

SELECT * FROM PSOPRALIAS
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID IN ('0000003484', '0000004297')
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00017975'

--Identify all deposits which have been Journaled but not budget checked
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.BUDGET_HDR_STATUS,
       B.DST_SEQ_NUM, B.BUSINESS_UNIT, B.BUSINESS_UNIT_GL, B.JOURNAL_ID, B.GL_DISTRIB_STATUS, B.APPL_JRNL_ID,
       H.JOURNAL_DATE, H.OPRID, H.PROCESS_INSTANCE
FROM PS_PAYMENT A, PS_PAY_MISC_DST B, PS_JRNL_HEADER H
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
  AND A.DEPOSIT_ID = B.DEPOSIT_ID
  AND A.PAYMENT_SEQ_NUM = B.PAYMENT_SEQ_NUM
  AND B.BUSINESS_UNIT_GL = H.BUSINESS_UNIT (+)
  AND B.JOURNAL_ID = H.JOURNAL_ID (+)
  AND A.DEPOSIT_BU LIKE '6%'
  AND A.BUDGET_HDR_STATUS = 'N'
  AND B.JOURNAL_ID <> ' '

--Non-PO Vouchers  its incomplete
SELECT D.BUSINESS_UNIT, TO_CHAR(D.ACCOUNTING_DT, 'YYYY') AS ACCTG_YEAR, D.VOUCHER_ID, SUM(D.MERCH_AMT_BSE) 
FROM PS_DISTRIB_LINE D
WHERE D.BUSINESS_UNIT LIKE '6%' 
    --AND D.BUSINESS_UNIT_GL = 'UNUNI' 
    AND D.BUSINESS_UNIT_PO = ' ' 
    AND D.PO_ID = ' '
    AND D.VOUCHER_ID IN 
    (SELECT VOUCHER_ID FROM PS_VOUCHER A WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT AND A.VOUCHER_ID = D.VOUCHER_ID AND A.ENTRY_STATUS NOT IN ('T', 'X') AND A.POST_VOUCHER NOT IN ('N') AND A.POST_STATUS_AP NOT IN ('N') AND A.BUSINESS_UNIT LIKE '6%')
GROUP BY D.BUSINESS_UNIT, TO_CHAR(D.ACCOUNTING_DT, 'YYYY'), D.VOUCHER_ID

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'david.white' AND ROLENAME NOT LIKE '#%'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'prakash.prashant' AND ROLENAME NOT LIKE '#%'

SELECT A.ROLENAME, A.CLASSID, B.ROLEUSER, D.OPRDEFNDESC, C.MENUNAME, C.AUTHORIZEDACTIONS 
FROM PSROLECLASS A, PSROLEUSER B, PSAUTHITEM C, PSOPRDEFN D
WHERE A.ROLENAME=B.ROLENAME 
    AND A.CLASSID=C.CLASSID 
    AND B.ROLEUSER = D.OPRID   
    AND C.MENUNAME = 'DEFINE_GENERAL_OPTIONS'
    AND C.BARNAME = 'USE_R-Z'
    AND C.BARITEMNAME = 'USER_PREFERENCES'
    --AND B.ROLEUSER = 'prakash.prashant'

SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'DEFINE_GENERAL_OPTIONS' AND BARNAME = 'USE_R-Z' AND BARITEMNAME = 'USER_PREFERENCES'
SELECT DISTINCT CLASSID FROM PSAUTHWEBLIBVW WHERE MENUNAME = 'WEBLIB_SOAPTOCI';

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU LIKE '6%' AND DEPOSIT_STATUS = 'P'

SELECT C.DEPOSIT_BU, C.DEPOSIT_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.RECON_STATUS, A.CASH_CNTRL, A.DEPOSIT_STATUS,
            C.PAYMENT_SEQ_NUM, B.MISC_PAYMENT, B.MISC_DST_BAL, B.CASH_CNTRL_DONE, B.CC_AFFECTED, B.BUDGET_HDR_STATUS, C.DST_SEQ_NUM, 
            C.BUSINESS_UNIT_GL, C.ACCOUNT, C.FUND_CODE, C.OPERATING_UNIT, C.DEPTID, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD1, 
            C.CHARTFIELD2, C.AFFILIATE, C.AFFILIATE_INTRA1, C.AFFILIATE_INTRA2, TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, C.FOREIGN_CURRENCY, 
            C.FOREIGN_AMOUNT, C.CURRENCY_CD, C.MONETARY_AMOUNT, C.GL_DISTRIB_STATUS, C.JRNL_LN_REF, C.OPEN_ITEM_KEY, C.LINE_DESCR, 
            C.APPL_JRNL_ID, C.JOURNAL_ID, TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, C.FISCAL_YEAR, C.ACCOUNTING_PERIOD, C.JOURNAL_LINE, 
            A.ASSN_OPRID, B.OPRID_APPROVED_BY, B.PAYMENT_STATUS
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_PAY_MISC_DST C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND B.DEPOSIT_BU = C.DEPOSIT_BU
     AND B.DEPOSIT_ID = C.DEPOSIT_ID
     AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM    
     AND C.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.DEPOSIT_BU LIKE '6%' AND A.DEPOSIT_STATUS = 'P'          
ORDER BY 1, 2, 9, 15
    

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'
SELECT * FROM PS_PP_REQUEST
SELECT * FROM PS_UN_DEP_DSCR WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'

SELECT * FROM PS_PO_REQ_CNCL_STG WHERE BUSINESS_UNIT LIKE '6%'

--Data Mining

--POs since inception
SELECT A.BUSINESS_UNIT, B.DESCR, TO_CHAR(A.PO_DT, 'YYYY') AS YEAR, TO_CHAR(A.PO_DT, 'MM') AS MONTH, COUNT(1) AS PO_COUNT
FROM PS_PO_HDR A, PS_BUS_UNIT_TBL_FS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.PO_STATUS NOT IN ('X', 'PX')
GROUP BY  A.BUSINESS_UNIT, B.DESCR, TO_CHAR(A.PO_DT, 'YYYY'), TO_CHAR(A.PO_DT, 'MM')
ORDER BY 1,3,4

--Vouchers since inception
SELECT A.BUSINESS_UNIT, B.DESCR, TO_CHAR(A.ENTERED_DT, 'YYYY') AS YEAR, TO_CHAR(A.ENTERED_DT, 'MM') AS MONTH, COUNT(1) AS VCHR_COUNT--, SUM(GROSS_AMT_BSE) 
FROM PS_VOUCHER A, PS_BUS_UNIT_TBL_FS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.ENTRY_STATUS NOT IN ('T', 'X')   
GROUP BY A.BUSINESS_UNIT, B.DESCR, TO_CHAR(A.ENTERED_DT, 'YYYY'), TO_CHAR(A.ENTERED_DT, 'MM')
ORDER BY 1,3,4

--Journal  Lines since inception
SELECT H.BUSINESS_UNIT, B.DESCR, TO_CHAR(H.JOURNAL_DATE, 'YYYY') AS YEAR, TO_CHAR(H.JOURNAL_DATE, ' MM') AS MONTH, 
            COUNT(A.JOURNAL_LINE) AS JRNL_LINE_COUNT
FROM PS_JRNL_LN A, PS_BUS_UNIT_TBL_FS B, PS_JRNL_HEADER H
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND A.JOURNAL_ID = H.JOURNAL_ID
    AND A.JOURNAL_DATE = H.JOURNAL_DATE
    AND A.UNPOST_SEQ = H.UNPOST_SEQ
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND H.JRNL_HDR_STATUS NOT IN ('D')
GROUP BY H.BUSINESS_UNIT, B.DESCR, TO_CHAR(H.JOURNAL_DATE, 'YYYY'), TO_CHAR(H.JOURNAL_DATE, ' MM')
ORDER BY 3,4

--AR Items
SELECT TO_CHAR(POST_DT, 'YYYY') AS YEAR, TO_CHAR(POST_DT, 'MM') AS MONTH, COUNT(ITEM) AS ITEM_COUNT
FROM PS_ITEM A
WHERE BUSINESS_UNIT LIKE '6%'        
GROUP BY TO_CHAR(POST_DT, 'YYYY'), TO_CHAR(POST_DT, 'MM')
ORDER BY 1,2

--AR Deposits
SELECT A.DEPOSIT_BU, B.DESCR, TO_CHAR(A.ENTRY_DT, 'YYYY') AS YEAR, TO_CHAR(A.ENTRY_DT, 'MM') AS MONTH, COUNT(A.DEPOSIT_ID) AS DEPOSIT_COUNT 
FROM PS_DEPOSIT_CONTROL A, PS_BUS_UNIT_TBL_FS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.DEPOSIT_STATUS <> 'N'
GROUP BY A.DEPOSIT_BU, B.DESCR, TO_CHAR(A.ENTRY_DT, 'YYYY'), TO_CHAR(A.ENTRY_DT, 'MM')
ORDER BY 1,3,4

SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3666'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3719'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3666'

SELECT * FROM V$SQL_MONITOR

--PS Save warning fired from Open Period Update Page
SELECT *
FROM PS_PAYMENT D 
WHERE D.DEPOSIT_BU = '600UU'
     AND D.PAYMENT_STATUS NOT IN ('C','J') 
    AND (D.ACCOUNTING_DT NOT BETWEEN TO_DATE('2012-08-01', 'YYYY-MM-DD') AND TO_DATE('2012-08-31','YYYY-MM-DD'))
    

SELECT * FROM PS_UN_AR_PRUPD_LOG WHERE DEPOSIT_BU LIKE '6%'
SELECT * FROM PSOPRDEFN WHERE OPRID = 'mayako.matsuki'

SELECT COUNT(NR) USERS_NUMBER FROM ( SELECT COUNT(OPRID) AS NR 
FROM PSACCESSLOG 
WHERE --TO_DATE(SYSDATE, 'YYYYMMDD')-TO_DATE(LOGINDTTM, 'YYYYMMDD')>=0
     trunc(SYSDATE,'mi')-trunc(LOGINDTTM, 'mi')>=0 
     --AND TO_DATE(LOGOUTDTTM, 'YYYYMMDD')-TO_DATE(SYSDATE, 'YYYYMMDD')>=0
     AND trunc(LOGOUTDTTM,'mi')-trunc(SYSDATE, 'mi')>=0     
GROUP BY OPRID)
--The users connected on the environment at the moment
SELECT DISTINCT OPRID, LOGIPADDRESS, TO_CHAR(LOGINDTTM ,'YYYY-MM-DD:hh:mi:ss') LOGINTIME, 
         TO_CHAR(LOGOUTDTTM ,'YYYY-MM-DD:hh:mi:ss') LOGOUTIME, TO_CHAR((SYSDATE),'YYYY-MM-DD:hh:mi:ss') CURRTIME 
FROM PSACCESSLOG 
WHERE TO_DATE(SYSDATE)-TO_DATE(LOGINDTTM)>=0 
    AND TO_DATE(LOGOUTDTTM)-TO_DATE(SYSDATE)>=0
    

--Processes running in the environment with run status Processing
SELECT A.PRCSINSTANCE, A.JOBINSTANCE, A.PRCSNAME, A.PRCSJOBNAME, A.PRCSTYPE, A.OPRID, B.XLATLONGNAME RUN_STATUS, TO_CHAR(BEGINDTTM,'Day') AS DAY,
--round((sysdate - BEGINDTTM)*1440,2) as DURATION_MINUTES , 
           TO_CHAR(A.RUNDTTM,'dd.MON.YYYY HH:MI:SS') RUNDTTM, P.XLATSHORTNAME AS DISTRIBUTION_STATUS
FROM  PSPRCSRQST A iNNER JOIN PSXLATITEM B  ON B.FIELDNAME = 'RUNSTATUS' AND B.FIELDVALUE =  A.RUNSTATUS
                                  INNER JOIN PSXLATITEM P  ON P.FIELDNAME = 'DISTSTATUS' AND P.FIELDVALUE =  A.DISTSTATUS
WHERE B.XLATLONGNAME = 'Processing' 
    --AND ROWNUM < 25
ORDER BY BEGINDTTM DESC

SELECT COUNT(Num) Users_Number  FROM ( SELECT count(A.OPRID) AS Num
FROM PSACCESSLOG A
WHERE TO_CHAR(((A.LOGINDTTM ) + ( 0)),'YYYY-MM-DD') >= '2012-08-16'
    AND TO_CHAR(((A.LOGINDTTM ) + ( -1)),'YYYY-MM-DD') < '2012-08-17'
GROUP BY OPRID)

--DBA Queries
select a.table_name||' '||ceil((b.inserts+b.updates+b.deletes)*100/a.num_rows)||' '||c.stale_stats 
from dba_tables a, dba_tab_modifications b , dba_tab_statistics c 
where a.table_name=b.table_name  
    and a.table_name=c.table_name
    and a.table_name like 'PS_GL_%' 
    and a.num_rows>0;

--Batch Monitoring Queries
SELECT PRCSNAME, 
        TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm ,
        TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm ,
        TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min,
        CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) as diff,
        CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) as diff,
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 300/(24*60*60) then 1
                    else 0
        end as longer_than_threshold,
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 345/(24*60*60) then 1
                    else 0
        end as over_thresholdPlus15Percent
FROM PSPRCSRQST
WHERE TO_CHAR(rundttm,'YYYY-MM') = TO_CHAR(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM'),'YYYY-MM')
      AND PRCSNAME = ('FS_JGEN') 
      AND RUNSTATUS = 9
ORDER BY PRCSINSTANCE

--Voucher Build Run Control records
SELECT * FROM PS_VCHR_BATCH_RUN WHERE OPRID IN ('CMBATCH', 'sarath.patibandla', 'david.white')
SELECT * FROM PS_VCHR_BATCH_PARM WHERE OPRID IN ('CMBATCH', 'sarath.patibandla', 'david.white')
SELECT * FROM PS_VCHR_BATCH_SRC WHERE OPRID IN ('CMBATCH', 'sarath.patibandla', 'david.white')

--AP Cash Clearing
SELECT * FROM PS_CSH_CLR_RQ_HDR
--Close PO
SELECT * FROM PS_RUN_CNTL_PO_AE WHERE OPRID IN ('CMBATCH', 'sarath.patibandla', 'david.white')

SELECT ENFORCE_TYPE, ENFORCE FROM PS_BUS_UNIT_OPT_PC WHERE BUSINESS_UNIT = 'UNUNI'

--Projects with incorrect Enforce Team option
SELECT A.PROJECT_ID, A.ENFORCE, B.XLATLONGNAME AS ENFORCE_TYPE
FROM PS_PROJECT A, PSXLATITEM B
WHERE B.FIELDNAME = 'ENFORCE_TYPE'
    AND B.FIELDVALUE = A.ENFORCE_TYPE
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.ENFORCE_TYPE <> 'N'
    --AND A.PROJECT_ID IN ('UU605A05', 'UU605A04')

SELECT A.PROCESS_INSTANCE, A.MESSAGE_SEQ, A.JOBID, A.PROGRAM_NAME, A.MESSAGE_SET_NBR, A.MESSAGE_NBR,
            B.MESSAGE_SET_NBR, B.MESSAGE_NBR, B.MESSAGE_TEXT, B.DESCRLONG  
FROM PS_MESSAGE_LOG A, PSMSGCATDEFN B 
WHERE A.MESSAGE_SET_NBR = B.MESSAGE_SET_NBR
    AND A.MESSAGE_NBR = B.MESSAGE_NBR
    AND A.PROCESS_INSTANCE = 27994922


SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'BI04372592'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28124539
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28139884

SELECT * FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT LIKE '6%' AND ENTRY_TYPE = 'WO'
SELECT * FROM PS_REQ_LINE WHERE BUSINESS_UNIT = '614UU' AND REQ_ID LIKE '%1865'

SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684' AND ITEM = 'PGF MAY 2012-DE SILVA'

SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT = '614UU' AND REQ_ID LIKE '%1865'
SELECT * FROM PS_REQ_LINE_SHIP WHERE BUSINESS_UNIT = '614UU' AND REQ_ID LIKE '%1865'

--Find WO in AR which have not been posted to GL
SELECT B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.ITEM_SEQ_NUM, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, 
       B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, B.CHARTFIELD1, B.CHARTFIELD2, 
       B.PROJECT_ID, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, B.CURRENCY_CD, B.MONETARY_AMOUNT, B.GL_DISTRIB_STATUS,
       TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.BUSINESS_UNIT_GL, B.JOURNAL_ID, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, B.FISCAL_YEAR, 
       B.ACCOUNTING_PERIOD, B.JOURNAL_LINE, C.JRNL_HDR_STATUS, C.OPRID
FROM PS_ITEM_ACTIVITY A, PS_ITEM_DST B, PS_JRNL_HEADER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.CUST_ID = B.CUST_ID
  AND A.ITEM = B.ITEM
  AND A.ITEM_LINE = B.ITEM_LINE
  AND A.ITEM_SEQ_NUM = B.ITEM_SEQ_NUM
  AND B.BUSINESS_UNIT_GL = C.BUSINESS_UNIT (+)
  AND B.JOURNAL_ID = C.JOURNAL_ID (+)
  AND B.JOURNAL_DATE = C.JOURNAL_DATE (+)
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND A.ITEM LIKE :2
  AND C.BUSINESS_UNIT (+) = 'UNUNI'
  --AND ( C.JOURNAL_ID LIKE 'AR%' OR C.JOURNAL_ID LIKE 'BI%')
  AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  --AND B.ACCOUNT LIKE :9  
  AND A.ENTRY_TYPE = 'WO'
  AND B.GL_DISTRIB_STATUS NOT IN ('D', 'G')
ORDER BY 1, 2, 3, 4, 5

--Automatic Entry Type for AR
SELECT * FROM PS_AUTO_ENTRY_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_AUTO_LINES_TBL WHERE SETID = 'UNUNI'

--Pending Item Status
SELECT P.BUSINESS_UNIT, P.CUST_ID, P.ITEM, P.ITEM_LINE, G.GROUP_BU, G.GROUP_ID, P.GROUP_SEQ_NUM, G.ORIGIN_ID, G.GROUP_TYPE, G.POST_STATUS, G.POST_DT,        
            P.ACCOUNTING_DT, P.POSTED_FLAG, P.SUBCUST_QUAL1, P.SUBCUST_QUAL2, P.ENTRY_AMT, P.ENTRY_CURRENCY, P.ENTRY_TYPE, P.ENTRY_REASON, P.ENTRY_AMT_BASE,
            P.RATE_MULT, P.RATE_DIV, P.RT_TYPE, P.CURRENCY_CD, P.PYMNT_TERMS_CD, P.DUE_DT, P.PO_REF, P.DOCUMENT, P.BILL_OF_LADING, P.CONTRACT_NUM, P.ORDER_NO,        
            P.SALES_PERSON, P.CR_ANALYST, P.COLLECTOR
FROM PS_GROUP_CONTROL G, PS_PENDING_ITEM P 
WHERE G.GROUP_BU = P.GROUP_BU   
    AND G.GROUP_ID = P.GROUP_ID 
    AND G.GROUP_BU = '615UU'
    AND P.CUST_ID = '10684'

SELECT * FROM PS_PENDING_DST WHERE GROUP_BU = '615UU' AND CUST_ID = '10684' AND ITEM = 'PGF MAY 2012- LY ANTAROU'

--AR >  Maintenance Worksheet > Update Accounting Entries
SELECT A.GROUP_BU, A.GROUP_ID, A.OPRID, A.ASSN_OPRID, A.ENTRY_DT, A.POST_STATUS, A.POST_DT, A.GROUP_TYPE
FROM PS_GROUP_CONTROL A 
WHERE GROUP_BU = '615UU'
    AND GROUP_ID IN ('30', '52')

--UNU_PROG_PROJ_LINKAGE
SELECT D.INSTID, D.DEPTID, E.DESCR, B.TREE_NODE AS Programme, C.DESCR AS Programme_DESCR, ' ', ' ' 
FROM PSTREELEVEL A, PSTREENODE B, PS_PROJECT C, PS_GM_PRJ_DEPT D, PS_DEPT_TBL E
WHERE A.SETID = 'UNUNI' 
    AND A.SETCNTRLVALUE = ' ' 
    AND A.TREE_NAME = 'UNU_PROGRAMME' 
    AND A.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') 
    AND A.TREE_LEVEL = 'UU_PROG' 
    AND A.SETID = B.SETID 
    AND A.SETCNTRLVALUE = B.SETCNTRLVALUE 
    AND A.TREE_NAME = B.TREE_NAME 
    AND B.EFFDT = A.EFFDT 
    AND B.TREE_LEVEL_NUM = A.TREE_LEVEL_NUM 
    AND C.BUSINESS_UNIT = 'UNUNI' 
    AND C.PROJECT_ID = B.TREE_NODE 
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND C.PROJECT_ID = D.PROJECT_ID 
    AND E.DEPTID = D.DEPTID 
    AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.DEPTID = E_ED.DEPTID AND E_ED.EFFDT <= SYSDATE) 
    AND E.SETID = 'UNUNI' 
UNION 
SELECT I.INSTID, I.DEPTID, J.DESCR, G.TREE_NODE, H.DESCR, K.TREE_NODE, L.DESCR 
FROM PSTREELEVEL F, PSTREENODE G, PS_PROJECT H, PS_GM_PRJ_DEPT I, PS_DEPT_TBL J, PSTREENODE K, PS_PROJECT L
WHERE F.SETID = 'UNUNI' 
    AND F.SETCNTRLVALUE = ' ' 
    AND F.TREE_NAME = 'UNU_PROGRAMME' 
    AND F.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') 
    AND F.TREE_LEVEL = 'UU_PROG' 
    AND F.SETID = G.SETID 
    AND F.SETCNTRLVALUE = G.SETCNTRLVALUE 
    AND F.TREE_NAME = G.TREE_NAME 
    AND G.EFFDT = F.EFFDT 
    AND H.BUSINESS_UNIT = 'UNUNI' 
    AND H.PROJECT_ID = G.TREE_NODE 
    AND H.BUSINESS_UNIT = I.BUSINESS_UNIT 
    AND H.PROJECT_ID = I.PROJECT_ID 
    AND J.DEPTID = I.DEPTID 
    AND J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_DEPT_TBL J_ED WHERE J.SETID = J_ED.SETID AND J.DEPTID = J_ED.DEPTID AND J_ED.EFFDT <= SYSDATE) 
    AND J.SETID = 'UNUNI' 
    AND G.SETID = K.SETID 
    AND G.SETCNTRLVALUE = K.SETCNTRLVALUE 
    AND G.TREE_NAME = K.TREE_NAME 
    AND K.EFFDT = G.EFFDT 
    AND K.PARENT_NODE_NUM = G.TREE_NODE_NUM 
    AND L.BUSINESS_UNIT = 'UNUNI' 
    AND L.PROJECT_ID = K.TREE_NODE 
    AND G.TREE_LEVEL_NUM = F.TREE_LEVEL_NUM 
ORDER BY 1, 2, 3, 4, 5

--PO Closing
SELECT PO_STATUS, BUDGET_HDR_STATUS, MATCH_STATUS_PO,  ACTIVITY_DATE, BUDGET_HDR_STS_NP, RECV_STATUS, A.* 
FROM PS_PO_HDR A 
WHERE A.BUSINESS_UNIT = '605UU' 
    AND A.PO_ID = '0000000688'
SELECT AMT_ONLY_FLG, RECV_REQ, CANCEL_STATUS, L.* FROM PS_PO_LINE L WHERE L.BUSINESS_UNIT = '605UU' AND L.PO_ID = '0000000688'
SELECT MATCH_STATUS_LN_PO, DUE_DT, CANCEL_STATUS, S.* FROM PS_PO_LINE_SHIP S WHERE S.BUSINESS_UNIT = '605UU' AND S.PO_ID = '0000000688'
SELECT BUDGET_LINE_STATUS, DISTRIB_LN_STATUS, KK_CLOSE_FLAG, PROCESS_MAN_CLOSE, PC_DISTRIB_STATUS, PEG_STATUS, D.* 
FROM PS_PO_LINE_DISTRIB D 
WHERE D.BUSINESS_UNIT = '605UU' 
    AND D.PO_ID = '0000000688'

SELECT * FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '605UU' AND PO_ID = '0000000688'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '605UU' AND PO_ID = '0000000688'
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '605UU' AND VOUCHER_ID = '00001369'

SELECT * FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT = '600UU'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT BUDGET_LINE_STATUS, DISTRIB_LN_STATUS, KK_CLOSE_FLAG, PROCESS_MAN_CLOSE, PC_DISTRIB_STATUS, PEG_STATUS, D.* 
FROM PS_PO_LINE_DISTRIB D 
WHERE D.BUSINESS_UNIT = '600UU' 
    AND D.PO_ID = '0000004424'
---------------------------------------
SELECT * FROM PS_PO_RECON_SEL

--ATLAS Active Schedule JobSets information
SELECT I.SCHEDULENAME, I.JOBNAMESRC, S.TIMEZONE, I.NEXTSTARTDTTM, I.RECURDTTM, I.CURRENTJOBINSTANCE,
           S.DESCR, S.OPRID, S.SCHEDULESTATUS, S.RUN_CNTL_ID, S.STARTDATETIME, S.RECURNAME
FROM PS_SCHDLDEFNINFO I, PS_SCHDLDEFN S 
WHERE I.NEXTSTARTDTTM <= sysdate 
    AND S.SCHEDULESTATUS = '1' 
    AND I.SCHEDULENAME = S.SCHEDULENAME 
    AND I.JOBNAMESRC = S.JOBNAMESRC 
 
select * from psprcsrqst where prcsinstance = 29187608
SELECT * FROM PSPRCSQUE WHERE PRCSINSTANCE = 29187608

SELECT  P.PRCSINSTANCE, P.PRCSTYPE, P.PRCSNAME, P.RUNDTTM, P.RECURNAME, P.OPRID, O.OPRDEFNDESC, O.EMPLID, O.EMAILID, P.RUNCNTLID, P.LASTUPDDTTM
FROM PSPRCSRQST P LEFT OUTER JOIN PSOPRDEFN O ON P.OPRID = O.OPRID 
WHERE P.RECURNAME != ' ' 
    AND P.RUNSTATUS = '5' 

SELECT NEXTSTARTDTTM FROM PS_SCHDLDEFNINFO 
WHERE SCHEDULENAME = 'UNU_AP_MATCH' 
     AND JOBNAMESRC = 'UNUMATCH'

--UPDATE PS_SCHDLDEFNINFO SET NEXTSTARTDTTM = '04/9/2012 4:47:13.000000 AM' WHERE SCHEDULENAME = 'UNU_AP_MATCH' AND JOBNAMESRC = 'UNUMATCH' 
SELECT COUNT(*) FROM PS_SCHDLDEFNINFO 
WHERE SCHEDULENAME = 'UNU_REQPO_BUD_CHK'
    AND JOBNAMESRC = 'UNUBDRPO'
SELECT * FROM PS_SCHDLDEFNINFO WHERE SCHEDULENAME = 'UNU_REQPO_BUD_CHK' AND JOBNAMESRC = 'UNUBDRPO'

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE NOT IN (SELECT PRCSINSTANCE FROM PSPRCSQUE)
SELECT * FROM PSPRCSQUE WHERE PRCSINSTANCE NOT IN (SELECT PRCSINSTANCE FROM PSPRCSRQST)

SELECT PRCSINSTANCE, JOBINSTANCE, RUNDTTM, PRCSNAME FROM PSPRCSRQST WHERE RUNSTATUS=3 AND PRCSTYPE IN ('SQR Report', 'SQR Process')
SELECT PRCSINSTANCE, JOBINSTANCE, RUNDTTM, PRCSNAME FROM PSPRCSQUE WHERE RUNSTATUS=3 AND PRCSTYPE IN ('SQR Report', 'SQR Process')

--Recurrence View
SELECT R.RECURNAME, R.PRCSINSTANCE - R.PRCSJOBSEQ, R.PRCSINSTANCE, R.JOBINSTANCE, R.PRCSJOBSEQ, R.PRCSTYPE, R.PRCSNAME, R.RUNCNTLID, R.RUNLOCATION, R.RESTARTENABLED, R.SERVERNAMERUN, 
            R.SERVERNAMERQST, R.OPRID, R.RQSTDTTM, R.RUNDTTM, R.BEGINDTTM, R.ENDDTTM, R.RUNSTATUS, X.XLATSHORTNAME, R.DISTSTATUS, R.GENPRCSTYPE, R.OUTDESTTYPE, R.OUTDESTFORMAT, 
            R.PRCSRTNCD, C.RQSTSTATUSUPD, C.RQSTSTATUSVIEW, R.MAINJOBINSTANCE, R.PRCSITEMLEVEL 
FROM PSPRCSRQST R, PSOPRDEFN B, PSPRCSPRFL C, PSXLATITEM X 
WHERE B.OPRID = R.OPRID 
    AND B.PRCSPRFLCLS = C.CLASSID 
    AND R.RUNSTATUS = X.FIELDVALUE 
    AND R.RUNSTATUS <> '2' 
    AND X.FIELDNAME = 'RUNSTATUS' 
    AND R.RECURNAME <> ' '
    

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'yoshie.sawada'
SELECT * FROM PS_SCHDLDEFNINFO WHERE SCHEDULENAME LIKE 'UNU%'
SELECT * FROM PS_PRCSRECUR

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3725', '3726', '3767')
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3725', '3726', '3767')
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3725', '3726', '3767')

SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-AMANDA%'
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-AMANDA%'

SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-OLGA%' --MIK%'
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-OLGA%' --MIK%'
SELECT * FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-OLGA%' --MIK%
SELECT * FROM PS_ITEM_ACTIVITY WHERE POSTED_PI = 29145542
SELECT * FROM PS_AR_CC_TRAN_HDR WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-OLGA%' --MIK%'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND ITEM LIKE 'IC-2012-OLGA%' --MIK%'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_PROC_INSTANCE = 29145540

SELECT BUSINESS_UNIT, BUDGET_HDR_STATUS, COUNT(1) 
FROM PS_VOUCHER 
WHERE BUSINESS_UNIT LIKE '6%'
GROUP BY BUSINESS_UNIT, BUDGET_HDR_STATUS
ORDER BY 1,2

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND BUDGET_HDR_STATUS = 'N'

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 29145542
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 29145540
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28946409
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'RUNSTATUS'

SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = '6516'

--UNU_VOUCHERS_WITH_BUDG_ERROR     
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.VENDOR_ID, A.VOUCHER_STYLE, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_STATUS_VCHR, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD') AS LAST_UPD_DT, 
            A.OPRID_LAST_UPDT, A.OPRID, B.FUND_CODE, B.CHARTFIELD1, B.CHARTFIELD2, B.PROJECT_ID, B.BUSINESS_UNIT_PO, B.PO_ID, A.TXN_CURRENCY_CD, 
            SUM( B.FOREIGN_AMOUNT), SUM( B.MONETARY_AMOUNT), D.BUYER_ID
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_VOUCHER_LINE C, PS_PO_HDR D
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.VOUCHER_ID = C.VOUCHER_ID
    AND B.BUSINESS_UNIT_GL = 'UNUNI'
    AND A.ENTRY_STATUS <> 'X'
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.VOUCHER_ID = C.VOUCHER_ID
    AND B.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
    AND A.BUSINESS_UNIT LIKE '6%'
    --AND A.OPRID LIKE :2
    AND A.BUDGET_HDR_STATUS = 'E'
    AND B.PO_ID =  D.PO_ID (+)
    AND B.BUSINESS_UNIT_PO =  D.BUSINESS_UNIT (+)
    --AND TO_CHAR( A.ACCOUNTING_DT,'YYYY') = :4
GROUP BY  A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.VENDOR_ID, A.VOUCHER_STYLE, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_STATUS_VCHR, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'),  
                 TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'), TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD'), A.OPRID_LAST_UPDT, A.OPRID, B.FUND_CODE, B.CHARTFIELD1, B.CHARTFIELD2, B.PROJECT_ID, 
                 B.BUSINESS_UNIT_PO, B.PO_ID, A.TXN_CURRENCY_CD, D.BUYER_ID
ORDER BY 1, 2, 23

--UNU_VOUCHERS_STATS_SMRY
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.OPRID, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, A.OPRID_LAST_UPDT, TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD') AS LAST_UPD_DT, 
            A.APPR_STATUS, A.MATCH_STATUS_VCHR, A.BUDGET_HDR_STATUS, A.POST_STATUS_AP, A.CLOSE_STATUS, A.VOUCHER_STYLE, 
            A.TXN_CURRENCY_CD, A.GROSS_AMT, A.BASE_CURRENCY, A.GROSS_AMT_BSE, A.VENDOR_SETID, A.VENDOR_ID, B.VENDOR_NAME_SHORT, B.NAME1, C.VOUCHER_LINE_NUM, 
            C.DESCR, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.BUSINESS_UNIT_RECV, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.MERCHANDISE_AMT, 
            C.CURRENCY_CD, C.MERCH_AMT_BSE, C.BASE_CURRENCY
FROM PS_VOUCHER A, PS_VENDOR B, PS_VOUCHER_LINE C
WHERE A.BUSINESS_UNIT LIKE '6%'
    --AND A.OPRID LIKE :2
    AND A.ENTERED_DT BETWEEN TO_DATE('2012-08-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND A.ENTRY_STATUS <> 'X'
    AND A.VENDOR_SETID = B.SETID
    AND B.VENDOR_ID = A.VENDOR_ID
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.VOUCHER_ID = C.VOUCHER_ID
ORDER BY 1, 2

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'lu-kar.pee'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'hui-sin.sia'

SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '611UU' AND PO_ID LIKE '%2560'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '611UU' AND PO_ID LIKE '%2560'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '611UU' AND PO_ID LIKE '%2560'


--OPen Period
SELECT * FROM PS_FIN_OPEN_PERIOD WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%') AND TRANSACTION_TYPE = 'REQ'

SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '611UU' AND PO_ID = '0000002560'

SELECT BUSINESS_UNIT, PO_STATUS, COUNT(1)
FROM PS_PO_HDR
WHERE BUSINESS_UNIT LIKE '6%'
GROUP BY BUSINESS_UNIT, PO_STATUS

SELECT * FROM PS_CNTRCT_LINE WHERE SETID LIKE '6%' AND QTY_LINE_RELEASED < 0

--Receiving
--VW13
SELECT DISTINCT A.VENDOR_SETID, C.VENDOR_ID, B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, A.BUSINESS_UNIT, B.SHIPTO_ID, A.RECEIVER_ID, A.RECEIPT_DT, D.PO_DT, C.NAME1, B.BILL_OF_LADING, A.ORIGIN, D.CURRENCY_CD 
FROM PS_RECV_HDR_FS A, PS_RECV_LN_SHIP_FS B, PS_VENDOR C, PS_PO_HDR_FS D 
WHERE A.MATCH_STATUS_RECV IN ('T','P','N') 
     AND A.ERS_FLAG = 'N' 
     AND A.IN_PROCESS_FLG = 'N' 
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
     AND A.RECEIVER_ID = B.RECEIVER_ID 
     AND A.VENDOR_SETID = C.SETID 
     AND A.VENDOR_ID = C.VENDOR_ID 
     AND B.RECV_LN_MATCH_OPT IN ('N', 'P') 
     AND B.RECV_SHIP_STATUS IN ('R','O','M','C') 
     AND B.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
     AND B.PO_ID = D.PO_ID 
     AND D.BUDGET_HDR_STATUS = 'V' 
     AND D.BUDGET_HDR_STS_NP = 'V' 
     AND D.CC_USE_FLAG IN ('N',' ')
     AND A.BUSINESS_UNIT LIKE '6%' 
     AND C.SETID = 'UNUNI'
     AND D. PO_ID LIKE '%4401'
     AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS E WHERE E.BUSINESS_UNIT = B.BUSINESS_UNIT_PO AND E.PO_ID = B.PO_ID AND E.LINE_NBR = B.LINE_NBR AND E.DST_ACCT_TYPE = 'DST' 
                                                                                           AND E.KK_CLOSE_FLAG <> 'Y')
                                                                                           
--VW11
SELECT DISTINCT A.VENDOR_SETID, C.VENDOR_ID, B.BUSINESS_UNIT_PO, B.PO_ID, A.BUSINESS_UNIT, B.SHIPTO_ID, A.RECEIVER_ID, A.RECEIPT_DT, D.PO_DT, C.NAME1, B.BILL_OF_LADING, A.ORIGIN, D.CURRENCY_CD 
FROM PS_RECV_HDR_FS A, PS_RECV_LN_SHIP_FS B, PS_VENDOR C, PS_PO_HDR_FS D 
WHERE A.MATCH_STATUS_RECV IN ('T','P','N') 
     AND A.ERS_FLAG = 'N' 
     AND A.IN_PROCESS_FLG = 'N' 
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
     AND A.RECEIVER_ID = B.RECEIVER_ID 
     AND A.VENDOR_SETID = C.SETID 
     AND A.VENDOR_ID = C.VENDOR_ID 
     AND B.RECV_LN_MATCH_OPT IN ('N','P') 
     AND B.RECV_SHIP_STATUS IN ('R','O','M','C') 
     AND B.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
     AND B.PO_ID = D.PO_ID 
     AND D.BUDGET_HDR_STATUS = 'V' 
     AND D.BUDGET_HDR_STS_NP = 'V' 
     AND D.CC_USE_FLAG IN ('N',' ')
     AND A.BUSINESS_UNIT LIKE '6%' 
     AND C.SETID = 'UNUNI'
     AND D. PO_ID LIKE '%4401' 
     AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS E WHERE E.BUSINESS_UNIT = B.BUSINESS_UNIT_PO AND E.PO_ID = B.PO_ID AND E.LINE_NBR = B.LINE_NBR AND E.DST_ACCT_TYPE = 'DST' 
                                                                                           AND E.KK_CLOSE_FLAG <> 'Y')


--Revalue AP & AR
SELECT * FROM PS_RVL_ACCTG_LN_AP
SELECT * FROM PS_RVL_ACCTG_LN_AR
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_REVALUE'

--NG's monthly report
SELECT * FROM PS_RUN_CNTL_AP WHERE OPRID = 'ng.chong'
SELECT * FROM PS_DEPT_TBL WHERE SETID = 'UNUNI'

 select (b.pswdexpiresdays - trunc(sysdate - a.lastpswdchange)) as days from psoprdefn a, pssecoptions b where oprid='prakash.prashant';
 
 --Project Expenditure Report
SELECT PROJ.DEPTID, DECODE( PROJ.ANALYSIS_TYPE,'REV', PROJ.DEPTID, DECODE(SUBSTR( PROJ.DEPTID,1,1), 'B', PROJ.DEPTID, 'B0'||SUBSTR( PROJ.DEPTID,1,3))), PROJ.PROJECT_ID,  
         PROJ.OPERATING_UNIT, PROJ.ACTIVITY_ID, ACT.DESCR, DECODE(PROJ.SYSTEM_SOURCE, 'BAR', PROJ.ITEM, PROJ.DESCR), PROJ.LINE_NBR, PROJ.OPERATING_UNIT, PROJ.CHARTFIELD1, PROJ.FUND_CODE,
         PROJ.CHARTFIELD2, PROJ.ACCOUNT, PROJ.BUSINESS_UNIT_GL, GRP.ANALYSIS_GROUP, PROJ.ANALYSIS_TYPE, SUM(PROJ.FOREIGN_AMOUNT * GRP.SIGNED_VALUE), PROJ.FOREIGN_CURRENCY,
         SUM(PROJ.RESOURCE_AMOUNT * GRP.SIGNED_VALUE), ROUND(DECODE(PROJ.RATE_MULT,0,NULL, PROJ.RATE_DIV/ NVL(PROJ.RATE_MULT,1)),3), PROJ.VENDOR_ID, PROJ.BUSINESS_UNIT_AP,
         PROJ.BUSINESS_UNIT_PO, PROJ.VOUCHER_ID, PROJ.VOUCHER_LINE_NUM, PROJ.PO_ID, 
         DECODE( PROJ.ANALYSIS_TYPE,'BD1', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), 'CBU', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BDA', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BUD', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), TO_CHAR(PROJ.ACCOUNTING_DT,'DD-MON-YYYY')),
         PROJ.JOURNAL_ID, TO_CHAR(PROJ.JOURNAL_DATE,'DD-MON-YYYY'), NVL(TO_CHAR(DECODE(PROJ.ANALYSIS_TYPE,'COM',PROJ.BUDGET_DT,'CCO',PROJ.BUDGET_DT,PROJ.ACCOUNTING_DT),'YYYY'),0)
FROM PS_PROJ_RESOURCE PROJ, PS_PROJ_ACTIVITY ACT, PS_PROJ_AN_GRP_MAP GRP
WHERE PROJ.BUSINESS_UNIT = ACT.BUSINESS_UNIT
    AND PROJ.PROJECT_ID = ACT.PROJECT_ID  
    AND PROJ.ACTIVITY_ID = ACT.ACTIVITY_ID
    AND PROJ.BUSINESS_UNIT = 'UNUNI'
   AND PROJ.PROJECT_ID = '00064159' 
   AND (DECODE(SUBSTR(PROJ.DEPTID,1,1), 'B', PROJ.DEPTID, 'B0'||SUBSTR( PROJ.DEPTID,1,3)) LIKE 'B%'
   OR PROJ.ANALYSIS_TYPE = 'REV')       
  AND GRP.ANALYSIS_TYPE = PROJ.ANALYSIS_TYPE 
  --AND GRP.SETID = 'UNUNI'
  AND PROJ.ACCOUNT > '5'
  GROUP BY DECODE( PROJ.ANALYSIS_TYPE,'REV', PROJ.DEPTID, DECODE(SUBSTR( PROJ.DEPTID,1,1), 'B', PROJ.DEPTID, 'B0'|| SUBSTR( PROJ.DEPTID,1,3))), PROJ.DEPTID, PROJ.PROJECT_ID, PROJ.ACTIVITY_ID, ACT.DESCR,
                 DECODE(PROJ.SYSTEM_SOURCE, 'BAR', PROJ.ITEM, PROJ.DESCR), PROJ.LINE_NBR, PROJ.OPERATING_UNIT, PROJ.CHARTFIELD1, PROJ.FUND_CODE, PROJ.CHARTFIELD2, PROJ.ACCOUNT, GRP.ANALYSIS_GROUP,
                 PROJ.ANALYSIS_TYPE, PROJ.FOREIGN_CURRENCY, ROUND(DECODE(PROJ.RATE_MULT,0,NULL, PROJ.RATE_DIV/ NVL(PROJ.RATE_MULT,1)),3), PROJ.VENDOR_ID, PROJ.BUSINESS_UNIT_AP, PROJ.BUSINESS_UNIT_PO,
                 PROJ.VOUCHER_ID, PROJ.VOUCHER_LINE_NUM, PROJ.REQ_ID, PROJ.PO_ID, 
                 DECODE( PROJ.ANALYSIS_TYPE,'BD1',SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), 'CBU', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BDA', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),'BUD', SUBSTR( TO_CHAR(PROJ.ACCOUNTING_DT,'YYYY-MM-DD'),1,4),TO_CHAR(PROJ.ACCOUNTING_DT,'DD-MON-YYYY')), 
                 PROJ.BUSINESS_UNIT_GL, NVL(TO_CHAR(DECODE(PROJ.ANALYSIS_TYPE,'COM',PROJ.BUDGET_DT,'CCO',PROJ.BUDGET_DT,PROJ.ACCOUNTING_DT),'YYYY'),0), PROJ.JOURNAL_ID, TO_CHAR(PROJ.JOURNAL_DATE,'DD-MON-YYYY'), PROJ.ACCOUNTING_PERIOD
                 
--Oracle sql script to determine the access groups and trees a user has access to
SELECT DISTINCT A.ACCESS_GROUP,A.TREE_NAME, B.OPRCLASS 
FROM PS_SCRTY_ACC_GRP A, PSOPRCLS B 
WHERE OPRID = 'prakash.prashant' 
 AND A.CLASSID = B.OPRCLASS
                  
SELECT S.SERVERNAME, X.XLATSHORTNAME, X.FIELDVALUE, 
            cast(S.MAXCPU as varchar2(3))||ҥҠMAXCPU,cast(S.PRCSDISKSPACE as varchar2(15))||ҠMBҠPRCS_DISK_SPACE, 
            TO_CHAR(S.LASTUPDDTTM,ӄD-MM-YYYY HH:MI:SSҩLAST_UPDATE_TIME
FROM PSSERVERSTAT S, PSXLATITEM X
WHERE X.FIELDNAME = 'SERVERSTATUS'
AND X.FIELDVALUE = S.SERVERSTATUS        


--Match Exception BUs
SELECT BUSINESS_UNIT, DESCR 
FROM PS_BUS_UNIT_TBL_FS A 
WHERE BUSINESS_UNIT IN (SELECT DISTINCT BUSINESS_UNIT FROM PS_VOUCHER B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND MATCH_STATUS_VCHR = 'E')
    AND BUSINESS_UNIT LIKE '6%'
ORDER BY 1

--Modified UNU_AP_DTL_MATCH_EXCEPTIONS
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, D.VOUCHER_LINE_NUM, A.OPRID, A.OPRID_LAST_UPDT, A.VOUCHER_STYLE, A.INVOICE_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.VENDOR_ID, C.NAME1, B.MATCH_RULE_ID, E.DESCR50, B.MTCH_EXCPTN_TYPE, D.PO_ID
FROM PS_VOUCHER A, PS_AP_MTCH_EXCPTN B, PS_VENDOR C, PS_VOUCHER_LINE D, PS_AP_MTCH_RULES E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND A.BUSINESS_UNIT IN ('600UU', '608UU', '609UU', '615UU', '621UU', '622UU')
    AND A.ENTRY_STATUS NOT IN ('X','C')
    AND A.VOUCHER_STYLE <> 'TMPL'
    AND A.MATCH_STATUS_VCHR = 'E'
    AND C.SETID = A.VENDOR_SETID
    AND C.VENDOR_ID = A.VENDOR_ID
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.VOUCHER_ID = D.VOUCHER_ID
    AND B.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM
    AND B.MATCH_RULE_ID = E.MATCH_RULE_ID
ORDER BY 1, 2, 3, 10;

SELECT * FROM PS_PROJECT WHERE --BUSINESS_UNIT = 'UNUNI' AND 
PROJECT_ID IN ('00062548', '00062542')
SELECT * FROM PS_KK_CF_VALUE WHERE SETID1 = 'SHARE' AND LEDGER_GROUP = 'PAR_UU' AND RANGE_FROM LIKE '00062%'

--UNU_CONTRACT_PO_DETAILS
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.CNTRCT_BEGIN_DT, A.CNTRCT_EXPIRE_DT, B.BUSINESS_UNIT, B.PO_ID, B.CHNG_ORD_BATCH, B.PO_STATUS, B.BUDGET_HDR_STATUS, 
            B.HOLD_STATUS, B.RECV_STATUS, TO_CHAR(B.PO_DT,'YYYY-MM-DD') AS PO_DT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.PO_REF, B.VENDOR_ID, F.VENDOR_NAME_SHORT, 
            F.NAME1, B.VNDR_LOC, B.BUYER_ID, B.CURRENCY_CD, B.BILL_LOCATION, B.MATCH_ACTION, B.MATCH_STATUS_PO, B.OPRID_ENTERED_BY, 
            TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, B.OPRID_APPROVED_BY, TO_CHAR(B.APPROVAL_DT,'YYYY-MM-DD') AS APPROVAL_DT, B.OPRID_MODIFIED_BY, 
            TO_CHAR(CAST((B.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, TO_CHAR(B.ACTIVITY_DATE,'YYYY-MM-DD') AS ACTIVITY_DT, C.LINE_NBR, 
            C.CANCEL_STATUS, H.CATEGORY_CD, C.DESCR254_MIXED, C.CNTRCT_LINE_NBR, C.RELEASE_NBR, C.RECV_REQ, C.AMT_ONLY_FLG, D.SCHED_NBR, D.CANCEL_STATUS, D.QTY_PO, D.PRICE_PO, 
            TO_CHAR(D.DUE_DT,'YYYY-MM-DD') AS DUE_DT, D.SHIPTO_ID, D.MATCH_LINE_OPT, D.MATCH_STATUS_LN_PO, E.DISTRIB_LINE_NUM, E.DISTRIB_LN_STATUS, E.BUSINESS_UNIT_GL, 
            E.ACCOUNT, E.OPERATING_UNIT, E.FUND_CODE, E.DEPTID, E.BUSINESS_UNIT_PC, E.PROJECT_ID, E.ACTIVITY_ID, E.CHARTFIELD1, E.CHARTFIELD2, 
            TO_CHAR(E.BUDGET_DT,'YYYY-MM-DD') AS BUD_DT , E.LOCATION, E.CHARTFIELD_STATUS, E.BUDGET_LINE_STATUS, E.KK_CLOSE_FLAG, E.DISTRIB_PCT, 
            E.QTY_PO, E.MERCHANDISE_AMT, E.MERCH_AMT_BSE, E.MONETARY_AMOUNT, E.MONETARY_AMT_BSE, E.RATE_MULT, E.RATE_DIV, LN.UNIT_OF_MEASURE            
FROM PS_CNTRCT_HDR A, PS_CNTRCT_LINE LN, PS_PO_HDR B, PS_PO_LINE C, PS_PO_LINE_SHIP D, PS_PO_LINE_DISTRIB E, PS_VENDOR F, PS_SET_CNTRL_REC G, PS_ITM_CAT_TBL H
WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.SETID = LN.SETID
     AND A.CNTRCT_ID = LN.CNTRCT_ID
     AND LN.CNTRCT_LINE_NBR = C.CNTRCT_LINE_NBR
     AND B.PO_ID = C.PO_ID
     AND C.CNTRCT_SETID = A.SETID
     AND C.CNTRCT_ID = A.CNTRCT_ID
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.PO_ID = D.PO_ID
     AND C.LINE_NBR = D.LINE_NBR
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.PO_ID = E.PO_ID
     AND D.LINE_NBR = E.LINE_NBR
     AND D.SCHED_NBR = E.SCHED_NBR
     AND F.VENDOR_ID = B.VENDOR_ID
     AND F.SETID = B.VENDOR_SETID
     AND F.VENDOR_ID = B.VENDOR_ID
     AND A.SETID LIKE '6%'
     AND A.CNTRCT_ID LIKE '%'
     AND A.CNTRCT_STATUS = 'A'
     AND G.SETCNTRLVALUE = B.BUSINESS_UNIT
     AND G.RECNAME = 'ITM_CAT_TBL'
     AND H.SETID = G.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_ITM_CAT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CATEGORY_TYPE = H_ED.CATEGORY_TYPE 
                                                                                                                       AND H.CATEGORY_CD = H_ED.CATEGORY_CD AND H.CATEGORY_ID = H_ED.CATEGORY_ID AND H_ED.EFFDT <= SYSDATE)
     AND H.CATEGORY_ID = C.CATEGORY_ID
     AND B.PO_STATUS = 'D'
     --AND D.MATCH_STATUS_LN_PO <> 'M'
ORDER BY 1, 2, 4, 5, 30, 38, 46;


--UNU_CONTRACT_SVCS_DETAILS
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.VENDOR_ID, F.VENDOR_NAME_SHORT, F.NAME1, 
            TO_CHAR(B.REVISION_DT,'YYYY-MM-DD'), B.UN_AMEND_NUM, B.UN_REVISION_TYPE, B.UN_FINALIZED, B.UN_CNTRCT_TYPE, B.UN_RELATE_CNTRCT, B.UN_FUNC_TITLE, 
            TO_CHAR(B.UN_INIT_START_DT,'YYYY-MM-DD'), TO_CHAR(B.START_DT,'YYYY-MM-DD'), TO_CHAR(B.EXPIRATION_DT,'YYYY-MM-DD'), 
            B.UN_TOR, B.UN_REMUN_AMT, B.UN_CNTRCT_FREQ, B.UN_CNTRCT_DUR, B.UN_EXPENSE_AMT, B.UN_CNTRCT_AMT, B.UN_SCHED_COND, B.CURRENCY_CD, 
            B.UN_SIGNATORY, B.COMMENTS, B.OPRID_ENTERED_BY, TO_CHAR(B.DATE_ENTERED,'YYYY-MM-DD'), B.OPRID_MODIFIED_BY, 
            TO_CHAR(B.MODIFIED_DT,'YYYY-MM-DD'), B.APPROVER_OPRID, TO_CHAR(B.APPROVAL_DT,'YYYY-MM-DD'), B.UN_PRE_OBL, B.UN_PRE_OBL_BSE, B.UN_PRE_DISB, 
            B.UN_PRE_DISB_BSE, B.UN_PRE_CONTNT_REF
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B
WHERE A.SETID = '600UU'
     AND A.CNTRCT_ID LIKE '%938'
     AND A.CNTRCT_STATUS = 'A'
     AND F.SETID = A.VENDOR_SETID
     AND F.VENDOR_ID = A.VENDOR_ID
     AND A.SETID = B.SETID
     AND A.CNTRCT_ID = B.CNTRCT_ID
     AND B.REVISION_DT = (SELECT MAX(B_ED.REVISION_DT) FROM PS_UN_CNTRCT_DTLS B_ED WHERE B.SETID = B_ED.SETID AND B.CNTRCT_ID = B_ED.CNTRCT_ID)
ORDER BY 1, 2, 7 DESC;

--PPs UNU_CONTRACT_PO_DETAILS
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.CNTRCT_BEGIN_DT, A.CNTRCT_EXPIRE_DT, B.BUSINESS_UNIT, B.PO_ID, B.CHNG_ORD_BATCH, B.PO_STATUS, B.BUDGET_HDR_STATUS, 
            B.HOLD_STATUS, B.RECV_STATUS, 
            TO_CHAR(B.PO_DT,'YYYY-MM-DD') AS PO_DT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.PO_REF, B.VENDOR_ID, F.VENDOR_NAME_SHORT, F.NAME1, B.VNDR_LOC, 
            B.BUYER_ID, B.CURRENCY_CD, B.BILL_LOCATION, B.MATCH_ACTION, B.MATCH_STATUS_PO, B.OPRID_ENTERED_BY, TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, 
            B.OPRID_APPROVED_BY, TO_CHAR(B.APPROVAL_DT,'YYYY-MM-DD') AS APPROVAL_DT, B.OPRID_MODIFIED_BY, 
            TO_CHAR(CAST((B.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, TO_CHAR(B.ACTIVITY_DATE,'YYYY-MM-DD') AS ACTIVITY_DT, C.LINE_NBR, 
            C.CANCEL_STATUS, H.CATEGORY_CD, C.DESCR254_MIXED, C.CNTRCT_LINE_NBR, C.RELEASE_NBR, C.RECV_REQ, C.AMT_ONLY_FLG            
FROM PS_CNTRCT_HDR A, PS_PO_HDR B, PS_PO_LINE C, PS_VENDOR F, PS_SET_CNTRL_REC G, PS_ITM_CAT_TBL H, PS_UN_CNTRCT_DTLS U
WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.PO_ID = C.PO_ID
     AND C.CNTRCT_SETID = A.SETID
     AND C.CNTRCT_ID = A.CNTRCT_ID     
     AND F.VENDOR_ID = B.VENDOR_ID
     AND F.SETID = B.VENDOR_SETID
     AND F.VENDOR_ID = B.VENDOR_ID
     AND A.SETID = U.SETID
     AND A.CNTRCT_ID = U.CNTRCT_ID
     AND U.REVISION_DT = (SELECT MAX(U_ED.REVISION_DT) FROM PS_UN_CNTRCT_DTLS U_ED WHERE U.SETID = U_ED.SETID AND U.CNTRCT_ID = U_ED.CNTRCT_ID)
     AND A.SETID = '600UU'
     AND A.CNTRCT_ID LIKE '%'
     AND A.CNTRCT_STATUS = 'A'
     AND G.SETCNTRLVALUE = B.BUSINESS_UNIT
     AND G.RECNAME = 'ITM_CAT_TBL'
     AND H.SETID = G.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_ITM_CAT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CATEGORY_TYPE = H_ED.CATEGORY_TYPE 
                                                                                                                       AND H.CATEGORY_CD = H_ED.CATEGORY_CD AND H.CATEGORY_ID = H_ED.CATEGORY_ID 
                                                                                                                       AND H_ED.EFFDT <= SYSDATE)
     AND H.CATEGORY_ID = C.CATEGORY_ID
     AND B.PO_STATUS = 'D'
ORDER BY 1,2;

---New Version -- PP
--X.CATEGORY_CD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, 
SELECT X.SETID, X.CNTRCT_ID, COUNT(1) FROM (
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.CNTRCT_BEGIN_DT, A.CNTRCT_EXPIRE_DT, B.BUSINESS_UNIT, B.PO_ID, B.CHNG_ORD_BATCH, B.PO_STATUS, B.BUDGET_HDR_STATUS, B.HOLD_STATUS, B.RECV_STATUS, 
            TO_CHAR(B.PO_DT,'YYYY-MM-DD') AS PO_DT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.PO_REF, B.VENDOR_ID, F.VENDOR_NAME_SHORT, F.NAME1, B.VNDR_LOC, B.BUYER_ID, 
            B.CURRENCY_CD, B.BILL_LOCATION, B.MATCH_ACTION, B.MATCH_STATUS_PO, B.OPRID_ENTERED_BY, TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, B.OPRID_APPROVED_BY, 
            TO_CHAR(B.APPROVAL_DT,'YYYY-MM-DD') AS APPROVAL_DT, B.OPRID_MODIFIED_BY, TO_CHAR(CAST((B.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, 
            TO_CHAR(B.ACTIVITY_DATE,'YYYY-MM-DD') AS ACTIVITY_DT, C.LINE_NBR, C.CANCEL_STATUS, H.CATEGORY_CD, C.DESCR254_MIXED, C.CNTRCT_LINE_NBR, C.RELEASE_NBR, C.RECV_REQ, 
            C.AMT_ONLY_FLG, D.SCHED_NBR, D.CANCEL_STATUS, D.QTY_PO, D.PRICE_PO, TO_CHAR(D.DUE_DT,'YYYY-MM-DD') AS DUE_DT, D.SHIPTO_ID, D.MATCH_LINE_OPT, D.MATCH_STATUS_LN_PO, 
            E.DISTRIB_LINE_NUM, E.DISTRIB_LN_STATUS, E.BUSINESS_UNIT_GL, E.ACCOUNT, E.OPERATING_UNIT, E.FUND_CODE, E.DEPTID, E.BUSINESS_UNIT_PC, E.PROJECT_ID, E.ACTIVITY_ID, 
            E.CHARTFIELD1, E.CHARTFIELD2, TO_CHAR(E.BUDGET_DT,'YYYY-MM-DD') AS BUD_DT , E.LOCATION, E.CHARTFIELD_STATUS, E.BUDGET_LINE_STATUS, E.KK_CLOSE_FLAG, E.DISTRIB_PCT, 
            E.QTY_PO, E.MERCHANDISE_AMT, E.MERCH_AMT_BSE, E.MONETARY_AMOUNT, E.MONETARY_AMT_BSE, E.RATE_MULT, E.RATE_DIV            
FROM PS_CNTRCT_HDR A, PS_PO_HDR B, PS_PO_LINE C, PS_PO_LINE_SHIP D, PS_PO_LINE_DISTRIB E, PS_VENDOR F, PS_SET_CNTRL_REC G, PS_ITM_CAT_TBL H
WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.PO_ID = C.PO_ID
     AND C.CNTRCT_SETID = A.SETID
     AND C.CNTRCT_ID = A.CNTRCT_ID
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.PO_ID = D.PO_ID
     AND C.LINE_NBR = D.LINE_NBR
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.PO_ID = E.PO_ID
     AND D.LINE_NBR = E.LINE_NBR
     AND D.SCHED_NBR = E.SCHED_NBR
     AND F.VENDOR_ID = B.VENDOR_ID
     AND F.SETID = B.VENDOR_SETID
     AND F.VENDOR_ID = B.VENDOR_ID    
     AND A.SETID LIKE '6%'
     AND A.CNTRCT_ID LIKE '%'
     AND A.CNTRCT_STATUS = 'A'
     AND G.SETCNTRLVALUE = B.BUSINESS_UNIT
     AND G.RECNAME = 'ITM_CAT_TBL'
     AND H.SETID = G.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_ITM_CAT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CATEGORY_TYPE = H_ED.CATEGORY_TYPE AND H.CATEGORY_CD = H_ED.CATEGORY_CD AND H.CATEGORY_ID = H_ED.CATEGORY_ID AND H_ED.EFFDT <= SYSDATE)
     AND H.CATEGORY_ID = C.CATEGORY_ID
     AND B.PO_STATUS = 'D'
     --AND D.MATCH_STATUS_LN_PO <> 'M'
     ) X
HAVING COUNT(1) > 1
--GROUP BY X.SETID, X.CNTRCT_ID, X.CATEGORY_CD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID
GROUP BY X.SETID, X.CNTRCT_ID
ORDER BY 1,2

--Receipt Accrual
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PO_RECVACCR';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'July_RA';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = '2013JUNRA';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'RECEIPT_ACCRUAL';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'unfem';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'RECEIPT_ACCRUAL_NEW';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'UNU_RECEIPT_ACCRUAL';
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE RUN_CNTL_ID = 'Yazan';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'RCPT_RUN_OPT';
SELECT * FROM PSDBFLDLABL WHERE FIELDNAME = 'RCPT_RUN_OPT';
SELECT * FROM PSRECDEFN WHERE RECNAME LIKE 'PSDB%';
--PORC700
SELECT * FROM PS_RUN_CNTL_HC WHERE OPRID = 'prakash.prashant'

SELECT * FROM PS_RECV_HDR WHERE BUSINESS_UNIT LIKE '6%' AND IN_PROCESS_FLG = 'Y' AND PROCESS_INSTANCE = 28860961

SELECT * FROM PS_RECV_HDR WHERE BUSINESS_UNIT LIKE '6%' AND RECEIVER_ID = '0000001030'
SELECT * FROM PS_RECV_LN_SHIP WHERE BUSINESS_UNIT LIKE '6%' AND RECEIVER_ID = '0000001030'
SELECT * FROM PS_RECV_LN_DISTRIB WHERE BUSINESS_UNIT LIKE '6%' AND RECEIVER_ID = '0000001030'
SELECT * FROM PS_RCPT_RUN_CNTRL WHERE OPRID = 'jacobus.noordhuizen' AND RUN_CNTL_ID = 'RA_Sept2012_1'

SELECT * FROM PS_RECV_LN_RPT WHERE BUSINESS_UNIT LIKE '6%'

SELECT JOURNAL_ID, BUDGET_HDR_STATUS, BUDGET_LINE_STATUS, A.* FROM PS_RECV_LN_ACCTG A WHERE A.BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_RECV_LN_ACT_VW WHERE BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_RECV_LN_ACT_TMP WHERE PROCESS_INSTANCE = 28860961
SELECT * FROM PS_RECV_LN_ACCT WHERE PROCESS_INSTANCE = 28860961 AND BUSINESS_UNIT LIKE '6%'

SELECT * FROM PS_RECV_LNACCT_TMP WHERE PROCESS_INSTANCE = 28860961
SELECT * FROM PS_RCV_LNACCT_TMP WHERE PROCESS_INSTANCE = 28860961

SELECT BUSINESS_UNIT, COUNT(1) FROM PS_RECV_LN_ACCTG
GROUP BY BUSINESS_UNIT

SELECT * FROM PS_BUS_UNIT_INTFC

SELECT RECV_REQ, A.* FROM PS_PO_LINE A WHERE A.BUSINESS_UNIT = '600UU' AND RECV_REQ = 'Y' AND CANCEL_STATUS = 'A'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%5146'
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%5146'


--PO_RECVACCR Trace
SELECT PROCESS_INSTANCE, BUSINESS_UNIT, RECEIVER_ID, BILL_OF_LADING, CARRIER_ID, CONTAINER_ID, COUNTRY_SHIP_FROM, DFLT_PACKSLIP_NO, DRIVER_ID, EIP_CTL_ID, 
            ERS_FLAG, ERS_INV_DT_OPT, ERS_INV_STATUS, FREIGHT_TERMS, HOLD_ASSET, HOLD_INVENTORY, IN_PROCESS_FLG, INTFC_ASSET, INTFC_INVENTORY, INTFC_MG, 
            MATCH_CNTRL_ID, MATCH_PROCESS_FLG, MATCH_STATUS_RECV, NUM_OF_CARTONS, OPRID, ORIGIN, PALLETS_RECV, PALLETS_RTN, PO_RECEIPT_FLG, PORT_OF_UNLOADING, 
            PRO_NUMBER, RECEIPT_DT, RECEIPT_TM, RECV_SOURCE, RECV_STATUS, SETID, SHIP_DATE, SHIP_FROM_LOC, SHIPMENT_NO, SHIPTO_ID, VEHICLE_ID, VENDOR_ID, 
            VENDOR_SETID, VNDR_LOC, POST_STATUS_RECV, OPRID_MODIFIED_BY, LAST_DTTM_UPDATE, USER_HDR_CHAR1, INVOICE_ID 
FROM PS_RECV_HDR WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE = 28860961 AND IN_PROCESS_FLG = 'Y'

SELECT * FROM PS_RECV_HDR_TMP2 WHERE PROCESS_INSTANCE = 28860961

SELECT 28860959, BUSINESS_UNIT, RECEIVER_ID, RECV_LN_NBR, RECV_SHIP_SEQ_NBR, DISTRIB_LINE_NUM, DST_ACCT_TYPE, APPL_JRNL_ID, ACCOUNTING_PERIOD, 
            FISCAL_YEAR, ORIGINAL_TRANS, DT_TIMESTAMP, ACCOUNT, ALTACCT, DEPTID, BUSINESS_UNIT_GL, MERCHANDISE_AMT, QTY_DS_ACCPT_SUOM, QTY_DS_ACCPT_VUOM, 
            QTY_PO, BUSINESS_UNIT_PO, PO_ID, PO_RELEASE_ID, SCHED_NBR, LINE_NBR, PO_DIST_LINE_NUM, STATISTICS_CODE, STATISTIC_AMOUNT, LEDGER_GROUP, 
            ACCOUNTING_DT, JOURNAL_ID, JOURNAL_DATE, UNPOST_SEQ, CURRENCY_CD, MONETARY_AMOUNT, FOREIGN_AMOUNT, OPEN_ITEM_STATUS, JRNL_LINE_STATUS, RT_TYPE, 
            RATE_MULT, RATE_DIV, FOREIGN_CURRENCY, JOURNAL_LINE_DATE, JRNL_LN_REF, LEDGER, MONETARY_AMT_VCHR, GL_DISTRIB_STATUS, BASE_CURRENCY, JOURNAL_LINE, 
            OPERATING_UNIT, PRODUCT, FUND_CODE, CLASS_FLD, PROGRAM_CODE, BUDGET_REF, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2, CHARTFIELD1, CHARTFIELD2, 
            CHARTFIELD3, PROJECT_ID, USER_DIST_CHAR1, CANCEL_FLAG, ENTRY_EVENT, NEXT_PRD_REVERSAL, BUDGET_DT, BUDGET_LINE_STATUS, BUDGET_HDR_STATUS, 
            KK_AMOUNT_TYPE, KK_TRAN_OVER_FLAG, KK_TRAN_OVER_OPRID, KK_TRAN_OVER_DTTM, EE_PROC_STATUS, BUSINESS_UNIT_PC, ACTIVITY_ID, ANALYSIS_TYPE, RESOURCE_TYPE, 
            RESOURCE_CATEGORY, RESOURCE_SUB_CAT 
FROM PS_RECV_LN_ACCTG 
WHERE EXISTS (SELECT 'X' FROM PS_RECV_HDR_TMP2 H WHERE H.PROCESS_INSTANCE = 28860959 AND H.BUSINESS_UNIT = PS_RECV_LN_ACCTG.BUSINESS_UNIT 
                                                                 AND H.RECEIVER_ID = PS_RECV_LN_ACCTG.RECEIVER_ID) 
     AND EXISTS ( SELECT 'X' FROM PS_RECV_LN_ACCTG B WHERE PS_RECV_LN_ACCTG.BUSINESS_UNIT = B.BUSINESS_UNIT AND PS_RECV_LN_ACCTG.RECEIVER_ID = B.RECEIVER_ID 
                                                                AND PS_RECV_LN_ACCTG.RECV_LN_NBR = B.RECV_LN_NBR 
                                                                AND PS_RECV_LN_ACCTG.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR 
                                                                AND PS_RECV_LN_ACCTG.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM 
                                                                AND PS_RECV_LN_ACCTG.APPL_JRNL_ID = B.APPL_JRNL_ID 
                                                                AND PS_RECV_LN_ACCTG.DT_TIMESTAMP = B.DT_TIMESTAMP 
                                                                AND B.DST_ACCT_TYPE <> 'RAC' 
                                                                AND B.BUDGET_LINE_STATUS <> 'V' AND B.BUDGET_LINE_STATUS <> 'W') 
     AND PS_RECV_LN_ACCTG.DST_ACCT_TYPE = 'RAC'

SELECT * FROM PS_RCV_LNACTG_TMP WHERE PROCESS_INSTANCE = 28860961
SELECT * FROM PS_RECV_SCHD_TMP WHERE PROCESS_INSTANCE = 28860961

--RECV_SCHD_TMP
SELECT H.PROCESS_INSTANCE, H.BUSINESS_UNIT, H.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.CURRENCY_CD, S.QTY_SH_NETRCV_VUOM, S.MERCHANDISE_AMT, S.BUSINESS_UNIT_PO, S.PO_ID, 
            0, 0, 1, 0, P.VENDOR_SETID, P.VENDOR_ID, S.CONVERSION_RATE 
FROM PS_RECV_HDR_TMP2 H, PS_RECV_LN_SHIP S, PS_PO_HDR P, PS_PO_LINE L, PS_RECV_LN_SHP_MTH M 
WHERE H.PROCESS_INSTANCE = 28860961
   AND S.BUSINESS_UNIT = H.BUSINESS_UNIT 
   AND S.RECEIVER_ID = H.RECEIVER_ID 
   AND S.PO_ID <> ' ' 
   AND S.RECV_SHIP_STATUS IN ('O', 'R') 
   AND S.MATCH_LINE_FLG = 'Y' 
   AND S.RECV_LN_MATCH_OPT <> 'F' 
   AND S.PRODUCTION_ID = ' ' 
   AND S.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
   AND S.PO_ID = P.PO_ID 
   AND S.BUSINESS_UNIT_PO = L.BUSINESS_UNIT 
   AND S.PO_ID = L.PO_ID 
   AND S.LINE_NBR = L.LINE_NBR 
   AND L.RECV_REQ = 'Y' 
   AND H.RECV_STATUS IN ('N', 'O', 'P','R','M') 
   AND S.MERCHANDISE_AMT <> 0 
   AND P.MATCH_STATUS_PO NOT IN ('N') 
   AND M.BUSINESS_UNIT = H.BUSINESS_UNIT 
   AND M.RECEIVER_ID = H.RECEIVER_ID 
   AND M.RECV_LN_NBR = S.RECV_LN_NBR 
   AND M.RECV_SHIP_SEQ_NBR = S.RECV_SHIP_SEQ_NBR 
GROUP BY H.PROCESS_INSTANCE, H.BUSINESS_UNIT, H.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.CURRENCY_CD, S.QTY_SH_NETRCV_VUOM, S.MERCHANDISE_AMT, 
               S.BUSINESS_UNIT_PO, S.PO_ID, P.VENDOR_SETID, P.VENDOR_ID, S.CONVERSION_RATE

--PS_RECV_SCHD_TMPB
SELECT H.PROCESS_INSTANCE, H.BUSINESS_UNIT, H.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.CURRENCY_CD, S.QTY_SH_NETRCV_VUOM, S.MERCHANDISE_AMT, S.BUSINESS_UNIT_PO, S.PO_ID, 
            MAX(M.QTY_SH_ACCPT_VUOM), SUM(M.MERCH_AMT_VCHR_B), 1, 0, P.VENDOR_SETID, P.VENDOR_ID, S.CONVERSION_RATE  
FROM PS_RECV_HDR_TMP2 H, PS_PO_HDR P, PS_PO_LINE L, PS_RECV_LN_SHIP S, PS_RECV_VCHR_MTCH M 
WHERE H.PROCESS_INSTANCE =  28860961
   AND S.BUSINESS_UNIT = H.BUSINESS_UNIT 
   AND S.RECEIVER_ID = H.RECEIVER_ID 
   AND S.MATCH_LINE_FLG = 'Y' 
   AND S.RECV_LN_MATCH_OPT <> 'F' 
   AND S.PRODUCTION_ID = ' ' 
   AND S.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
   AND S.PO_ID = P.PO_ID 
   AND S.PO_ID <> ' ' 
   AND S.BUSINESS_UNIT_PO = L.BUSINESS_UNIT 
   AND S.PO_ID = L.PO_ID 
   AND S.LINE_NBR = L.LINE_NBR 
   AND L.RECV_REQ = 'Y' 
   AND S.MERCHANDISE_AMT <> 0 
   AND S.RECV_SHIP_STATUS IN ('O', 'R') 
   AND H.RECV_STATUS IN ('N', 'O', 'P','R','M') 
   AND P.MATCH_STATUS_PO NOT IN ('N') 
   AND M.BUSINESS_UNIT = H.BUSINESS_UNIT 
   AND M.RECEIVER_ID = H.RECEIVER_ID 
   AND M.RECV_LN_NBR = S.RECV_LN_NBR 
   AND M.RECV_SHIP_SEQ_NBR = S.RECV_SHIP_SEQ_NBR 
  GROUP BY H.PROCESS_INSTANCE, H.BUSINESS_UNIT, H.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.CURRENCY_CD, S.QTY_SH_NETRCV_VUOM, S.MERCHANDISE_AMT, S.BUSINESS_UNIT_PO, S.PO_ID, 
                 P.VENDOR_SETID, P.VENDOR_ID, S.CONVERSION_RATE

--Archive
SELECT ARCHIVE_DT, COUNT(1) FROM PSPRCSRQSTARCH GROUP BY ARCHIVE_DT;

--TLSALL
SELECT C.OPRID FROM PS_PRCSDEFNGRP A, PSAUTHPRCS B, PSOPRCLS C
WHERE A.PRCSTYPE = 'Application Engine' AND A.PRCSNAME = 'PRCSYSPURGE' AND
A.PRCSGRP = B.PRCSGRP AND B.CLASSID = C.OPRCLASS

--PO_RECVACCR Trace
SELECT PROCESS_INSTANCE, BUSINESS_UNIT, RECEIVER_ID, BILL_OF_LADING, CARRIER_ID, CONTAINER_ID, COUNTRY_SHIP_FROM, DFLT_PACKSLIP_NO, DRIVER_ID, EIP_CTL_ID, 
            ERS_FLAG, ERS_INV_DT_OPT, ERS_INV_STATUS, FREIGHT_TERMS, HOLD_ASSET, HOLD_INVENTORY, IN_PROCESS_FLG, INTFC_ASSET, INTFC_INVENTORY, INTFC_MG, 
            MATCH_CNTRL_ID, MATCH_PROCESS_FLG, MATCH_STATUS_RECV, NUM_OF_CARTONS, OPRID, ORIGIN, PALLETS_RECV, PALLETS_RTN, PO_RECEIPT_FLG, PORT_OF_UNLOADING, 
            PRO_NUMBER, RECEIPT_DT, RECEIPT_TM, RECV_SOURCE, RECV_STATUS, SETID, SHIP_DATE, SHIP_FROM_LOC, SHIPMENT_NO, SHIPTO_ID, VEHICLE_ID, VENDOR_ID, 
            VENDOR_SETID, VNDR_LOC, POST_STATUS_RECV, OPRID_MODIFIED_BY, LAST_DTTM_UPDATE, USER_HDR_CHAR1, INVOICE_ID 
FROM PS_RECV_HDR WHERE PROCESS_INSTANCE = 28860895 AND IN_PROCESS_FLG = 'Y'

SELECT 28860895, BUSINESS_UNIT, RECEIVER_ID, RECV_LN_NBR, RECV_SHIP_SEQ_NBR, DISTRIB_LINE_NUM, DST_ACCT_TYPE, APPL_JRNL_ID, ACCOUNTING_PERIOD, 
            FISCAL_YEAR, ORIGINAL_TRANS, DT_TIMESTAMP, ACCOUNT, ALTACCT, DEPTID, BUSINESS_UNIT_GL, MERCHANDISE_AMT, QTY_DS_ACCPT_SUOM, QTY_DS_ACCPT_VUOM, 
            QTY_PO, BUSINESS_UNIT_PO, PO_ID, PO_RELEASE_ID, SCHED_NBR, LINE_NBR, PO_DIST_LINE_NUM, STATISTICS_CODE, STATISTIC_AMOUNT, LEDGER_GROUP, 
            ACCOUNTING_DT, JOURNAL_ID, JOURNAL_DATE, UNPOST_SEQ, CURRENCY_CD, MONETARY_AMOUNT, FOREIGN_AMOUNT, OPEN_ITEM_STATUS, JRNL_LINE_STATUS, RT_TYPE, 
            RATE_MULT, RATE_DIV, FOREIGN_CURRENCY, JOURNAL_LINE_DATE, JRNL_LN_REF, LEDGER, MONETARY_AMT_VCHR, GL_DISTRIB_STATUS, BASE_CURRENCY, JOURNAL_LINE, 
            OPERATING_UNIT, PRODUCT, FUND_CODE, CLASS_FLD, PROGRAM_CODE, BUDGET_REF, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2, CHARTFIELD1, CHARTFIELD2, 
            CHARTFIELD3, PROJECT_ID, USER_DIST_CHAR1, CANCEL_FLAG, ENTRY_EVENT, NEXT_PRD_REVERSAL, BUDGET_DT, BUDGET_LINE_STATUS, BUDGET_HDR_STATUS, 
            KK_AMOUNT_TYPE, KK_TRAN_OVER_FLAG, KK_TRAN_OVER_OPRID, KK_TRAN_OVER_DTTM, EE_PROC_STATUS, BUSINESS_UNIT_PC, ACTIVITY_ID, ANALYSIS_TYPE, RESOURCE_TYPE, 
            RESOURCE_CATEGORY, RESOURCE_SUB_CAT 
FROM PS_RECV_LN_ACCTG 
WHERE EXISTS (SELECT 'X' FROM PS_RECV_HDR_TMP2 H WHERE H.PROCESS_INSTANCE = 28860895 AND H.BUSINESS_UNIT = PS_RECV_LN_ACCTG.BUSINESS_UNIT 
                                                                 AND H.RECEIVER_ID = PS_RECV_LN_ACCTG.RECEIVER_ID) 
     AND EXISTS ( SELECT 'X' FROM PS_RECV_LN_ACCTG B WHERE PS_RECV_LN_ACCTG.BUSINESS_UNIT = B.BUSINESS_UNIT AND PS_RECV_LN_ACCTG.RECEIVER_ID = B.RECEIVER_ID 
                                                                AND PS_RECV_LN_ACCTG.RECV_LN_NBR = B.RECV_LN_NBR 
                                                                AND PS_RECV_LN_ACCTG.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR 
                                                                AND PS_RECV_LN_ACCTG.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM 
                                                                AND PS_RECV_LN_ACCTG.APPL_JRNL_ID = B.APPL_JRNL_ID 
                                                                AND PS_RECV_LN_ACCTG.DT_TIMESTAMP = B.DT_TIMESTAMP 
                                                                AND B.DST_ACCT_TYPE <> 'RAC' 
                                                                AND B.BUDGET_LINE_STATUS <> 'V' AND B.BUDGET_LINE_STATUS <> 'W') 
     AND PS_RECV_LN_ACCTG.DST_ACCT_TYPE = 'RAC'
     
     

SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND CUST_ID = '10279'

SELECT * FROM PSOPRDEFN WHERE OPRID = 'susan.bocardo'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'susan.bocardo'
--UN PeopleSoft User
--UN_HQ_Finance_User
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'cecilia.nymann'  
--UN PeopleSoft User
--UN_GL_JOURNAL_ENTRY
--UN_HQ_Manager_LV2
--UN_LEVEL2_PO
--UN_VOUCHER_LVL2
SELECT * FROM PSOPRDEFN WHERE OPRID = 'cecilia.nymann'
SELECT * FROM PSOPRDEFN WHERE OPRID = 'sharon.koh'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'sharon.koh'

--Payment details for UNU Contractors
SELECT B.BUSINESS_UNIT, TO_CHAR(B.INVOICE_DT, 'YYYY') AS INV_YEAR, TO_CHAR(B.INVOICE_DT, 'MM') AS INV_MTH, TO_CHAR(B.INVOICE_DT, 'DD') AS INV_DAY, 
            --TO_CHAR(B.INVOICE_DT, 'YYYY-MM-DD') AS INVOICE_DT, 
            B.VOUCHER_ID, B.INVOICE_ID, A.ROLEUSER AS APPROVER, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS') AS DTTM_STAMP, B.VENDOR_SETID, B.VENDOR_ID, VEN.NAME1, B.OPRID, 
            TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.POST_STATUS_AP, --B.GROSS_AMT, B.GROSS_AMT_BSE, B.TXN_CURRENCY_CD,
            C.BUSINESS_UNIT_PO AS BU_PO, C.PO_ID, C.LINE_NBR,
            (SELECT SUM(MERCH_AMT_BSE) FROM PS_PO_LINE_SHIP SHIP WHERE SHIP.BUSINESS_UNIT = POL.BUSINESS_UNIT AND SHIP.PO_ID = POL.PO_ID AND SHIP.LINE_NBR = POL.LINE_NBR) AS PO_AMT_BASE, 
            X1.XLATLONGNAME AS CANCEL_STATUS, G.CATEGORY_CD || '-' || G.DESCR, --POL.CATEGORY_ID, 
            POL.CNTRCT_SETID, POL.CNTRCT_ID, X2.XLATLONGNAME AS CNTRCT_STATUS,
            (SELECT CURRENCY_CD FROM PS_CNTRCT_LINE CLT WHERE CLT.SETID = CH.SETID AND CLT.CNTRCT_ID = CH.CNTRCT_ID AND CLT.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR) AS CONTRACT_CURR,
            (SELECT SUM(AMT_LINE_RELEASED) FROM PS_CNTRCT_LINE CL WHERE CL.SETID = CH.SETID AND CL.CNTRCT_ID = CH.CNTRCT_ID AND CL.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR) AS CONTRACT_AMT,
            DTL.UN_CNTRCT_AMT, DTL.CURRENCY_CD,
            TO_CHAR(CH.CNTRCT_BEGIN_DT,'YYYY-MM-DD') AS CNTRCT_BEGIN_DT, TO_CHAR(CH.CNTRCT_EXPIRE_DT,'YYYY-MM-DD') AS CNTRCT_EXPIRE_DT, 
            POL.CNTRCT_LINE_NBR, TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.RATE_MULT, C.RATE_DIV, C.MONETARY_AMOUNT,
            C.DEPTID, C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2
FROM PS_APPR_INST_LOG A, PS_VOUCHER B, PS_VCHR_ACCTG_LINE C, PS_PO_LINE POL, PS_VENDOR VEN, PS_CNTRCT_HDR CH, PS_ITM_CAT_TBL G, PS_SET_CNTRL_REC F, PS_UN_CNTRCT_DTLS DTL,
         PSXLATITEM X1, PSXLATITEM X2
WHERE A.APPR_INSTANCE = B.APPR_INSTANCE
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.VOUCHER_ID = C.VOUCHER_ID
     AND C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT
     AND C.PO_ID = POL.PO_ID 
     AND C.LINE_NBR = POL.LINE_NBR
     AND B.VENDOR_SETID = VEN.SETID
     AND B.VENDOR_ID = VEN.VENDOR_ID
     AND POL.CNTRCT_SETID = CH.SETID 
     AND POL.CNTRCT_ID = CH.CNTRCT_ID
     AND F.SETCNTRLVALUE = POL.BUSINESS_UNIT
     AND G.CATEGORY_ID = POL.CATEGORY_ID 
     AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
                              AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE) 
     AND G.SETID = F.SETID 
     AND F.RECNAME = 'ITM_CAT_TBL'
     AND CH.SETID = DTL.SETID
     AND CH.CNTRCT_ID = DTL.CNTRCT_ID
     AND DTL.REVISION_DT = (SELECT MAX(B_ED.REVISION_DT) FROM PS_UN_CNTRCT_DTLS B_ED WHERE DTL.SETID = B_ED.SETID AND DTL.CNTRCT_ID = B_ED.CNTRCT_ID)
     --AND CH.CNTRCT_BEGIN_DT = DTL.UN_INIT_START_DT
     AND B.BUSINESS_UNIT LIKE '6%'
     AND A.APPR_INST_STATUS = 'A'
     AND B.ENTRY_STATUS NOT IN ('T', 'X')
     --AND C.DEPTID = '11901'
     --AND C.DEPTID IN ('11001', '11901')     
     AND B.INVOICE_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND C.ACCOUNT NOT LIKE '21%'
     AND X1.FIELDNAME = 'CANCEL_STATUS'
     AND X1.FIELDVALUE = POL.CANCEL_STATUS
     AND X2.FIELDNAME = 'CNTRCT_STATUS'
     AND X2.FIELDVALUE = CH.CNTRCT_STATUS
     AND C.DST_ACCT_TYPE = 'DST'
     AND C.GL_DISTRIB_STATUS = 'D'
     AND POL.CNTRCT_ID <> ' '
     AND POL.CANCEL_STATUS NOT IN ('H', 'X')
ORDER BY 1, 2, 3, 4, B.VENDOR_ID

SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855','3856', '3859','3860', '3861')
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855','3856', '3859','3860', '3861')
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855', '3859','3860', '3861')
SELECT * FROM PS_PAY_MISC_DST WHERE PROCESS_INSTANCE = 29637514

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 29637514
SELECT * FROM ps_bus_unit_opt_ar

SELECT * FROM PS_PAYMENT_ITEM WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3855' AND ITEM_SELECTED = 'Y'
--Get the GROUP_ID for the DEPOSIT_ID in question
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855', '3859','3860', '3861')

SELECT * FROM PS_GROUP_TYPE_TBL WHERE SETID = 'SHARE'
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID IN ('6664', '6663')

SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND CUST_ID = '10684'
SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684'
SELECT * FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855', '3859','3860', '3861')
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684' AND ITEM IN (SELECT 'X' FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('3855', '3859','3860', '3861'))

SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU = '600UU' AND GROUP_ID IN ('6664', '6663')
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU = '600UU' AND GROUP_ID IN ('6664', '6663')
SELECT * FROM PS_BU_LED_GRP_TBL WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_UN_DEP_DSCR WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3855'

--Bank
SELECT * FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD IN ('60002', '60004')
SELECT * FROM PS_BANK_ACCT_DEFN WHERE SETID = 'SHARE' AND BANK_CD IN ('60002', '60004')
SELECT * FROM PS_BANK_BRANCH_TBL WHERE SETID = 'SHARE' AND BANK_CD IN ('60002', '60004')

SELECT  * FROM PSPRCSRQST WHERE PRCSNAME = 'AR_CASHCNTL'

--UNU_GL_PAYROLL_JOURNAL_STATUS     
SELECT A.BUSINESS_UNIT_IU, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DT, A.UNPOST_SEQ, A.BUSINESS_UNIT, A.TRANS_REF_NUM, A.JRNL_HDR_STATUS, A.BUDGET_HDR_STATUS, A.DESCR254, 
            TO_CHAR(CAST((A.JRNL_CREATE_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS JRNL_CREATE_DTTM, 
            TO_CHAR(CAST((A.DTTM_STAMP_SEC) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, 
            TO_CHAR(A.POSTED_DATE,'YYYY-MM-DD') AS POSTED_DT, A.PROCESS_INSTANCE
FROM PS_JRNL_HEADER A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.SOURCE = 'GP'
    AND TO_CHAR(A.JOURNAL_DATE,'YYYY') > 2011
ORDER BY 1, 2, 3, 4, 5
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'IPDP12M09'
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'IPDP12M09' AND PROJECT_ID = '00064153'

SELECT * FROM PSPRCSRQST WHERE RUNCNTLID = 'Payroll';
SELECT * FROM PS_JRNLGEN_APPL_ID WHERE JOURNAL_ID_MASK LIKE '%IP%';
SELECT * FROM PS_GP_ACC_LINE;
SELECT * FROM PS_HR_ACCTG_LINE;
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_VNDR_MGMT';
--UNU_VHCR_PD_NOT_BUDCHKD     
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.VENDOR_ID, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.POST_STATUS_AP, 
            TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, TO_CHAR(A.LAST_UPDATE_DT,'YYYY-MM-DD') AS LAST_UPD_DT, A.OPRID_LAST_UPDT, A.BUDGET_HDR_STATUS, B.PYMNT_CNT, B.PYMNT_ID, 
            TO_CHAR(B.SCHEDULED_PAY_DT,'YYYY-MM-DD') AS SCH_PAY_DT, B.POST_STATUS_AP, C.UNPOST_SEQ, C.APPL_JRNL_ID, C.POSTING_PROCESS, C.PYMNT_CNT, C.VOUCHER_LINE_NUM, 
            C.DISTRIB_LINE_NUM, C.DST_ACCT_TYPE, C.CF_BAL_LINE_NUM, C.LEDGER, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD1, C.CHARTFIELD2, 
            C.PROJECT_ID, C.JOURNAL_ID, TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, C.BUDGET_HDR_STATUS, TO_CHAR(C.BUDGET_DT,'YYYY-MM-DD') AS BUDGET_DT, C.BUDGET_LINE_STATUS, 
            C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.MONETARY_AMOUNT
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_VCHR_ACCTG_LINE C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.PYMNT_SELCT_STATUS = 'P'
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.VOUCHER_ID = C.VOUCHER_ID
     AND C.BUDGET_LINE_STATUS NOT IN ('V', 'W')
     AND A.ACCOUNTING_DT >= TO_DATE('2012-01-01','YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND C.OPERATING_UNIT LIKE :3
     --AND C.DEPTID LIKE :4
ORDER BY 1, 2, 11, 19, 20, 21

SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'PO_SCHED_DISTRIB'
SELECT * FROM PSRECDEFN WHERE RECNAME IN (SELECT DISTINCT RECNAME FROM PSPNLFIELD WHERE PNLNAME = 'PO_SCHED_DISTRIB') AND LASTUPDOPRID <> 'PPLSOFT'


--What will accrue
--Confirmation Queries
SELECT MATCH_STATUS_PO, P.* FROM PS_PO_HDR P WHERE P.BUSINESS_UNIT = '606UU' AND P.PO_ID = '0000001417'
SELECT RECV_REQ , L.* FROM PS_PO_LINE L WHERE L.BUSINESS_UNIT = '606UU' AND L.PO_ID = '0000001417'
SELECT MATCH_LINE_OPT, LS.* FROM PS_PO_LINE_SHIP LS WHERE LS.BUSINESS_UNIT = '606UU' AND LS.PO_ID = '0000001417'
SELECT KK_CLOSE_FLAG ,D.* FROM PS_PO_LINE_DISTRIB D WHERE D.BUSINESS_UNIT = '606UU' AND D.PO_ID = '0000001417'
SELECT RECV_STATUS, RECEIPT_DT, MATCH_STATUS_RECV, H.* FROM PS_RECV_HDR H WHERE H.BUSINESS_UNIT = '606UU' AND H.RECEIVER_ID = '0000000198'
SELECT PO_ID, RECV_SHIP_STATUS, MERCHANDISE_AMT, MATCH_LINE_FLG, RECV_LN_MATCH_OPT, PRODUCTION_ID, S.* 
FROM PS_RECV_LN_SHIP S WHERE S.BUSINESS_UNIT = '606UU' AND S.RECEIVER_ID = '0000000198'

--Actual Receipt Accrual
SELECT H.BUSINESS_UNIT AS BU_RECV, H.RECEIVER_ID, H.RECEIPT_DT, H.MATCH_STATUS_RECV, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, LD.DISTRIB_LINE_NUM, S.CURRENCY_CD, S.QTY_SH_NETRCV_VUOM, 
            S.MERCHANDISE_AMT, S.MERCH_AMT_BSE, S.MERCH_AMT_PO_BSE, S.BUSINESS_UNIT_PO AS BU_PO, S.PO_ID, L.LINE_NBR, D.SCHED_NBR, S.DISTRIB_MTHD_FLG,
            D.DISTRIB_LINE_NUM, G.CATEGORY_CD, G.DESCR, G.RECV_REQ, P.VENDOR_SETID, P.VENDOR_ID, S.CONVERSION_RATE, 
            LD.BUSINESS_UNIT_AM, LD.BUSINESS_UNIT_GL, LD.PROFILE_ID, LD.FINANCIAL_ASSET_SW, LD.RECV_DS_STATUS  
FROM PS_RECV_HDR H, PS_PO_HDR P, PS_PO_LINE L, PS_RECV_LN_SHIP S, PS_PO_LINE_DISTRIB D, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G, PS_RECV_LN_DISTRIB LD
WHERE H.BUSINESS_UNIT LIKE '6%'
   AND S.BUSINESS_UNIT = H.BUSINESS_UNIT 
   AND S.RECEIVER_ID = H.RECEIVER_ID 
   AND S.MATCH_LINE_FLG = 'Y' 
   AND S.RECV_LN_MATCH_OPT <> 'F' 
   AND S.PRODUCTION_ID = ' ' 
   AND S.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
   AND S.PO_ID = P.PO_ID 
   AND S.PO_ID <> ' ' 
   AND S.BUSINESS_UNIT_PO = L.BUSINESS_UNIT 
   AND S.PO_ID = L.PO_ID 
   AND S.LINE_NBR = L.LINE_NBR    
   AND S.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
   AND S.PO_ID = D.PO_ID 
   AND S.LINE_NBR = D.LINE_NBR
   AND S.BUSINESS_UNIT = LD.BUSINESS_UNIT 
   AND S.RECEIVER_ID = LD.RECEIVER_ID 
   AND S.RECV_LN_NBR = LD.RECV_LN_NBR 
   AND S.RECV_SHIP_SEQ_NBR = LD.RECV_SHIP_SEQ_NBR
   AND F.SETCNTRLVALUE = S.BUSINESS_UNIT
   AND G.SETID = F.SETID
   AND G.CATEGORY_ID = S.CATEGORY_ID
   AND F.RECNAME = 'ITM_CAT_TBL'   
   AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
          AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE)    
   AND L.RECV_REQ = 'Y' 
   AND S.MERCHANDISE_AMT <> 0 
   AND S.RECV_SHIP_STATUS IN ('O', 'R') 
   AND H.RECV_STATUS IN ('N', 'O', 'P','R','M') 
   AND P.MATCH_STATUS_PO NOT IN ('N')
   AND H.MATCH_STATUS_RECV <> 'M' 
   AND D.DST_ACCT_TYPE = 'DST'
   AND D.KK_CLOSE_FLAG <> 'Y'   
   --AND NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_ACCTG LN WHERE LN.BUSINESS_UNIT = LD.BUSINESS_UNIT AND LN.RECEIVER_ID = LD.RECEIVER_ID AND LN.RECV_LN_NBR = LD.RECV_LN_NBR AND LN.RECV_SHIP_SEQ_NBR = LD.RECV_SHIP_SEQ_NBR AND LN.DISTRIB_LINE_NUM = LD.DISTRIB_LINE_NUM)
   AND EXISTS (SELECT 'X' FROM PS_RECV_LN_SHP_MTH M WHERE S.BUSINESS_UNIT = M.BUSINESS_UNIT AND S.RECEIVER_ID  = M.RECEIVER_ID AND S.RECV_LN_NBR = M.RECV_LN_NBR AND S.RECV_SHIP_SEQ_NBR = M.RECV_SHIP_SEQ_NBR)
   AND NOT EXISTS (SELECT 'X' FROM PS_PO_LINE_SHIP LS WHERE LS.BUSINESS_UNIT = S.BUSINESS_UNIT_PO AND LS.PO_ID = S.PO_ID AND LS.LINE_NBR = S.LINE_NBR AND LS.SCHED_NBR = S.SCHED_NBR AND LS.MATCH_LINE_OPT = 'N')    
ORDER BY 1,2,3,4,5,D.LINE_NBR, D.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Version 2
--15SEPT2014
--Added columns from PO Distribution and headings for Quantity columns
SELECT H.BUSINESS_UNIT AS BU_RECV, H.RECEIVER_ID, H.RECEIPT_DT, S.OPRID, H.MATCH_STATUS_RECV, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, LD.DISTRIB_LINE_NUM, S.CURRENCY_CD, 
            S.MERCHANDISE_AMT, S.MERCH_AMT_BSE, S.MERCH_AMT_PO_BSE, S.BUSINESS_UNIT_PO AS BU_PO, S.PO_ID, L.LINE_NBR, D.SCHED_NBR, S.DISTRIB_MTHD_FLG,
            L.AMT_ONLY_FLG, D.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM, G.CATEGORY_CD, G.DESCR, G.ACCOUNT AS CAT_ACCOUNT, L.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, L.DESCR254_MIXED, 
            D.QTY_PO AS POD_QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD AS PO_DIST_CURR_CD,
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, 
            G.RECV_REQ, P.VENDOR_SETID, P.VENDOR_ID, V.NAME1, S.CONVERSION_RATE,
            LD.BUSINESS_UNIT_AM, LD.BUSINESS_UNIT_GL, LD.PROFILE_ID, LD.FINANCIAL_ASSET_SW, LD.RECV_DS_STATUS, LD.MERCHANDISE_AMT_PO, LD.LOCATION, LD.REQ_ID,
            D.QTY_PO "PO Quantity", S.QTY_LN_ASSET_SUOM "Quantity to be Asset Tracked", S.QTY_LN_INV_SUOM "Line Inv Qty", S.QTY_SH_ACCPT "Qty Accepted in Receipt UOM", 
            S.QTY_SH_ACCPT_SUOM "Accepted Quantity", S.QTY_SH_ACCPT_VUOM "Accept Quantity in Vendor UOM", S.QTY_SH_NETRCV_VUOM "Net Receipt Quantity", 
            S.QTY_SH_RECVD "Qty Received in Receipt UOM", S.QTY_SH_RECVD_SUOM "Receipt Quantity", S.QTY_SH_RECVD_VUOM "Receipt Quantity in Vendor UOM", 
            S.REJECT_ACTION, S.REJECT_REASON, S.RECEIPT_ALLOC_TYPE, S.RECEIPT_DTTM, S.RECEIPT_UM, S.RECEIVE_UOM, S.RECV_LN_MATCH_OPT, S.RECV_SHIP_STATUS, S.RECV_STOCK_UOM, 
            S.SERIAL_CONTROL, S.SERIAL_STATUS, S.SHIP_DATE_STATUS, S.SHIP_QTY_STATUS, S.UNIT_MEASURE_STD
FROM PS_RECV_HDR H, PS_PO_HDR P, PS_PO_LINE L, PS_RECV_LN_SHIP S, PS_PO_LINE_DISTRIB D, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G, PS_RECV_LN_DISTRIB LD,
          PS_MASTER_ITEM_TBL ITM, PS_VENDOR V
WHERE H.BUSINESS_UNIT LIKE '6%'
   AND S.BUSINESS_UNIT = H.BUSINESS_UNIT
   AND S.RECEIVER_ID = H.RECEIVER_ID
   AND S.MATCH_LINE_FLG = 'Y' 
   AND S.RECV_LN_MATCH_OPT <> 'F' 
   AND S.PRODUCTION_ID = ' ' 
   AND S.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
   AND S.PO_ID = P.PO_ID 
   AND S.PO_ID <> ' ' 
   AND S.BUSINESS_UNIT_PO = L.BUSINESS_UNIT 
   AND S.PO_ID = L.PO_ID 
   AND S.LINE_NBR = L.LINE_NBR    
   AND S.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
   AND S.PO_ID = D.PO_ID 
   AND S.LINE_NBR = D.LINE_NBR
   --Added 10Mar2015
   AND S.SCHED_NBR = D.SCHED_NBR
   --End
   AND S.BUSINESS_UNIT = LD.BUSINESS_UNIT 
   AND S.RECEIVER_ID = LD.RECEIVER_ID 
   AND S.RECV_LN_NBR = LD.RECV_LN_NBR 
   AND S.RECV_SHIP_SEQ_NBR = LD.RECV_SHIP_SEQ_NBR
   --Added 10Mar2015
   AND LD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
   --End
   AND F.SETCNTRLVALUE = S.BUSINESS_UNIT
   AND G.SETID = F.SETID
   AND G.CATEGORY_ID = S.CATEGORY_ID
   AND F.RECNAME = 'ITM_CAT_TBL'   
   AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
          AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE)   
   AND L.ITM_SETID = ITM.SETID (+)
   AND L.INV_ITEM_ID = ITM.INV_ITEM_ID (+)
   AND P.VENDOR_SETID = V.SETID
   AND P.VENDOR_ID = V.VENDOR_ID     
   AND L.RECV_REQ = 'Y'
   AND S.MERCHANDISE_AMT <> 0 
   AND S.RECV_SHIP_STATUS IN ('O', 'R') 
   AND H.RECV_STATUS IN ('N', 'O', 'P','R','M') 
   AND P.MATCH_STATUS_PO NOT IN ('N')
   AND H.MATCH_STATUS_RECV <> 'M' 
   AND D.DST_ACCT_TYPE = 'DST'
   AND D.KK_CLOSE_FLAG <> 'Y'
   --AND NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_ACCTG LN WHERE LN.BUSINESS_UNIT = LD.BUSINESS_UNIT AND LN.RECEIVER_ID = LD.RECEIVER_ID AND LN.RECV_LN_NBR = LD.RECV_LN_NBR AND LN.RECV_SHIP_SEQ_NBR = LD.RECV_SHIP_SEQ_NBR AND LN.DISTRIB_LINE_NUM = LD.DISTRIB_LINE_NUM)
   AND EXISTS (SELECT 'X' FROM PS_RECV_LN_SHP_MTH M WHERE S.BUSINESS_UNIT = M.BUSINESS_UNIT AND S.RECEIVER_ID  = M.RECEIVER_ID AND S.RECV_LN_NBR = M.RECV_LN_NBR AND S.RECV_SHIP_SEQ_NBR = M.RECV_SHIP_SEQ_NBR)
   AND NOT EXISTS (SELECT 'X' FROM PS_PO_LINE_SHIP LS WHERE LS.BUSINESS_UNIT = S.BUSINESS_UNIT_PO AND LS.PO_ID = S.PO_ID AND LS.LINE_NBR = S.LINE_NBR AND LS.SCHED_NBR = S.SCHED_NBR AND LS.MATCH_LINE_OPT = 'N')    
ORDER BY 1,2,3,4,5,D.LINE_NBR, D.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Generate Journals Request for RA
SELECT * FROM PS_JRNLGEN_REQUEST WHERE ACCTG_DEF_NAME = 'RECACCRL' ORDER BY DTTM_STAMP_SEC DESC;

--PORC700 Main Query
--Confirm with Actual Receipt Accrual Query
SELECT C.BUSINESS_UNIT_GL, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, C.RECEIPT_DT, C.VENDOR_ID, D.NAME1, 
            C.ACCRUAL_YEAR, C.ACCR_PERIOD, C.MERCHANDISE_AMT AS PURCHASE_AMT, NVL(ROUND((C.MERCHANDISE_AMT * C.RATE_MULT)/C.RATE_DIV, 2), 0) AS PURCH_AMT_BSE, 
            C.QTY_DS_ACCPT_VUOM, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.PO_DIST_LINE_NUM,
            C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.CHARTFIELD2,
            C.MONETARY_AMOUNT, C.CURRENCY_CD, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.MONETARY_AMT_VCHR,  
            C.BUSINESS_UNIT_AM, C.QTY_PO, C.PRICE_PO, C.INV_ITEM_ID, C.RECEIPT_UM, C.DESCR254_MIXED, F.BASE_CURRENCY,
            C.RATE_MULT, C.RATE_DIV, DT_TIMESTAMP, C.CUR_EXCHNG_RT, C.EXCHNG_RT_INTR_BSE
FROM PS_RECV_LN_RPT C, PS_VENDOR D, PS_CUR_RT_TBL E, PS_BUS_UNIT_TBL_GL F
WHERE C.VENDOR_SETID = D.SETID
    AND C.VENDOR_ID = D.VENDOR_ID
    AND C.BUSINESS_UNIT_GL = F.BUSINESS_UNIT
    AND E.FROM_CUR = C.CURRENCY_CD
    AND E.TO_CUR = F.BASE_CURRENCY
    AND E.CUR_RT_TYPE  = C.RT_TYPE
    AND E.EFFDT = (SELECT MAX(E1.EFFDT) FROM PS_CUR_RT_TBL E1 WHERE E.FROM_CUR = E1.FROM_CUR AND E.TO_CUR = E1.TO_CUR AND E.CUR_RT_TYPE = E1.CUR_RT_TYPE AND E1.EFFDT <= C.RECEIPT_DT)
    AND E.EFF_STATUS = 'A'
    AND C.DST_ACCT_TYPE = 'DST'
    AND D.SETID = 'UNUNI'
    --AND D.VENDOR_ID = '0000000736'
ORDER BY 2,3,4,5,6;

--PORC700
--Version 2
--Matches with online page "Accrual Accounting Entry"
SELECT C.BUSINESS_UNIT_GL, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, C.RECEIPT_DT, C.VENDOR_ID, D.NAME1, 
            C.ACCRUAL_YEAR, C.ACCR_PERIOD, 
            C.MERCHANDISE_AMT AS PURCHASE_AMT, NVL(ROUND((C.MERCHANDISE_AMT * C.RATE_MULT)/C.RATE_DIV, 2), 0) AS PURCH_AMT_BSE, 
            NVL(SUM(G.QTY_VCHR), 0) AS QTY_VCHR, NVL(SUM(G.MERCH_AMT_BSE), 0) AS AMOUNT_INVOICED, 
            --NVL(NVL(ROUND(SUM((C.MERCHANDISE_AMT * C.RATE_MULT)/C.RATE_DIV), 2), 0) - NVL(ROUND(SUM(G.MERCH_AMT_BSE), 2), 0), 0) AS AMT_NOT_INVOICED,            
            C.QTY_DS_ACCPT_VUOM, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.PO_DIST_LINE_NUM,
            C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.CHARTFIELD2,
            C.MONETARY_AMOUNT, NVL(ROUND(C.FOREIGN_AMOUNT * E.CUR_EXCHNG_RT, 2), 0) AS MONETARY_AMT_LATEST, 
            C.CURRENCY_CD, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.QTY_PO, C.PRICE_PO, C.INV_ITEM_ID, C.RECEIPT_UM, C.DESCR254_MIXED, F.BASE_CURRENCY,
            C.RATE_MULT, C.RATE_DIV, DT_TIMESTAMP, C.CUR_EXCHNG_RT, C.EXCHNG_RT_INTR_BSE, NVL(ROUND(E.CUR_EXCHNG_RT, 4), 0) AS CURRENT_RATE
FROM PS_VENDOR D, PS_CUR_RT_TBL E, PS_BUS_UNIT_TBL_GL F, 
         ((PS_RECV_LN_RPT C LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID 
                                                                                             AND G.RECV_LN_NBR = C.RECV_LN_NBR AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR 
                                                                                             AND G.DISTRIB_LINE_NUM  = C.DISTRIB_LINE_NUM AND G.BUSINESS_UNIT_PO = C.BUSINESS_UNIT_PO 
                                                                                             AND G.PO_ID = C.PO_ID AND G.LINE_NBR = C.LINE_NBR AND G.SCHED_NBR = C.SCHED_NBR 
                                                                                             AND G.PO_DIST_LINE_NUM = C.PO_DIST_LINE_NUM
                                                                                             AND NOT EXISTS (SELECT 'X' FROM PS_VOUCHER V WHERE V.BUSINESS_UNIT = G.BUSINESS_UNIT AND V.VOUCHER_ID = G.VOUCHER_ID 
                                                                                                                                                                               AND V.ENTRY_STATUS IN ('X','T')))
                                        LEFT OUTER JOIN PS_RECV_VCHR_MTCH J ON J.BUSINESS_UNIT = G.BUSINESS_UNIT_RECV AND J.RECEIVER_ID = G.RECEIVER_ID 
                                                                                                     AND J.RECV_LN_NBR = G.RECV_LN_NBR AND J.RECV_SHIP_SEQ_NBR = G.RECV_SHIP_SEQ_NBR 
                                                                                                     AND J.BUSINESS_UNIT_PO = G.BUSINESS_UNIT_PO AND J.PO_ID = G.PO_ID AND J.LINE_NBR = G.LINE_NBR 
                                                                                                     AND J.SCHED_NBR = G.SCHED_NBR AND J.BUSINESS_UNIT_AP = G.BUSINESS_UNIT 
                                                                                                     AND J.VOUCHER_ID = G.VOUCHER_ID AND J.VOUCHER_LINE_NUM = G.VOUCHER_LINE_NUM)
WHERE C.VENDOR_SETID = D.SETID
    AND C.VENDOR_ID = D.VENDOR_ID
    AND C.BUSINESS_UNIT_GL = F.BUSINESS_UNIT
    --AND E.FROM_CUR = C.CURRENCY_CD
    AND E.FROM_CUR = C.FOREIGN_CURRENCY
    AND E.TO_CUR = F.BASE_CURRENCY
    AND E.CUR_RT_TYPE = C.RT_TYPE
    AND E.EFFDT = (SELECT MAX(E1.EFFDT) FROM PS_CUR_RT_TBL E1 WHERE E.FROM_CUR = E1.FROM_CUR AND E.TO_CUR = E1.TO_CUR AND E.CUR_RT_TYPE = E1.CUR_RT_TYPE 
                                                                                                            --AND E1.EFFDT <= C.RECEIPT_DT
                                                                                                            AND E1.EFFDT <= SYSDATE)
    AND E.EFF_STATUS = 'A'
    AND C.DST_ACCT_TYPE = 'DST'
    AND D.SETID = 'UNUNI'
    --AND D.VENDOR_ID = '0000000736'
GROUP BY C.BUSINESS_UNIT_GL, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, C.RECEIPT_DT, C.VENDOR_ID, D.NAME1, 
               C.ACCRUAL_YEAR, C.ACCR_PERIOD, 
               C.MERCHANDISE_AMT, NVL(ROUND((C.MERCHANDISE_AMT * C.RATE_MULT)/C.RATE_DIV, 2), 0),
               C.QTY_DS_ACCPT_VUOM, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.PO_DIST_LINE_NUM,
               C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.CHARTFIELD2,
               C.MONETARY_AMOUNT, C.CURRENCY_CD, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.MONETARY_AMT_VCHR,  
               C.BUSINESS_UNIT_AM, C.QTY_PO, C.PRICE_PO, C.INV_ITEM_ID, C.RECEIPT_UM, C.DESCR254_MIXED, F.BASE_CURRENCY,
               C.RATE_MULT, C.RATE_DIV, DT_TIMESTAMP, C.CUR_EXCHNG_RT, C.EXCHNG_RT_INTR_BSE, E.CUR_EXCHNG_RT
ORDER BY 2,3,4,5,6;

--Report on Receipt Accrual Accounting Line Table 
--Month wise split on PS_RECV_LN_ACCTG
--For DST_ACCT_TYPE = 'DST'
SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD, 
            SUM(X.TOTAL_AMT) AS TOTAL_AMT,
            SUM(X.JAN) JAN_RECV, SUM(X.FEB) FEB_RECV, SUM(X.MAR) MAR_RECV, SUM(X.APR) APR_RECV, SUM(X.MAY) MAY_RECV, SUM(X.JUN) JUN_RECV, 
            SUM(X.JUL) JUL_RECV, SUM(X.AUG) AUG_RECV, SUM(X.SEP) SEP_RECV, SUM(X.OCT) OCT_RECV, SUM(X.NOV) NOV_RECV, SUM(X.DEC) DEC_RECV 
FROM
(SELECT RECV.BUSINESS_UNIT, RECV.OPERATING_UNIT, RECV.FUND_CODE, RECV.DEPTID, RECV.ACCOUNT, RECV.PROJECT_ID, RECV.ACTIVITY_ID, RECV.CHARTFIELD2, 
             RECV.CURRENCY_CD, SUM(RECV.MONETARY_AMOUNT) AS TOTAL_AMT
           , CASE RECV.ACCOUNTING_PERIOD WHEN 1 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JAN
           , CASE RECV.ACCOUNTING_PERIOD WHEN 2 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS FEB 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 3 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS MAR 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 4 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS APR 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 5 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS MAY 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 6 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JUN 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 7 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JUL 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 8 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS AUG 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 9 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS SEP 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 10 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS OCT 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 11 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS NOV 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 12 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS DEC 
FROM PS_RECV_LN_ACCTG RECV
WHERE RECV.BUSINESS_UNIT_GL = 'UNUNI'
    AND RECV.DST_ACCT_TYPE = 'DST'
    AND RECV.FISCAL_YEAR = '2014'     
GROUP BY RECV.BUSINESS_UNIT, RECV.OPERATING_UNIT, RECV.FUND_CODE, RECV.DEPTID, RECV.ACCOUNT, RECV.PROJECT_ID, RECV.ACTIVITY_ID, RECV.CHARTFIELD2, 
                RECV.CURRENCY_CD, RECV.ACCOUNTING_PERIOD) X
WHERE X.BUSINESS_UNIT LIKE '6%'
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD
ORDER BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD;

--For DST_ACCT_TYPE = 'RAC'
SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD, 
            SUM(X.TOTAL_AMT) AS TOTAL_AMT,
            SUM(X.JAN) JAN_RECV, SUM(X.FEB) FEB_RECV, SUM(X.MAR) MAR_RECV, SUM(X.APR) APR_RECV, SUM(X.MAY) MAY_RECV, SUM(X.JUN) JUN_RECV, 
            SUM(X.JUL) JUL_RECV, SUM(X.AUG) AUG_RECV, SUM(X.SEP) SEP_RECV, SUM(X.OCT) OCT_RECV, SUM(X.NOV) NOV_RECV, SUM(X.DEC) DEC_RECV 
FROM
(SELECT RECV.BUSINESS_UNIT, RECV.OPERATING_UNIT, RECV.FUND_CODE, RECV.DEPTID, RECV.ACCOUNT, RECV.PROJECT_ID, RECV.ACTIVITY_ID, RECV.CHARTFIELD2, 
             RECV.CURRENCY_CD, SUM(RECV.MONETARY_AMOUNT) AS TOTAL_AMT
           , CASE RECV.ACCOUNTING_PERIOD WHEN 1 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JAN
           , CASE RECV.ACCOUNTING_PERIOD WHEN 2 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS FEB 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 3 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS MAR 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 4 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS APR 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 5 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS MAY 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 6 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JUN 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 7 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS JUL 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 8 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS AUG 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 9 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS SEP 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 10 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS OCT 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 11 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS NOV 
           , CASE RECV.ACCOUNTING_PERIOD WHEN 12 THEN SUM(RECV.MONETARY_AMOUNT) ELSE 0 END AS DEC 
FROM PS_RECV_LN_ACCTG RECV
WHERE RECV.BUSINESS_UNIT_GL = 'UNUNI'
    AND RECV.DST_ACCT_TYPE = 'RAC'
    AND RECV.FISCAL_YEAR = '2014'     
GROUP BY RECV.BUSINESS_UNIT, RECV.OPERATING_UNIT, RECV.FUND_CODE, RECV.DEPTID, RECV.ACCOUNT, RECV.PROJECT_ID, RECV.ACTIVITY_ID, RECV.CHARTFIELD2, 
                RECV.CURRENCY_CD, RECV.ACCOUNTING_PERIOD) X
WHERE X.BUSINESS_UNIT LIKE '6%'
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD
ORDER BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, X.CURRENCY_CD;

--Verification Queries
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_RECV = '600UU' AND RECEIVER_ID = '0000001779'
SELECT * FROM PS_RECV_VCHR_MTCH WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID = '0000001779'
SELECT * FROM PS_RECV_LN_ACCTG WHERE BUSINESS_UNIT = '606UU' AND RECEIVER_ID = '0000000335'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000001987'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000001987'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_RECV = '611UU' AND RECEIVER_ID = '0000000391'
--#Amount_Not_Invoiced = #Purchase_Amt - #Amount_Invoiced

--PORC700
--Calculate Invoiced Amount
--SELECT SUM(D.QTY_VCHR) AS QTY_VCHR, SUM(D.MERCH_AMT_BSE) AS AMOUNT_INVOICED
SELECT D.QTY_VCHR, D.MERCH_AMT_BSE, D.*
FROM PS_DISTRIB_LINE D, PS_RECV_VCHR_MTCH J
WHERE D.BUSINESS_UNIT_RECV = '606UU'
    AND D.RECEIVER_ID = '0000000335'
    --AND D.RECV_LN_NBR = 1
    --AND D.RECV_SHIP_SEQ_NBR = 1
    --AND D.DISTRIB_LINE_NUM  = 1
    --AND D.BUSINESS_UNIT_PO = '611UU'
    --AND D.PO_ID = '0000003770'
    --AND D.LINE_NBR = 1
    --AND D.SCHED_NBR = 1    
    AND J.BUSINESS_UNIT = D.BUSINESS_UNIT_RECV
    AND J.RECEIVER_ID = D.RECEIVER_ID
    AND J.RECV_LN_NBR = D.RECV_LN_NBR
    AND J.RECV_SHIP_SEQ_NBR = D.RECV_SHIP_SEQ_NBR
    AND J.BUSINESS_UNIT_PO = D.BUSINESS_UNIT_PO
    AND J.PO_ID = D.PO_ID
    AND J.LINE_NBR = D.LINE_NBR
    AND J.SCHED_NBR = D.SCHED_NBR
    --PORC700 SQR does not use the below joins. The joins below have been included to understand how negative amounts are arrived at
    AND J.BUSINESS_UNIT_AP = D.BUSINESS_UNIT
    AND J.VOUCHER_ID = D.VOUCHER_ID
    AND J.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM
ORDER BY 1,2;

--SELECT * FROM PS_RECV_LN_SHIP WHERE BUSINESS_UNIT LIKE '6%'
--PO/Receipt Status for 2009, 2010 & 2011
SELECT DISTINCT H.BUSINESS_UNIT AS BU_RECV, H.RECEIVER_ID, TO_CHAR(H.RECEIPT_DT,'YYYY-MM-DD') AS RECEIPT_DT,  TO_CHAR(H.RECEIPT_DT,'YYYY') AS YEAR, H.VENDOR_ID, 
            P.BUSINESS_UNIT AS BU_PO, P.PO_ID, X1.XLATLONGNAME AS PO_STATUS 
FROM PS_RECV_HDR H, PS_RECV_LN_SHIP S, PS_PO_HDR P, PSXLATITEM X1 
WHERE S.BUSINESS_UNIT = H.BUSINESS_UNIT 
     AND S.RECEIVER_ID = H.RECEIVER_ID
     AND S.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
     AND S.PO_ID = P.PO_ID
     AND X1.FIELDNAME (+) = 'PO_STATUS'
     AND X1.FIELDVALUE (+) = P.PO_STATUS
     AND X1.EFF_STATUS (+)  = 'A' 
     AND H.BUSINESS_UNIT LIKE '6%'
      AND TO_CHAR(H.RECEIPT_DT,'YYYY') IN ('2009', '2010', '2011')
ORDER BY 1,2,3,4 

--Modified POY5020_RCV_ACCOUNT_DETAIL
SELECT B.BUSINESS_UNIT, B.RECEIVER_ID, P.BUSINESS_UNIT AS BU_PO, P.PO_ID, X1.XLATLONGNAME AS PO_STATUS, B.VENDOR_ID, 
            TO_CHAR(B.RECEIPT_DT,'YYYY-MM-DD') AS RECEIPT_DT, TO_CHAR(B.RECEIPT_DT,'YYYY') AS YEAR, X2.XLATLONGNAME AS RECV_STATUS, D.NAME1, 
            B.BILL_OF_LADING, B.HOLD_ASSET, B.HOLD_INVENTORY, B.MATCH_STATUS_RECV, B.OPRID, E.RECV_SHIP_SEQ_NBR, TO_CHAR(E.DUE_DT,'YYYY-MM-DD') AS DUE_DT, E.MERCHANDISE_AMT, 
            E.QTY_SH_RECVD_VUOM, E.QTY_SH_ACCPT_VUOM, E.QTY_SH_REJCT_VUOM, X3.XLATLONGNAME AS RECV_SHIP_STATUS,
            E.SHIPTO_ID, F.DISTRIB_LINE_NUM, F.CHARTFIELD_STATUS, TO_CHAR(F.DELIVERED_DT,'YYYY-MM-DD') AS DELIVERED_DT, 
            F.DELIVERED_FLG, F.DELIVERED_TO, F.LOCATION, F.MERCHANDISE_AMT, F.QTY_DS_ACCPT_VUOM, E.RECV_LN_NBR, E.INV_ITEM_ID, E.DESCR254_MIXED, 
            F.BUSINESS_UNIT_GL, F.ACCOUNT, F.DEPTID, F.OPERATING_UNIT, F.FUND_CODE, F.PROJECT_ID, F.ACTIVITY_ID, F.AFFILIATE, F.CHARTFIELD1, F.CHARTFIELD2
FROM PS_RECV_HDR B, PS_VENDOR D, PS_RECV_LN_SHIP E, PS_RECV_LN_DISTRIB F, PS_PO_HDR P, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE B.VENDOR_SETID = D.SETID
     AND B.VENDOR_ID = D.VENDOR_ID
     AND B.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND B.RECEIVER_ID = E.RECEIVER_ID
     AND E.BUSINESS_UNIT = F.BUSINESS_UNIT
     AND E.RECEIVER_ID = F.RECEIVER_ID
     AND E.RECV_LN_NBR = F.RECV_LN_NBR
     AND E.RECV_SHIP_SEQ_NBR = F.RECV_SHIP_SEQ_NBR
     AND E.BUSINESS_UNIT_PO = P.BUSINESS_UNIT 
     AND E.PO_ID = P.PO_ID
     AND X1.FIELDNAME (+) = 'PO_STATUS'
     AND X1.FIELDVALUE (+) = P.PO_STATUS
     AND X1.EFF_STATUS (+)  = 'A' 
     AND X2.FIELDNAME (+) = 'RECV_STATUS'
     AND X2.FIELDVALUE (+) = B.RECV_STATUS
     AND X2.EFF_STATUS (+)  = 'A' 
     AND B.BUSINESS_UNIT LIKE '6%'
     AND X3.FIELDNAME (+) = 'RECV_SHIP_STATUS'
     AND X3.FIELDVALUE (+) = E.RECV_SHIP_STATUS
     AND X3.EFF_STATUS (+)  = 'A' 
     --AND E.RECV_SHIP_STATUS NOT IN ('X','C')
     AND TO_CHAR(B.RECEIPT_DT,'YYYY') IN ('2009', '2010', '2011')

--UNU Contracts being paid 2012
SELECT B.BUSINESS_UNIT, TO_CHAR(B.INVOICE_DT, 'YYYY') AS INV_YEAR, TO_CHAR(B.INVOICE_DT, 'MM') AS INV_MTH, TO_CHAR(B.INVOICE_DT, 'DD') AS INV_DAY, 
            --TO_CHAR(B.INVOICE_DT, 'YYYY-MM-DD') AS INVOICE_DT, 
            B.VOUCHER_ID, B.INVOICE_ID, A.ROLEUSER AS APPROVER, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS') AS DTTM_STAMP, B.VENDOR_SETID, B.VENDOR_ID, VEN.NAME1, B.OPRID, 
            TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.POST_STATUS_AP, --B.GROSS_AMT, B.GROSS_AMT_BSE, B.TXN_CURRENCY_CD,
            C.BUSINESS_UNIT_PO AS BU_PO, C.PO_ID, C.LINE_NBR,
            (SELECT CURRENCY_CD FROM PS_PO_LINE_SHIP SHIP1 WHERE SHIP1.BUSINESS_UNIT = POL.BUSINESS_UNIT AND SHIP1.PO_ID = POL.PO_ID AND SHIP1.LINE_NBR = POL.LINE_NBR) AS PO_LCURR,
            (SELECT SUM(MERCHANDISE_AMT) FROM PS_PO_LINE_SHIP SHIP2 WHERE SHIP2.BUSINESS_UNIT = POL.BUSINESS_UNIT AND SHIP2.PO_ID = POL.PO_ID AND SHIP2.LINE_NBR = POL.LINE_NBR) AS PO_AMT_LC,
            (SELECT SUM(MERCH_AMT_BSE) FROM PS_PO_LINE_SHIP SHIP WHERE SHIP.BUSINESS_UNIT = POL.BUSINESS_UNIT AND SHIP.PO_ID = POL.PO_ID AND SHIP.LINE_NBR = POL.LINE_NBR) AS PO_AMT_BASE, 
            X1.XLATLONGNAME AS CANCEL_STATUS, G.CATEGORY_CD || '-' || G.DESCR, --POL.CATEGORY_ID, 
            POL.CNTRCT_SETID, POL.CNTRCT_ID, X2.XLATLONGNAME AS CNTRCT_STATUS,
            (SELECT CURRENCY_CD FROM PS_CNTRCT_LINE CLT WHERE CLT.SETID = CH.SETID AND CLT.CNTRCT_ID = CH.CNTRCT_ID AND CLT.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR) AS CONTRACT_CURR,
            (SELECT SUM(AMT_LINE_RELEASED) FROM PS_CNTRCT_LINE CL WHERE CL.SETID = CH.SETID AND CL.CNTRCT_ID = CH.CNTRCT_ID AND CL.CNTRCT_LINE_NBR = POL.CNTRCT_LINE_NBR) AS CONTRACT_AMT,
            DTL.UN_CNTRCT_AMT, DTL.CURRENCY_CD,
            TO_CHAR(CH.CNTRCT_BEGIN_DT,'YYYY-MM-DD') AS CNTRCT_BEGIN_DT, TO_CHAR(CH.CNTRCT_EXPIRE_DT,'YYYY-MM-DD') AS CNTRCT_EXPIRE_DT, 
            POL.CNTRCT_LINE_NBR, TO_CHAR(B.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.RATE_MULT, C.RATE_DIV, C.MONETARY_AMOUNT,
            C.DEPTID, C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2
FROM PS_APPR_INST_LOG A, PS_VOUCHER B, PS_VCHR_ACCTG_LINE C, PS_PO_LINE POL, PS_VENDOR VEN, PS_CNTRCT_HDR CH, PS_ITM_CAT_TBL G, PS_SET_CNTRL_REC F, PS_UN_CNTRCT_DTLS DTL,
         PSXLATITEM X1, PSXLATITEM X2
WHERE A.APPR_INSTANCE = B.APPR_INSTANCE
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.VOUCHER_ID = C.VOUCHER_ID
     AND C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT
     AND C.PO_ID = POL.PO_ID 
     AND C.LINE_NBR = POL.LINE_NBR
     AND B.VENDOR_SETID = VEN.SETID
     AND B.VENDOR_ID = VEN.VENDOR_ID
     AND POL.CNTRCT_SETID = CH.SETID 
     AND POL.CNTRCT_ID = CH.CNTRCT_ID
     AND F.SETCNTRLVALUE = POL.BUSINESS_UNIT
     AND G.CATEGORY_ID = POL.CATEGORY_ID 
     AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
                              AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE) 
     AND G.SETID = F.SETID 
     AND F.RECNAME = 'ITM_CAT_TBL'
     AND CH.SETID = DTL.SETID
     AND CH.CNTRCT_ID = DTL.CNTRCT_ID
     AND DTL.REVISION_DT = (SELECT MAX(B_ED.REVISION_DT) FROM PS_UN_CNTRCT_DTLS B_ED WHERE DTL.SETID = B_ED.SETID AND DTL.CNTRCT_ID = B_ED.CNTRCT_ID)
     --AND CH.CNTRCT_BEGIN_DT = DTL.UN_INIT_START_DT
     AND B.BUSINESS_UNIT LIKE '6%'
     AND A.APPR_INST_STATUS = 'A'
     AND B.ENTRY_STATUS NOT IN ('T', 'X')
     --AND C.DEPTID = '11901'
     --AND C.DEPTID IN ('11001', '11901')     
     AND B.INVOICE_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND C.ACCOUNT NOT LIKE '21%'
     AND X1.FIELDNAME = 'CANCEL_STATUS'
     AND X1.FIELDVALUE = POL.CANCEL_STATUS
     AND X2.FIELDNAME = 'CNTRCT_STATUS'
     AND X2.FIELDVALUE = CH.CNTRCT_STATUS
     AND C.DST_ACCT_TYPE = 'DST'
     AND C.GL_DISTRIB_STATUS = 'D'
     AND POL.CNTRCT_ID <> ' '
     AND POL.CANCEL_STATUS NOT IN ('H', 'X')
ORDER BY 1, 2, 3, 4, B.VENDOR_ID

--AM Accounting Entry Templates
SELECT A.SETID, B.DESCR, A.CATEGORY, C.DESCR, A.COST_TYPE, X1.XLATLONGNAME AS TRANS_TYPE, A.TRANS_CODE, A.APPL_JRNL_ID, X2.XLATLONGNAME AS DISTRIBUTION_TYPE, 
            D.ACCOUNT_SIGN, D.ACCOUNT, E.DESCR, D.BOOK_CODE, A.ACCT_ENT_TMPL_ID
FROM PS_DIST_TMPL_TBL A, PS_SP_SETID_NONVW B, PS_CATEGORY_TBL C, PS_DIST_TMPLLN_TBL D, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F, PS_SETID_TBL G, PSXLATITEM X1, PSXLATITEM X2
WHERE B.SETID = A.SETID 
    AND C.CATEGORY = A.CATEGORY 
    AND C.SETID = A.SETID 
    AND G.SETID = F.SETID
    AND X1.FIELDNAME (+) = 'TRANS_TYPE'
     AND X1.FIELDVALUE (+) = A.TRANS_TYPE
     AND X1.EFF_STATUS (+)  = 'A' 
     AND X2.FIELDNAME (+) = 'DISTRIBUTION_TYPE'
     AND X2.FIELDVALUE (+) = D.DISTRIBUTION_TYPE
     AND X2.EFF_STATUS (+)  = 'A' 
    AND ( C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_CATEGORY_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.CATEGORY = C_ED.CATEGORY AND C_ED.EFFDT <= SYSDATE) 
     AND C.EFF_STATUS = 'A' 
     AND A.SETID = 'SHARE' 
     AND A.SETID = D.SETID 
     --AND A.CATEGORY = :2 
     AND A.CATEGORY = D.CATEGORY 
     AND A.COST_TYPE = D.COST_TYPE 
     AND A.TRANS_TYPE = D.TRANS_TYPE 
     AND A.TRANS_CODE = D.TRANS_CODE 
     AND A.ACCT_ENT_TMPL_ID = D.ACCT_ENT_TMPL_ID 
     AND E.ACCOUNT = D.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL' 
     AND F.SETCNTRLVALUE = D.SETID ) 
ORDER BY 1, 3, 14, 5, 6, 7;

--Interface Receipt option on User Preferences
SELECT * FROM PS_OPR_DEF_TBL_PM WHERE INTFC_RECEIPT = 'Y'

--Add Roles from another profile
--INSERT INTO PSROLEUSER
--(SELECT 'prakash.prashant', B.ROLENAME, 'N'
--FROM PSROLEUSER B
--WHERE B.ROLEUSER = 'raja.tanuku'
--AND NOT EXISTS
--(SELECT 'Y'
--FROM PSROLEUSER C
--WHERE C.ROLEUSER = 'prakash.prashant' AND C.ROLENAME = B.ROLENAME));

--After changing the profile run this update statement to clear the AUDIT
--UPDATE PSOPRDEFN SET LASTUPDDTTM = TO_TIMESTAMP ('02/07/2012 11:02:15', 'DD/MM/YYYY HH12.MI.SS.FF'), LASTUPDOPRID = 'raja.tanuku' WHERE LASTUPDOPRID = 'prakash.prashant'

--PO_RECVPUSH
SELECT DISTINCT MAINJOBNAME FROM PSPRCSRQST WHERE PRCSNAME = 'PO_RECVPUSH' --AND OPRID IN ('CMBATCH', 'sarath.patibandla')
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'INTFAPAM'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AMPS1000'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AMIF1000'
SELECT * FROM PSROLEDEFN WHERE ROLENAME LIKE 'UN_AM%'
SELECT DISTINCT RUNCNTLID FROM PSPRCSRQST WHERE MAINJOBNAME = 'RECV_02' AND OPRID = 'rama.datta'
--Duplicate Invoice Checking
SELECT * FROM PS_VCH_DUP_INV_REG WHERE BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_VCHR_HDR_QV WHERE BUSINESS_UNIT LIKE '6%'
--INTFAPAM
SELECT * FROM PS_INTFC_APAM_OPT WHERE OPRID = 'CMBATCH'
SELECT * FROM PS_INTFC_APAM_RQST WHERE OPRID = 'CMBATCH'
SELECT * FROM PSPRCSRQST WHERE RUNCNTLID = 'AM_INTFAPAM_N_01'
--PS_VCHR_APAM_VW
SELECT B.BUSINESS_UNIT, B.VOUCHER_ID, B.INVOICE_ID 
FROM PS_VOUCHER B WHERE B.BUSINESS_UNIT LIKE '6%'
AND ((B.MATCH_ACTION='N') OR (B.MATCH_ACTION='Y' AND B.MATCH_STATUS_VCHR IN ('M', 'O')) OR (B.MATCH_ACTION = 'Y' AND B.MATCH_STATUS_VCHR = 'T' AND B.CLOSE_STATUS = 'C')) 
AND EXISTS (SELECT 'X' FROM PS_VCHR_ACCTG_LINE A WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.VOUCHER_ID = B.VOUCHER_ID AND A.ASSET_FLG = 'Y' AND A.AM_DISTRIB_STATUS IN ('M', 'N'))
ORDER BY 1,2,3;

SELECT A.BUSINESS_UNIT, COUNT(1)
FROM PS_VOUCHER B , PS_VCHR_APAM_VW A 
WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT 
    AND B.VOUCHER_ID = A.VOUCHER_ID
    AND B.BUSINESS_UNIT LIKE '6%'
GROUP BY A.BUSINESS_UNIT
ORDER BY 1;
--INTFAPAM_SQL
SELECT 'PAP', B.INVOICE_DT, A.ACCOUNTING_DT, A.AM_DISTRIB_STATUS, ' ', A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, 
            A.PO_DIST_LINE_NUM, A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, 0, A.BUSINESS_UNIT, A.VOUCHER_ID, A.UNPOST_SEQ, A.PYMNT_CNT, 
            A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.BUSINESS_UNIT_AM, A.ASSET_ID, A.PROFILE_ID, A.COST_TYPE, C.FINANCIAL_ASSET_SW, A.DEPTID, A.PROJECT_ID, A.OPERATING_UNIT, A.PRODUCT, A.FUND_CODE, 
            A.CLASS_FLD, A.PROGRAM_CODE, A.BUDGET_REF, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, A.CHARTFIELD1, A.CHARTFIELD2, A.CHARTFIELD3, A.DESCR, B.VENDOR_ID, A.QTY_VCHR, 
            A.MONETARY_AMOUNT, B.SALETX_PRORATE_FLG, ' ', B.USETAX_PRORATE_FLG, ' ', B.FRGHT_PRORATE_FLG, B.INVOICE_ID, A.CURRENCY_CD, A.FOREIGN_CURRENCY, ' ', 0, ' ', A.BUSINESS_UNIT_PC, A.ACTIVITY_ID, 
            A.ANALYSIS_TYPE, A.RESOURCE_TYPE, A.RESOURCE_CATEGORY, A.RESOURCE_SUB_CAT, A.MERCH_AMT_BSE, A.CLOSE_STATUS, B.VAT_NRCVR_PRO_FLG, A.MERCHANDISE_AMT, A.DST_ACCT_TYPE, 
            A.BUSINESS_UNIT_GL, B.BUSINESS_UNIT_GL, D.VAT_APORT_CNTRL, A.ACCOUNT, A.DSCNT_AMT, A.DSCNT_AMT_BSE, A.CSD_NRCVRY_AMT, A.CSD_NRCVRY_AMT_BSE, A.CSD_RCVRY_AMT, A.CSD_RCVRY_AMT_BSE, 
            A.EXD_NRCVRY_AMT, A.EXD_NRCVRY_AMT_BSE, A.EXD_RCVRY_AMT, A.EXD_RCVRY_AMT_BSE, A.FREIGHT_AMT, A.FREIGHT_AMT_BSE, A.FREIGHT_AMT_NP, A.FREIGHT_AMT_NP_BSE, A.MISC_AMT, A.MISC_AMT_BSE, 
            A.MISC_AMT_NP, A.MISC_AMT_NP_BSE, (A.SALETX_AMT + A.EXD_NRCVRY_AMT + A.STX_NRCVRY_AMT + A.CSD_NRCVRY_AMT) AS SALETX_A, 
            (A.SALETX_AMT_BSE + A.EXD_NRCVRY_AMT_BSE + A.STX_NRCVRY_AMT_BSE + A.CSD_NRCVRY_AMT_BSE) AS SALETX_B, A.SALETX_AMT_NP, A.SALETX_AMT_NP_BSE, A.STX_NRCVRY_AMT, A.STX_NRCVRY_AMT_BSE, 
            A.STX_RCVRY_AMT, A.STX_RCVRY_AMT_BSE, A.USETAX_AMT, A.USETAX_AMT_BSE, A.USETAX_AMT_NP, A.USETAX_AMT_NP_BSE, A.VAT_INV_AMT, A.VAT_INV_AMT_BSE, A.VAT_RCVRY_AMT, 
            A.VAT_RCVRY_AMT_BSE, (A.VAT_INV_AMT + A.VAT_NONINV_AMT - A.VAT_RCVRY_AMT - A.VAT_REBATE_AMT) AS VATAMT_A,
             (A.VAT_INV_AMT_BSE + A.VAT_NONINV_AMT_BSE - A.VAT_RCVRY_AMT_BSE - A.VAT_REBATE_AMT_BSE) AS VATAMT_B, A.RATE_MULT, A.RATE_DIV, A.RT_TYPE, A.FOREIGN_AMOUNT, E.SETID, A.VAT_USE_ID, 
             A.VAT_RECOVERY_PCT, A.TAX_CD_VAT, A.ACCOUNTING_DT, A.PRIMARY_LEDGER, A.APPL_JRNL_ID, A.POSTING_PROCESS, A.CF_BAL_LINE_NUM, A.TAX_AUTHORITY_CD  
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_PROFILE_TBL C, PS_DISTRIB_LINE D, PS_SET_CNTRL_REC E, PS_VCHR_APAM_VW F  
WHERE A.DST_ACCT_TYPE = 'DST'  
    AND A.ASSET_FLG='Y'  
    AND A.PRIMARY_LEDGER = 'Y'  
    AND A.AM_DISTRIB_STATUS IN ('M','N')  
    AND A.BUSINESS_UNIT=B.BUSINESS_UNIT  
    AND A.VOUCHER_ID=B.VOUCHER_ID
    AND B.BUSINESS_UNIT = F.BUSINESS_UNIT 
    AND B.VOUCHER_ID = F.VOUCHER_ID  
    --AND B.PROCESS_INSTANCE = %ProcessInstance  
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT  
    AND A.VOUCHER_ID = D.VOUCHER_ID  
    AND A.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM  
    AND A.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM  
    AND E.SETCNTRLVALUE = A.BUSINESS_UNIT  
    AND E.RECNAME = 'VAT_USE_TBL'  
    AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = A.BUSINESS_UNIT_AM AND D.RECNAME = 'PROFILE_TBL')  
    AND C.PROFILE_ID = A.PROFILE_ID
    AND B.BUSINESS_UNIT LIKE '6%'
    
--UNU PO received No voucher
--UNU_PO_RECEIVED_NO_VCH
SELECT A.BUSINESS_UNIT AS PO_BU, A.PO_ID, A.PO_STATUS, A.PO_DT, B.LINE_NBR, B.INV_ITEM_ID, C.SCHED_NBR, 
            E.BUSINESS_UNIT AS RECV_BU, E.RECEIVER_ID, E.RECV_LN_NBR, E.RECV_SHIP_SEQ_NBR, 
            TO_CHAR(CAST((E.RECEIPT_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS RECEIPT_DTTM, F.RECV_STATUS, 
            G.ACCOUNT, G.OPERATING_UNIT AS OU, G.FUND_CODE, G.DEPTID, G.PROJECT_ID, G.ACTIVITY_ID, G.CHARTFIELD2, G.MERCH_AMT_BSE, G.MERCH_AMT_PO_BSE
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, PS_RECV_LN_SHIP E, PS_RECV_HDR F, PS_RECV_LN_DISTRIB G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.PO_STATUS NOT IN ('C','PX','X')
    AND B.CANCEL_STATUS NOT IN ('C','X')
    AND C.CANCEL_STATUS NOT IN ('C','X')
    AND C.BUSINESS_UNIT = E.BUSINESS_UNIT_PO
    AND C.PO_ID = E.PO_ID
    AND C.LINE_NBR = E.LINE_NBR
    AND C.SCHED_NBR = E.SCHED_NBR
    AND E.BUSINESS_UNIT = F.BUSINESS_UNIT
    AND E.RECEIVER_ID = F.RECEIVER_ID
    AND E.BUSINESS_UNIT = G.BUSINESS_UNIT
    AND E.RECEIVER_ID = G.RECEIVER_ID
    AND E.RECV_LN_NBR = G.RECV_LN_NBR
    AND E.RECV_SHIP_SEQ_NBR = G.RECV_SHIP_SEQ_NBR
    AND NOT EXISTS (SELECT D.VOUCHER_ID FROM PS_VOUCHER_LINE D WHERE D.BUSINESS_UNIT_PO = C.BUSINESS_UNIT AND D.PO_ID = C.PO_ID AND D.LINE_NBR = C.LINE_NBR 
                                                                                                                AND D.SCHED_NBR = C.SCHED_NBR)    
    AND F.RECV_STATUS NOT IN ('X','C')
    AND G.RECV_DS_STATUS <> 'X'
ORDER BY 1, 2, 5, 6, 7, 8, 9, 10;

--using the receiver ID, get the PRE_INTFC_ID
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID = '0000001744';
--using the PRE_INTFC_ID, get the INTFC_ID
SELECT * FROM PS_INTFC_PRE_AM WHERE PRE_INTFC_ID = 19489
--using the INTFC_ID, get the Asset ID
SELECT * FROM PS_INTFC_FIN WHERE INTFC_ID = 11004051

SELECT * FROM PS_ASSET_ALL_VW WHERE BUSINESS_UNIT = 'UNUNI'

--Receipt accrual lines with Budget Error
--UNU_REC_ACCRUAL_BUD_ERROR
SELECT DISTINCT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, TO_CHAR(B.RECEIPT_DT,'YYYY-MM-DD'), 
            A.DST_ACCT_TYPE, A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, 
            A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, E.LEDGER_GROUP, E.PROCESS_INSTANCE, A.ACCOUNTING_PERIOD
FROM PS_RECV_LN_ACCTG A, PS_RECV_HDR B, PS_KK_SOURCE_HDR C, PS_KK_SOURCE_LN D, PS_KK_EXCPTN_TBL E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.RECEIVER_ID = B.RECEIVER_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     --AND A.ACCOUNTING_DT = TO_DATE(:1,'YYYY-MM-DD')
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.RECEIVER_ID = C.RECEIVER_ID
     AND A.RECV_LN_NBR = C.RECV_LN_NBR
     AND A.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
     AND A.DISTRIB_LINE_NUM = C.DISTRIB_LINE_NUM
     AND C.KK_TRAN_ID = D.KK_TRAN_ID
     AND C.KK_TRAN_DT = D.KK_TRAN_DT
     AND D.KK_TRAN_ID = E.KK_TRAN_ID
     AND D.KK_TRAN_DT = E.KK_TRAN_DT
     AND D.KK_TRAN_LN = E.KK_TRAN_LN
     AND A.DST_ACCT_TYPE <> 'RAC'
     --AND E.LEDGER_GROUP <> 'CHD_FPA'

--UNU_AP_RECON     
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR, SUM( A.MONETARY_AMOUNT), A.GL_DISTRIB_STATUS
FROM PS_VCHR_ACCTG_LINE A
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.ACCOUNT = '71405'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND A.GL_DISTRIB_STATUS <> 'I'
GROUP BY  A.BUSINESS_UNIT_GL,  A.ACCOUNT,  A.ACCOUNTING_PERIOD,  A.FISCAL_YEAR,  A.GL_DISTRIB_STATUS
ORDER BY 6, 3

--Another version
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR, A.MONETARY_AMOUNT, A.GL_DISTRIB_STATUS, A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, 
            A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.JOURNAL_LINE
FROM PS_VCHR_ACCTG_LINE A
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
    AND A.ACCOUNT = '71405'
    AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
ORDER BY 4, 3, 10, 11, 12

--VCHR_ACCTG_LINE and KK
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, C.LINE_NBR, A.DISTRIB_LINE_NUM, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, A.MERCHANDISE_AMT, 
            A.MERCH_AMT_BSE, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS, 
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            B.KK_TRAN_ID, TO_CHAR(B.KK_TRAN_DT,'YYYY') AS YEAR, TO_CHAR(B.KK_TRAN_DT,'MM') AS MONTH, B.KK_SOURCE_TRAN, B.KK_PROCESS_STATUS
FROM PS_VCHR_ACCTG_LINE A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.KK_TRAN_ID = C.KK_TRAN_ID
     AND B.KK_TRAN_DT = C.KK_TRAN_DT
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.OPERATING_UNIT = '619'
     AND TO_CHAR(B.KK_TRAN_DT,'YYYY') = '2012'

--UNU_AR_RECON     
SELECT A.BUSINESS_UNIT, A.ACCOUNT, SUM( A.MONETARY_AMOUNT), A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.GL_DISTRIB_STATUS, TO_CHAR(SYSDATE,'YYYY-MM-DD')
FROM PS_ITEM_DST A
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.ACCOUNT = '11004'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND A.GL_DISTRIB_STATUS <> 'I'
GROUP BY  A.BUSINESS_UNIT,  A.ACCOUNT,  A.FISCAL_YEAR,  A.ACCOUNTING_PERIOD,  A.GL_DISTRIB_STATUS

--UNU_DIRECT_JRNL_PAYMENTS     
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.DST_SEQ_NUM, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, 
            A.BUSINESS_UNIT_GL, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.AFFILIATE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID, A.MONETARY_AMOUNT, 
            A.JRNL_LN_REF, A.LINE_DESCR, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.GL_DISTRIB_STATUS, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
            A.SYSTEM_DEFINED, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.LEDGER, A.JOURNAL_LINE, TO_CHAR(A.BUDGET_DT,'YYYY-MM-DD') AS BUD_DT, A.BUDGET_LINE_STATUS
FROM PS_PAY_MISC_DST A, PS_PAYMENT B
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND A.GL_DISTRIB_STATUS <> 'I'
     AND A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND A.PAYMENT_SEQ_NUM = B.PAYMENT_SEQ_NUM
     AND B.MISC_PAYMENT = 'Y'
ORDER BY 1, 2, 3 

--UNU_AP_UNPAID_VOUCHERS_BY_BU
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, TO_CHAR(B.INVOICE_DT,'YYYY-MM-DD') AS INV_DT, B.INVOICE_ID, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
            A.REMIT_VENDOR, A.BANK_CD, A.BANK_ACCT_KEY, A.PYMNT_METHOD, A.PYMNT_ACTION, TO_CHAR(A.DUE_DT,'YYYY-MM-DD') AS DUE_DT, TO_CHAR(A.SCHEDULED_PAY_DT,'YYYY-MM-DD') AS SCHEDULED_PAY_DT, 
            B.GROSS_AMT, B.TXN_CURRENCY_CD, B.GROSS_AMT_BSE, B.BUDGET_HDR_STATUS, B.MATCH_STATUS_VCHR, B.APPR_STATUS, A.PYMNT_HOLD, 
            B.VENDOR_SETID, B.VENDOR_ID
FROM PS_PYMNT_VCHR_XREF A, PS_VOUCHER B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND B.VOUCHER_STYLE <> 'TMPL'
     AND B.ENTRY_STATUS <> 'X'
     AND B.CLOSE_STATUS = 'O'
     AND A.PYMNT_SELCT_STATUS NOT IN ('X','P','C','Y')     
     AND A.PYMNT_ACTION <> 'P'
     AND B.POST_STATUS_AP = 'P'
ORDER BY 1, 2

--UNU_PO_OPEN_BY_DATE    
SELECT B.BUSINESS_UNIT, B.PO_ID, TO_CHAR(B.PO_DT,'YYYY-MM-DD') AS PO_DT, B.VENDOR_ID, B.PO_STATUS, B.BUDGET_HDR_STATUS, B.RECV_STATUS, B.MATCH_STATUS_PO, 
            C.LINE_NBR, C.REQ_ID, D.REQUESTOR_ID, TO_CHAR(C.BUDGET_DT,'YYYY-MM-DD') AS BUD_DT, B.PO_REF, C.MERCH_AMT_BSE, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.BUYER_ID, 
            C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2, 
            C.KK_CLOSE_FLAG, A.DESCR254_MIXED
FROM PS_PO_LINE A, PS_PO_HDR B, PS_PO_LINE_DISTRIB C, PS_REQ_HDR D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND A.LINE_NBR = C.LINE_NBR
     AND C.BUSINESS_UNIT =  D.BUSINESS_UNIT(+)
     AND C.REQ_ID = D.REQ_ID (+)
     AND B.BUSINESS_UNIT LIKE '6%'
     AND B.PO_STATUS NOT IN ('C','X')
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2011-12-31','YYYY-MM-DD')
     AND A.CANCEL_STATUS IN ('A','H')
     --AND C.DEPTID LIKE :5
ORDER BY 1, 2

--UNU_REQ_OPEN_BY_DATE
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, TO_CHAR(A.REQ_DT,'YYYY-MM-DD') AS REQ_DT, A.REQUESTOR_ID, A.BUDGET_HDR_STATUS, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            C.SHIPTO_ID, B.BUYER_ID, D.ACCOUNT, D.DEPTID, D.OPERATING_UNIT, D.FUND_CODE, D.PROJECT_ID, D.ACTIVITY_ID, D.CHARTFIELD2, D.QTY_REQ, D.MERCHANDISE_AMT, D.CURRENCY_CD, D.MERCH_AMT_BSE
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.REQ_ID = C.REQ_ID
     AND B.LINE_NBR = C.LINE_NBR
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.REQ_ID = D.REQ_ID
     AND C.LINE_NBR = D.LINE_NBR
     AND C.SCHED_NBR = D.SCHED_NBR
     AND A.REQ_STATUS NOT IN ('X','C')
     AND D.KK_CLOSE_FLAG = 'N'
     AND B.SOURCE_STATUS = 'A'
     AND B.CURR_STATUS NOT IN ('C','X')
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND D.DEPTID LIKE :4
ORDER BY 1, 2, 7, 8, 9

--UNU_PROJ_ACTIVITY_EXP aka LEVEL2
SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,            
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) AS ENCUMBRANCE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE,
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS ENCANDEXP
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.LEDGER LIKE 'DET%'
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUDGET_PERIOD = '2012'
     AND A.DEPTID = '11901'
     --AND A.PROJECT_ID LIKE :4
     AND A.DEPTID = B.DEPTID
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.SETID     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID
ORDER BY 5, 6, 7, 8

--UNU_BSB_DET_EXP
--DOES NOT WORK
SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, B.DESCRSHORT, A.FUND_CODE, A.ACCOUNT, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) AS ENCUM, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS ENCANDEXP
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUDGET_PERIOD = '2012'
     AND A.DEPTID = '11901'
     --AND A.PROJECT_ID = '00064159'
     AND A.LEDGER LIKE 'DET%'
     AND A.DEPTID = B.DEPTID
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.SETID     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.DEPTID, B.DESCRSHORT, A.FUND_CODE, A.ACCOUNT
ORDER BY A.ACCOUNT

--UNU_BSB_BUDGET_BALANCE aka LEVEL1   
SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, 
            SUM( DECODE(SUBSTR(A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0)) AS BUDGET, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) ENCUMBRANCE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS EXPANDENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'ENC',0-POSTED_BASE_AMT,'EXP',0-POSTED_BASE_AMT,0)) AS AVAILABLE
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.LEDGER LIKE 'ALT%'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUDGET_PERIOD IN ('2012', '2013')
    AND A.DEPTID = 'B0110'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
    AND A.BUSINESS_UNIT = B.SETID
    AND A.DEPTID = B.DEPTID
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2
ORDER BY A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT

--UNU_USER_APPROVAL     
SELECT A.ROLEUSER, A.ROLENAME, A.RTE_CNTL_PROFILE
FROM PS_RTE_CNTL_RUSER A
WHERE A.ROLEUSER = 'sharon.koh'
    AND A.ROLENAME NOT LIKE '%LEVEL0%'
    --AND A.RTE_CNTL_PROFILE NOT IN ('ADMIN_PO','ADMIN_AP')
ORDER BY 1, 2, 3

--PO's budget Status
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.PO_DT, A.DST_ACCT_TYPE, 
            A.ACCOUNT, A.OPERATING_UNIT, E.DEPTID AS BUD_DEPT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,  
            A.CURRENCY_CD, A.MONETARY_AMOUNT, A.MONETARY_AMT_BSE, A.CURRENCY_CD_BASE,
            A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, E.LEDGER_GROUP, E.PROCESS_INSTANCE            
FROM PS_PO_LINE_DISTRIB A, PS_PO_HDR B, PS_KK_SOURCE_HDR C, PS_KK_SOURCE_LN D, PS_KK_EXCPTN_TBL E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.BUSINESS_UNIT LIKE '6%'     
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID     
     AND C.KK_TRAN_ID = D.KK_TRAN_ID
     AND C.KK_TRAN_DT = D.KK_TRAN_DT
     AND D.KK_TRAN_ID = E.KK_TRAN_ID
     AND D.KK_TRAN_DT = E.KK_TRAN_DT
     AND D.KK_TRAN_LN = E.KK_TRAN_LN
     --AND A.DST_ACCT_TYPE <> 'RAC'
     AND E.LEDGER_GROUP <> 'CHD_UU'
     AND B.PO_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND SYSDATE
ORDER BY 1,2,3,4,5,6;

--Version 2
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.PO_DT, A.DST_ACCT_TYPE, 
            A.ACCOUNT, A.OPERATING_UNIT, E.DEPTID AS BUD_DEPT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,  
            A.CURRENCY_CD, A.MONETARY_AMOUNT, A.MONETARY_AMT_BSE, A.CURRENCY_CD_BASE,
            A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP, 
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, E.PROCESS_INSTANCE            
FROM PS_PO_LINE_DISTRIB A, PS_PO_HDR B, PS_KK_SOURCE_HDR C, PS_KK_SOURCE_LN D, PS_KK_EXCPTN_TBL E, PSXLATITEM X1
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.BUSINESS_UNIT LIKE '6%'     
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID     
     AND C.KK_TRAN_ID = D.KK_TRAN_ID
     AND C.KK_TRAN_DT = D.KK_TRAN_DT
     AND D.KK_TRAN_ID = E.KK_TRAN_ID
     AND D.KK_TRAN_DT = E.KK_TRAN_DT
     AND D.KK_TRAN_LN = E.KK_TRAN_LN
     --AND A.DST_ACCT_TYPE <> 'RAC'
     AND E.LEDGER_GROUP <> 'CHD_UU'
     AND X1.FIELDNAME = 'EXCPTN_TYPE'
     AND X1.FIELDVALUE = E.EXCPTN_TYPE
     AND B.PO_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND SYSDATE
ORDER BY 1,2,3,4,5,6;

--Voucher budget Status
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, D.LINE_NBR, A.DISTRIB_LINE_NUM, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, A.MERCHANDISE_AMT, 
            A.MERCH_AMT_BSE, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS, 
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            C.KK_TRAN_ID, TO_CHAR(C.KK_TRAN_DT,'YYYY') AS YEAR, TO_CHAR(C.KK_TRAN_DT,'MM') AS MONTH, C.KK_SOURCE_TRAN, C.KK_PROCESS_STATUS,
            E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP, E.PROCESS_INSTANCE
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_KK_SOURCE_HDR C, PS_KK_SOURCE_LN D, PS_KK_EXCPTN_TBL E, PSXLATITEM X1
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.VOUCHER_ID = C.VOUCHER_ID
     AND C.KK_TRAN_ID = D.KK_TRAN_ID
     AND C.KK_TRAN_DT = D.KK_TRAN_DT
     AND D.KK_TRAN_ID = E.KK_TRAN_ID
     AND D.KK_TRAN_DT = E.KK_TRAN_DT
     AND D.KK_TRAN_LN = E.KK_TRAN_LN
     AND A.BUSINESS_UNIT LIKE '6%'
     --AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     AND X1.FIELDNAME = 'EXCPTN_TYPE'
     AND X1.FIELDVALUE = E.EXCPTN_TYPE
ORDER BY 1,2,3,4,5,6;

--Discount Earned VW
SELECT * FROM PS_VCHR_ACT_DSE_VW

SELECT A.BUSINESS_UNIT,  X1.XLATLONGNAME AS DST_ACCT_TYPE, TO_CHAR(A.ACCOUNTING_DT,'YYYY') AS YEAR, 
            A.FOREIGN_CURRENCY AS F_CURR, SUM(A.FOREIGN_AMOUNT) AS F_AMT, SUM(MONETARY_AMOUNT) AS USD_AMT 
FROM PS_VCHR_ACCTG_LINE A, PSXLATITEM X1
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND TO_CHAR(A.ACCOUNTING_DT,'YYYY') = 2012
    AND 'DST_ACCT_TYPE' = X1.FIELDNAME (+) 
    AND A.DST_ACCT_TYPE = X1.FIELDVALUE (+)      
GROUP BY BUSINESS_UNIT, X1.XLATLONGNAME, TO_CHAR(A.ACCOUNTING_DT,'YYYY'), A.FOREIGN_CURRENCY
ORDER BY 1,2

SELECT A.BUSINESS_UNIT, A.DST_ACCT_TYPE, TO_CHAR(A.ACCOUNTING_DT,'YYYY') AS YEAR, 
            A.FOREIGN_CURRENCY AS F_CURR, SUM(A.FOREIGN_AMOUNT) AS F_AMT, SUM(MONETARY_AMOUNT) AS USD_AMT 
FROM PS_VCHR_ACCTG_LINE A
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND TO_CHAR(A.ACCOUNTING_DT,'YYYY') = 2012     
GROUP BY BUSINESS_UNIT, A.DST_ACCT_TYPE, TO_CHAR(A.ACCOUNTING_DT,'YYYY'), A.FOREIGN_CURRENCY
ORDER BY 1,2


--SELECT * FROM DBA_HIST_ACTIVE_SESS_HISTORY WHERE CLIENT_ID IN ('rahiza.ibrahim')
select s.sql_id
from dba_hist_sqlstat s, dba_hist_snapshot sn
where sn.begin_interval_time between to_date('17-oct-2012 0001','dd-mon-yyyy hh24mi') and to_date('18-oct-2012 2359','dd-mon-yyyy hh24mi') 
    and sn.snap_id=s.snap_id
    AND (MODULE = 'PAYMENT_ENTRY' OR ACTION = 'PAYMENT_ENTRY')
--group by s.sql_id
--order by difference desc;

SELECT * FROM dba_hist_sqltext WHERE sql_id in (select DISTINCT s.sql_id
from dba_hist_sqlstat s, dba_hist_snapshot sn
where sn.begin_interval_time between to_date('17-oct-2012 0001','dd-mon-yyyy hh24mi') and to_date('18-oct-2012 2359','dd-mon-yyyy hh24mi') 
    and sn.snap_id=s.snap_id)

--Receipt Close
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PO_RECV_COM'
SELECT * FROM PS_RECV_RUN_CNTL WHERE RUN_CNTL_ID = 'close_receipt'

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT LIKE '6%' AND INVOICE_ID LIKE '%80814-040%'

--AR11002.sqr
SELECT G.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, G.OPRID, A.ACCOUNTING_DT, A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ENTRY_TYPE, A.ENTRY_REASON, 
            A.POSTED_FLAG, A.ENTRY_AMT, A.ENTRY_AMT_BASE, A.CURRENCY_CD, A.ENTRY_CURRENCY
FROM PS_GROUP_CONTROL G, PS_PENDING_ITEM A
WHERE G.GROUP_BU = A.GROUP_BU
    AND G.GROUP_ID = A.GROUP_ID
    AND A.GROUP_BU = '615UU'
    --AND G.ENTRY_DT >= $FromDate
    --AND G.ENTRY_DT <= $ThruDate
    --AND A.GROUP_ID LIKE $select_group_id
    --AND A.CUST_ID LIKE $select_cust_id
    --AND G.OPRID LIKE $select_oprid
    --AND A.POSTED_FLAG LIKE $select_post_flag
ORDER BY G.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.ITEM, A.ITEM_LINE,A.ENTRY_TYPE, A.ENTRY_REASON

--Keep Track of your sessions
select 'Sid, Serial#, Aud sid : '|| s.sid||' , '||s.serial#||' , '||s.audsid a, 'DB User / OS User : '||s.username||' / '||s.osuser a, 'OS Process Ids : '||s.process||' (Client) '||p.spid||' (Server)' a, 
         'Client Program Name : '||s.program a
from v$process p, v$session s
where p.addr = s.paddr
   and s.audsid = userenv('SESSIONID');

SELECT * FROM PS_PO_ACTIVITY_WS WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_PO_LN_ORDER_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_VCHR_LN_PO_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424' ORDER BY INVOICE_DT

--Modified VCHR_LN_PO_VW
SELECT L.BUSINESS_UNIT_PO, L.PO_ID, L.LINE_NBR, L.SCHED_NBR, L.BUSINESS_UNIT_RECV, L.RECEIVER_ID, L.RECV_LN_NBR, L.RECV_SHIP_SEQ_NBR, L.BUSINESS_UNIT, L.VOUCHER_ID, 
            L.VOUCHER_LINE_NUM, L.VENDOR_ID, Round(L.QTY_VCHR, 2)AS QTY_VCHR, L.BASE_CURRENCY, L.MERCH_AMT_BSE, L.MERCHANDISE_AMT, L.TXN_CURRENCY_CD, V.INVOICE_ID, V.INVOICE_DT, 
            L.CURRENCY_CD, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, POL.QTY_ORDERED, POL.AMT_ORDERED, POL.CURRENCY_CD
FROM PS_VOUCHER_LINE L, PS_VOUCHER V, PS_PO_LN_ORDER_VW POL 
WHERE V.BUSINESS_UNIT = L.BUSINESS_UNIT 
     AND V.VOUCHER_ID = L.VOUCHER_ID
     AND L.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT
     AND L.PO_ID = POL.PO_ID
     AND L.LINE_NBR = POL.LINE_NBR
     AND L.BUSINESS_UNIT_PO <> ' ' 
     AND L.PO_ID <> ' ' 
     AND V.ENTRY_STATUS <> 'X' 
     AND V.VOUCHER_STYLE <> 'THRD' 
     AND (V.MANUAL_CLOSE_DT IS NULL 
     OR EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF X WHERE X.BUSINESS_UNIT = V.BUSINESS_UNIT AND X.VOUCHER_ID = V.VOUCHER_ID AND X.PYMNT_SELCT_STATUS <> 'X'))
     --AND L.BUSINESS_UNIT_PO = '600UU' 
     --AND L.PO_ID = '0000004424' 
     AND L.BUSINESS_UNIT_PO = '611UU' 
     AND L.PO_ID = '0000002512'
ORDER BY 1,2,3,4,INVOICE_DT

--SELECT * FROM PS_PAYMENT WHERE PAYMENT_ID = 'ISEE-BIN JALALU'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_ID = '3884'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_ID = '3884'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_ID = '3884'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_ID = '3885'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_ID = '3885'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_ID = '3885'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_ID = '2011'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_ID = '2011'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_ID = '2011'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_ID = '4045'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_ID = '4045'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_ID = '4045'

SELECT * FROM PS_PO_LINE_MATCHED WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_VCHR_MM_PO_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424' ORDER BY INVOICE_DT
SELECT * FROM PS_PO_MTCH_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'

--Vouchers Matched incorrectly
SELECT V.*
FROM PS_VOUCHER V, PS_VOUCHER_LINE L
WHERE V.BUSINESS_UNIT = L.BUSINESS_UNIT 
    AND V.VOUCHER_ID = L.VOUCHER_ID
    AND V.BUSINESS_UNIT LIKE '6%' 
    AND V.MATCH_STATUS_VCHR <> 'M'
    AND L.BUSINESS_UNIT_PO <> ' ' 
    AND L.PO_ID <> ' '
    AND V.ENTRY_STATUS <> 'X'
    AND EXISTS (SELECT 'X' FROM PS_PO_LINE_MATCHED X WHERE X.BUSINESS_UNIT_AP = V.BUSINESS_UNIT AND X.VOUCHER_ID = V.VOUCHER_ID)

SELECT SETID, COUNT(1) FROM PS_MASTER_ITEM_TBL GROUP BY SETID

--UNU Batch Monitoring
SELECT B.RUNSTATUS, (SELECT C.XLATLONGNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = B.RUNSTATUS)  RUNDESCR,
            DISTSTATUS,
            (SELECT D.XLATLONGNAME FROM PSXLATITEM D WHERE D.FIELDNAME = 'DISTSTATUS' AND D.FIELDVALUE = B.DISTSTATUS) DISTDESCR, 
            COUNT(1) 
FROM PSPRCSRQST B
WHERE (B.PRCSJOBNAME LIKE 'UNU%' OR B.MAINJOBNAME LIKE 'UNU%')
GROUP BY B.RUNSTATUS, B.DISTSTATUS

SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS,
        TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm ,
        TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm ,
        TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min,
        CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) as diff,
        CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) as diff,
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 300/(24*60*60) then 1
                    else 0
        end as longer_than_threshold,
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 345/(24*60*60) then 1
                    else 0
        end as over_thresholdPlus15Percent
FROM PSPRCSRQST
WHERE  (PRCSJOBNAME LIKE 'UNU%' OR MAINJOBNAME LIKE 'UNU%')
     --AND TO_CHAR(rundttm,'YYYY-MM') = TO_CHAR(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM'),'YYYY-MM')
   --AND RUNSTATUS = 9
ORDER BY PRCSINSTANCE

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AM_DPCLOSE'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AM_AMAEDIST'
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AM_DEPR_CALC'
SELECT * FROM PS_ASSET_NBV_TBL WHERE OPRID = 'CMBATCH'

SELECT BUSINESS_UNIT, COUNT(1)
FROM PS_DEPR_RPT
WHERE BUSINESS_UNIT = 'UNUNI'
GROUP BY BUSINESS_UNIT;

SELECT BUSINESS_UNIT, COUNT(1) 
FROM PS_ASSET_NBV_TBL 
WHERE BUSINESS_UNIT = 'UNUNI'
GROUP BY BUSINESS_UNIT;

--Load ASSET_NBV_TBL
SELECT * FROM PS_RUN_CNTL_AM WHERE RUN_CNTL_ID = 'AM_AMLDNBVT_02'
SELECT * FROM PSROLEDEFN WHERE ROLENAME LIKE '%AM%' AND ROLENAME NOT IN (SELECT ROLENAME FROM PSROLEUSER WHERE ROLEUSER = 'prakash.prashant')

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'prakash.prashant'
SELECT * FROM PSROLECLASS WHERE CLASSID IN (SELECT DISTINCT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_ASSETS' AND BARNAME = 'PROCESS')

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_GSSC_ASSET_SPECIALIST'
SELECT BUSINESS_UNIT, COUNT(1) AS PS_ASSET FROM PS_ASSET WHERE BUSINESS_UNIT LIKE '6%' GROUP BY BUSINESS_UNIT

SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_AR WHERE APPL_JRNL_ID_MISC <> 'AR_DIRJRNL'
SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_AR WHERE APPL_JRNL_ID_CC <> 'AR_CASHCTL'
SELECT * FROM PS_JRNLGEN_APPL_ID WHERE APPL_JRNL_ID IN ('AR_DIRJRNL','AR_CASHCTL')

--Enter Component Name
SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'RUN_AMAEDIST';
SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'RUN_PORC700';
SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'RUN_IN_ITMLOAD';
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_ASSETS' AND BARNAME = 'PROCESS' AND BARITEMNAME = 'ACCOUNTING_ENTRY_CREATION';
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_SHIPMENTS' AND BARNAME = 'REPORT' AND BARITEMNAME = 'RECEIPT_ACCRUAL';
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'PROCESS_INBOUND_TRANSACTIONS' AND BARNAME = 'PROCESS' AND BARITEMNAME = 'RUN_IN_ITMLOAD';
--Find Roles
SELECT * FROM PSROLECLASS WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_SHIPMENTS' AND BARNAME = 'REPORT' AND BARITEMNAME = 'RECEIPT_ACCRUAL');
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'PROCESS_INBOUND_TRANSACTIONS' AND BARNAME = 'PROCESS' AND BARITEMNAME = 'RUN_IN_ITMLOAD');

--Find OPRID
SELECT DISTINCT ROLEUSER FROM PSROLEUSER WHERE ROLENAME IN (SELECT ROLENAME FROM PSROLECLASS 
WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'DEFINE_GENERAL_OPTIONS' AND BARNAME = 'USE_E-P' AND BARITEMNAME = 'LOCATION'))
--AND ROLEUSER LIKE '%ching%'
ORDER BY 1;

--UNDP KK Cleanup
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND KK_TRAN_OVER_OPRID = 'UNGL771';
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND (KK_TRAN_OVER_OPRID NOT IN (SELECT OPRID FROM PSOPRDEFN) AND KK_TRAN_OVER_OPRID <> ' ');
SELECT * FROM PS_PRCSDEFN WHERE PRCSNAME = 'UNGL771';

--GLS7003
SELECT A.ACCOUNT, B.DESCR, A.CURRENCY_CD  
FROM  PS_LEDGER A, PS_GL_ACCOUNT_TBL B 
WHERE B.SETID = 'SHARE' 
    AND B.ACCOUNT = A.ACCOUNT 
    AND B.EFFDT = (SELECT MAX(CT.EFFDT) FROM   PS_GL_ACCOUNT_TBL CT WHERE CT.SETID = B.SETID AND  CT.ACCOUNT = B.ACCOUNT AND  CT.EFFDT <= sysdate)
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND A.LEDGER = 'USD' 
    AND A.FISCAL_YEAR = 2012 
    --AND A.STATISTICS_CODE = ' ' 
    AND A.CURRENCY_CD = 'USD' 
    AND A.DEPTID = '11901'
GROUP BY A.ACCOUNT,B.DESCR, A.CURRENCY_CD 
ORDER BY A.ACCOUNT,B.DESCR, A.CURRENCY_CD;

--Period ZERO
SELECT DT.ACCOUNT, SUM(DT.POSTED_TOTAL_AMT)  
FROM  PS_LEDGER DT, PS_GL_ACCOUNT_TBL BT 
WHERE BT.SETID = 'SHARE' 
    AND BT.ACCOUNT = DT.ACCOUNT
    AND BT.EFFDT = (SELECT MAX(CT.EFFDT) FROM PS_GL_ACCOUNT_TBL CT WHERE CT.SETID = BT.SETID AND CT.ACCOUNT = BT.ACCOUNT AND CT.EFFDT <= sysdate) 
    AND DT.BUSINESS_UNIT = 'UNUNI' 
    AND DT.LEDGER = 'USD'
    AND DT.ACCOUNTING_PERIOD = 0 
    AND DT.FISCAL_YEAR = 2012 
    --AND DT.STATISTICS_CODE = ' ' 
    AND DT.CURRENCY_CD = 'USD' 
    --AND DT.ACCOUNT =?
    --AND BT.DESCR = ? 
    AND DT.DEPTID = '11901' 
GROUP BY DT.ACCOUNT
ORDER BY DT.ACCOUNT

SELECT ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD AS MONTH, SUM(ST.POSTED_TOTAL_AMT)  
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 and 8) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    AND ST.CURRENCY_CD = 'USD' 
    --AND ST.ACCOUNT =? 
    --AND ET.DESCR = ? 
    AND ST.DEPTID = '11901' 
GROUP BY ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD
ORDER BY ST.ACCOUNT

SELECT ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD, SUM(POSTED_TOTAL_AMT)    
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    AND ST.CURRENCY_CD = 'USD' 
    --AND ST.ACCOUNT =? 
    --AND ET.DESCR = ? 
    AND ST.DEPTID = '11901' 
GROUP BY ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD
ORDER BY ST.ACCOUNT

--Actuals from Ledger for 11901
SELECT X.DEPTID, X.ACCOUNT, X.DESCR, SUM(X.POSTED_TOTAL_AMT) AS TOTAL,
            SUM(X.PERIOD_0) PERIOD_0, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT ST.DEPTID, ST.ACCOUNT, ET.DESCR, SUM(ST.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS PERIOD_0 
 , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JAN
 , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS FEB 
 , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS APR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAY 
 , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUN 
 , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUL 
 , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS AUG 
 , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS SEP 
 , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS OCT 
 , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS NOV 
 , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS DEC 
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    AND ST.CURRENCY_CD = 'USD' 
    --AND ST.ACCOUNT =? 
    --AND ET.DESCR = ? 
    AND ST.DEPTID = '11901' 
GROUP BY ST.DEPTID, ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.DEPTID, X.ACCOUNT, X.DESCR
ORDER BY X.DEPTID, X.ACCOUNT

--Actuals for Expense & Revenue ACCOUNTS ONLY from Ledger for all UNU Departments
SELECT X.DEPTID, X.ACCOUNT, X.DESCR, SUM(X.POSTED_TOTAL_AMT) AS TOTAL,
            SUM(X.PERIOD_0) PERIOD_0, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT ST.DEPTID, ST.ACCOUNT, ET.DESCR, SUM(ST.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS PERIOD_0 
 , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JAN
 , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS FEB 
 , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS APR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAY 
 , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUN 
 , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUL 
 , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS AUG 
 , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS SEP 
 , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS OCT 
 , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS NOV 
 , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS DEC 
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    AND ST.CURRENCY_CD = 'USD'
    AND ET.ACCOUNT_TYPE IN ('E', 'R') 
    --AND ST.ACCOUNT =? 
    --AND ET.DESCR = ? 
    AND ST.DEPTID IN (SELECT D.DEPTID FROM PS_DEPT_TBL D WHERE SETID = 'UNUNI' AND EFF_STATUS = 'A' AND EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPT_TBL C_ED WHERE D.SETID = C_ED.SETID AND D.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= sysdate)) 
GROUP BY ST.DEPTID, ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.DEPTID, X.ACCOUNT, X.DESCR
ORDER BY X.DEPTID, X.ACCOUNT

SELECT X.ACCOUNT_TYPE, X.BALANCE_FWD_SW 
FROM PS_ACCT_TYPE_TBL X
WHERE SETID = 'SHARE'

SELECT ACCOUNT_TYPE, COUNT(1) FROM PS_GL_ACCOUNT_TBL WHERE SETID = 'SHARE' GROUP BY ACCOUNT_TYPE
--Expense and Revenue Accounts
SELECT * FROM PS_GL_ACCOUNT_TBL 
WHERE SETID = 'SHARE' 
    AND ACCOUNT_TYPE IN ('E', 'R')
ORDER BY ACCOUNT
--Assets, Liabilities and Equity Accounts
SELECT * FROM PS_GL_ACCOUNT_TBL 
WHERE SETID = 'SHARE' 
    AND ACCOUNT_TYPE IN ('A', 'L', 'Q')
ORDER BY ACCOUNT

--Actuals for Expense & Revenue ACCOUNTS ONLY from Ledger for all UNU Departments
--Sum up to Account series aka ignore the last two digits
--Included FUND_CODE to split between programme and admin budgets
--Included all CF's
SELECT X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, (SUBSTR(X1.ACCOUNT,1,LENGTH(X1.ACCOUNT)-2) || '00') AS ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2, X1.DESCR, SUM(X.POSTED_TOTAL_AMT) AS TOTAL,
            SUM(X.PERIOD_0) PERIOD_0, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS PERIOD_0 
 , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JAN
 , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS FEB 
 , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS APR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS MAY 
 , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUN 
 , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS JUL 
 , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS AUG 
 , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS SEP 
 , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS OCT 
 , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS NOV 
 , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_TOTAL_AMT) ELSE 0 END AS DEC 
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT     
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    AND ST.CURRENCY_CD = 'USD'
    AND ET.ACCOUNT_TYPE IN ('E', 'R')     
    --AND ST.DEPTID IN (SELECT D.DEPTID FROM PS_DEPT_TBL D WHERE SETID = 'UNUNI' AND EFF_STATUS = 'A' AND EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPT_TBL C_ED WHERE D.SETID = C_ED.SETID AND D.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= sysdate))
    --AND ST.DEPTID = '11901'
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X, PS_GL_ACCOUNT_TBL X1
WHERE X1.SETID = 'SHARE'
    AND X1.ACCOUNT = (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00')  
GROUP BY X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X1.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2, X1.DESCR
ORDER BY X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X1.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2

SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '605UU' AND PO_ID = '00'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '605UU' AND PO_ID = '00'

--UNAR019
SELECT D.BUSINESS_UNIT_GL, G.DESCR, A.DEPOSIT_BU, A.DEPOSIT_ID, E.NAME1, C.ADDRESS1, C.CITY, C.STATE, C.POSTAL, 
            TO_CHAR(F.RECEIVED_DT,'YYYY-MM-DD'), A.PAYMENT_AMT, A.PAYMENT_CURRENCY, NVL(UPPER( H.DESCR), A.PAYMENT_CURRENCY), ':3', B.DESCR,E.SETID,E.CUST_ID,G.BUSINESS_UNIT,B.SETID,B.BANK_CD
FROM PS_PAYMENT A, PS_BUS_UNIT_TBL_AP D, PS_CUSTOMER E, PS_CUST_ADDRESS C, PS_DEPOSIT_CONTROL F, PS_CURRENCY_CD_TBL H, PS_PAYMENT_ID_CUST J, PS_BUS_UNIT_TBL_FS G, PS_BANK_CD_TBL B
WHERE J.CUST_ID =  E.CUST_ID(+)
    AND E.SETID =  C.SETID(+)
    AND E.CUST_ID =  C.CUST_ID(+)
    AND E.ADDRESS_SEQ_NUM =  C.ADDRESS_SEQ_NUM(+)
    AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_CUST_ADDRESS C_ED WHERE C.SETID = C_ED.SETID AND C.CUST_ID = C_ED.CUST_ID AND C.ADDRESS_SEQ_NUM = C_ED.ADDRESS_SEQ_NUM AND C_ED.EFFDT <= SYSDATE)
     OR C.SETID IS NULL)
    AND A.DEPOSIT_BU = F.DEPOSIT_BU
    AND A.DEPOSIT_ID = F.DEPOSIT_ID
    AND ( E.SETID = (SELECT I.SETID FROM PS_SET_CNTRL_REC I WHERE I.SETCNTRLVALUE = A.DEPOSIT_BU AND I.RECNAME = 'CUSTOMER')
     OR E.SETID IS NULL)
    AND D.BUSINESS_UNIT = A.DEPOSIT_BU
    AND A.DEPOSIT_BU LIKE '6%'
    --AND A.DEPOSIT_ID LIKE :2
    AND H.CURRENCY_CD = A.PAYMENT_CURRENCY
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_CURRENCY_CD_TBL H_ED WHERE H.CURRENCY_CD = H_ED.CURRENCY_CD AND H_ED.EFFDT <= SYSDATE)
    AND A.DEPOSIT_BU = J.DEPOSIT_BU
    AND A.DEPOSIT_ID = J.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = J.PAYMENT_SEQ_NUM
    AND A.PAYMENT_AMT > 0
    AND D.BUSINESS_UNIT_GL = G.BUSINESS_UNIT
    --AND A.PAYMENT_SEQ_NUM = :4
    AND B.BANK_CD = F.BANK_CD
    AND B.SETID = (SELECT K.SETID FROM PS_SET_CNTRL_REC K WHERE K.SETCNTRLVALUE = A.DEPOSIT_BU AND K.RECNAME = 'BANK_CD_TBL')

SELECT * FROM PS_UN_RUN_AR019 WHERE OPRID IN ('prakash.prashant', 'mee-yoke.see', 'way-peng.yong')
--Find Assets which will not be depreciated
SELECT BUSINESS_UNIT, COUNT(1) 
FROM PS_OPEN_TRANS 
WHERE CALC_DEPR_STATUS = 'H'
GROUP BY BUSINESS_UNIT

SELECT * FROM PS_BUS_UNIT_TBL_FS WHERE BUSINESS_UNIT LIKE 'R4%'
SELECT * FROM PS_UN_POVCHR_SUMVW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'UN_POVCHR_SUMVW'
--SQL Statement for UN_POVCHR_SUMVW
SELECT L.BUSINESS_UNIT_PO , L.PO_ID , D.LINE_NBR , D.SCHED_NBR , D.PO_DIST_LINE_NUM , SUM(D.MONETARY_AMT_BSE) AS BASE_AMT, D.TXN_CURRENCY_CD, SUM(D.FOREIGN_AMOUNT) AS FOREIGN_AMT 
FROM PS_VOUCHER H , PS_VOUCHER_LINE L , PS_DISTRIB_LINE D 
WHERE H.ENTRY_STATUS = 'P' 
    AND H.POST_STATUS_AP = 'P' 
    AND H.CLOSE_STATUS <> 'C' 
    AND H.BUSINESS_UNIT = L.BUSINESS_UNIT 
    AND H.VOUCHER_ID = L.VOUCHER_ID 
    AND L.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND L.VOUCHER_ID = D.VOUCHER_ID 
    AND L.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM
    AND D.BUSINESS_UNIT_PO = '600UU'
    AND D.PO_ID = '0000004424' 
GROUP BY L.BUSINESS_UNIT_PO , L.PO_ID , D.LINE_NBR , D.SCHED_NBR , D.PO_DIST_LINE_NUM, D.TXN_CURRENCY_CD;

--UNU_PO_OPEN_PO_SUMMARY_INCLC
--UNU Open PO Summary with LC
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, A.CHNG_ORD_BATCH, A.BUYER_ID, A.VENDOR_ID, C.VENDOR_NAME_SHORT, C.NAME1, A.PO_REF, A.MATCH_STATUS_PO, 
            TO_CHAR(A.PO_DT,'YYYY-MM-DD') AS PO_DT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, TO_CHAR(A.ACTIVITY_DATE,'YYYY-MM-DD') AS ACTIVITY_DT, 
            A.OPRID_ENTERED_BY, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD') AS ENTERED_DT, A.OPRID_APPROVED_BY, TO_CHAR(A.APPROVAL_DT,'YYYY-MM-DD') AS APPROVAL_DT, 
            A.OPRID_MODIFIED_BY, TO_CHAR(CAST((A.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, 
            D.LINE_NBR, H.CATEGORY_CD, D.DESCR254_MIXED, H.ACCOUNT AS CAT_ACCT, D.AMT_ONLY_FLG, D.RECV_REQ, D.UNIT_OF_MEASURE, D.CNTRCT_ID, D.CNTRCT_LINE_NBR, 
            E.SCHED_NBR, E.SHIPTO_ID, E.QTY_PO, E.PRICE_PO, E.PRICE_PO_BSE, E.MATCH_STATUS_LN_PO, F.DISTRIB_LINE_NUM, F.DISTRIB_PCT, F.QTY_PO, 
            F.BUSINESS_UNIT_GL, F.ACCOUNT, F.OPERATING_UNIT, F.FUND_CODE, F.DEPTID, F.BUSINESS_UNIT_PC, F.PROJECT_ID, F.ACTIVITY_ID, F.CHARTFIELD2, F.LOCATION, 
            TO_CHAR(F.BUDGET_DT,'YYYY-MM-DD') AS BUDGET_DT, F.MONETARY_AMOUNT, 
            A.CURRENCY_CD, F.MONETARY_AMT_BSE, --I.TXN_CURRENCY_CD, I.FOREIGN_AMOUNT, 
            I.MONETARY_AMT_BSE, GREATEST((F.MONETARY_AMT_BSE - NVL(I.MONETARY_AMT_BSE, 0 )),0) AS NUM
FROM PS_PO_HDR A, PS_VENDOR C, PS_PO_LINE D, PS_PO_LINE_SHIP E, PS_PO_LINE_DISTRIB F, PS_SET_CNTRL_REC G, PS_ITM_CAT_TBL H, PS_UN_POVCHR_SUMVW I
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND (A.PO_STATUS = 'D' OR (A.PO_STATUS = 'A' AND EXISTS (SELECT 'X' FROM PS_CNTRCT_RPO_XREF B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT AND B.PO_ID = A.PO_ID)))
     AND A.VENDOR_SETID = C.SETID
     AND C.VENDOR_ID = A.VENDOR_ID
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.PO_ID = D.PO_ID
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.PO_ID = E.PO_ID
     AND D.LINE_NBR = E.LINE_NBR
     AND E.BUSINESS_UNIT = F.BUSINESS_UNIT
     AND E.PO_ID = F.PO_ID
     AND E.LINE_NBR = F.LINE_NBR
     AND E.SCHED_NBR = F.SCHED_NBR
     AND F.DISTRIB_LN_STATUS NOT IN ('X','C')
     AND E.CANCEL_STATUS NOT IN ('X','C')
     AND D.CANCEL_STATUS NOT IN ('X','C')
     AND G.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND G.RECNAME = 'ITM_CAT_TBL'
     AND H.SETID = G.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_ITM_CAT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CATEGORY_TYPE = H_ED.CATEGORY_TYPE AND H.CATEGORY_CD = H_ED.CATEGORY_CD AND H.CATEGORY_ID = H_ED.CATEGORY_ID
          AND H_ED.EFFDT <= SYSDATE)
     --AND A.BUYER_ID LIKE :2
     AND F.BUSINESS_UNIT_GL = 'UNUNI'
     --AND F.OPERATING_UNIT LIKE :4
     --AND F.DEPTID = '11901'
     AND A.ACCOUNTING_DT >= TO_DATE('2013-01-01','YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE('2013-12-31','YYYY-MM-DD')
     AND H.CATEGORY_ID = D.CATEGORY_ID
     AND F.BUSINESS_UNIT =  I.BUSINESS_UNIT (+)
     AND F.PO_ID =  I.PO_ID (+)
     AND F.LINE_NBR =  I.LINE_NBR (+)
     AND F.SCHED_NBR =  I.SCHED_NBR (+)
     AND F.DISTRIB_LINE_NUM =  I.DISTRIB_LINE_NUM (+)     
     --AND F.PO_ID = '0000001073'
ORDER BY 1, 2, 20, 28, 34;

SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '615UU' AND PO_ID = '0000001187'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '615UU' AND PO_ID = '0000001020'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '615UU' AND PO_ID = '0000001287'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '615UU' AND PO_ID IN ('0000001020', '0000001187', '0000001287')
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '615UU' AND PO_ID IN ('0000001020', '0000001187', '0000001287')
SELECT * FROM PS_VCHR_PO_HNM_VW WHERE BUSINESS_UNIT_PO = '615UU' AND PO_ID IN ('0000001020', '0000001187', '0000001287')

SELECT * FROM PS_UNU_IEXP_SUM_VW WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = 2012 AND DEPTID = '11901'
SELECT * FROM PS_UN_KK_BUDACT_VW WHERE BUSINESS_UNIT_PO = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PSRECDEFN WHERE RECNAME = 'UN_POVCHR_SUMVW'
SELECT * FROM PSSQLDEFN WHERE SQLID = 'UN_POVCHR_SUMVW'
--UPDATE PSRECDEFN SET LASTUPDDTTM = TO_TIMESTAMP ('02/07/2010 11:02:15', 'DD/MM/YYYY HH12.MI.SS.FF'), LASTUPDOPRID = 'david.white' WHERE RECNAME = 'UN_POVCHR_SUMVW'
--UPDATE PSSQLDEFN SET LASTUPDDTTM = TO_TIMESTAMP ('02/07/2010 11:02:15', 'DD/MM/YYYY HH12.MI.SS.FF'), LASTUPDOPRID = 'david.white' WHERE SQLID = 'UN_POVCHR_SUMVW'
--TO_TIMESTAMP(:2,'YYYY-MM-DD-HH24.MI.SS.FF')
--2/7/2010 11:02:15.000000 PM    david.white
SELECT * FROM PSPROJECTDEFN WHERE PROJECTNAME = 'UN_FS_RFC979'
--2/7/2010 11:02:10.000000 PM    ICC.Admin

SELECT * FROM UNDPFS.PS_UN_POVCHR_SUMVW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
--DROP VIEW UNDPFS.PS_UN_POVCHR_SUMVW;
--
--CREATE VIEW PS_UN_POVCHR_SUMVW (BUSINESS_UNIT, PO_ID, LINE_NBR,
-- SCHED_NBR, DISTRIB_LINE_NUM, MONETARY_AMT_BSE) AS SELECT L.BUSINESS_UNIT_PO , L.PO_ID , D.LINE_NBR ,
-- D.SCHED_NBR , D.PO_DIST_LINE_NUM , SUM(D.MONETARY_AMT_BSE)
-- FROM UNDPFS.PS_VOUCHER H , UNDPFS.PS_VOUCHER_LINE L , UNDPFS.PS_DISTRIB_LINE D 
-- WHERE H.ENTRY_STATUS = 'P' AND
-- H.POST_STATUS_AP = 'P' AND H.CLOSE_STATUS <> 'C' AND H.BUSINESS_UNIT
-- = L.BUSINESS_UNIT AND H.VOUCHER_ID = L.VOUCHER_ID AND L.BUSINESS_UNIT
-- = D.BUSINESS_UNIT AND L.VOUCHER_ID = D.VOUCHER_ID AND
-- L.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM GROUP BY L.BUSINESS_UNIT_PO ,
-- L.PO_ID , D.LINE_NBR , D.SCHED_NBR , D.PO_DIST_LINE_NUM;

--Travel Report Query including PO Comments
--No Outerjoins
--SELECT * FROM PS_ITM_CAT_TBL WHERE SETID = 'UNUNI' AND CATEGORY_CD IN ('T0300A', 'T0300B', 'T0301A', 'T0301B')
SELECT A.BUSINESS_UNIT, A.PO_ID, TO_CHAR(A.PO_DT, 'YYYY') AS FISCAL_YEAR, G.CATEGORY_CD || '-' || G.DESCR, 
            B.DESCR254_MIXED, D.OPERATING_UNIT, D.DEPTID, D.QTY_PO, D.MERCH_AMT_BSE, COM.COMMENTS_2000
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_DISTRIB D, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G, PS_PO_COMMENTS POC, PS_COMMENTS_TBL COM
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.PO_ID = D.PO_ID
  AND B.LINE_NBR = D.LINE_NBR
    AND A.BUSINESS_UNIT = POC.BUSINESS_UNIT (+)
  AND A.PO_ID = POC.PO_ID (+)
  AND POC.OPRID = COM.OPRID (+)
  AND POC.COMMENT_ID = COM.COMMENT_ID (+)
  AND POC.RANDOM_CMMT_NBR = COM.RANDOM_CMMT_NBR (+)
  AND POC.STATUS (+) = 'A'
  AND POC.COMMENT_TYPE (+) = 'HDR'
  AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND G.CATEGORY_ID = B.CATEGORY_ID 
  AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
          AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE) 
  AND G.SETID = F.SETID 
  AND F.RECNAME = 'ITM_CAT_TBL'  
  AND B.CATEGORY_ID IN ('00379', '00380', '00381', '00382')
  AND A.PO_STATUS NOT IN ('X', 'PA', 'PX')
  AND B.CANCEL_STATUS NOT IN ('H', 'X')
  AND D.DISTRIB_LN_STATUS NOT IN ('X')
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND D.DST_ACCT_TYPE = 'DST'
  --AND TO_CHAR(A.PO_DT, 'YYYY') = '2012'
  --AND A.PO_ID = '0000000007'  
ORDER BY 1, 2;

--Verification Queries
SELECT * FROM PS_PO_COMMENTS WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005249';
SELECT * FROM PS_COMMENTS_TBL WHERE OPRID = 'jenna.kua' AND RANDOM_CMMT_NBR IN (109, 498, 492, 508);
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005249';
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005249';
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'LEDGER';

--Requisitions by Approver
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_DT, A.REQUESTOR_ID, A.OPRID_ENTERED_BY, A.OPRID_MODIFIED_BY, A.OPRID_APPROVED_BY, A.APPROVAL_DT,
            B.LINE_NBR, B.INV_ITEM_ID, B.SOURCE_STATUS, B.DESCR254_MIXED, B.QTY_REQ, B.VENDOR_ID, B.BUYER_ID, 
            C.SCHED_NBR, C.SHIPTO_ID,
            D.DISTRIB_LINE_NUM, D.LOCATION, D.BUDGET_LINE_STATUS, D.CURRENCY_CD, D.MONETARY_AMOUNT, D.CURRENCY_CD_BASE, D.MONETARY_AMT_BSE,
            D.ACCOUNT, D.DEPTID, D.OPERATING_UNIT, D.FUND_CODE, D.CHARTFIELD2, D.BUSINESS_UNIT_PC, D.PROJECT_ID, D.ACTIVITY_ID, D.BUSINESS_UNIT_GL, D.BUDGET_DT,
            COM.COMMENTS_2000, APPR.APPR_ACTION, APPR.APPROVAL_STATUS, APPR.COMMENTS
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D, PS_REQ_COMMENTS POC, PS_COMMENTS_TBL COM, PS_REQ_APPROVAL APPR
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.REQ_ID = C.REQ_ID
     AND B.LINE_NBR = C.LINE_NBR
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.REQ_ID = D.REQ_ID
     AND C.LINE_NBR = D.LINE_NBR
     AND C.SCHED_NBR = D.SCHED_NBR
     AND A.BUSINESS_UNIT = POC.BUSINESS_UNIT (+)
     AND A.REQ_ID = POC.REQ_ID (+)
     AND POC.OPRID = COM.OPRID (+)
     AND POC.COMMENT_ID = COM.COMMENT_ID (+)
     AND POC.RANDOM_CMMT_NBR = COM.RANDOM_CMMT_NBR (+)
     AND POC.STATUS (+) = 'A'
     AND POC.COMMENT_TYPE (+) = 'HDR'
     AND A.BUSINESS_UNIT = APPR.BUSINESS_UNIT
     AND A.REQ_ID = APPR.REQ_ID
     AND APPR.APPROVAL_TYPE = 'AMT'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.VENDOR_SETID = 'UNUNI'
     AND A.REQ_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND A.REQ_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
     --AND A.OPRID_APPROVED_BY = 'francois.dartagnan'
     --AND A.REQ_ID = '0000000222'
ORDER BY 1,2;

--Verification Queries
SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '604UU' AND REQ_ID = '0000000222'
SELECT * FROM PS_COMMENTS_TBL WHERE OPRID = 'mayumi.shimada' AND RANDOM_CMMT_NBR IN (440)
SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT = '604UU' AND REQ_ID = '0000000222'
SELECT * FROM PS_REQ_LINE WHERE BUSINESS_UNIT = '604UU' AND REQ_ID = '0000000222'

--Travel PO for NYC office
--Works
SELECT HDR.BUSINESS_UNIT, HDR.PO_ID, TO_CHAR(HDR.PO_DT, 'YYYY') AS PO_YEAR, LN.LINE_NBR, DIST.SCHED_NBR, DIST.DISTRIB_LINE_NUM,
            LN.DESCR254_MIXED, DIST.OPERATING_UNIT, DIST.DEPTID, DIST.ACCOUNT, DIST.FUND_CODE, DIST.CHARTFIELD2, DIST.PROJECT_ID, DIST.ACTIVITY_ID,  
            DIST.QTY_PO, DIST.MERCH_AMT_BSE AS PO_MERCH_AMT_BSE, DIST.CURRENCY_CD, DIST.MERCHANDISE_AMT AS PO_MERCHANDISE_AMT, 
            DIST.MONETARY_AMOUNT AS PO_MONETARY_AMOUNT, DIST.MONETARY_AMT_BSE AS MONETARY_AMT_BSE,
            DIST.BUSINESS_UNIT_REQ, DIST.REQ_ID, DIST.REQ_LINE_NBR, DIST.REQ_SCHED_NBR, DIST.REQ_DISTRIB_NBR,
            V.BUSINESS_UNIT AS VCHR_BU, V.VOUCHER_ID, V.FOREIGN_AMOUNT AS VCHR_AMT, V.FOREIGN_CURRENCY AS VCHR_FOREIGN_CURRENCY, 
            V.MONETARY_AMOUNT AS VCHR_MONETARY_AMOUNT, 
            V.MERCHANDISE_AMT AS VCHR_MERCHANDISE_AMT, V.MERCH_AMT_BSE AS VCHR_MERCH_AMT_BSE,
            V.BUSINESS_UNIT_GL, V.JOURNAL_ID, V.JOURNAL_DATE, V.GL_DISTRIB_STATUS,
            LISTAGG(COM.COMMENTS_2000, '|') WITHIN GROUP (ORDER BY COM.OPRID, COM.COMMENT_ID, COM.RANDOM_CMMT_NBR) COMMENTS_2000
FROM PS_COMMENTS_TBL COM, PS_PO_COMMENTS POC, PS_PO_HDR HDR, PS_PO_LINE LN, PS_PO_LINE_DISTRIB DIST, PS_VCHR_ACCTG_LINE V
WHERE HDR.BUSINESS_UNIT = LN.BUSINESS_UNIT
    AND HDR.PO_ID = LN.PO_ID
    AND HDR.BUSINESS_UNIT = DIST.BUSINESS_UNIT
    AND HDR.PO_ID = DIST.PO_ID
    AND LN.LINE_NBR = DIST.LINE_NBR
    AND DIST.BUSINESS_UNIT = V.BUSINESS_UNIT_PO (+) 
    AND DIST.PO_ID = V.PO_ID (+)
    AND DIST.LINE_NBR = V.LINE_NBR (+) 
    AND DIST.SCHED_NBR = V.SCHED_NBR (+)
    AND DIST.DISTRIB_LINE_NUM = V.PO_DIST_LINE_NUM (+)
    AND HDR.BUSINESS_UNIT = POC.BUSINESS_UNIT (+)
    AND HDR.PO_ID = POC.PO_ID (+)
    AND POC.OPRID = COM.OPRID (+)
    AND POC.COMMENT_ID = COM.COMMENT_ID (+)
    AND POC.RANDOM_CMMT_NBR = COM.RANDOM_CMMT_NBR (+)
    AND POC.STATUS (+) = 'A'
    AND POC.COMMENT_TYPE (+) = 'HDR'
    AND HDR.BUSINESS_UNIT LIKE '6%'
    --AND HDR.PO_ID IN ('0000005640', '0000003335', '0000004965', '0000004956')
    AND LN.CATEGORY_ID IN ('00001','00002','00003','00004','00005','00379','00380','00006','00381','00382','00007','00008','00009','00010','00011','00012','00013','00014','00348','00349','00350','00015')
    AND HDR.PO_STATUS NOT IN ('X', 'PA', 'PX')
    AND LN.CANCEL_STATUS NOT IN ('H', 'X')
    AND DIST.DST_ACCT_TYPE = 'DST'
    AND DIST.DEPTID IN ('12101', '11201')
GROUP BY HDR.BUSINESS_UNIT, HDR.PO_ID, TO_CHAR(HDR.PO_DT, 'YYYY'), LN.LINE_NBR, DIST.SCHED_NBR, DIST.DISTRIB_LINE_NUM, LN.DESCR254_MIXED, DIST.OPERATING_UNIT, DIST.DEPTID, 
               DIST.ACCOUNT, DIST.FUND_CODE, DIST.CHARTFIELD2, DIST.PROJECT_ID, DIST.ACTIVITY_ID, DIST.QTY_PO, DIST.MERCH_AMT_BSE, DIST.CURRENCY_CD, DIST.MERCHANDISE_AMT, 
               DIST.MONETARY_AMOUNT, DIST.MONETARY_AMT_BSE, DIST.BUSINESS_UNIT_REQ, DIST.REQ_ID, DIST.REQ_LINE_NBR, DIST.REQ_SCHED_NBR, DIST.REQ_DISTRIB_NBR, 
               V.BUSINESS_UNIT, V.VOUCHER_ID, V.FOREIGN_AMOUNT, V.FOREIGN_CURRENCY, V.MONETARY_AMOUNT, V.MERCHANDISE_AMT, V.MERCH_AMT_BSE, V.BUSINESS_UNIT_GL, V.JOURNAL_ID, 
               V.JOURNAL_DATE, V.GL_DISTRIB_STATUS
ORDER BY HDR.BUSINESS_UNIT, HDR.PO_ID, TO_CHAR(HDR.PO_DT, 'YYYY'), LN.LINE_NBR, DIST.SCHED_NBR, DIST.DISTRIB_LINE_NUM, LN.DESCR254_MIXED, DIST.OPERATING_UNIT, DIST.DEPTID, 
               DIST.ACCOUNT, DIST.FUND_CODE, DIST.CHARTFIELD2, DIST.PROJECT_ID, DIST.ACTIVITY_ID, DIST.QTY_PO, DIST.MERCH_AMT_BSE, DIST.CURRENCY_CD, DIST.MERCHANDISE_AMT, 
               DIST.MONETARY_AMOUNT, DIST.MONETARY_AMT_BSE, DIST.BUSINESS_UNIT_REQ, DIST.REQ_ID, DIST.REQ_LINE_NBR, DIST.REQ_SCHED_NBR, DIST.REQ_DISTRIB_NBR, 
               V.BUSINESS_UNIT, V.VOUCHER_ID, V.FOREIGN_AMOUNT, V.FOREIGN_CURRENCY, V.MONETARY_AMOUNT, V.MERCHANDISE_AMT, V.MERCH_AMT_BSE, V.BUSINESS_UNIT_GL, V.JOURNAL_ID, 
               V.JOURNAL_DATE, V.GL_DISTRIB_STATUS;

--X C Reqs needing Bud Check     
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, A.BUDGET_HDR_STATUS, TO_CHAR(REQ_DT,'YYYY'), B.LINE_NBR, B.CURR_STATUS, C.DISTRIB_LINE_NUM, C.BUDGET_LINE_STATUS, 
            C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2, C.MERCH_AMT_BSE, A.HOLD_STATUS, TO_CHAR(C.BUDGET_DT,'YYYY-MM-DD')            
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LN_DISTRIB C
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND B.CURR_STATUS IN ('C','X')
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.REQ_ID = C.REQ_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND ( C.BUDGET_LINE_STATUS IN ('E','N') AND A.BUDGET_HDR_STATUS <> 'V')
    AND A.REQ_STATUS NOT IN ('O','P','I')
    AND C.BUDGET_DT > TO_DATE('2009-12-31','YYYY-MM-DD')
ORDER BY 1, 2, 6, 8

--X C POs needing Bud Check
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, A.BUDGET_HDR_STATUS, TO_CHAR(PO_DT,'YYYY'), B.LINE_NBR, B.SCHED_NBR, B.DISTRIB_LINE_NUM, B.BUDGET_LINE_STATUS, 
            B.ACCOUNT, B.OPERATING_UNIT, B.DEPTID, B.FUND_CODE, B.CHARTFIELD2, B.PROJECT_ID, A.HOLD_STATUS, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.MERCH_AMT_BSE, B.DISTRIB_LN_STATUS, TO_CHAR(B.BUDGET_DT,'YYYY-MM-DD') AS BUDGET_DT
FROM PS_PO_HDR A, PS_PO_LINE_DISTRIB B
WHERE A.BUSINESS_UNIT LIKE '6%'     
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.PO_STATUS NOT IN ('I','O','PA')
    AND B.BUDGET_DT > TO_DATE('2008-12-31','YYYY-MM-DD')
    AND ( B.BUDGET_LINE_STATUS IN ('E','N') AND A.BUDGET_HDR_STATUS <> 'V')
    AND B.DISTRIB_LN_STATUS IN ('C','X')
ORDER BY 1, 2, 6, 7, 8

--PO Final Lines 
SELECT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, B.DISTRIB_LINE_NUM, B.CURRENCY_CD, B.MERCHANDISE_AMT, B.MERCH_AMT_BSE, 
            B.ACCOUNT, B.OPERATING_UNIT, B.DEPTID, B.FUND_CODE, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, TO_CHAR(C.PO_DT,'YYYY-MM-DD'), TO_CHAR(C.ACTIVITY_DATE,'YYYY-MM-DD')
FROM PS_PO_LINE_SHIP A, PS_PO_LINE_DISTRIB B, PS_PO_HDR C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.LINE_NBR = B.LINE_NBR
     AND A.SCHED_NBR = B.SCHED_NBR
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND B.KK_CLOSE_FLAG = 'Y'
     AND A.CANCEL_STATUS = 'A'
     AND C.PO_DT > TO_DATE('2011-01-01','YYYY-MM-DD')
     AND B.DISTRIB_LN_STATUS = 'O'
     AND C.PO_STATUS = 'D'
     AND C.ACTIVITY_DATE < TO_DATE('2012-12-31','YYYY-MM-DD')
     AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1, 2, 3, 4

--UNU_AP_UNPOSTED_VCHRS_BY_BU     
SELECT 'UNU_AP_UNPOSTED_VCHRS_BY_BU', A.BUSINESS_UNIT, A.VOUCHER_ID, A.ENTRY_STATUS, A.VOUCHER_STYLE, A.GROSS_AMT_BSE, A.BUDGET_HDR_STATUS, A.BUDGET_MISC_STATUS, A.MATCH_STATUS_VCHR, 
            A.APPR_STATUS, A.POST_VOUCHER, B.PAID_AMT_BSE, B.PYMNT_ACTION, B.PYMNT_SELCT_STATUS
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B
WHERE A.BUSINESS_UNIT LIKE '6%'     
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND A.ENTRY_STATUS NOT IN ('X','O')
     AND A.POST_STATUS_AP = 'U'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.PYMNT_ACTION <> 'X'
ORDER BY 1, 2

SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '615UU' AND GROUP_ID = 52
--SELECT * FROM PS_DEPOSIT_CONTROL WHERE GROUP_BU = '615UU'
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU = '615UU' AND GROUP_ID = 52
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU = '615UU' AND GROUP_ID = 52
SELECT * FROM PS_ITEM_ACTIVITY
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684' AND ITEM IN (SELECT ITEM FROM PS_PENDING_ITEM WHERE GROUP_BU = '615UU' AND GROUP_ID = 52)

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN (SELECT PROCESS_INSTANCE FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '615UU' AND CUST_ID = '10684' AND ITEM IN (SELECT ITEM FROM PS_PENDING_ITEM WHERE GROUP_BU = '615UU' AND GROUP_ID = 52))
SELECT * FROM PS_OPR_DEF_TBL_AM
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PO_POSTAGE'
SELECT * FROM PS_PO_DISTRIB_STG
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000005935'
SELECT * FROM PS_UN_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000005935'
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'VENDOR_CLASS' AND EFF_STATUS = 'A'
SELECT * FROM PS_VENDOR WHERE UPPER(NAME1) LIKE '%ARTAGNAN%'

SELECT SUBSTR(VENDOR_NAME_SHORT,1,(LENGTH(VENDOR_NAME_SHORT) -4)), VENDOR_CLASS, COUNT(1) FROM PS_VENDOR
WHERE SETID = 'UNUNI' AND VENDOR_CLASS IN ('C', 'F', 'G', 'I', 'M', 'S', 'T')
GROUP BY SUBSTR(VENDOR_NAME_SHORT,1,(LENGTH(VENDOR_NAME_SHORT) -4)),VENDOR_CLASS
HAVING COUNT(1) > 1
ORDER BY 1

SELECT NAME1, VENDOR_CLASS, COUNT(1) FROM PS_VENDOR
WHERE SETID = 'UNUNI' 
    AND VENDOR_CLASS IN ('C', 'F', 'G', 'I', 'M', 'S', 'T') 
    --AND VENDOR_STATUS = 'A'
GROUP BY NAME1, VENDOR_CLASS
--HAVING COUNT(1) > 1
ORDER BY 1

SELECT NAME1, COUNT(1) FROM PS_VENDOR
WHERE SETID = 'UNUNI' 
    --AND VENDOR_CLASS IN ('C', 'F', 'G', 'I', 'M', 'S', 'T') 
    AND VENDOR_STATUS = 'A'
GROUP BY NAME1
HAVING COUNT(1) > 1
ORDER BY 1

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND NAME1 = 'Nissin Travel Service Co., Ltd.'

SELECT NAME1, VENDOR_CLASS, COUNT(1) FROM PS_VENDOR WHERE NAME1 IN 
(SELECT NAME1 FROM PS_VENDOR
WHERE SETID = 'UNUNI' 
    AND VENDOR_CLASS IN ('C', 'F', 'G', 'I', 'M', 'S', 'T') 
    --AND VENDOR_STATUS = 'A'
GROUP BY NAME1)
AND SETID = 'UNUNI'
GROUP BY NAME1, VENDOR_CLASS
HAVING COUNT(1) > 1
ORDER BY NAME1

SELECT * FROM PSPRCSRQST WHERE PRCSNAME LIKE 'UN%FPA%PRJ%'
SELECT * FROM PS_EX_TYPES_TBL
SELECT * FROM PS_AM_FMV
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_GM_EMPL'
SELECT * FROM PSWEBPROFPROP
SELECT * FROM PS_PO_ACCTG_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004424'
SELECT * FROM PS_PO_ACCTG_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005488'
--PO_ACCTG_LN_VW SQL
SELECT H.BUSINESS_UNIT, H.PO_ID, H.UNPOST_SEQ, H.KK_SOURCE_TRAN, L.LINE_NBR, L.SCHED_NBR, L.DISTRIB_LINE_NUM, 0, L.DST_ACCT_TYPE, ' ', HDR.VENDOR_ID, HDR.PO_STATUS, HDR.CHNG_ORD_BATCH, 
            A.KK_TRAN_ID, A.KK_TRAN_DT, H.KK_SOURCE_TRAN, 'D', ' ', D.BUSINESS_UNIT_GL, A.LEDGER_GROUP, A.LEDGER, A.KK_TRAN_ID, A.ACCOUNT, D.ALTACCT, A.MONETARY_AMOUNT, A.BASE_CURRENCY, 
            A.CLOSED_VALUE, A.BUDGET_PERIOD, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR, A.DEPTID--, %subrec(CF16_AN_SBR , A), %subrec(PC_CF1_N_SBR , D) 
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR H, PS_KK_SOURCE_LN L, PS_PO_HDR HDR, PS_PO_LINE_DISTRIB D 
WHERE H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.BUSINESS_UNIT = HDR.BUSINESS_UNIT 
    AND H.PO_ID = D.PO_ID 
    AND H.PO_ID = HDR.PO_ID 
    AND L.LINE_NBR = D.LINE_NBR 
    AND L.SCHED_NBR = D.SCHED_NBR 
    AND L.DST_ACCT_TYPE = D.DST_ACCT_TYPE 
    AND L.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM 
    AND H.KK_TRAN_ID = L.KK_TRAN_ID 
    AND H.KK_TRAN_DT = L.KK_TRAN_DT 
    AND L.KK_TRAN_ID = A.KK_TRAN_ID 
    AND L.KK_TRAN_DT = A.KK_TRAN_DT 
    AND L.KK_TRAN_LN = A.KK_TRAN_LN 
    AND A.REFERENCED_BUDGET = 'N' 
    AND HDR.BUSINESS_UNIT = '600UU' 
    AND HDR.PO_ID = '0000004424'

--UNU User Prefernces
SELECT A.OPRID, A.BUSINESS_UNIT, A.LC_CNTRY, A.AS_OF_DATE, A.SETID, A.NAME1, B.ORIGIN, B.DEPTID, B.CHK_INV_AMT_FLG, B.INVOICE_AMT_MAX, B.AUTH_POST_VOUCHER,
       B.AUTH_APPROVE_VCHR, B.VCHR_APPRVL_AMT, B.AUTH_POST_VOUCHER, B.AUTH_VCHR_GRP, B.AUTH_SCHED_PYMNT, B.AUTH_OVRRD_MATCH, B.AUTH_PREPAY_VCHR, B.PREPAY_LIMIT_AMT, 
       B.AUTH_PAY_UNMTCHED, B.UNMATCH_PAY_AMT, B.AUTH_CPY_MTCH_PO, B.PYMNT_RCRD_FLG, B.AUTH_3RDPARTY_VCHR, B.AUTH_ADJUST_VCHR, B.AUTH_JORUNAL_VCHR, B.AUTH_REGISTER_VCHR,
       B.AUTH_REGULAR_VCHR, B.AUTH_TEMPLATE_VCHR, B.AUTH_CORRECT_VCHR, B.AUTH_CLBK_VCHR, B.AUTH_SGL_PYMNT_VCH,
       C.AUTH_VNDR_UNCERTFY, C.AUTH_VNDR_CERTFY, C.AUTH_VNDR_INACT_ST, D.ORIGIN, D.DEPTID, D.LOCATION, 
       D.CNTRCT_ENTRY, D.CNTRCT_APPROVE, D.CNTRCT_HOLD, D.CNTRCT_CLOSE, D.CNTRCT_PO_RLS, D.CNTRCT_AP_RLS, D.SHIPTO_ID, D.LOCATION, D.CNTRCT_STATUS, 
       D.RFQ_ENTRY, D.RFQ_HOLD, D.RFQ_APPROVE, D.RFQ_CLOSE, D.RFQ_STATUS, D.BUSINESS_UNIT_RECV, D.EDIT_CHARTFIELDS, D.PO_ONLY_RECEIVE, D.ALL_BUYERS_FLG, D.ALL_REQUESTORS_FLG, 
       D.PO_APPROVAL_AUTH, D.PO_WRK_APPR_AUTH, D.PO_CLOSE_AUTH, D.REQ_APPROVAL_AUTH, D.REQ_WRK_APPR_AUTH, D.REQ_CLOSE_AUTH, D.OVERRIDE_SUGG_VNDR, D.INV_RECEIVER, 
       D.INTFC_RECEIPT, D.DUE_DT_DAYS, D.PREPAID_AUTH_STAT, D.DELETE_PO_ALLOWED, D.DELETE_REQ_ALLOWED, D.PO_CLOSE_ALL , D.REQ_CLOSE_ALL, D.CNTRCT_CANCEL, D.PO_VRBT_SECURITY, 
       D.PO_REOPEN_AUTH, D.OVRD_PO_FOR_CLOSE,  D.REQ_REOPEN_AUTH, D.OVRD_REQ_FOR_CLOSE
FROM PS_OPR_DEF_TBL_FS A , PS_OPR_DEF_TBL_AP B , PS_OPR_DEF_TBL_VND C , PS_OPR_DEF_TBL_PM D
WHERE A.OPRID = B.OPRID 
    AND A.OPRID = C.OPRID 
    AND A.OPRID = D.OPRID
    AND (A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT = 'UNUNI');
    
    
--Find Inactive/Completed UNU Schedule JobSets
SELECT * FROM PS_SCHDLDEFN WHERE SCHEDULENAME LIKE 'UNU%' AND SCHEDULESTATUS <> 1
--Daily Batch Monitoring
SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS,
        TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm ,
        TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm ,
        TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min,
        CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) as diff,        
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 120/(24*60*60) then 1
                    else 0
        end as longer_than_threshold,
        case when CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE) > 138/(24*60*60) then 1
                    else 0
        end as over_thresholdPlus15Percent
FROM PSPRCSRQST
WHERE  (PRCSJOBNAME LIKE 'UNU%' OR MAINJOBNAME LIKE 'UNU%')
     AND TO_CHAR(rundttm,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
   --AND RUNSTATUS = 9
ORDER BY PRCSINSTANCE;

--Chech NEXTSTARTDTTM for UNU Schedule JobSets
SELECT I.SCHEDULENAME, I.JOBNAMESRC, S.TIMEZONE, I.NEXTSTARTDTTM, I.RECURDTTM, I.CURRENTJOBINSTANCE, S.DESCR, S.OPRID, S.SCHEDULESTATUS, S.RUN_CNTL_ID, S.STARTDATETIME, S.RECURNAME
FROM PS_SCHDLDEFNINFO I, PS_SCHDLDEFN S
WHERE I.SCHEDULENAME = S.SCHEDULENAME 
    AND I.JOBNAMESRC = S.JOBNAMESRC
    AND I.SCHEDULENAME LIKE 'UNU%'     
    AND TO_CHAR(I.NEXTSTARTDTTM, 'YYYY-MM-DD') < TO_CHAR(sysdate, 'YYYY-MM-DD')  

--Processes to start
SELECT I.SCHEDULENAME, I.JOBNAMESRC, S.TIMEZONE, I.NEXTSTARTDTTM, I.RECURDTTM, I.CURRENTJOBINSTANCE,
           S.DESCR, S.OPRID, S.SCHEDULESTATUS, S.RUN_CNTL_ID, S.STARTDATETIME, S.RECURNAME
FROM PS_SCHDLDEFNINFO I, PS_SCHDLDEFN S 
WHERE I.NEXTSTARTDTTM <= sysdate + 1
    AND S.SCHEDULESTATUS = '1' 
    AND I.SCHEDULENAME = S.SCHEDULENAME 
    AND I.JOBNAMESRC = S.JOBNAMESRC

--Non Balancing Lines from KK_ACTIVITY_LOG
SELECT * FROM PS_KK_ACT_LOG_VW WHERE BUSINESS_UNIT = 'UNUNI' AND BUSINESS_UNIT_APPL = '600UU'
AND TO_CHAR( KK_TRAN_DT, 'YYYY') IN ('2012')

--CC Ledger Amts View
--KK_INQ_LDNTF_VW
--Use this for verifying the GL Vs KK
SELECT A.BUSINESS_UNIT, B.LEDGER_GROUP, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.STATISTICS_CODE, A.BUDGET_PERIOD, A.LEDGER, 
            SUM(A.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT 
FROM PS_LEDGER_KK A, PS_LED_GRP_LED_TBL B, PS_SET_CNTRL_REC C, PS_SET_CNTRL_REC D, PS_SET_CNTRL_REC E 
WHERE A.LEDGER = B.LEDGER 
    AND B.SETID = E.SETID 
    AND E.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND E.RECNAME = 'LED_GRP_TBL' 
    AND A.CURRENCY_CD = A.BASE_CURRENCY 
    AND C.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND C.RECNAME = 'KK_BD_TYPE_VW' 
    AND D.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND D.RECNAME = 'GL_ACCT_ALL_VW'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.PROJECT_ID = '00064159'
    --AND A.DEPTID = 'B0119'
    AND A.BUDGET_PERIOD = '2012'
    AND A.ACCOUNT NOT IN (SELECT H.ACCOUNT FROM PS_KK_BD_OFFSET H WHERE H.SETID1 = C.SETID AND H.LEDGER_GROUP = B.LEDGER_GROUP AND H.SETID = D.SETID) 
   AND A.ACCOUNT NOT IN (SELECT I.ACCOUNT FROM PS_KK_TRX_OFFSET I WHERE I.SETID1 = C.SETID AND I.LEDGER_GROUP = B.LEDGER_GROUP AND I.SETID = D.SETID) 
GROUP BY A.BUSINESS_UNIT, B.LEDGER_GROUP, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.STATISTICS_CODE, A.BUDGET_PERIOD, A.LEDGER
ORDER BY 1,2,3;

--UNU Budget Journals with Error
SELECT * FROM PS_KK_ERR_LN_VW WHERE BUSINESS_UNIT = 'UNUNI';
--Expanded KK_ERR_LN_VW
SELECT A.BUSINESS_UNIT, A.KK_BUDG_TRANS_TYPE, A.BD_HDR_STATUS, A.POSTED_DATE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            B.JOURNAL_ID, B.JOURNAL_DATE, B.UNPOST_SEQ, B.JOURNAL_LINE, B.LINE_DESCR, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.BUSINESS_UNIT_PC, 
            B.PROJECT_ID, B.BUDGET_PERIOD, B.FOREIGN_CURRENCY, B.MONETARY_AMOUNT, B.CURRENCY_CD, B.FOREIGN_AMOUNT
FROM PS_KK_BUDGET_HDR A, PS_KK_BUDGET_LN B 
WHERE A.BUSINESS_UNIT=B.BUSINESS_UNIT 
    AND A.JOURNAL_ID=B.JOURNAL_ID 
    AND A.JOURNAL_DATE=B.JOURNAL_DATE 
    AND A.UNPOST_SEQ=B.UNPOST_SEQ 
    AND (B.BUDGET_LINE_STATUS = 'E' OR BD_LINE_STATUS = 'E' OR KSEC_LINE_STATUS = 'E')
    AND A.BUSINESS_UNIT = 'UNUNI'
ORDER BY 1,2;

--Version 2
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, A.LEDGER_GROUP, B.JOURNAL_LINE, B.LEDGER, B.BUDGET_PERIOD, B.LINE_DESCR, 
            A.KK_BUDG_TRANS_TYPE, A.JRNL_PROCESS_REQST, A.FOREIGN_CURRENCY, A.RT_TYPE, A.RATE_MULT, A.RATE_DIV, A.CUR_EFFDT, A.CURRENCY_CD, A.BD_HDR_STATUS, A.CF_VALUE, 
            A.JRNL_TOT_CREDITS, A.JRNL_TOTAL_DEBITS, A.JRNL_TOTAL_LINES, A.POSTED_DATE, A.SYSTEM_SOURCE, A.DTTM_STAMP_SEC, A.OPRID, A.DESCR, A.PROCESS_INSTANCE, 
            A.SOURCE_INSTANCE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.IN_PROCESS_FLG, A.DESCR254, A.JRNL_CREATE_DTTM, A.BUDGET_HDR_STATUS, A.KK_TRAN_OVER_DTTM, 
            A.KK_TRAN_OVER_FLAG, A.KK_TRAN_OVER_OPRID, A.KK_GEN_PARENT, A.KK_DEFAULT_EE, A.KK_PARENT_ENT_TYPE,
            B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.PRODUCT, B.FUND_CODE, B.CLASS_FLD, B.PROGRAM_CODE, B.BUDGET_REF, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, 
            B.CHARTFIELD1, B.CHARTFIELD2, B.CHARTFIELD3, B.BUSINESS_UNIT_PC, B.PROJECT_ID, B.ACTIVITY_ID, B.RESOURCE_TYPE, B.CURRENCY_CD, B.STATISTICS_CODE, B.STATISTIC_AMOUNT, 
            B.JOURNAL_CLASS, B.JRNL_LN_REF, B.KK_CUM_BEGIN_DT, B.KK_CUM_END_DT, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, 
            B.MONETARY_AMOUNT, B.BD_LINE_STATUS, B.ENTRY_EVENT, B.EE_PROC_STATUS, B.FUND_SOURCE, B.JRNL_LINE_SOURCE, B.PROCESS_INSTANCE, B.PC_DISTRIB_STATUS, 
            B.BUDGET_DT, B.BUDGET_LINE_STATUS, B.KSEC_LINE_STATUS
FROM PS_KK_BUDGET_HDR A, PS_KK_BUDGET_LN B 
WHERE A.BUSINESS_UNIT=B.BUSINESS_UNIT 
    AND A.JOURNAL_ID=B.JOURNAL_ID 
    AND A.JOURNAL_DATE=B.JOURNAL_DATE 
    AND A.UNPOST_SEQ=B.UNPOST_SEQ 
    AND (B.BUDGET_LINE_STATUS = 'E' OR BD_LINE_STATUS = 'E' OR KSEC_LINE_STATUS = 'E')
    AND A.BUSINESS_UNIT = 'UNUNI'
ORDER BY 1,2;

--KK Journal DrillDown
--FIND Budget Journals Impacting Budget Departments
--KK_DRL_JRNL_VW
SELECT * FROM PS_KK_DRL_JRNL_VW WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR IN ('2012', '2013') AND ACCOUNT IN ('B7000', 'B7100');

--KK_DRL_ALOG_PVW
SELECT BUSINESS_UNIT, LEDGER_GROUP, LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, FISCAL_YEAR, 
            ACCOUNTING_PERIOD, FOREIGN_CURRENCY, KK_TRAN_ID, KK_TRAN_LN, REFERENCED_BUDGET, FOREIGN_AMOUNT, BASE_CURRENCY, MONETARY_AMOUNT, KK_SOURCE_TRAN 
FROM PS_KK_DRL_ALOG_PVW 
WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT = '600UU') 
     AND FISCAL_YEAR = 2012 
     AND (DEPTID = 'B0119' OR DEPTID = '11901')
     --AND PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--KK_DRL_ALOG_EVW
SELECT BUSINESS_UNIT, LEDGER_GROUP, LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, FISCAL_YEAR, 
            ACCOUNTING_PERIOD, FOREIGN_CURRENCY, KK_TRAN_ID, KK_TRAN_LN, REFERENCED_BUDGET, FOREIGN_AMOUNT, BASE_CURRENCY, MONETARY_AMOUNT, KK_SOURCE_TRAN 
FROM PS_KK_DRL_ALOG_EVW
WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT = '600UU') 
     AND FISCAL_YEAR = 2012 
     AND (DEPTID = 'B0119' OR DEPTID = '11901')
     --AND PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--Control Budget Information for a BU
SELECT * FROM PS_KK_BD_DESCR_VW2 WHERE BUSINESS_UNIT = 'UNUNI';

--Associated revenue
SELECT * FROM PS_KK_ASCRV_AMT_VW 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND LEDGER_GROUP = 'AX1_UU'
    AND DEPTID = 'B0360'
    AND FUND_CODE = '12000'
    AND CHARTFIELD2 = '10134'

SELECT * FROM PS_KK_ASCR2_AMT_VW 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND LEDGER_GROUP = 'AX1_UU' 
    AND DEPTID = 'B0360'
    AND FUND_CODE = '12000'
    AND CHARTFIELD2 = '10134'    

--KK Budget Journals for a Fiscal Year
SELECT A.JOURNAL_ID, B.* 
FROM PS_KK_SOURCE_HDR A, PS_KK_ACTIVITY_LOG B 
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID 
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND A.KK_SOURCE_TRAN = 'GL_BD_JRNL'
    AND B.FISCAL_YEAR = 2012
    AND B.DEPTID = 'B0119'    
ORDER BY B.ACCOUNTING_PERIOD

--POROL001
--Open Purchase Report
--PO Details
SELECT H.BUSINESS_UNIT, H.PO_ID, H.PO_STATUS, TO_CHAR(H.PO_DT, 'YYYY-MM-DD') AS PO_DT, H.VENDOR_ID, B.VENDOR_NAME_SHORT, O.OPRDEFNDESC, H.BUYER_ID, D.LINE_NBR, D.SCHED_NBR, 
            D.DISTRIB_LINE_NUM, D.QTY_PO, D.MERCHANDISE_AMT, D.CURRENCY_CD, D.CURRENCY_CD_BASE, D.MERCH_AMT_BSE, D.MONETARY_AMOUNT, D.MONETARY_AMT_BSE, D.BUDGET_DT,
            D.DST_ACCT_TYPE, P.DESCR254_MIXED, D.REQ_ID, D.BUSINESS_UNIT_GL, D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.PROJECT_ID, D.CHARTFIELD2
FROM PS_PO_LINE_DISTRIB D,PS_PO_HDR H, PS_VENDOR_PO_VW B,PS_PO_LINE P,PSOPRDEFN O
WHERE H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND H.VENDOR_ID = B.VENDOR_ID
    AND H.VENDOR_SETID = B.SETID
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND H.BUYER_ID = O.OPRID
    AND H.PO_ID = D.PO_ID
    AND P.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND P.PO_ID = D.PO_ID
    AND P.LINE_NBR = D.LINE_NBR
    AND D.DST_ACCT_TYPE = 'DST'
    AND D.BUDGET_LINE_STATUS IN ('V','W')
    AND D.KK_CLOSE_FLAG <> 'Y'
    --AND H.VENDOR_ID = '0000005935'
ORDER BY D.BUSINESS_UNIT, D.PO_ID, D.LINE_NBR, D.SCHED_NBR, D.DISTRIB_LINE_NUM;

SELECT * FROM PS_PO_OPENENCM_SVW WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000005488', '0000004424');
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004432';
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000004432';
SELECT * FROM PS_VENDOR_PO_VW WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000006409';
SELECT * FROM PSOPRDEFN WHERE OPRID = 'eunice.iwasaki';

--PO Open Encumbrances
--PO_OPEN_ENC_VW
--This matches the output of the Query which has an outer join on PS_KK_LIQUIDATION with the addition of clause of PO_STATUS
SELECT DISTINCT H.BUSINESS_UNIT, H.PO_ID, B.LINE_NBR, B.SCHED_NBR, B.DISTRIB_LINE_NUM, C.FOREIGN_CURRENCY, C.BASE_CURRENCY, D.KK_LEDGER_GROUP, C.FOREIGN_AMOUNT, 
            C.MONETARY_AMOUNT 
FROM PS_PO_HDR H, PS_KK_SOURCE_HDR A, PS_KK_SOURCE_LN B, PS_KK_LIQUIDATION C, PS_BUL_CNTL_BUD D, PS_PO_LINE_DISTRIB I 
WHERE H.BUSINESS_UNIT = A.BUSINESS_UNIT 
   AND H.PO_ID = A.PO_ID 
   AND H.PO_STATUS NOT IN ('C','X')
   AND H.BUDGET_HDR_STATUS = 'V'
   AND H.BUDGET_HDR_STS_NP = 'V'
   AND H.BUSINESS_UNIT = I.BUSINESS_UNIT
   AND H.PO_ID = I.PO_ID
   AND I.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
   AND D.KK_DETAIL_LED = 'Y'
   AND A.KK_SOURCE_TRAN = 'PO_POENC'
   AND A.KK_ROLLED <> 'Y'
   AND A.KK_TRAN_ID = B.KK_TRAN_ID
   AND A.KK_TRAN_DT = B.KK_TRAN_DT 
   AND B.KK_TRAN_ID = C.KK_TRAN_ID 
   AND B.KK_TRAN_DT = C.KK_TRAN_DT 
   AND B.KK_TRAN_LN = C.KK_TRAN_LN 
   AND D.KK_LEDGER_GROUP = C.LEDGER_GROUP 
   AND C.FOREIGN_AMOUNT <> 0 
   AND C.MONETARY_AMOUNT <> 0
   AND H.BUSINESS_UNIT = '600UU'
   --AND H.BUSINESS_UNIT LIKE '6%'
ORDER BY 1,2;

--------------------------------------------
--KK Details for PO
--Use this for verifying the PO amounts which are reported by PO Open Encumbrances Query
--Needs some testing
--------------------------------------------
SELECT DISTINCT K.KK_TRAN_ID, W.LEDGER_GROUP, W.BUSINESS_UNIT, W.PO_ID, W.BUDGET_PERIOD, W.LINE_NBR, W.SCHED_NBR, W.DISTRIB_LINE_NUM, W.VENDOR_ID, 
            K.FOREIGN_AMOUNT, K.KK_QUANTITY, K.MONETARY_AMOUNT,
            W.ACCOUNT, W.OPERATING_UNIT, W.FUND_CODE, W.DEPTID, W.PROJECT_ID, W.CHARTFIELD2,
            W.PO_STATUS, W.FISCAL_YEAR, W.ACCOUNTING_PERIOD
FROM PS_KK_SOURCE_HDR SH, PS_KK_SOURCE_LN SL, PS_KK_ACTIVITY_LOG WW, PS_KK_LIQUIDATION K, PS_PO_ACCTG_LN_VW W
WHERE SH.KK_TRAN_ID = SL.KK_TRAN_ID
   AND SH.KK_TRAN_DT = SL.KK_TRAN_DT
   AND SL.KK_TRAN_ID = K.KK_TRAN_ID
   AND SL.KK_TRAN_DT = K.KK_TRAN_DT
   AND SL.KK_TRAN_LN = K.KK_TRAN_LN  
   AND K.KK_TRAN_ID = WW.KK_TRAN_ID
   AND K.KK_TRAN_DT = WW.KK_TRAN_DT
   AND K.KK_TRAN_LN = WW.KK_TRAN_LN
   AND W.BUSINESS_UNIT = SH.BUSINESS_UNIT
   AND W.PO_ID = SH.PO_ID
   AND W.LINE_NBR = SL.LINE_NBR 
   AND W.SCHED_NBR = SL.SCHED_NBR
   AND W.DISTRIB_LINE_NUM = SL.DISTRIB_LINE_NUM
   AND SH.BUSINESS_UNIT LIKE '6%'
   AND W.BUSINESS_UNIT_GL = 'UNUNI'
   AND W.LEDGER_GROUP = 'DET_UU'
   AND K.MONETARY_AMOUNT <> 0
   --AND W.FISCAL_YEAR = '2012'
   AND TO_CHAR(SH.KK_TRAN_DT, 'YYYY') IN ('2012')
   --AND SH.PO_ID IN ('0000005488', '0000004424', '0000004335')   
   --AND SL.LINE_NBR = 1
   --AND SL.SCHED_NBR = 1
   --AND SL.DISTRIB_LINE_NUM = 1
ORDER BY 1,2,3;
   
--PO Confirmation Query for Liquidation Open Balance
SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.PO_STATUS, A.BUDGET_CHECK, TO_CHAR(A.PO_DT,'YYYY-MM-DD') AS PO_DT, 
       B.CNTRCT_SETID, B.CNTRCT_ID, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, A.MATCH_STATUS_PO,
       A.PO_POST_STATUS, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_Amt, A.CURRENCY_CD, 
       D.MERCHANDISE_AMT AS PO_Foreign_Amt, A.VENDOR_ID, TO_CHAR(C.DUE_DT,'YYYY-MM-DD') AS DUE_DT, B.DESCR254_MIXED, C.SHIPTO_ID, D.REQ_ID, 
       D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE, 
       G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_ENC, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, G.FOREIGN_CURRENCY, 
       G.LEDGER_GROUP, G.PC_DISTRIB_STATUS
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, 
    (((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT 
                                                             AND D.PO_ID = E.PO_ID) 
       LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT 
                                        AND E.KK_TRAN_ID = F.KK_TRAN_ID 
                                        AND D.LINE_NBR = F.LINE_NBR 
                                        AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM 
                                        AND D.SCHED_NBR = F.SCHED_NBR) 
      LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID 
                                         AND F.KK_TRAN_DT = G.KK_TRAN_DT 
                                         AND F.KK_TRAN_LN = G.KK_TRAN_LN)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND A.PO_STATUS NOT IN ('C','X')
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND D.PROJECT_ID = '00064159'  
  AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND G.LEDGER_GROUP = 'DET_UU'
  AND G.MONETARY_AMOUNT <> 0
ORDER BY 1, 2;

SELECT * FROM PS_PC_KK_LIQUID_VW WHERE KK_TRAN_ID IN ('0047993780', '0055877295')

--PO_WB_OP_ENC_VW
--Used by PO Recon WB
SELECT H.BUSINESS_UNIT, H.PO_ID, SUM(B.MONETARY_AMOUNT) 
FROM PS_KK_SOURCE_HDR A, PS_KK_LIQUIDATION B, PS_PO_HDR H 
WHERE A.BUSINESS_UNIT = H.BUSINESS_UNIT 
    AND A.PO_ID = H.PO_ID 
    AND A.KK_TRAN_ID = B.KK_TRAN_ID 
    AND A.KK_SOURCE_TRAN = 'PO_POENC'
    AND A.BUSINESS_UNIT LIKE '6%'
    --AND TO_CHAR(H.PO_DT, 'YYYY') > 2011
    AND B.MONETARY_AMOUNT <> 0
    AND H.PO_STATUS NOT IN ('C','X')    
    --AND A.PO_ID IN ('0000005488', '0000004424')
GROUP BY H.BUSINESS_UNIT, H.PO_ID
ORDER BY H.BUSINESS_UNIT, H.PO_ID

--REQ_WB_ENC_VW
--Used by PO Recon WB
SELECT H.BUSINESS_UNIT, H.REQ_ID, SUM(B.MONETARY_AMOUNT) 
FROM PS_KK_SOURCE_HDR A, PS_KK_LIQUIDATION B, PS_REQ_HDR H 
WHERE A.BUSINESS_UNIT = H.BUSINESS_UNIT 
    AND A.REQ_ID = H.REQ_ID 
    AND A.KK_TRAN_ID = B.KK_TRAN_ID 
    AND A.KK_SOURCE_TRAN = 'REQ_PREENC'
    AND A.BUSINESS_UNIT = '600UU'
    AND B.MONETARY_AMOUNT <> 0 
GROUP BY H.BUSINESS_UNIT, H.REQ_ID
ORDER BY H.BUSINESS_UNIT, H.REQ_ID

SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID IN ('0047993780', '0055877295') 

SELECT * FROM PSRECFIELD WHERE RECNAME = 'PO_ITM_STG' ORDER BY FIELDNUM
SELECT * FROM PSRECFIELD WHERE RECNAME = 'PO_HDR_STG' ORDER BY FIELDNUM
SELECT * FROM PSRECFIELD WHERE RECNAME = 'PO_DISTRIB_STG' ORDER BY FIELDNUM
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00020477'
SELECT * FROM PS_VOUCHER_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00020477'
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00020477'

SELECT * FROM PS_VOUCHER WHERE MTCH_LEVEL_OPT <>'V'
SELECT * FROM PS_VCHR_ERRC_VW WHERE BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_ASSET_ACQ_DET WHERE VOUCHER_ID LIKE 'AMSL%'
SELECT * FROM PS_VCHR_MTCH_DETLS WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00020477'

--Vouchers to be matched
SELECT * FROM PS_VCHR_MTCHBL_VW WHERE BUSINESS_UNIT LIKE '6%';

--FINQA_AP_MATCH_EXCEPTIONS     
SELECT A.PROCESS_INSTANCE, A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.BUSINESS_UNIT_RECV, C.RECEIVER_ID, 
            C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, B.MATCH_RULE_ID, A.SETID, A.MATCH_CNTRL_ID, C.BUYER_ID, B.DESCR254, C.QTY_VCHR_CNVT, C.QTY_ACCEPTED_CNVT, C.PRICE_PO, C.QTY_PO, 
            C.UNIT_PRICE_CNVT, C.ASSTN_NAME, C.ALGTHM_BEHAVIOR
FROM PS_AP_MTCH_EXCPTN A, PS_AP_MTCH_RULES B, PS_VCHR_LOG_LN_VW C
WHERE A.MATCH_RULE_ID = B.MATCH_RULE_ID
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.VOUCHER_ID = C.VOUCHER_ID
     AND A.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
     AND A.BUSINESS_UNIT LIKE '6%'
     --AND A.VOUCHER_ID LIKE :2
ORDER BY 2, 3, 4, 13;

SELECT * FROM PS_GROUP_CONTROL WHERE BUSINESS_UNIT = '622UU'
SELECT * FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT = '600UU'
SELECT * FROM PS_BUS_UNIT_INTFC WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE IN ('UNUNI');
SELECT * FROM PS_BU_AP_GL_OPT WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_WTHD_BU_HDR WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_BU_WTHD_ENT_FLD
SELECT * FROM PS_IU_TRF_DEFN_TBL
SELECT SETID, COUNT(1) FROM PS_AM_LOCATION_TBL
GROUP BY SETID
SELECT * FROM PS_AM_LOCATION_TBL
SELECT * FROM PS_ASSET_LOCATION
SELECT * FROM PS_AM_AREA_TBL
SELECT * FROM PS_LOCATION_TBL WHERE SETID = 'UNUNI'
SELECT BUSINESS_UNIT, COUNT(1) FROM PS_ASSET
GROUP BY BUSINESS_UNIT
SELECT * FROM PS_INV_ITEM_FAM WHERE SETID = 'SHARE'
SELECT * FROM PS_FIN_OPEN_PERIOD WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_REQUESTOR_TBL WHERE REQUESTOR_ID = 'angela.lee'
SELECT * FROM PS_REQUESTOR_CAT WHERE REQUESTOR_ID = 'angela.lee'
SELECT * FROM PS_PURCH_ITEM_ATTR WHERE PRICE_LIST <> 0

--Find Payments in process
SELECT * FROM PS_PAYMENT_TBL WHERE REMIT_SETID = 'UNUNI' AND IN_PROCESS_FLG = 'Y' AND BUSINESS_UNIT_GL = 'UNUNI' 
--Web Profile History
SELECT * FROM PSWEBPROFHIST ORDER BY DELIVEREDLAST DESC
--FTP Access
SELECT * FROM PS_PV_ATT_SERVERS

--Troubleshooting AR_UPDATE
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU'
SELECT * FROM PS_RP_PARALLEL WHERE GROUP_BU LIKE '6%'
SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND PAYMENT_METHOD = ' ';
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND DST_ID_AR = ' ';
SELECT * FROM PS_CUST_DATA WHERE BUSINESS_UNIT LIKE '6%'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%' AND PROCESS_INSTANCE = 30306183
SELECT GROUP_BU, TO_CHAR( ACCOUNTING_DT, 'YYYY') AS ACCTG_DT,
            CASE POST_ACTION
                     WHEN 'A' THEN 'No Action'
                     WHEN 'B' THEN 'Balance Only Now'
                     WHEN 'D' THEN 'Delete This Group Now'
                     WHEN 'E' THEN 'Delete ALL Accouting Entries'
                     WHEN 'G' THEN 'Generate GL Distribution'
                     WHEN 'I' THEN 'Balance and Post Later'
                     WHEN 'L' THEN 'Batch Standard'
                     WHEN 'N' THEN 'Batch Priority'
                     WHEN 'V' THEN 'View'
                     ELSE 'Unknown'
            END AS POST_ACTION, 
            CASE POST_STATUS 
                     WHEN 'C' THEN 'Complete' 
                     WHEN 'E' THEN 'Errors'
                     WHEN 'N' THEN 'Not Posted' 
                     ELSE 'Unknown'
                     END AS POST_STATUS, COUNT(1) 
FROM PS_GROUP_CONTROL 
WHERE GROUP_BU LIKE '6%'
     AND TO_CHAR( ACCOUNTING_DT, 'YYYY') IN ('2012')
GROUP BY GROUP_BU, TO_CHAR( ACCOUNTING_DT, 'YYYY'), POST_ACTION, POST_STATUS
ORDER BY 1,2,3;

--Payment Worksheet
--Version 1
SELECT DEPOSIT_BU, 
            CASE CREATE_PEND_ITEMS
                     WHEN 'A' THEN 'No Action'
                     WHEN 'L' THEN 'Batch Standard'
                     WHEN 'N' THEN 'Batch Priority'                     
                     ELSE 'Unknown'
            END AS CREATE_PEND_ITEMS, COUNT(1) 
FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%'
GROUP BY DEPOSIT_BU, CREATE_PEND_ITEMS
ORDER BY DEPOSIT_BU, CREATE_PEND_ITEMS;

--Version 2
SELECT DEPOSIT_BU, 
            CASE CREATE_PEND_ITEMS
                     WHEN 'A' THEN 'No Action'
                     WHEN 'L' THEN 'Batch Standard'
                     WHEN 'N' THEN 'Batch Priority'                     
                     ELSE 'Unknown'
            END AS CREATE_PEND_ITEMS, 
            CASE PAYMENT_STATUS
                     WHEN 'A' THEN 'Applied'
                     WHEN 'C' THEN 'Complete'
                     WHEN 'E' THEN 'Identified - Express'
                     WHEN 'I' THEN 'Identified'
                     WHEN 'J' THEN 'Directly Journalled'
                     WHEN 'U' THEN 'Unidentified'
                     WHEN 'W' THEN 'Worksheet'
            END AS PAYMENT_STATUS, COUNT(1) 
FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%'
GROUP BY DEPOSIT_BU, CREATE_PEND_ITEMS, PAYMENT_STATUS
ORDER BY DEPOSIT_BU, CREATE_PEND_ITEMS, PAYMENT_STATUS;

--Worksheet
SELECT WS_BU, 
            CASE POST_ACTION
                     WHEN 'A' THEN 'No Action'
                     WHEN 'B' THEN 'Balance Only Now'
                     WHEN 'D' THEN 'Delete This Group Now'
                     WHEN 'E' THEN 'Delete ALL Accouting Entries'
                     WHEN 'G' THEN 'Generate GL Distribution'
                     WHEN 'I' THEN 'Balance and Post Later'
                     WHEN 'L' THEN 'Batch Standard'
                     WHEN 'N' THEN 'Batch Priority'
                     WHEN 'V' THEN 'View'
                     ELSE 'Unknown'
            END AS POST_ACTION, 
            CASE POST_STATUS 
                     WHEN 'C' THEN 'Complete' 
                     WHEN 'E' THEN 'Errors'
                     WHEN 'N' THEN 'Not Posted' 
                     ELSE 'Unknown'
                     END AS POST_STATUS, COUNT(1) 
FROM PS_WS_CONTROL WHERE WS_BU LIKE '6%' GROUP BY WS_BU, POST_ACTION, POST_STATUS ORDER BY 1,2,3;

SELECT PROCESS_INSTANCE, 0,0,0,0,0,0 FROM PS_CUST_DATA WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, PROCESS_INSTANCE, 0,0,0,0,0 FROM PS_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, 0, PROCESS_INSTANCE, 0,0,0,0 FROM PS_GROUP_CONTROL WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, 0, 0, PROCESS_INSTANCE, 0,0,0 FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, 0, 0, 0, PROCESS_INSTANCE, 0,0 FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, 0, 0, 0, 0, PROCESS_INSTANCE, 0 FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%' AND PROCESS_INSTANCE <> 0
UNION
SELECT 0, 0, 0, 0, 0, 0, PROCESS_INSTANCE FROM PS_WS_CONTROL WHERE WS_BU LIKE '6%' AND PROCESS_INSTANCE <> 0

--AR60001
--Business Unit Activity Report
--Version 1
SELECT ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.ENTRY_TYPE, ET2.DESCR, ITEM2.ENTRY_REASON, ER2.DESCR AS REASON_DESCR, TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') AS MONTH, 
            SUM(ITEM2.ENTRY_AMT_BASE) BASE_AMOUNT
FROM PS_ITEM_ACTIVITY ITEM2, PS_ENTRY_TYPE_TBL ET2, PS_ENTRY_REASN_TBL ER2
WHERE ITEM2.ENTRY_TYPE = ET2.ENTRY_TYPE
    AND ET2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = ITEM2.BUSINESS_UNIT AND RECNAME = 'ENTRY_TYPE_TBL')
    AND ER2.SETID (+) = 'UNUNI' -- (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = ITEM2.BUSINESS_UNIT AND RECNAME = 'ENTRY_REASN_TBL')
    AND ER2.ENTRY_TYPE (+) = ITEM2.ENTRY_TYPE
    AND ER2.ENTRY_REASON (+) = ITEM2.ENTRY_REASON
    AND ITEM2.BUSINESS_UNIT = '600UU'
    AND ITEM2.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')     
GROUP BY ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.ENTRY_TYPE, ET2.DESCR, ITEM2.ENTRY_REASON, ER2.DESCR, TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM')
ORDER BY ITEM2.BUSINESS_UNIT, ET2.DESCR, ITEM2.ENTRY_REASON

--Version 2
--Based on Entry Type/Entry Reason
SELECT X.BUSINESS_UNIT, X.SETID, X.ENTRY_TYPE, X.DESCR, X.ENTRY_REASON, ER2.DESCR AS REASON_DESCR, SUM(X.TOTAL_AMT) AS TOTAL_AMT,
            SUM(X.JAN) AS JAN, SUM(X.FEB) AS FEB, SUM(X.MAR) AS MAR, SUM(X.APR) AS APR, SUM(X.MAY) AS MAY, SUM(X.JUN) AS JUN, SUM(X.JUL) AS JUL, SUM(X.AUG) AS AUG, SUM(X.SEP) AS SEP,
            SUM(X.OCT) AS OCT, SUM(X.NOV) AS NOV, SUM(X.DEC) AS DEC 
FROM
(SELECT ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.ENTRY_TYPE, ET2.DESCR, ITEM2.ENTRY_REASON, 
            SUM(ITEM2.ENTRY_AMT_BASE) AS TOTAL_AMT
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '01' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JAN
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '02' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS FEB
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '03' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS MAR
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '04' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS APR
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '05' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS MAY
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '06' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JUN
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '07' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JUL
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '08' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS AUG
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '09' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS SEP
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '10' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS OCT
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '11' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS NOV
            ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '12' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS DEC
FROM PS_ITEM_ACTIVITY ITEM2, PS_ENTRY_TYPE_TBL ET2
WHERE ITEM2.ENTRY_TYPE = ET2.ENTRY_TYPE
    AND ET2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = ITEM2.BUSINESS_UNIT AND RECNAME = 'ENTRY_TYPE_TBL') 
    AND ITEM2.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')     
GROUP BY ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.ENTRY_TYPE, ET2.DESCR, ITEM2.ENTRY_REASON, TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM')) X, PS_ENTRY_REASN_TBL ER2
WHERE ER2.SETID (+) = 'UNUNI'
    AND ER2.ENTRY_TYPE (+) = X.ENTRY_TYPE
    AND ER2.ENTRY_REASON (+) = X.ENTRY_REASON 
    AND X.BUSINESS_UNIT LIKE '6%'
GROUP BY X.BUSINESS_UNIT, X.SETID, X.ENTRY_TYPE, X.DESCR, X.ENTRY_REASON, ER2.DESCR
ORDER BY X.BUSINESS_UNIT, X.DESCR, X.ENTRY_REASON;

--Version 3
--Based on Group Type/Origin/Bank Code
SELECT X.BUSINESS_UNIT, X.SETID, X.GROUP_TYPE, X.GRP_DESCR, X.ORIGIN_ID, X.BANK_CD, X.BANK_ACCT_KEY, 
       SUM(X.TOTAL_AMT) AS TOTAL_AMT,
       SUM(X.JAN) AS JAN, SUM(X.FEB) AS FEB, SUM(X.MAR) AS MAR, SUM(X.APR) AS APR, SUM(X.MAY) AS MAY, SUM(X.JUN) AS JUN, SUM(X.JUL) AS JUL, SUM(X.AUG) AS AUG, SUM(X.SEP) AS SEP,
       SUM(X.OCT) AS OCT, SUM(X.NOV) AS NOV, SUM(X.DEC) AS DEC 
FROM
(SELECT ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.GROUP_TYPE, ET2.DESCR AS GRP_DESCR, ITEM2.ORIGIN_ID, ITEM2.BANK_CD, ITEM2.BANK_ACCT_KEY, 
         SUM(ITEM2.ENTRY_AMT_BASE) AS TOTAL_AMT
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '01' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JAN
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '02' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS FEB
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '03' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS MAR
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '04' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS APR
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '05' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS MAY
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '06' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JUN
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '07' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS JUL
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '08' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS AUG
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '09' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS SEP
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '10' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS OCT
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '11' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS NOV
        ,CASE TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM') WHEN '12' THEN SUM(ITEM2.ENTRY_AMT_BASE) ELSE 0 END AS DEC
FROM PS_ITEM_ACTIVITY ITEM2, PS_GROUP_TYPE_TBL ET2
WHERE ITEM2.GROUP_TYPE = ET2.GROUP_TYPE
  AND ET2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = ITEM2.BUSINESS_UNIT AND RECNAME = 'GROUP_TYPE_TBL')
  AND ET2.EFFDT = (SELECT MAX(EFFDT) FROM PS_GROUP_TYPE_TBL ET2_ED WHERE ET2_ED.SETID = ET2.SETID AND ET2_ED.GROUP_TYPE = ET2.GROUP_TYPE AND ET2_ED.EFF_STATUS = 'A' AND ET2_ED.EFFDT <= ITEM2.ACCOUNTING_DT)     
  AND ITEM2.ACCOUNTING_DT BETWEEN TO_DATE('2015-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')     
GROUP BY ITEM2.BUSINESS_UNIT, ET2.SETID, ITEM2.GROUP_TYPE, ET2.DESCR, ITEM2.ORIGIN_ID, ITEM2.BANK_CD, ITEM2.BANK_ACCT_KEY, TO_CHAR(ITEM2.ACCOUNTING_DT, 'MM')) X
WHERE X.BUSINESS_UNIT LIKE '6%'
GROUP BY X.BUSINESS_UNIT, X.SETID, X.GROUP_TYPE, X.GRP_DESCR, X.ORIGIN_ID, X.BANK_CD, X.BANK_ACCT_KEY
ORDER BY X.BUSINESS_UNIT, X.GROUP_TYPE;


SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT = '600UU' AND ITEM = 'NOP 1218';
SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND CUST_ID = '10102';

SELECT B.RUNSTATUS, (SELECT C.XLATLONGNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = B.RUNSTATUS)  RUNDESCR,
            DISTSTATUS,
            (SELECT D.XLATLONGNAME FROM PSXLATITEM D WHERE D.FIELDNAME = 'DISTSTATUS' AND D.FIELDVALUE = B.DISTSTATUS) DISTDESCR, 
            COUNT(1) 
FROM PSPRCSRQST B
WHERE B.OPRID = 'prakash.prashant'
GROUP BY B.RUNSTATUS, B.DISTSTATUS;

SELECT * FROM PSPRCSRQST B WHERE (B.OPRID = 'prakash.prashant' or (B.PRCSJOBNAME LIKE 'UNU%' OR B.MAINJOBNAME LIKE 'UNU%'))

SELECT I.SCHEDULENAME, I.JOBNAMESRC, S.TIMEZONE, I.NEXTSTARTDTTM, I.RECURDTTM, I.CURRENTJOBINSTANCE, S.SCHEDULENAME, S.DESCR, S.OPRID, 
            S.SCHEDULESTATUS, S.RUN_CNTL_ID, S.STARTDATETIME, S.RECURNAME
FROM PS_SCHDLDEFNINFO I, PS_SCHDLDEFN S
WHERE I.SCHEDULENAME (+) = S.SCHEDULENAME
    AND I.JOBNAMESRC (+) = S.JOBNAMESRC
    AND (S.SCHEDULENAME LIKE 'UNU%' OR S.OPRID = 'prakash.prashant')
    AND (TO_CHAR(I.NEXTSTARTDTTM, 'YYYY-MM-DD') < TO_CHAR(sysdate, 'YYYY-MM-DD') OR TO_CHAR(I.NEXTSTARTDTTM, 'YYYY-MM-DD') IS NULL)
ORDER BY 1,2,3;
SELECT * FROM PS_SCHDLDEFN WHERE (SCHEDULENAME LIKE 'UNU%' OR OPRID = 'prakash.prashant') AND SCHEDULESTATUS <> 1;

SELECT * FROM PS_JRNL_LN_AM WHERE BUSINESS_UNIT = 'UNUNI'
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_APGL_RECN_TBL WHERE FISCAL_YEAR > 2011
GROUP BY BUSINESS_UNIT, FISCAL_YEAR

--Payables Open Liability
SELECT BUSINESS_UNIT, TO_CHAR(ACCOUNTING_DT, 'YYYY') AS YEAR, COUNT(1) 
FROM PS_RUN_APY1406_TBL 
WHERE TO_CHAR(ACCOUNTING_DT, 'YYYY') > 2011 
GROUP BY BUSINESS_UNIT, TO_CHAR(ACCOUNTING_DT, 'YYYY')
ORDER BY 1,2

SELECT * FROM PS_RUN_APY1406_TBL WHERE BUSINESS_UNIT LIKE '6%' ORDER BY VENDOR_ID

--UNU Payables Open Liability
--Version 1
SELECT BUSINESS_UNIT, VENDOR_ID, NAME1, CURRENCY_CD, SUM(GROSS_AMT_BSE) AS AMOUNT  
FROM PS_RUN_APY1406_TBL
WHERE BUSINESS_UNIT LIKE '6%'
    AND OPRID = 'prakash.prashant'
    AND RUN_CNTL_ID = 'UNU_APY1406' 
GROUP BY BUSINESS_UNIT, VENDOR_ID, NAME1, CURRENCY_CD
ORDER BY BUSINESS_UNIT, VENDOR_ID

--Version 2
SELECT X.BUSINESS_UNIT, X.VENDOR_ID, X.NAME1, X.CURRENCY_CD, X.PYMNT_HOLD, SUM(X.TOTAL_AMT) AS TOTAL_AMT,
            SUM(X.JAN) AS JAN, SUM(X.FEB) AS FEB, SUM(X.MAR) AS MAR, SUM(X.APR) AS APR, SUM(X.MAY) AS MAY, SUM(X.JUN) AS JUN, SUM(X.JUL) AS JUL, SUM(X.AUG) AS AUG, SUM(X.SEP) AS SEP,
            SUM(X.OCT) AS OCT, SUM(X.NOV) AS NOV, SUM(X.DEC) AS DEC
FROM (
SELECT BUSINESS_UNIT, VENDOR_ID, NAME1, CURRENCY_CD, PYMNT_HOLD, SUM(GROSS_AMT_BSE) AS TOTAL_AMT
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '01' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JAN
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '02' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS FEB
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '03' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS MAR
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '04' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS APR
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '05' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS MAY
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '06' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JUN
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '07' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JUL
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '08' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS AUG
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '09' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS SEP
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '10' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS OCT
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '11' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS NOV
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '12' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS DEC
FROM PS_RUN_APY1406_TBL
WHERE BUSINESS_UNIT LIKE '6%'
    AND OPRID = 'prakash.prashant'
    AND RUN_CNTL_ID = 'UNU_APY1406' 
GROUP BY BUSINESS_UNIT, VENDOR_ID, NAME1, CURRENCY_CD, PYMNT_HOLD, TO_CHAR(ACCOUNTING_DT, 'MM')) X
GROUP BY X.BUSINESS_UNIT, X.VENDOR_ID, X.NAME1, X.CURRENCY_CD, X.PYMNT_HOLD
ORDER BY X.BUSINESS_UNIT, X.VENDOR_ID

--Version 3
SELECT X.BUSINESS_UNIT, X.VENDOR_ID, X.NAME1, X.VOUCHER_ID, X.CURRENCY_CD, X.PYMNT_HOLD, X.YEAR, SUM(X.TOTAL_AMT) AS TOTAL_AMT,
            SUM(X.JAN) AS JAN, SUM(X.FEB) AS FEB, SUM(X.MAR) AS MAR, SUM(X.APR) AS APR, SUM(X.MAY) AS MAY, SUM(X.JUN) AS JUN, SUM(X.JUL) AS JUL, SUM(X.AUG) AS AUG, SUM(X.SEP) AS SEP,
            SUM(X.OCT) AS OCT, SUM(X.NOV) AS NOV, SUM(X.DEC) AS DEC
FROM (
SELECT BUSINESS_UNIT, VENDOR_ID, NAME1, VOUCHER_ID, CURRENCY_CD, PYMNT_HOLD, TO_CHAR(ACCOUNTING_DT, 'YYYY') AS YEAR, SUM(GROSS_AMT_BSE) AS TOTAL_AMT
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '01' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JAN
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '02' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS FEB
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '03' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS MAR
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '04' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS APR
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '05' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS MAY
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '06' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JUN
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '07' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS JUL
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '08' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS AUG
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '09' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS SEP
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '10' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS OCT
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '11' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS NOV
            ,CASE TO_CHAR(ACCOUNTING_DT, 'MM') WHEN '12' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS DEC
FROM PS_RUN_APY1406_TBL
WHERE BUSINESS_UNIT LIKE '6%'
    AND OPRID = 'prakash.prashant'
    AND RUN_CNTL_ID = 'UNU_APY1406' 
GROUP BY BUSINESS_UNIT, VENDOR_ID, NAME1, VOUCHER_ID, CURRENCY_CD, PYMNT_HOLD, TO_CHAR(ACCOUNTING_DT, 'YYYY'), TO_CHAR(ACCOUNTING_DT, 'MM')) X
GROUP BY X.BUSINESS_UNIT, X.VENDOR_ID, X.NAME1, X.VOUCHER_ID, X.CURRENCY_CD, X.PYMNT_HOLD, X.YEAR
ORDER BY X.BUSINESS_UNIT, X.VENDOR_ID;

--Primary Select Clause
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, XREF.PYMNT_CNT, XREF.PYMNT_HOLD, XREF.PYMNT_HOLD_WTHD, A.VENDOR_SETID, A.VENDOR_ID, ' ', 
            XREF.REMIT_SETID, XREF.REMIT_VENDOR, ' ', A.INVOICE_ID, A.INVOICE_DT, A.ACCOUNTING_DT, XREF.SCHEDULED_PAY_DT, XREF.DUE_DT, XREF.GROSS_AMT_BSE, XREF.DSCNT_AMT_BSE, 
            0, XREF.BASE_CURRENCY, 0 
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF XREF, PS_RUN_APY1406_BU BU 
WHERE A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD') 
    AND A.POST_STATUS_AP IN ('U','P') 
    AND A.VOUCHER_STYLE NOT IN ('PPAY', 'TMPL') 
    AND (A.ENTRY_STATUS = 'P' OR (A.ENTRY_STATUS = 'X' AND A.DELETE_DT >TO_DATE('2014-12-31','YYYY-MM-DD'))) 
    AND A.BUSINESS_UNIT = XREF.BUSINESS_UNIT 
    AND A.VOUCHER_ID = XREF.VOUCHER_ID 
    AND (XREF.NET_SELCT_STATUS <> 'S' OR XREF.NET_TXN_STATUS <> 'N') 
    AND (((A.PROCESS_MAN_CLOSE = 'N' OR (A.PROCESS_MAN_CLOSE = 'Y' AND A.MANUAL_CLOSE_DT > TO_DATE('2014-12-31','YYYY-MM-DD'))) AND XREF.PYMNT_SELCT_STATUS NOT IN('P', 'S', 'X')) 
      OR (A.PROCESS_MAN_CLOSE = 'P' AND A.MANUAL_CLOSE_DT > TO_DATE('2014-12-31','YYYY-MM-DD') AND XREF.PYMNT_SELCT_STATUS = 'C'))    
    AND A.BUSINESS_UNIT= BU.BUSINESS_UNIT 
    AND BU.OPRID = 'prakash.prashant' 
    AND BU.RUN_CNTL_ID = 'UNU_APY1406' 
    AND BU.REPORT_ID = 'APY1406'
ORDER BY 1,2,3; 

SELECT * FROM PS_RUN_APY1406_TBL
WHERE BUSINESS_UNIT LIKE '6%' AND VENDOR_ID = '0000000013'
SELECT * FROM PS_ITM_CAT_VNDR_VW
SELECT * FROM PS_RT_DFLT_VW WHERE FROM_CUR = 'MYR'

--Default Ledger Group/Ledgers
SELECT * FROM PS_BU_LED_AP_VW

--AP/GL Open liability Reconciliation
--AP_APY1405
SELECT * FROM PS_APGL_OPEN_DET WHERE BUSINESS_UNIT_GL = 'UNUNI' ORDER BY VENDOR_ID
SELECT * FROM PS_APGL_OPEN_SUM WHERE BUSINESS_UNIT_GL = 'UNUNI' ORDER BY VENDOR_ID

--APY2004-Payment History by Dt      
SELECT TO_CHAR(A.PYMNT_DT,'YYYY-MM-DD') AS PYMNT_DT, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.PYMNT_METHOD, A.PYMNT_ID_REF, A.BANK_ACCOUNT_NUM, A.BRANCH_ID, 
            A.CHECK_DIGIT, A.REMIT_SETID, A.REMIT_VENDOR, A.EMPLID, A.NAME1, A.NAME2, A.ADDRESS1, A.ADDRESS2, A.ADDRESS3, A.ADDRESS4, A.CITY, A.IN_CITY_LIMIT, A.COUNTY, A.STATE, 
            A.GEO_CODE, A.POSTAL, A.COUNTRY, A.PYMNT_AMT, A.CURRENCY_PYMNT, A.PYMNT_HANDLING_CD, A.PYMNT_STATUS, TO_CHAR(A.PYMNT_RECONCILE_DT,'YYYY-MM-DD') AS PYMNT_RECON_DT, 
            A.PAY_CYCLE, A.PAY_CYCLE_SEQ_NUM, A.DFI_ID_NUM, A.DFI_ID_QUAL, A.REMIT_BANK_ACCOUNT, A.REMIT_BRANCH_ID, A.REMIT_CHECK_DIGIT, A.REP_RTNG_NUM,
            B.PAY_DOC_SEQ, B.SOURCE_TXN, B.BUSINESS_UNIT, B.PAY_DOC_ID, B.CURRENCY_PYMNT, B.VENDOR_ID, B.EMPLID, B.INVOICE_ID, 
            TO_CHAR(B.PAY_DOC_DT,'YYYY-MM-DD') AS PAY_DOC_DT, B.PAID_AMT, B.PAID_AMT_GROSS, A.NUM1, A.NUM2, A.HOUSE_TYPE, C.COUNTRY, C.ADDR4_AVAIL, C.NUM1_AVAIL, C.NUM2_AVAIL, 
            C.HOUSE_TYPE_AVAIL, C.DESCR, A.DOC_TYPE, TO_CHAR(A.DOC_SEQ_DATE,'YYYY-MM-DD') AS DOC_SEQ_DATE, A.DOC_SEQ_NBR            
FROM PS_PAYMENT_TBL A, PS_PYMNT_ADVICE B, PS_COUNTRY_TBL C
WHERE C.COUNTRY = A.COUNTRY
    AND ( A.BANK_SETID = 'SHARE'
     AND A.BANK_CD LIKE '6%'
     AND A.PYMNT_DT BETWEEN TO_DATE('2011-01-01','YYYY-MM-DD') AND SYSDATE
     AND A.PAY_CYCLE = B.PAY_CYCLE
     AND A.PAY_CYCLE_SEQ_NUM = B.PAY_CYCLE_SEQ_NUM
     AND A.BANK_SETID = B.BANK_SETID
     AND A.BANK_CD = B.BANK_CD
     AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY
     AND A.PYMNT_METHOD = B.PYMNT_METHOD
     AND B.REMIT_LINE_TYPE = 'A'
     AND A.PYMNT_ID_REF = B.PYMNT_ID_REF
     AND A.PYMNT_STATUS NOT IN ('S','V','X') )
     AND A.REMIT_SETID = 'UNUNI' 
     AND A.REMIT_VENDOR = '0000005935'
ORDER BY 1, 2, 3, 4, 5, 6;

--Eligible PI's for Grants
SELECT * FROM PS_GM_ELIG_PI_VW WHERE EMPLID = '756770'
SELECT P.EMPLID, d.EFFDT 
FROM PS_PERSONAL_DATA P, PS_GM_PERS_DATA D, PS_GM_JOB J 
WHERE P.EMPLID=D.EMPLID 
    AND P.EMPLID=J.EMPLID 
    AND D.PROF_ELIG_IND='Y' 
    AND D.EFFDT = (SELECT MAX(F.EFFDT) FROM PS_GM_PERS_DATA F WHERE D.EMPLID = F.EMPLID AND F.EFFDT <= sysdate)

SELECT * FROM PS_GM_PERS_DATA WHERE EMPLID = '756770'
SELECT * FROM PS_UN_FIN_USER WHERE UN_AGENCY_NAME = 'UNUNI'
SELECT * FROM PS_UN_DEFAULT_ROLE
SELECT * FROM PSOPRALIAS WHERE OPRID = 'prakash.prashant'
SELECT * FROM PS_UN_APP_ROLE_TBL

SELECT 'X' FROM PS_RTE_CNTL_LN_VW2 A 
WHERE A.ROLENAME = 'UN_VENDOR_APPROVER_WF' 
    AND A.RTE_CNTL_TYPE_1 = 'Administrative Area' 
    AND A.RTE_FROM_VALUE_1 <= 'AP' 
    AND A.RTE_TO_VALUE_1 >= 'AP' 
    AND A.RTE_CNTL_TYPE_2 = 'UN_SETID' 
    AND A.RTE_FROM_VALUE_2 <= 'UNUNI'
    AND A.RTE_TO_VALUE_2 >= 'UNUNI'
    AND A.ROLEUSER = 'prakash.prashant'
    
--SELECT * FROM PS_FIN_BU_MAPPING WHERE PSFT_PRODUCT = 'AM' AND BUSINESS_UNIT_GL = 'UNUNI'

SELECT * FROM PS_AUTO_LINES_TBL WHERE SETID = 'UNUNI' --AND ACCOUNT = '55065'
SELECT * FROM PS_DST_CODE_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_AUTO_REASON_TBL WHERE SETID = 'UNUNI' AND DST_ID_AR <> ' '
SELECT * FROM PS_ITEM_ACTIVITY WHERE BUSINESS_UNIT LIKE '6%' AND ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11') 
--ENTRY_TYPE = 'WO'

SELECT A.SETID, A.BUSINESS_UNIT, A.VENDOR_ID, A.VOUCHER_ID, A.INVOICE_ID, TO_CHAR(A.DUE_DT,'YYYY-MM-DD') AS DUE_DT, A.NAME1, A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.BASE_CURRENCY
FROM PS_VR_DTL_AR_VW A
WHERE A.SETID = 'UNUNI'
    AND A.BUSINESS_UNIT LIKE '6%'    
ORDER BY 2,3,6

--AR34001-AR/AP Balance by Cust
SELECT A.CUST_ID, A.NAME1, A.SETID, B.BUSINESS_UNIT, B.ITEM, B.ITEM_LINE, TO_CHAR(B.DUE_DT,'YYYY-MM-DD') AS DUE_DT, 
            B.BAL_AMT, B.BAL_CURRENCY, B.BAL_AMT_BASE, B.CURRENCY_CD, C.VENDOR_ID, D.BUSINESS_UNIT_AP 
FROM PS_CUSTOMER A, PS_ITEM B, PS_VENDOR_AR C, PS_BUS_UNIT_TBL_AR D 
WHERE A.SETID = 'UNUNI' 
    --AND A.CUST_ID = :2 
    --AND B.ITEM_STATUS = 'O' 
    AND B.BUSINESS_UNIT LIKE '6%'
    AND A.CUST_ID = B.CUST_ID 
    AND A.VENDOR_SETID = C.SETID 
    AND A.SETID = C.CUST_SETID 
    AND A.CUST_ID = C.CUST_ID 
    AND A.VENDOR_ID = C.VENDOR_ID 
    AND B.BUSINESS_UNIT = D.BUSINESS_UNIT 
ORDER BY 1, 4, 9, 7 

--Pending Item Reports
--AR11001P - Point in Time - Group Control
SELECT A.GROUP_BU, A.GROUP_ID, A.OPRID, A.ASSN_OPRID, A.GROUP_TYPE, B.DESCRSHORT, A.BAL_STATUS, A.CONTROL_AMT, A.CONTROL_CURRENCY, A.CONTROL_CNT, A.ENTERED_AMT, A.ENTERED_CNT, 
            A.POSTED_TOTAL, A.POSTED_COUNT, TO_CHAR(A.RECEIVED_DT,'YYYY-MM-DD') AS RCVD_DT, TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD') AS ENTRY_DT, TO_CHAR(A.POST_DT,'YYYY-MM-DD') AS POST_DT,             
            A.ACCOUNTING_DT, A.POST_STATUS, A.BANK_CD, A.BANK_ACCT_KEY, A.ORIGIN_ID, A.FORMAT_CURRENCY, A.PAYMENT_CURRENCY
FROM PS_GROUP_CONTROL A, PS_GROUP_TYPE_TBL B
WHERE A.GROUP_BU LIKE '6%'
    AND (B.GROUP_TYPE = A.GROUP_TYPE
     AND B.SETID = (SELECT C.SETID FROM PS_SET_CNTRL_REC C WHERE C.SETCNTRLVALUE = A.GROUP_BU AND C.RECNAME = 'GROUP_TYPE_TBL')
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GROUP_TYPE_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.GROUP_TYPE = B_ED.GROUP_TYPE AND B_ED.EFFDT <= SYSDATE)     
     AND B.EFF_STATUS = 'A'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD'))
ORDER BY 1,2;

--AR11002P - Point in Time - Pending Items
SELECT A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAMESHORT, TO_CHAR(B.ASOF_DT,'YYYY-MM-DD') AS ASOF_DT, TO_CHAR(B.DUE_DT,'YYYY-MM-DD') AS DUE_DT, TO_CHAR(B.POST_DT,'YYYY-MM-DD') AS POST_DT,
            B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE
     --AND A.ENTRY_DT BETWEEN G.FROM_DT AND G.TO_DT
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     )
ORDER BY 1,2,3,5,7

--AR11003P - Point in Time - Item Detail
SELECT TO_CHAR(D.DUE_DT,'YYYY-MM-DD') AS DUE_DT, D.BUSINESS_UNIT, D.CUST_ID, D.ITEM, 
            TO_CHAR(D.ASOF_DT,'YYYY-MM-DD') AS ASOF_DT, TO_CHAR(D.DUE_DT,'YYYY-MM-DD') AS DUE_DT, TO_CHAR(D.POST_DT,'YYYY-MM-DD') AS POST_DT,
            A.NAME1, B.ADDRESS1, B.ADDRESS2, B.ADDRESS3, B.ADDRESS4, B.CITY, B.COUNTRY, D.ITEM, D.ITEM_LINE, D.ENTRY_TYPE, 
            D.BAL_AMT, TO_CHAR(D.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, D.PYMNT_TERMS_CD, E.DESCRSHORT, B.STATE, B.POSTAL
FROM PS_CUSTOMER A, PS_CUST_ADDRESS B, PS_ITEM D, PS_ENTRY_TYPE_TBL E
WHERE B.SETID = A.SETID
    AND B.CUST_ID = A.CUST_ID    
    AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_CUST_ADDRESS B_ED WHERE B.SETID = B_ED.SETID AND B.CUST_ID = B_ED.CUST_ID AND B.ADDRESS_SEQ_NUM = B_ED.ADDRESS_SEQ_NUM AND B_ED.EFFDT <= SYSDATE)    
    AND A.ADDRESS_SEQ_NUM = B.ADDRESS_SEQ_NUM
    AND A.CUST_ID = D.CUST_ID
    AND E.SETID = (SELECT G.SETID FROM PS_SET_CNTRL_REC G WHERE G.RECNAME = 'ENTRY_TYPE_TBL' AND G.SETCNTRLVALUE = D.BUSINESS_UNIT)
    AND D.ENTRY_TYPE = E.ENTRY_TYPE
    AND A.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.RECNAME = 'CUSTOMER' AND F.SETCNTRLVALUE = D.BUSINESS_UNIT)
    --AND D.DUE_DT BETWEEN H.FROM_DT AND H.TO_DT
    AND D.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    --AND D.BAL_AMT <> 0
    AND D.BUSINESS_UNIT LIKE '6%'
    --AND D.CUST_ID LIKE :4
    )
ORDER BY 2, 3, 1
  
--AR11003_ITEM_DETAIL - Item Detail
SELECT A.NAME1, B.ADDRESS1, B.ADDRESS2, B.ADDRESS3, B.ADDRESS4, B.CITY, B.COUNTRY, D.ITEM, D.ITEM_LINE, D.ENTRY_TYPE, D.BAL_AMT, 
            TO_CHAR(D.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, TO_CHAR(D.DUE_DT,'YYYY-MM-DD') AS DUE_DT, D.PYMNT_TERMS_CD, E.DESCRSHORT, B.STATE, B.POSTAL
FROM PS_CUSTOMER A, PS_CUST_ADDRESS B, PS_ITEM D, PS_ENTRY_TYPE_TBL E
WHERE B.SETID = A.SETID
    AND B.CUST_ID = A.CUST_ID
    AND D.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND ( B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_CUST_ADDRESS B_ED WHERE B.SETID = B_ED.SETID AND B.CUST_ID = B_ED.CUST_ID AND B.ADDRESS_SEQ_NUM = B_ED.ADDRESS_SEQ_NUM AND B_ED.EFFDT <= SYSDATE)
    AND D.BUSINESS_UNIT LIKE '6%'
    --AND D.CUST_ID = :2
    --AND D.ITEM = :3
    AND A.ADDRESS_SEQ_NUM = B.ADDRESS_SEQ_NUM
    AND A.CUST_ID = D.CUST_ID
    AND E.SETID = (SELECT G.SETID FROM PS_SET_CNTRL_REC G WHERE G.RECNAME = 'ENTRY_TYPE_TBL' AND G.SETCNTRLVALUE = D.BUSINESS_UNIT)      
    AND D.ENTRY_TYPE = E.ENTRY_TYPE
    AND A.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.RECNAME = 'CUSTOMER' AND F.SETCNTRLVALUE = D.BUSINESS_UNIT))
    

SELECT DISTINCT B.GROUP_BU, B.GROUP_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, B.AR_ERROR_CD, B.POST_DT, 
            A.GROUP_TYPE, A.POST_STATUS, A.PROCESS_INSTANCE  
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B 
WHERE A.GROUP_BU = B.GROUP_BU 
    AND A.GROUP_ID = B.GROUP_ID 
    --AND A.GROUP_TYPE = 'P' 
    --AND A.POST_STATUS = 'E' 
    --AND A.PROCESS_INSTANCE = 0 
    --AND B.POST_DT IS NULL 
    --AND B.AR_ERROR_CD = 'ACTPD'
    AND A.GROUP_BU = '600UU'
    --AND A.DEPOSIT_BU = '600UU'
    AND B.CUST_ID = '10617'
    --AND A.DEPOSIT_ID = '4045'
ORDER BY B.GROUP_BU , B.GROUP_ID , B.BUSINESS_UNIT , B.CUST_ID , B.ITEM , B.ITEM_LINE , B.GROUP_SEQ_NUM

SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = 'UNDP1' AND DEPOSIT_ID = '37301'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = 'UNDP1' AND DEPOSIT_ID = '37301'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = 'UNDP1' AND DEPOSIT_ID = '37301'
SELECT * FROM PS_PAYMENT_ID_ITEM WHERE DEPOSIT_BU = 'UNDP1' AND DEPOSIT_ID = '37301'
SELECT * FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = 'UNDP1' AND DEPOSIT_ID = '37301'
SELECT * FROM PS_UN_AR_PRUPD_LOG WHERE DEPOSIT_BU LIKE '6%'

--AR200001.sqr
--Deposit Control by Entry Date
SELECT A.ENTRY_DT, A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.DEPOSIT_TYPE, E.DESCRSHORT, A.BANK_CD, A.BANK_ACCT_KEY, 
            A.BAL_STATUS, (SELECT XLATSHORTNAME FROM PSXLATITEM D WHERE D.FIELDNAME = 'BAL_STATUS' AND D.FIELDVALUE = A.BAL_STATUS)  AS Bal,
            A.DEP_POST_STATUS, (SELECT XLATSHORTNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'DEP_POST_STATUS' AND C.FIELDVALUE = A.DEP_POST_STATUS)  AS Post_Status,
            A.CONTROL_AMT, A.ENTERED_AMT, A.POSTED_TOTAL, A.MISC_DST_TOTAL AS JOURNALLED_AMT,
            A.ACCOUNTING_DT, A.CONTROL_CURRENCY, A.PYMT_RATE_MULT, A.PYMT_RATE_DIV, B.BASE_CURRENCY,
            NVL(ROUND(((A.CONTROL_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, NVL(ROUND(((A.ENTERED_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((A.POSTED_TOTAL * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, NVL(ROUND(((A.MISC_DST_TOTAL * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE
FROM PS_DEPOSIT_CONTROL A, PS_BU_CRTCUR_VW_AR B, PS_DEPOST_TYPE_TBL E
WHERE A.DEPOSIT_BU LIKE '6%'
  AND A.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  AND A.DEPOSIT_BU = B.BUSINESS_UNIT
  AND E.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = B.BUSINESS_UNIT AND RECNAME='DEPOST_TYPE_TBL')
  AND E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
  AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPOST_TYPE_TBL WHERE SETID = E.SETID AND DEPOSIT_TYPE = E.DEPOSIT_TYPE AND EFF_STATUS = 'A' AND EFFDT <= SYSDATE)
ORDER BY B.BASE_CURRENCY, A.ENTRY_DT, A.DEPOSIT_BU, A.DEPOSIT_ID

--AR50001
--Point in Time - Acctng Entries
SELECT A.ACCOUNTING_DT, A.APPL_JRNL_ID, A.BUSINESS_UNIT, A.LEDGER_GROUP, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, 
            A.GL_DISTRIB_STATUS, A.DOC_TYPE, A.ITEM, A.ITEM_LINE, 
            A.ITEM_SEQ_NUM, A.DOC_SEQ_NBR, TO_CHAR(A.DOC_SEQ_DATE,'YYYY-MM-DD') AS DOC_SEQ_DATE, A.DOC_SEQ_STATUS, A.LEDGER, A.PRIMARY_LEDGER, A.MONETARY_AMOUNT, A.CURRENCY_CD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT
FROM PS_ITEM_DST A
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
ORDER BY 1, 2, 3, 5, 6, 7, 8, 9, 10

--AR50002
--Point in Time Acct Entries Sum
SELECT A.BUSINESS_UNIT, A.APPL_JRNL_ID, A.LEDGER_GROUP, A.LEDGER, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, 
            A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, 
            A.GL_DISTRIB_STATUS, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.PRIMARY_LEDGER, 
            SUM(A.MONETARY_AMOUNT) AS MONETARY_AMOUNT, A.CURRENCY_CD, A.FOREIGN_CURRENCY, SUM(A.FOREIGN_AMOUNT) AS FOREIGN_AMOUNT
FROM PS_ITEM_DST A
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
GROUP BY A.BUSINESS_UNIT, A.APPL_JRNL_ID, A.LEDGER_GROUP, A.LEDGER, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, 
               A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.GL_DISTRIB_STATUS, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD'), A.PRIMARY_LEDGER, A.CURRENCY_CD, A.STATISTICS_CODE, A.FOREIGN_CURRENCY
ORDER BY 1, 2, 3, 4, 5, 6, 7, 15, 10, 16

SELECT MATCH_STATUS_PO, A.* FROM PS_PO_HDR_FS A WHERE BUSINESS_UNIT = '611UU' AND PO_ID LIKE '%2512'
SELECT MATCH_STATUS_PO, A.* FROM PS_PO_HDR_FS A WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%5488'

SELECT * FROM PS_RQSTR_ACTIVE_VW WHERE REQUESTOR_ID LIKE 'mariko%'

SELECT * FROM PS_REQ_HDR WHERE BUSINESS_UNIT = '600UU' AND REQ_ID LIKE '%1477'
SELECT * FROM PS_REQ_LINE WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001477'

--Monitor AR_ERROR_CD for UNU AR BUs
SELECT GROUP_BU, AR_ERROR_CD, COUNT(1) FROM PS_PENDING_ITEM 
WHERE GROUP_BU LIKE '6%'
GROUP BY GROUP_BU, AR_ERROR_CD
ORDER BY 1,2;

--Customers with a non Zero PI
SELECT * FROM PS_CUST_DATA WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Groups with a non zero PI
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Pending Items with a non zero PI
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Pending Items DST with a non zero PI
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Check LEDGER_GROUP and LEDGER for UNU AR BUs
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU LIKE '6%' AND ((LEDGER_GROUP = ' ' AND PRIMARY_LEDGER = 'Y') OR (LEDGER = ' ' AND PRIMARY_LEDGER = 'Y'));

SELECT * FROM PS_ITEM_LINES_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_ITEM_ENTRY_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_ITEM_REASON_TBL WHERE SETID = 'UNUNI';

SELECT * FROM PS_AR_ERROR_TBL;
--AR Error Codes
SELECT AR.AR_ERROR_CD, AR.AR_MSG_NUM, CAT.MESSAGE_SET_NBR, CAT.MESSAGE_NBR, CAT.MESSAGE_TEXT, CAT.MSG_SEVERITY, CAT.DESCRLONG 
FROM PSMSGCATDEFN CAT, PS_AR_ERROR_TBL AR
WHERE CAT.MESSAGE_SET_NBR IN (6840, 6035)
    AND AR.AR_MSG_NUM (+) = CAT.MESSAGE_NBR
ORDER BY 1,2;

--AR Groups ready for posting
SELECT 'GROUPS_READY_FOR_POSTING', G.GROUP_BU, G.GROUP_ID, G.CONTROL_CNT 
FROM PS_POSTING_REQUEST R, PS_GROUP_CONTROL G 
WHERE R.OPRID = 'prakash.prashant'
    AND R.RUN_CNTL_ID = 'UNU_AR_ARUPDATE_D1'
    AND ((R.PROCESS_FREQUENCY = 'O' AND R.PROCESS_STATUS = 'N') OR R.PROCESS_FREQUENCY = 'A')
    AND G.GROUP_BU = R.GROUP_BU
    AND G.POST_ACTION IN ( 'N', 'L' )
    AND G.POST_STATUS <> 'C'
    AND G.PROCESS_INSTANCE = 0
    AND G.ACCOUNTING_DT BETWEEN R.POST_FR_DT AND R.POST_TO_DT
    AND NOT EXISTS (SELECT 'X' FROM PS_RP_PARALLEL P WHERE P.GROUP_BU = G.GROUP_BU AND P.GROUP_ID = G.GROUP_ID)
ORDER BY G.CONTROL_CNT DESC;

--Check User Access
SELECT A.OPRID, A.ROLENAME, A.CLASSID, MENUNAME, BARNAME, BARITEMNAME, PNLITEMNAME, DECODE(DISPLAYONLY, 0, 'N', 1, 'Y') AS "Display Only",
CASE AUTHORIZEDACTIONS
    WHEN 1 THEN 'Add'
    WHEN 2 THEN 'Update/Display'
    WHEN 3 THEN 'Add, Update/Display'
    WHEN 4 THEN 'Update/Display All'
    WHEN 5 THEN 'Add, Update/Display All'
    WHEN 6 THEN 'Update/Display, Update/Display All'
    WHEN 7 THEN 'Add, Update/Display, Update/Display All'
    WHEN 8 THEN 'Correction'
    WHEN 9 THEN 'Add, Correction'
    WHEN 10 THEN 'Update/Display, Correction'
    WHEN 11 THEN 'Add, Update/Display, Correction'
    WHEN 12 THEN 'Update/Display All, Correction'
    WHEN 13 THEN 'Add, Update/Display All, Correction'
    WHEN 14 THEN 'Update/Display, Update/Display All, Correction'
    WHEN 15 THEN 'Add, Update/Display, Update/Display All, Correction'
    ELSE 'SPECIAL' END AS "Authorized Actions", AUTHORIZEDACTIONS
FROM PS_USERCLASS_VW A, PSAUTHITEM B
WHERE A.CLASSID = B.CLASSID
  AND A.OPRID = 'prakash.prashant';
  
--PPs new GL Fund Status
SELECT 'UNU_GL_FUND_STATUS', A.FISCAL_YEAR AS Year, A.OPERATING_UNIT, DECODE( A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)) AS BUDG_DEPT, 
            A.DEPTID, A.PROJECT_ID, F.DESCR AS Project_Description, A.FUND_CODE, A.CHARTFIELD2 AS Donor, G.DESCR AS Donor_Description,
            DECODE(B.ACCOUNT_TYPE,'Q',DECODE( A.ACCOUNTING_PERIOD,0, 'A - Opening Balance','B - Fund Balance Adjustment'), 'R', DECODE( A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'), 'E', 'E - Expenditure', '') AS TYPE, 
            A.ACCOUNT, B.DESCR Account_Description, SUM( A.POSTED_BASE_AMT) AS Amount_USD 
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL B, PS_SET_CNTRL_REC B2, PS_PROJECT_ID_VW F, PS_CHARTFIELD2_TBL G
WHERE B.ACCOUNT = A.ACCOUNT
  AND B2.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND B2.RECNAME = 'GL_ACCOUNT_TBL'
  AND B2.SETID = B.SETID
  AND ( A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'USD'
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.OPERATING_UNIT LIKE :2
    --AND A.DEPTID LIKE :3
    --AND A.FUND_CODE = '11000'
    --AND A.CHARTFIELD2 LIKE :5
    --AND A.PROJECT_ID LIKE :6
    AND A.FISCAL_YEAR = '2012'
    AND A.ACCOUNTING_PERIOD >= 0
    AND A.ACCOUNTING_PERIOD <= 12
    AND B.SETID = 'SHARE'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.ACCOUNT = B_ED.ACCOUNT AND B_ED.EFFDT <= SYSDATE)
    AND B.ACCOUNT = A.ACCOUNT    
    AND B.ACCOUNT_TYPE IN ('R','E','Q')
    AND 'UNUNI' = F.SETID (+)
    AND A.PROJECT_ID = F.PROJECT_ID (+)
    AND 'UNUNI' =  G.SETID (+)
    AND A.CHARTFIELD2 =  G.CHARTFIELD2 (+)
    AND ( G.EFFDT IS NULL
     OR ( G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_CHARTFIELD2_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CHARTFIELD2 = G_ED.CHARTFIELD2 AND G_ED.EFFDT <= SYSDATE)))
     )
GROUP BY A.FISCAL_YEAR, A.OPERATING_UNIT, DECODE( A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)),  
          A.DEPTID, A.PROJECT_ID, F.DESCR, A.FUND_CODE, A.CHARTFIELD2, G.DESCR, 
          DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0, 'A - Opening Balance','B - Fund Balance Adjustment'),'R', DECODE( A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'), 'E', 'E - Expenditure', ''),  
          A.ACCOUNT, B.DESCR
ORDER BY 1, 2, 3, 5, 6, 7, 8, 10;

--Original UNU GL Fund Status Query
--Takes a while to run
SELECT A.FISCAL_YEAR "Year", A.BUSINESS_UNIT "GL Bus Unit", A.OPERATING_UNIT "Oper Unit", C.DESCR "Oper Unit Description", 
       DECODE( A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)) "Budget DeptId", A.DEPTID "Detail DeptId", E.DESCR "DeptId Description", A.PROJECT_ID "Project", F.DESCR "Project Description", 
       A.FUND_CODE "Fund", D.DESCR "Fund Description", A.CHARTFIELD2 "Donor", G.DESCR "Donor Description", 
       DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0,'A - Opening Balance','B - Fund Balance Adjustment'),'R',DECODE(A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'),'E','E - Expenditure', '') "Type", 
       A.ACCOUNT "Account", B.DESCR "Account Description", SUM(A.POSTED_BASE_AMT) "Amount (USD)"
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL B, PS_SET_CNTRL_REC B2, PS_OPER_UNIT_TBL C, PS_FUND_TBL D, PS_DEPT_TBL E, PS_PROJECT_ID_VW F, PS_CHARTFIELD2_TBL G
WHERE (B.ACCOUNT = A.ACCOUNT
   AND B2.SETCNTRLVALUE = A.BUSINESS_UNIT
   AND B2.RECNAME = 'GL_ACCOUNT_TBL'
   AND B2.SETID = B.SETID
   AND (A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'USD'
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.OPERATING_UNIT LIKE :2
    --AND A.DEPTID LIKE '%11201%'
    --AND A.FUND_CODE LIKE :4
    --AND A.CHARTFIELD2 LIKE :5
    --AND A.PROJECT_ID LIKE :6
    AND A.FISCAL_YEAR = '2015'
    AND A.ACCOUNTING_PERIOD >= 0
    AND A.ACCOUNTING_PERIOD <= 999
    AND B.SETID = 'SHARE'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.ACCOUNT = B_ED.ACCOUNT AND B_ED.EFFDT <= SYSDATE)
    AND B.ACCOUNT = A.ACCOUNT
    AND B.ACCOUNT_TYPE IN ('R','E','Q')
    AND C.SETID = 'SHARE'
    AND C.OPERATING_UNIT = A.OPERATING_UNIT
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_OPER_UNIT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.OPERATING_UNIT = C_ED.OPERATING_UNIT AND C_ED.EFFDT <= SYSDATE)
    AND D.SETID = 'UNUNI'
    AND D.FUND_CODE = A.FUND_CODE
    AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_FUND_TBL D_ED WHERE D.SETID = D_ED.SETID AND D.FUND_CODE = D_ED.FUND_CODE AND D_ED.EFFDT <= SYSDATE)
    AND 'UNUNI' =  E.SETID (+)
    AND A.DEPTID =  E.DEPTID (+)
    AND (E.EFFDT IS NULL
     OR (E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.DEPTID = E_ED.DEPTID AND E_ED.EFFDT <= SYSDATE)))
    AND A.PROJECT_ID =  F.PROJECT_ID (+)
    AND 'UNUNI' =  G.SETID (+)
    AND A.CHARTFIELD2 =  G.CHARTFIELD2 (+)
    AND (G.EFFDT IS NULL
     OR (G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_CHARTFIELD2_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CHARTFIELD2 = G_ED.CHARTFIELD2 AND G_ED.EFFDT <= SYSDATE)))))
GROUP BY A.FISCAL_YEAR, A.BUSINESS_UNIT, A.OPERATING_UNIT, C.DESCR, DECODE(A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)), A.DEPTID, E.DESCR, A.PROJECT_ID, F.DESCR, A.FUND_CODE, D.DESCR, A.CHARTFIELD2, G.DESCR, 
         DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0, 'A - Opening Balance','B - Fund Balance Adjustment'), 'R', DECODE(A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'), 'E', 'E - Expenditure', ''), 
         A.ACCOUNT,  B.DESCR
ORDER BY A.FISCAL_YEAR, A.BUSINESS_UNIT, A.OPERATING_UNIT, DECODE( A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)), A.DEPTID, A.PROJECT_ID, A.FUND_CODE, A.CHARTFIELD2,
         DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0,'A - Opening Balance','B - Fund Balance Adjustment'),'R',DECODE(A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'),'E','E - Expenditure', ''),
         A.ACCOUNT;

SELECT ASSN_OPRID, TO_CHAR(ACCOUNTING_DT,'YYYY') AS YEAR, COUNT(1) FROM PS_DEPOSIT_CONTROL
WHERE DEPOSIT_BU LIKE '6%'
GROUP BY ASSN_OPRID, TO_CHAR(ACCOUNTING_DT,'YYYY')
ORDER BY 1,2,3

--SELECT ora_database_name as DATABASE_NAME, to_char(sysdate, 'Dy DD-Mon-YYYY HH24:MI:SS') as "Now", CURRENT_TIMESTAMP,  LOCALTIMESTAMP FROM DUAL;
--Check Control and Budgetary Accounts
SELECT to_char(sysdate, 'Dy DD-Mon-YYYY HH24:MI:SS') as "Now", A.* FROM PS_GL_ACCOUNT_TBL A WHERE SETID = 'SHARE' AND CONTROL_FLAG = 'Y';
SELECT to_char(sysdate, 'Dy DD-Mon-YYYY HH24:MI:SS') as "Now", A.* FROM PS_GL_ACCOUNT_TBL A WHERE SETID = 'SHARE' AND BUDGETARY_ONLY = 'Y';

SELECT * FROM PS_UN_DEP_DSCR WHERE DEPOSIT_BU LIKE '6%' AND DEPOSIT_ID IN (4045, 4046, 4047, 4048, 4064, 4062, 4055, 4061, 4054, 4055);
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU LIKE '6%' AND DEPOSIT_ID IN (4045, 4046, 4047, 4048, 4064, 4062, 4055, 4061, 4054, 4055);
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 30500729;

SELECT BUSINESS_UNIT, PC_DISTRIB_STATUS, COUNT(1) FROM PS_KK_BUDGET_LN GROUP BY BUSINESS_UNIT, PC_DISTRIB_STATUS ORDER BY 1,2
WHERE BUSINESS_UNIT = 'UNDP1' AND PC_DISTRIB_STATUS = 'D' 
AND EXISTS(SELECT 'X' FROM PS_INTFC_PROJ_RES A
WHERE A.BUSINESS_UNIT_GL = PS_KK_BUDGET_LN.BUSINESS_UNIT
   AND A.BUSINESS_UNIT = PS_KK_BUDGET_LN.BUSINESS_UNIT_PC
   AND A.PROJECT_ID = PS_KK_BUDGET_LN.PROJECT_ID
   AND A.ACTIVITY_ID = PS_KK_BUDGET_LN.ACTIVITY_ID
   AND A.JOURNAL_ID = PS_KK_BUDGET_LN.JOURNAL_ID
   AND A.JOURNAL_DATE = PS_KK_BUDGET_LN.JOURNAL_DATE
   AND A.UNPOST_SEQ = PS_KK_BUDGET_LN.UNPOST_SEQ)

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PC_TO_KK';

SELECT * FROM PSBCITEM WHERE BCNAME = 'UN_GM_PROJ_BUD_DTLS_CI';
SELECT * FROM PSBCITEM WHERE RECNAME = 'PC_BUD_DETAIL';
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = '';

SELECT * FROM PS_INTFC_PROJ_RES WHERE BUSINESS_UNIT_GL = 'UNUNI' AND INTFC_ID = '1206721';
SELECT * FROM PS_PC_BUD_PLAN WHERE BUSINESS_UNIT = 'UNUNI' 
AND PROJECT_ID IN ('00064152','00064153','00064149','00064156','00064157','00073654','00078790','00073655','00064158','00064158','00064150','00064143','00064145','00064146','00064160','00064151','00064163','00064168',
                   '00064169','00064173','00064170','00064174','00064166','00064171','00064167','00064172','00073470','00064165','00064164','00075761','00083686','00064161','00064159');
                   
SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE IN ('03000', '03500') 
AND PROJECT_ID IN ('00064152','00064153','00064149','00064156','00064157','00073654','00078790','00073655','00064158','00064158','00064150','00064143' ,'00064145','00064146','00064160','00064151','00064163',
                   '00064168','00064169','00064173','00064170','00064174','00064166','00064171','00064167','00064172','00073470','00064165','00064164','00075761','00083686','00064161','00064159');
                   
SELECT * FROM PS_GM_BUD_HDR WHERE BUSINESS_UNIT = 'UNUNI';
SELECT * FROM PS_GM_BUD_PERIOD WHERE BUSINESS_UNIT = 'UNUNI' AND SUB_PROP_NBR = '00064159';
SELECT * FROM PS_GM_OPTY_AC_TBL;
SELECT * FROM PS_PC_BUD_PLAN WHERE PC_BUDGET_ID <> 1;
--Budget Plan
SELECT * FROM PS_PC_BUD_COMP;
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_GM_PC_BUD';
--Grants
SELECT * FROM PS_GM_AWD_FUND_PD WHERE BUSINESS_UNIT = 'UNUNI' AND BUDGET_PERIOD_GM = 5 AND PROJECT_ID = '00064159';
SELECT * FROM PS_GM_AWD_PD_AMT WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159';

SELECT * FROM PS_GM_AWD_FUND_PD WHERE BUSINESS_UNIT = 'UNUNI' 
AND PROJECT_ID IN ('00064152','00064153','00064149','00064156','00064157','00073654','00078790','00073655','00064158','00064158','00064150','00064143','00064145','00064146','00064160','00064151',
                               '00064163','00064168','00064169','00064173','00064170','00064174','00064166','00064171','00064167','00064172','00073470','00064165','00064164','00075761','00083686','00064161',
                               '00064159')
ORDER BY 1,2,3,4;

--Project Budget
SELECT A.CONTRACT_NUM, A.BUSINESS_UNIT, A.PROJECT_ID, G.DESCR, A.BEGIN_DT, A.END_DT, B.BUDGET_PERIOD, B.FOREIGN_AMOUNT, B.CURRENCY_CD, C.EMPLID, C.NAME, C.PROPOSAL_ID, 
            C.AWARD_STATUS, C.AWARD_TYPE, C.PURPOSE, D.BUSINESS_UNIT_PC, D.ACTIVITY_ID, E.FOREIGN_AMOUNT AS FUNDED_AMOUNT, F.FOREIGN_AMOUNT AS POSTED_AMOUNT
FROM PS_GM_AWD_FUND_PD A, PS_GM_AWD_PD_AMT B, PS_GM_AWARD C, PS_CA_DETAIL_PROJ D, PS_GM_PROJ_FND_AMT E, PS_GM_PRJ_POST_AMT F, PS_PROJECT G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PROJECT_ID = B.PROJECT_ID
  AND A.BUDGET_PERIOD_GM = B.BUDGET_PERIOD
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.CONTRACT_NUM = C.CONTRACT_NUM
  AND A.CONTRACT_NUM = D.CONTRACT_NUM
  AND A.PROJECT_ID = D.PROJECT_ID
  AND A.BUSINESS_UNIT = E.BUSINESS_UNIT
  AND A.PROJECT_ID = E.PROJECT_ID
  AND D.ACTIVITY_ID = E.ACTIVITY_ID
  AND A.BUSINESS_UNIT = F.BUSINESS_UNIT
  AND A.PROJECT_ID = F.PROJECT_ID
  AND D.ACTIVITY_ID = F.ACTIVITY_ID
  AND A.BUSINESS_UNIT = G.BUSINESS_UNIT
  AND A.PROJECT_ID = G.PROJECT_ID
  AND A.BUSINESS_UNIT = 'UNUNI'
  AND A.PROJECT_ID = '00064159'
ORDER BY 1,2,4,5,8;

--Project Budget Details (Matched the UNU Project Budgets)
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, F.DESCR, G.DEPTID, A.ACTIVITY_ID, A.BUDGET_PERIOD, E.BEGIN_DT, E.END_DT, 
       A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, 
       A.JOURNAL_ID, A.LEDGER, A.LEDGER_GROUP, C.XLATLONGNAME AS BUD_TYPE, D.XLATLONGNAME AS BUDGET_STATUS       
FROM PS_PC_BUD_DETAIL A, PS_PC_BUD_PLAN B, PSXLATITEM C, PSXLATITEM D, PS_GM_AWD_FUND_PD E, PS_PROJECT F, PS_GM_PRJ_DEPT G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND A.PROJECT_ID = B.PROJECT_ID 
  AND A.PC_BUDGET_ID = B.PC_BUDGET_ID
  AND A.BUSINESS_UNIT = E.BUSINESS_UNIT 
  AND A.PROJECT_ID = E.PROJECT_ID
  AND A.BUDGET_PERIOD = E.BUDGET_PERIOD_GM
  AND A.BUSINESS_UNIT = F.BUSINESS_UNIT 
  AND A.PROJECT_ID = F.PROJECT_ID
  AND A.BUSINESS_UNIT = G.BUSINESS_UNIT (+)
  AND A.PROJECT_ID = G.PROJECT_ID (+)
  AND C.FIELDNAME = 'PC_BUD_TYPE'
  AND C.FIELDVALUE = B.PC_BUD_TYPE
  AND D.FIELDNAME = 'PC_BUDGET_STATUS'
  AND D.FIELDVALUE = B.PC_BUDGET_STATUS
  --AND G.DEPTID = 'B0105'
  AND A.PROJECT_ID = '00064159'
ORDER BY 2, 6, 9, 11, 12, 13, 14, 15;

--Roll Up for Project Budget Details
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, F.DESCR, G.DEPTID, A.ACTIVITY_ID, A.BUDGET_PERIOD, E.BEGIN_DT, E.END_DT, SUM(A.FOREIGN_AMOUNT), A.FOREIGN_CURRENCY, 
       A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.LEDGER, A.LEDGER_GROUP, 
       PC_BUD_TYPE, PC_BUDGET_STATUS       
FROM PS_PC_BUD_DETAIL A, PS_PC_BUD_PLAN B, PS_GM_AWD_FUND_PD E, PS_PROJECT F, PS_GM_PRJ_DEPT G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND A.PROJECT_ID = B.PROJECT_ID 
  AND A.PC_BUDGET_ID = B.PC_BUDGET_ID
  AND A.BUSINESS_UNIT = E.BUSINESS_UNIT 
  AND A.PROJECT_ID = E.PROJECT_ID
  AND A.BUDGET_PERIOD = E.BUDGET_PERIOD_GM
  AND A.BUSINESS_UNIT = F.BUSINESS_UNIT 
  AND A.PROJECT_ID = F.PROJECT_ID
  AND A.BUSINESS_UNIT = G.BUSINESS_UNIT (+)
  AND A.PROJECT_ID = G.PROJECT_ID (+)
  AND A.PROJECT_ID = '00064159'
  --AND G.DEPTID = 'B0105'
GROUP BY A.BUSINESS_UNIT, A.PROJECT_ID, F.DESCR, G.DEPTID, A.ACTIVITY_ID, A.BUDGET_PERIOD, E.BEGIN_DT, E.END_DT, A.FOREIGN_CURRENCY,
         A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.LEDGER, A.LEDGER_GROUP,
         PC_BUD_TYPE, PC_BUDGET_STATUS
ORDER BY 2, 6, 10, 11, 12, 13, 14;

--Project Budget Amount
SELECT * FROM PS_PC_BUD_BY_PROJ WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159'
--Calendar
SELECT A.SETID, A.CALENDAR_ID, A.BUDGET_PERIOD, A.BEGIN_DT, A.END_DT
FROM PS_CAL_BP_TBL A, PS_CAL_DEFN_TBL B 
 WHERE A.SETID = B.SETID 
   AND A.CALENDAR_ID = B.CALENDAR_ID 
   AND B.CALENDAR_TYPE = 'P'

--UNU PROJECT BUDGETS
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.DESCR, B.DEPTID, B.MAJOR_SUBDIVISION, D.PC_BUDGET_ID, E.LEDGER_GROUP,
       C.ACTIVITY_ID, C.DESCR, C.ACTIVITY_TYPE, E.SEQ_NBR, E.PC_BUDGET_ITEM, E.BUSINESS_UNIT_GL, 
       E.ACCOUNT, E.OPERATING_UNIT, E.FUND_CODE, E.DEPTID, E.CHARTFIELD1, E.CHARTFIELD2, E.DESCR, 
       E.ACCOUNTING_DT, E.FOREIGN_AMOUNT, E.FOREIGN_CURRENCY, E.BD_HDR_STATUS, 
       E.PC_DISTRIB_STATUS, E.KK_DISTRIB_STATUS
FROM PS_PROJECT A, PS_GM_PRJ_DEPT B, PS_PROJ_ACTIVITY C, PS_PC_BUD_PLAN D, PS_PC_BUD_DETAIL E
WHERE A.BUSINESS_UNIT =  B.BUSINESS_UNIT (+)
  AND A.PROJECT_ID =  B.PROJECT_ID (+)
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.PROJECT_ID = C.PROJECT_ID
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND A.PROJECT_ID = D.PROJECT_ID
  AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
  AND D.PROJECT_ID = E.PROJECT_ID
  AND D.PC_BUDGET_ID = E.PC_BUDGET_ID
  AND E.ACTIVITY_ID = C.ACTIVITY_ID
  AND A.BUSINESS_UNIT = 'UNUNI'
  --AND B.DEPTID = 'B0119'
  --AND A.PROJECT_ID = '00064159'
  AND TO_CHAR(E.ACCOUNTING_DT, 'YYYY') IN ('2012', '2013')
ORDER BY 1, 2, 6, 7, 10, 11;

SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00083304';

--Sourceable Requisition's View
--Confirmation queries for REQ_PO_VW
SELECT IN_PROCESS_FLG, REQ_STATUS, HOLD_STATUS, BUDGET_HDR_STATUS, H.* FROM PS_REQ_HDR H WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286';
SELECT AMT_ONLY_FLG, RFQ_IND, SOURCE_DATE, IN_PROCESS_FLG, SOURCE_STATUS, CURR_STATUS, L.* FROM PS_REQ_LINE L WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286'; 
SELECT DISTRIB_MTHD_FLG, LIQUIDATE_METHOD, BAL_STATUS, S.* FROM PS_REQ_LINE_SHIP S WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286';
SELECT QTY_OPEN, AMT_OPEN, KK_CLOSE_FLAG, D.* FROM PS_REQ_LN_DISTRIB D WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286';
SELECT KK_PROCESS_PRIOR, D.* FROM PS_PO_LINE_DISTRIB D WHERE BUSINESS_UNIT_REQ = '600UU' AND REQ_ID = '0000001286' AND REQ_LINE_NBR = 4;
SELECT * FROM PS_PO_LINE_SHIP WHERE BUSINESS_UNIT = '600UU' 
AND PO_ID IN (SELECT PO_ID FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT_REQ = '600UU' AND REQ_ID = '0000001286' AND REQ_LINE_NBR = 4);
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' 
AND PO_ID IN (SELECT PO_ID FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT_REQ = '600UU' AND REQ_ID = '0000001286' AND REQ_LINE_NBR = 4);
SELECT * FROM PS_ITM_CAT_TBL WHERE SETID = 'UNUNI' AND CATEGORY_CD = 'S919X';

SELECT QTY_OPEN, AMT_OPEN, KK_CLOSE_FLAG, D.* FROM PS_REQ_LN_DISTRIB D WHERE BUSINESS_UNIT = '615UU' AND REQ_ID = '0000000935';
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT_REQ = '615UU' AND REQ_ID = '0000000935';

--Sourceable Requisition's View
--PS_REQ_PO_VW
SELECT H.BUSINESS_UNIT, H.REQ_ID, H.REQUESTOR_ID  
FROM PS_REQ_HDR H
WHERE H.IN_PROCESS_FLG = 'N'  
   AND (H.REQ_STATUS = 'A' OR H.REQ_STATUS = 'LA')  
   AND H.HOLD_STATUS = 'N'  
   AND H.BUDGET_HDR_STATUS = 'V'
   AND H.BUSINESS_UNIT LIKE '6%'
   --AND H.REQ_ID = '0000000935'
   AND EXISTS (SELECT 'X' FROM PS_REQ_LINE L, PS_REQ_LINE_SHIP S, PS_REQ_LN_DISTRIB D WHERE H.BUSINESS_UNIT = L.BUSINESS_UNIT AND H.REQ_ID = L.REQ_ID 
                       AND L.BUSINESS_UNIT = S.BUSINESS_UNIT AND L.REQ_ID = S.REQ_ID AND L.LINE_NBR = S.LINE_NBR AND S.BUSINESS_UNIT = D.BUSINESS_UNIT 
                       AND S.REQ_ID = D.REQ_ID AND S.LINE_NBR = D.LINE_NBR AND S.SCHED_NBR = D.SCHED_NBR AND L.RFQ_IND = 'N' AND L.SOURCE_DATE <= SYSDATE 
                       AND L.IN_PROCESS_FLG = 'N' AND L.SOURCE_STATUS = 'A' AND L.CURR_STATUS = 'A' AND S.BAL_STATUS = 'I' 
                       AND (D.QTY_OPEN > 0 OR D.AMT_OPEN > 0) 
                       AND D.KK_CLOSE_FLAG <> 'Y')
ORDER BY 1,2;
   
--Voucher Approval
SELECT * FROM PS_UN_AP_APPR_INQ WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID IN ('00013909', '00013910', '00013911');

--UNU_AP_PAYMENT_DETAILS
SELECT A.BANK_SETID "Bank SetID", A.BANK_CD "Bank Code", A.BANK_ACCT_KEY "Bank Account Key", A.BNK_ID_NBR "Source Bank ID", A.BANK_ACCOUNT_NUM "Source Account #", 
            A.PYMNT_METHOD "Payment Method", A.PYMNT_ID_REF "Payment Ref", A.PYMNT_DT "Payment Date", A.STTLMNT_DT_EST "Est Settlement Date", 
            A.ACCOUNTING_DT "Payment Accounting Date", A.PAY_CYCLE "pay Cycle", A.PAY_CYCLE_SEQ_NUM "Pay Cycle Seq", A.NAME1 "Payee Name 1", A.NAME2 "Payee Name 2", 
            E.NAME1 "Remit Vendor Name", A.ADDRESS1 "Remit Address 1", A.ADDRESS2 "Remit Address 2", A.ADDRESS3 "Remit Address 3", A.ADDRESS4 "Remit Address 4", 
            A.CITY "Remit City", A.STATE "Remit State", A.POSTAL "Remit Postal", A.COUNTRY "Remit Country", A.PYMNT_AMT "Payment Amount", A.CURRENCY_PYMNT "Payment Currency", 
            F.VNDR_LOC "Remit Location", F.BANK_ACCT_SEQ_NBR "Bank Seq Nbr", F.DESCR "Bank Description", F.COUNTRY "Bank Country", F.BENEFICIARY_BANK "Bank Name", 
            F.ADDRESS1 "Bank Address 1", F.ADDRESS2 "Bank Address 2", F.CITY "Bank City", F.STATE "Bank State", F.POSTAL "Bank Postal", F.BANK_ID_QUAL "Bank Id Qualifier", 
            F.BNK_ID_NBR "Bank Id", F.DFI_ID_QUAL "DFI Qualifier", F.DFI_ID_NUM "DFI Id", F.BENEF_BRANCH "Branch Name", F.BRANCH_ID "Branch", F.BANK_ACCT_TYPE "Acct Type", 
            F.BANK_ACCOUNT_NUM "Account #", F.CHECK_DIGIT "Check Digit", F.IBAN_ID "IABN", G.INTRMED_SEQ_NO "Interm Seq Num", G.INTRMED_DFI_ID "Interm DFI Id", 
            G.INTRMED_PYMNT_MSG "Interm Message", A.EFT_LAYOUT_CD "EFT Layout", A.EFT_PYMNT_FMT_CD "EFT Payment Format", G.STL_ROUTING_METHOD "EFT Routing", 
            B.BUSINESS_UNIT "Business Unit", B.VOUCHER_ID "Voucher Id", D.NAME1 "Voucher Vendor Name", C.INVOICE_ID "Invoice Id", C.INVOICE_DT "Invoice Date", 
            B.PYMNT_CNT "Pymnt Cnt", B.PYMNT_MESSAGE "Payment Message"
FROM PS_PAYMENT_TBL A, PS_PYMNT_VCHR_XREF B, PS_VOUCHER C, PS_VENDOR D, PS_VENDOR E, 
         (PS_VNDR_BANK_ACCT F LEFT OUTER JOIN  PS_VNDR_IBANK_ACCT G ON  F.SETID = G.SETID 
                                                                                                               AND F.VENDOR_ID = G.VENDOR_ID 
                                                                                                               AND F.VNDR_LOC = G.VNDR_LOC 
                                                                                                               AND F.EFFDT = G.EFFDT 
                                                                                                               AND F.BANK_ACCT_SEQ_NBR = G.BANK_ACCT_SEQ_NBR)
WHERE (A.BANK_SETID = 'SHARE'
     AND A.BANK_CD LIKE '6%'
     --AND A.BANK_ACCT_KEY LIKE :3
     --AND A.PYMNT_METHOD LIKE :4
     AND A.PYMNT_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND A.PYMNT_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
     AND A.BANK_SETID = B.BANK_SETID
     AND A.BANK_CD = B.BANK_CD
     AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY
     AND A.PYMNT_ID = B.PYMNT_ID
     AND A.PYMNT_STATUS = 'P'
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.VOUCHER_ID = C.VOUCHER_ID
     AND D.SETID = C.VENDOR_SETID
     AND D.VENDOR_ID = C.VENDOR_ID
     AND E.SETID = A.REMIT_SETID
     AND E.VENDOR_ID = A.REMIT_VENDOR
     AND F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_VNDR_BANK_ACCT F_ED WHERE F.SETID = F_ED.SETID AND F.VENDOR_ID = F_ED.VENDOR_ID 
                                                                                                                             AND F.VNDR_LOC = F_ED.VNDR_LOC)
     AND F.SETID = A.REMIT_SETID
     AND F.VENDOR_ID = A.REMIT_VENDOR
     AND F.VNDR_LOC = A.VNDR_LOC
     AND F.BANK_ACCT_SEQ_NBR = B.BANK_ACCT_SEQ_NBR)
UNION
SELECT H.BANK_SETID, H.BANK_CD, H.BANK_ACCT_KEY, H.BNK_ID_NBR, H.BANK_ACCOUNT_NUM, H.PYMNT_METHOD, H.PYMNT_ID_REF, H.PYMNT_DT, H.STTLMNT_DT_EST, 
            H.ACCOUNTING_DT, H.PAY_CYCLE, H.PAY_CYCLE_SEQ_NUM, H.NAME1, H.NAME2, L.NAME1, H.ADDRESS1, H.ADDRESS2, H.ADDRESS3, H.ADDRESS4, H.CITY, H.STATE, 
            H.POSTAL, H.COUNTRY, H.PYMNT_AMT, H.CURRENCY_PYMNT, H.VNDR_LOC, I.BANK_ACCT_SEQ_NBR, '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, '', '', H.EFT_LAYOUT_CD, 
            H.EFT_PYMNT_FMT_CD, '', I.BUSINESS_UNIT, I.VOUCHER_ID, K.NAME1, J.INVOICE_ID, J.INVOICE_DT, I.PYMNT_CNT, I.PYMNT_MESSAGE
FROM PS_PAYMENT_TBL H, PS_PYMNT_VCHR_XREF I, PS_VOUCHER J, PS_VENDOR K, PS_VENDOR L
WHERE (H.BANK_SETID = 'SHARE'
     AND H.BANK_CD LIKE '6%'
     --AND H.BANK_ACCT_KEY LIKE :3
     --AND H.PYMNT_METHOD LIKE :4
     AND H.PYMNT_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND H.PYMNT_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
     AND H.BANK_SETID = I.BANK_SETID
     AND H.BANK_CD = I.BANK_CD
     AND H.BANK_ACCT_KEY = I.BANK_ACCT_KEY
     AND H.PYMNT_ID = I.PYMNT_ID
     AND I.BUSINESS_UNIT = J.BUSINESS_UNIT
     AND I.VOUCHER_ID = J.VOUCHER_ID
     AND K.SETID = J.VENDOR_SETID
     AND K.VENDOR_ID = J.VENDOR_ID
     AND L.SETID = H.REMIT_SETID
     AND L.VENDOR_ID = H.REMIT_VENDOR
     AND H.PYMNT_STATUS = 'P'
     AND NOT EXISTS (SELECT M.SETID FROM PS_VNDR_BANK_ACCT M WHERE M.SETID = L.SETID AND M.VENDOR_ID = L.VENDOR_ID AND M.VNDR_LOC = H.VNDR_LOC 
                                                                                                             AND M.BANK_ACCT_SEQ_NBR = I.BANK_ACCT_SEQ_NBR))
ORDER BY 1, 2, 3, 8, 7, 52, 53, 57;

--SELECT QRYFLDNAME, FIELDNAME, HEADING 
--FROM PSQRYFIELD 
--WHERE QRYNAME = 'UNU_AP_PAYMENT_DETAILS' 
--     AND OPRID = ' ' 
--     AND HEADING <> ' '
--     AND FIELDNAME <> ' '
--ORDER BY FLDNUM;

--UNU_AP_POSTED_TRANS_DETAIL
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.VENDOR_ID, C.NAME1, C.NAME2, B.INVOICE_ID, B.INVOICE_DT, A.UNPOST_SEQ, A.POSTING_PROCESS, A.PYMNT_CNT, 
            A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, A.ACCOUNTING_DT, A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, 
            A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, A.SHIPTO_ID, A.POSTING_DATE, 
            A.BUSINESS_UNIT_GL, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.OPEN_ITEM_KEY, A.BUDGET_DT, 
            A.DESCR, A.JOURNAL_ID, A.JOURNAL_DATE, A.JOURNAL_LINE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.RATE_MULT, A.RATE_DIV, 
            A.MONETARY_AMOUNT, A.QTY_VCHR
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_HEADER D
WHERE A.DST_ACCT_TYPE IN ('DST','RXL','RXG')
    AND A.GL_DISTRIB_STATUS = 'D'
    AND A.BUSINESS_UNIT_GL = 'UNUNI'    
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND C.VENDOR_ID = B.VENDOR_ID
    AND C.SETID = B.VENDOR_SETID
    AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND D.JOURNAL_ID = A.JOURNAL_ID
    AND D.JOURNAL_DATE = A.JOURNAL_DATE
    AND D.JRNL_HDR_STATUS IN ('P','U')
    AND D.UNPOST_SEQ = 0
    AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')    
ORDER BY 1, 2, 9, 10, 11, 12, 13, 14;

--UNU_AP_POSTED_TRANS_DETAIL - 2014
--With Column labels as per PSQuery
SELECT A.BUSINESS_UNIT "AP Bus Unit", A.VOUCHER_ID "Voucher Id", B.VOUCHER_STYLE "Voucher Style", B.VENDOR_ID "Vendor Id", C.NAME1 "Vendor Name 1", C.NAME2 "Vendor Name 2",
            B.INVOICE_ID "Invoice", B.INVOICE_DT "Invoice Date", A.UNPOST_SEQ "Unpost Seq", A.POSTING_PROCESS "Posting Process", A.PYMNT_CNT "Pymnt Cnt", 
            A.VOUCHER_LINE_NUM "Voucher Line", A.DISTRIB_LINE_NUM "Distrib Line", A.DST_ACCT_TYPE "Distrib Type", A.ACCOUNTING_DT "Accounting Date", 
            A.BUSINESS_UNIT_PO "PO Bus Unit", A.PO_ID "PO NO.", A.LINE_NBR "PO Line", A.SCHED_NBR "PO Sched", A.PO_DIST_LINE_NUM "PO Distrib", 
            A.BUSINESS_UNIT_RECV "Recv Bus Unit", A.RECEIVER_ID "Receipt No", A.RECV_LN_NBR "Receipt Line", A.RECV_SHIP_SEQ_NBR "Receipt Ship", 
            A.RECV_DIST_LINE_NUM "Receipt Distrib", A.SHIPTO_ID "Ship To", A.POSTING_DATE "Posting Date", A.BUSINESS_UNIT_GL "GL Bus Unit", A.ACCOUNT "Account", 
            A.OPERATING_UNIT "Oper Unit", A.FUND_CODE "Fund", A.DEPTID "DeptID", A.BUSINESS_UNIT_PC "PC Bus Unit", A.PROJECT_ID "Project", A.ACTIVITY_ID "Activity", 
            A.CHARTFIELD2 "Donor", A.OPEN_ITEM_KEY "Open Item Key", A.BUDGET_DT "Budget Date", A.DESCR "Line Descr", A.JOURNAL_ID "Journal ID", 
            A.JOURNAL_DATE "Journal Date", A.JOURNAL_LINE "Journal Line", A.FISCAL_YEAR "Fiscal Year", A.ACCOUNTING_PERIOD "Accounting Period", 
            A.FOREIGN_AMOUNT "Amount(Txn Curr)", A.FOREIGN_CURRENCY "Txn Currency", A.RATE_MULT "Exch Rate Multiplier", A.RATE_DIV "Exch Rate Divisor", 
            A.MONETARY_AMOUNT "Amount(USD)", A.QTY_VCHR "Quantity"
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_HEADER D
WHERE A.DST_ACCT_TYPE IN ('DST','RXL','RXG')
    AND A.GL_DISTRIB_STATUS = 'D'
    AND A.BUSINESS_UNIT_GL = 'UNUNI'    
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND C.VENDOR_ID = B.VENDOR_ID
    AND C.SETID = B.VENDOR_SETID
    AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND D.JOURNAL_ID = A.JOURNAL_ID
    AND D.JOURNAL_DATE = A.JOURNAL_DATE
    AND D.JRNL_HDR_STATUS IN ('P','U')
    AND D.UNPOST_SEQ = 0
    AND A.ACCOUNTING_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')    
ORDER BY 1, 2, 9, 10, 11, 12, 13, 14;

--UNU_AP_VCHRS_NON_UNU_PAYMENT
-- UNU AP Vouchers Non-UNU Pymnt
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.INVOICE_ID, A.INVOICE_DT, A.ACCOUNTING_DT, A.VENDOR_ID, A.VNDR_LOC, A.ADDRESS_SEQ_NUM, A.ENTRY_STATUS, 
            A.MATCH_STATUS_VCHR, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.BUDGET_MISC_STATUS, A.POST_VOUCHER, A.POST_STATUS_AP, A.PROCESS_MAN_CLOSE, A.CLOSE_STATUS, 
            A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.ENTERED_DT, A.OPRID, A.LAST_UPDATE_DT, A.OPRID_LAST_UPDT, B.PYMNT_CNT, B.BANK_CD, F.DESCR, B.BANK_ACCT_KEY, 
            D.DESCR, B.PYMNT_METHOD, B.CURRENCY_PYMNT, B.REMIT_VENDOR, E.NAME1, E.NAME2, B.VNDR_LOC, B.REMIT_ADDR_SEQ_NUM, B.BANK_ACCT_SEQ_NBR, B.PYMNT_GROSS_AMT, 
            B.GROSS_AMT_BSE, B.PYMNT_SELCT_STATUS, B.PAID_AMT, B.SCHEDULED_PAY_DT, B.PYMNT_MESSAGE, B.PYMNT_HOLD, B.PYMNT_HOLD_REASON, B.PYMNT_SEPARATE, B.PAID_AMT_BSE, 
            C.PYMNT_ID_REF, C.NAME1, C.NAME2, C.PYMNT_DT, C.ACCOUNTING_DT, C.CREATION_DT, C.CANCEL_ACTION, C.CANCEL_DT, C.PYMNT_STATUS, C.PYMNT_AMT, C.CURRENCY_PYMNT, 
            C.POST_STATUS_AP, C.RECON_TYPE, C.RECONCILE_OPRID, C.RECON_STATUS, C.PYMNT_RECONCILE_DT, C.VALUE_DT, C.DESCRLONG 
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_PAYMENT_TBL C, PS_BANK_ACCT_DEFN D, PS_VENDOR E, PS_BANK_CD_TBL F
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.BANK_SETID =  C.BANK_SETID (+)
     AND B.BANK_CD =  C.BANK_CD (+)
     AND B.BANK_ACCT_KEY =  C.BANK_ACCT_KEY (+)
     AND B.PYMNT_ID =  C.PYMNT_ID (+)
     AND D.BANK_CD = B.BANK_CD
     AND D.BANK_ACCT_KEY = B.BANK_ACCT_KEY
     AND D.SETID = B.BANK_SETID
     AND D.BUSINESS_UNIT_GL <> 'UNUNI'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND E.SETID = B.REMIT_SETID
     AND E.VENDOR_ID = B.REMIT_VENDOR
     AND D.SETID = F.SETID
     AND D.BANK_CD = F.BANK_CD     
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND A.CLOSE_STATUS LIKE :4
     --AND B.PYMNT_SELCT_STATUS LIKE :5
     AND A.VOUCHER_STYLE NOT IN ('JRNL','TMPL')
     AND A.ENTRY_STATUS <> 'X'
ORDER BY 1, 2, 26;

--UNU_AP_VCHRS_NON_UNU_PAYMENT
--UNU AP Vouchers Non-UNU Pymnt
--Changed by PP on 10 FEB 2015
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.INVOICE_ID, A.INVOICE_DT, A.ACCOUNTING_DT, A.VENDOR_ID, A.VNDR_LOC, A.ADDRESS_SEQ_NUM, A.ENTRY_STATUS, 
       A.MATCH_STATUS_VCHR, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.BUDGET_MISC_STATUS, A.POST_VOUCHER, A.POST_STATUS_AP, A.PROCESS_MAN_CLOSE, A.CLOSE_STATUS, 
       A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.ENTERED_DT, A.OPRID, A.LAST_UPDATE_DT, A.OPRID_LAST_UPDT, APPR.ROLEUSER AS VCHR_APPROVER, B.PYMNT_CNT, B.BANK_CD, F.DESCR, B.BANK_ACCT_KEY, 
       D.DESCR, B.PYMNT_METHOD, B.CURRENCY_PYMNT, B.REMIT_VENDOR, E.NAME1, E.NAME2, B.VNDR_LOC, B.REMIT_ADDR_SEQ_NUM, B.BANK_ACCT_SEQ_NBR, B.PYMNT_GROSS_AMT, 
       B.GROSS_AMT_BSE, B.PYMNT_SELCT_STATUS, B.PAID_AMT, B.SCHEDULED_PAY_DT, B.PYMNT_MESSAGE, B.PYMNT_HOLD, B.PYMNT_HOLD_REASON, B.PYMNT_SEPARATE, B.PAID_AMT_BSE, 
       C.PYMNT_ID_REF, C.NAME1, C.NAME2, C.PYMNT_DT, C.ACCOUNTING_DT, C.CREATION_DT, C.CANCEL_ACTION, C.CANCEL_DT, C.PYMNT_STATUS, X1.XLATLONGNAME AS PYMNT_STS_DESCR, C.PYMNT_AMT, C.CURRENCY_PYMNT, 
       C.POST_STATUS_AP, C.RECON_TYPE, C.RECONCILE_OPRID, C.RECON_STATUS, C.PYMNT_RECONCILE_DT, C.VALUE_DT, C.DESCRLONG 
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_PAYMENT_TBL C, PS_BANK_ACCT_DEFN D, PS_VENDOR E, PS_BANK_CD_TBL F, PSXLATITEM X1, PS_APPR_INST_LOG APPR
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND B.BANK_SETID =  C.BANK_SETID (+)
     AND B.BANK_CD =  C.BANK_CD (+)
     AND B.BANK_ACCT_KEY =  C.BANK_ACCT_KEY (+)
     AND B.PYMNT_ID =  C.PYMNT_ID (+)
     AND D.BANK_CD = B.BANK_CD
     AND D.BANK_ACCT_KEY = B.BANK_ACCT_KEY
     AND D.SETID = B.BANK_SETID
     AND D.BUSINESS_UNIT_GL <> 'UNUNI'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND E.SETID = B.REMIT_SETID
     AND E.VENDOR_ID = B.REMIT_VENDOR
     AND D.SETID = F.SETID
     AND D.BANK_CD = F.BANK_CD     
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND A.CLOSE_STATUS LIKE :4
     --AND B.PYMNT_SELCT_STATUS LIKE :5
     AND A.VOUCHER_STYLE NOT IN ('JRNL','TMPL')
     AND A.ENTRY_STATUS <> 'X'
     AND X1.FIELDNAME = 'PYMNT_STATUS'
     AND X1.FIELDVALUE = C.PYMNT_STATUS
     AND A.APPR_INSTANCE = APPR.APPR_INSTANCE (+)
     AND 'A' = APPR.APPR_INST_STATUS (+)
     --AND A.VENDOR_ID = '0000000757'
ORDER BY 1, 2, 26;

--UN_OAPR_PYMNT_VENDOR
--Payment for a Vendor
SELECT A.REMIT_SETID, A.REMIT_VENDOR, F.NAME1, A.VNDR_LOC, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.BANK_ACCOUNT_NUM, E.BUSINESS_UNIT_PO, E.PO_ID, C.BUSINESS_UNIT, 
            C.VOUCHER_ID, C.INVOICE_ID, E.VOUCHER_LINE_NUM, E.DESCR, E.DESCR254_MIXED, E.MERCH_AMT_BSE, D.MERCH_AMT_BSE, C.ENTRY_STATUS, C.POST_STATUS_AP, A.PYMNT_ID, 
            A.PYMNT_ID_REF, A.PYMNT_DT, A.CURRENCY_PYMNT, A.PYMNT_AMT, A.PYMNT_METHOD, B.PAID_AMT_BSE, A.CREATION_DT, A.ACCOUNTING_DT, 
            D.FUND_CODE, D.OPERATING_UNIT, D.PROJECT_ID, D.DEPTID, D.ACCOUNT, D.CHARTFIELD2, D.ACTIVITY_ID 
FROM PS_PAYMENT_TBL A, PS_PYMNT_VCHR_XREF B, PS_VOUCHER C, PS_DISTRIB_LINE D, PS_VOUCHER_LINE E, PS_VENDOR F 
WHERE A.REMIT_SETID = 'UNUNI' 
     AND A.REMIT_VENDOR = '0000000157' 
     AND A.BANK_CD = B.BANK_CD 
     AND A.BANK_SETID = B.BANK_SETID 
     AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY 
     AND A.PYMNT_ID = B.PYMNT_ID 
     AND A.PYMNT_STATUS = 'P' 
     AND B.PYMNT_SELCT_STATUS IN ('E','P','Y') 
     AND B.PYMNT_ACTION IN ('P','R','S') 
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT 
     AND B.VOUCHER_ID = C.VOUCHER_ID 
     AND C.ENTRY_STATUS <> 'X' 
     AND E.BUSINESS_UNIT = D.BUSINESS_UNIT 
     AND E.VOUCHER_ID = D.VOUCHER_ID 
     AND E.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM 
     AND C.BUSINESS_UNIT = E.BUSINESS_UNIT 
     AND C.VOUCHER_ID = E.VOUCHER_ID 
     AND A.REMIT_SETID = F.SETID 
     AND A.REMIT_VENDOR = F.VENDOR_ID 
ORDER BY 1, 2, 5, 6, 7, 8, 10, 12, 13, 20, 21;

--Review Requisition Information
--Requisition XREF
SELECT * FROM PS_REQ_PO_INQ_VW WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286';
SELECT * FROM PS_REQ_VCHR_XREF WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001286';

--Project budget upload security setup 
SELECT * FROM PSAUTHBUSCOMP WHERE BCNAME = 'UN_GM_PROJ_BUD_DTLS_CI';
SELECT * FROM PSAUTHBUSCOMP WHERE BCNAME = 'PC_BUD_DETAIL_CI';
SELECT * FROM PSOPRCLS WHERE OPRCLASS = 'UN_PTPT1200';
SELECT * FROM PSROLECLASS WHERE CLASSID = 'UN_PTPT1200';
SELECT * FROM PSUSEREMAIL WHERE OPRID IN (SELECT OPRID FROM PSOPRCLS WHERE OPRCLASS = 'UN_PTPT1200');

SELECT * FROM PS_INV_ITEM_CNTRL;

--AR Unapplied Contributions
--UNAR3REP
SELECT A.DEPOSIT_BU, A.DEPOSIT_TYPE, E.DESCRSHORT, B.ACCOUNTING_DT, A.DEPOSIT_ID, substr(H.DEP_DESCR,1,26) AS DEP_DESCR, B.PAYMENT_CURRENCY, B.PAYMENT_AMT, B.PYMT_RATE_MULT, 
            B.PYMT_RATE_DIV, NVL(ROUND(((B.PAYMENT_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS USD_AMT,
            C.PAYMENT_SEQ_NUM, C.ID_SEQ_NUM, substr(C.NAME1,1,26) AS NAME1, C.BUSINESS_UNIT
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_PAYMENT_ID_CUST C, PS_PAYMENT_ID_ITEM D, PS_UN_DEP_DSCR H, PS_DEPOST_TYPE_TBL E
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND B.DEPOSIT_BU = C.DEPOSIT_BU
    AND B.DEPOSIT_ID = C.DEPOSIT_ID
    AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
    AND H.DEPOSIT_BU = A.DEPOSIT_BU
    AND H.DEPOSIT_ID = A.DEPOSIT_ID
    AND H.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
    AND H.ID_SEQ_NUM = C.ID_SEQ_NUM
    AND E.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME='DEPOST_TYPE_TBL')
    AND E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
    AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPOST_TYPE_TBL WHERE SETID = E.SETID AND DEPOSIT_TYPE = E.DEPOSIT_TYPE AND EFF_STATUS = 'A' AND EFFDT <= SYSDATE)
    AND C.DEPOSIT_BU = D.DEPOSIT_BU (+)
    AND C.DEPOSIT_ID = D.DEPOSIT_ID (+)
    AND C.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM (+)
    AND C.ID_SEQ_NUM = D.ID_SEQ_NUM (+)
    AND A.DEPOSIT_BU LIKE '6%'
    AND A.DEP_POST_STATUS <> 'C'
    AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
ORDER BY 1,2,3,4;

--UNAR151
--Unapplied Deposits Aging
SELECT A.PAYMENT_ID, B.RECEIVED_DT, B.DEPOSIT_TYPE, B.BUSINESS_UNIT, C.NAME1, D.BANK_CD, D.DESCRSHORT, A.PAYMENT_AMT, A.PAYMENT_CURRENCY,  
            NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS USD_AMT, E.BUSINESS_UNIT_GL, C.CUST_ID, F.FROM_CUR, F.TO_CUR, F.RT_TYPE, F.RATE_MULT, F.RATE_DIV,
            (TRUNC(sysdate) - TRUNC(B.RECEIVED_DT)) AS AGE_IN_DAYS
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B, PS_PAYMENT_ID_CUST C, PS_BANK_CD_TBL D, PS_BUS_UNIT_TBL_AP E, PS_RT_RATE_TBL F 
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU 
     AND A.DEPOSIT_ID = B.DEPOSIT_ID 
     AND A.DEPOSIT_BU = C.DEPOSIT_BU 
     AND A.DEPOSIT_ID = C.DEPOSIT_ID 
     AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM 
     AND D.BANK_CD = B.BANK_CD 
     AND B.BUSINESS_UNIT LIKE '6%' 
     --AND B.DEPOSIT_TYPE LIKE :2 
     --AND C.CUST_ID LIKE :3 
     AND E.BUSINESS_UNIT = B.BUSINESS_UNIT 
     AND B.DEP_POST_STATUS <> 'C' 
     AND F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_RT_RATE_TBL F_ED WHERE F.RT_RATE_INDEX = F_ED.RT_RATE_INDEX AND F.TERM = F_ED.TERM AND F.FROM_CUR = F_ED.FROM_CUR AND F.TO_CUR = F_ED.TO_CUR 
                              AND F.RT_TYPE = F_ED.RT_TYPE AND F_ED.EFFDT <= SYSDATE) 
     AND F.RT_TYPE = 'UNORE' 
     AND F.TO_CUR = 'USD' 
     AND F.FROM_CUR = A.PAYMENT_CURRENCY 
ORDER BY 2;

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('0003745468', '0003743554', '0003745439', '0003745450');

--KK Drill to Activity Log
SELECT * FROM PS_KK_DRL_ALOG_VW 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND LEDGER = 'PAR_UU_EXP'
    AND BUDGET_PERIOD = '2012'
    AND PROJECT_ID = '00064159'

-------------------------------------
--Expanded KK_DRL_ALOG_VW
-------------------------------------
--Budget
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, B.JOURNAL_ID, B.KEYLIST
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_BUD'
    AND A.BUDGET_PERIOD = '2013'
    AND A.PROJECT_ID = '00064159'
    AND A.BALANCING_LINE = 'N'    
ORDER BY ACCOUNTING_PERIOD;

--Pre-encumbrance
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_PRE'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--Encumbrance
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_ENC'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--Expense
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_EXP'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;


--KK Drill to Ledger
--------------------------
--KK_DRL_LDGR_DVW
--------------------------
--Expense
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.CURRENCY_CD, 
            A.POSTED_BASE_AMT, A.POSTED_TRAN_AMT, A.BASE_CURRENCY, A.DTTM_STAMP_SEC, A.PROCESS_INSTANCE 
FROM PS_LEDGER_KK A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_EXP'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--Encumbrance
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.CURRENCY_CD, 
            A.POSTED_BASE_AMT, A.POSTED_TRAN_AMT, A.BASE_CURRENCY, A.DTTM_STAMP_SEC, A.PROCESS_INSTANCE 
FROM PS_LEDGER_KK A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_ENC'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--UNU_GL_FUND_STATUS
SELECT A.FISCAL_YEAR, A.BUSINESS_UNIT, A.OPERATING_UNIT, C.DESCR AS OP_DESCR, DECODE(A.DEPTID,' ',' ','B0' || SUBSTR(A.DEPTID, 1, 3)) AS B_DEPT, A.DEPTID, E.DESCR AS DEPT_DESCR, A.PROJECT_ID, F.DESCR AS PRJ_DESCR, 
            A.FUND_CODE, D.DESCR AS FUND_DESCR, A.CHARTFIELD2, G.DESCR AS DONOR_DESCR, 
            DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0, 'A - Opening Balance','B - Fund Balance Adjustment'), 'R', DECODE(A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'), 'E', 'E - Expenditure', '') AS TYPE, 
            A.ACCOUNT, B.DESCR AS ACCT_DESCR, SUM(A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL B, PS_SET_CNTRL_REC B2, PS_OPER_UNIT_TBL C, PS_FUND_TBL D, PS_DEPT_TBL E, PS_PROJECT_ID_VW F, PS_CHARTFIELD2_TBL G
WHERE B.ACCOUNT = A.ACCOUNT
    AND B2.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND B2.RECNAME = 'GL_ACCOUNT_TBL'
    AND B2.SETID = B.SETID
    AND ( A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'USD'
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.OPERATING_UNIT LIKE :2
    --AND A.DEPTID LIKE :3
    --AND A.FUND_CODE LIKE :4
    --AND A.CHARTFIELD2 LIKE :5
    --AND A.PROJECT_ID LIKE :6
    AND A.FISCAL_YEAR = 2012
    AND A.ACCOUNTING_PERIOD >= 0
    AND A.ACCOUNTING_PERIOD <= 12
    AND B.SETID = 'SHARE'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.ACCOUNT = B_ED.ACCOUNT AND B_ED.EFFDT <= SYSDATE)
    AND B.ACCOUNT = A.ACCOUNT
    AND B.ACCOUNT_TYPE IN ('R','E','Q')
    AND C.SETID = 'SHARE'
    AND C.OPERATING_UNIT = A.OPERATING_UNIT
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_OPER_UNIT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.OPERATING_UNIT = C_ED.OPERATING_UNIT AND C_ED.EFFDT <= SYSDATE)
    AND D.SETID = 'UNUNI'
    AND D.FUND_CODE = A.FUND_CODE
    AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_FUND_TBL D_ED WHERE D.SETID = D_ED.SETID AND D.FUND_CODE = D_ED.FUND_CODE AND D_ED.EFFDT <= SYSDATE)
    AND 'UNUNI' =  E.SETID (+)
    AND A.DEPTID =  E.DEPTID (+)
    AND ( E.EFFDT IS NULL OR ( E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.DEPTID = E_ED.DEPTID AND E_ED.EFFDT <= SYSDATE)))
    AND A.PROJECT_ID =  F.PROJECT_ID (+)
    AND 'UNUNI' =  G.SETID (+)
    AND A.CHARTFIELD2 =  G.CHARTFIELD2 (+)
    AND ( G.EFFDT IS NULL OR ( G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_CHARTFIELD2_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CHARTFIELD2 = G_ED.CHARTFIELD2 AND G_ED.EFFDT <= SYSDATE))) )
GROUP BY A.FISCAL_YEAR, A.BUSINESS_UNIT, A.OPERATING_UNIT, C.DESCR, DECODE( A.DEPTID,' ',' ','B0' || SUBSTR( A.DEPTID, 1, 3)), A.DEPTID, E.DESCR, A.PROJECT_ID, F.DESCR, A.FUND_CODE, D.DESCR,  
               A.CHARTFIELD2, G.DESCR, DECODE(B.ACCOUNT_TYPE,'Q',DECODE(A.ACCOUNTING_PERIOD,0, 'A - Opening Balance','B - Fund Balance Adjustment'), 'R', DECODE( A.ACCOUNT,'51035','D - Income Transfers/Adjustments','C - Income'), 'E', 'E - Expenditure', ''), A.ACCOUNT, B.DESCR
ORDER BY 1, 2, 3, 5, 6, 8, 10, 12, 14, 15;

--Actuals for Expense & Revenue ACCOUNTS ONLY from Ledger for all UNU Departments
--Sum up to Account series aka ignore the last two digits
--Included FUND_CODE to split between programme and admin budgets
--Included all CF's
--Using POSTED_BASE_AMT
SELECT X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, (SUBSTR(X1.ACCOUNT,1,LENGTH(X1.ACCOUNT)-2) || '00') AS ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2, X1.DESCR, SUM(X.POSTED_BASE_AMT) AS TOTAL,
            SUM(X.PERIOD_0) PERIOD_0, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
 , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JAN
 , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS FEB 
 , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS APR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAY 
 , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUN 
 , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUL 
 , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS AUG 
 , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS SEP 
 , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS OCT 
 , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS NOV 
 , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEC 
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET 
WHERE ET.SETID = 'SHARE' 
    AND ET.ACCOUNT = ST.ACCOUNT     
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate) 
    AND ST.BUSINESS_UNIT = 'UNUNI' 
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR = 2012
    --AND ST.STATISTICS_CODE = ' ' 
    --AND ST.CURRENCY_CD = 'USD'
    AND ET.ACCOUNT_TYPE IN ('E', 'R')     
    --AND ST.DEPTID IN (SELECT D.DEPTID FROM PS_DEPT_TBL D WHERE SETID = 'UNUNI' AND EFF_STATUS = 'A' AND EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPT_TBL C_ED WHERE D.SETID = C_ED.SETID AND D.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= sysdate))
    --AND ST.DEPTID = '11901'
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X, PS_GL_ACCOUNT_TBL X1
WHERE X1.SETID = 'SHARE'
    AND X1.ACCOUNT = (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00')  
GROUP BY X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X1.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2, X1.DESCR
ORDER BY X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X1.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2;

--UNU_KK_RESOURCE_OVERVIEW
SELECT DECODE( A.DEPTID,' ', B.DEPTID, A.DEPTID) AS "Department", A.FUND_CODE "Fund", A.CHARTFIELD2 AS "Donor", A.PROGRAM AS "Program", A.PROJECT_ID AS "Project", A.BUDGET_PERIOD AS "Budget Period",
            SUM(DECODE(A.LEDGER,'AX1_UU_BUD',- A.POSTED_BASE_AMT,'ALT_UU_BUD',- A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Budget",
            SUM(DECODE(A.LEDGER,'REV_UU_COL',- A.POSTED_BASE_AMT,0)) AS "Cash Collected",
            SUM(DECODE(A.LEDGER,'AX1_UU_PRE', A.POSTED_BASE_AMT,'ALT_UU_PRE', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Pre-Enc",
            SUM(DECODE(A.LEDGER,'AX1_UU_ENC', A.POSTED_BASE_AMT,'ALT_UU_ENC', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Enc",
            SUM(DECODE(A.LEDGER,'AX1_UU_EXP', A.POSTED_BASE_AMT,'ALT_UU_EXP', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Exp",
            SUM(DECODE(A.LEDGER,'AX1_UU_BUD',- A.POSTED_BASE_AMT,'ALT_UU_BUD',- A.POSTED_BASE_AMT,'AX1_UU_ENC',- A.POSTED_BASE_AMT,'ALT_UU_ENC',- A.POSTED_BASE_AMT,'AX1_UU_EXP',- A.POSTED_BASE_AMT,'ALT_UU_EXP',- A.POSTED_BASE_AMT,'REV_UU_COL',- A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Avail Budget",
            SUM(DECODE(A.LEDGER,'PAR_UU_BUD',- A.POSTED_BASE_AMT,0)) AS "Project Budget",
            SUM(DECODE(A.LEDGER,'PAR_UU_PRE', A.POSTED_BASE_AMT,0)) AS "Project Pre-Enc",
            SUM(DECODE(A.LEDGER,'PAR_UU_ENC', A.POSTED_BASE_AMT,0)) AS "Project Enc",
            SUM(DECODE(A.LEDGER,'PAR_UU_EXP', A.POSTED_BASE_AMT,0)) AS "Project Exp",
            SUM(DECODE(A.LEDGER,'PAR_UU_BUD',- A.POSTED_BASE_AMT,'PAR_UU_ENC',- A.POSTED_BASE_AMT,'PAR_UU_EXP',- A.POSTED_BASE_AMT,0)) AS "Project Avail Budget"
FROM PS_UNU_LEDG_KK_PVW A, PS_GM_PRJ_DEPT B
WHERE A.BUSINESS_UNIT = 'UNUNI'
     --AND DECODE(  A.DEPTID,' ',  B.DEPTID,  A.DEPTID) = 'B0119'
     --AND A.FUND_CODE LIKE :3
     --AND A.PROJECT_ID = '00064158'
     --AND ((A.BUDGET_PERIOD >= '2010') OR A.BUDGET_PERIOD = ' ')
     AND (A.BUDGET_PERIOD IN ('2012', '2013') OR A.BUDGET_PERIOD = ' ')
     AND A.PROJECT_ID = B.PROJECT_ID (+)
GROUP BY DECODE(A.DEPTID,' ', B.DEPTID, A.DEPTID), A.FUND_CODE, A.CHARTFIELD2, A.PROGRAM, A.PROJECT_ID, A.BUDGET_PERIOD
ORDER BY 1, 2, 3, 4, 5, 6;

--GLS8510
--KK Ledger Details Report
SELECT X.ACCOUNT AS "Account", X.DEPTID AS "DeptID", X.OPERATING_UNIT AS "Operating Unit", X.FUND_CODE AS "Fund", X.CHARTFIELD2 AS "Donor", X.PROJECT_ID AS "ProjectID", X.BUDGET_PERIOD AS "Budget Period", 
            X.CURRENCY_CD AS "Currency", SUM(BUD) AS "Budget", SUM(EXP) AS "Expense", SUM(ENC) AS "Encumbrance", SUM(PRE) AS "Pre-Encumbrance", SUM((-1*BUD) - (EXP + (ENC))) AS "Available Budget"
FROM (
SELECT LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD,
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE
FROM PS_KK_RPT_LED_VW
WHERE BUSINESS_UNIT = 'UNUNI'
    AND LEDGER_GROUP = 'PAR_UU'
    AND BUDGET_PERIOD IN (2012, 2013)
    AND DEPTID = 'B0119'
GROUP BY LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD) X
GROUP BY X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.BUDGET_PERIOD;

--This is my version without the Ledger Group
--Verify
--This does not take into account REV_UU ledger group. Refer to KK Budgets DrillDown file for complete query 
SELECT X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD,  
SUM(BUD) AS BUD, SUM(EXP) AS EXP, SUM(ENC) AS ENC, SUM(PRE) AS PRE, SUM((-1*BUD) - (EXP + (ENC))) AS AVAILABLE
FROM (
SELECT LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, 
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE
FROM PS_KK_INQ_BDLD_VW2
WHERE BUSINESS_UNIT = 'UNUNI'   
GROUP BY LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, LEDGER
) X
WHERE X.BUDGET_PERIOD IN ('2012', '2013')
    AND X.DEPTID = 'B0119'
GROUP BY X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.LEDGER_GROUP, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID;

SELECT * FROM PS_BANK_ACCT_AP_VW WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_PAYMENT_TBL WHERE REMIT_SETID = 'UNUNI' AND IN_PROCESS_FLG = 'Y';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE REMIT_SETID = 'UNUNI' AND REMIT_VENDOR = '0000005935';
SELECT * FROM PS_PST_VCHR_PYMNT;

--PPs Version of Level 2 Budgets
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, L.RESOURCE_ID, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, B.JOURNAL_ID, T.KK_SOURCE_TRAN,
            PC.BUSINESS_UNIT, PC.PROJECT_ID, PC.PC_BUDGET_ID, PC.ACTIVITY_ID, PC.PC_BUDGET_ITEM, PC.SEQ_NBR, PC.BUDGET_PERIOD, PC.BUSINESS_UNIT_GL, PC.BUDGET_LN, PC.RESOURCE_ID, 
            PC.ACCOUNT, PC.DESCR, PC.DEPTID, PC.OPERATING_UNIT, PC.FUND_CODE, PC.FMS_DTTM_STAMP, PC.FMS_OPRID, PC.FMS_LASTUPDDTTM, PC.FMS_LASTUPDOPRID, PC.BUSINESS_UNIT_BD, PC.KK_BUDG_LN_TYPE, 
            PC.JOURNAL_ID, PC.BD_HDR_STATUS, PC.LEDGER, PC.LEDGER_GROUP, PC.GM_DISTRIB_STATUS, PC.PC_DISTRIB_STATUS, PC.KK_DISTRIB_STATUS, PC.TRANS_DT, PC.ACCOUNTING_DT, 
            PC.RT_TYPE, PC.RATE_MULT, PC.RATE_DIV, PC.FOREIGN_CURRENCY, PC.FOREIGN_AMOUNT, PC.SYSTEM_SOURCE, PC.ANALYSIS_TYPE,
            PC.KK_DEFAULT_EE, PC.KK_GEN_PARENT, PC.KK_PARENT_ENT_TYPE, PC.KK_BUDG_TRANS_TYPE
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_TRANS_LOG T, PS_KK_SOURCE_LN L, PS_PC_BUD_DETAIL PC
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.KK_TRAN_ID = T.KK_TRAN_ID (+)
    AND A.KK_TRAN_DT = T.KK_TRAN_DT (+)
    AND A.KK_TRAN_LN = T.KK_TRAN_LN (+)
    AND A.SEQNBR = T.SEQNBR (+)
    AND A.KK_TRAN_ID = L.KK_TRAN_ID
    AND A.KK_TRAN_DT = L.KK_TRAN_DT
    AND A.KK_TRAN_LN = L.KK_TRAN_LN
    AND A.BUSINESS_UNIT = PC.BUSINESS_UNIT
    AND A.PROJECT_ID = PC.PROJECT_ID
    AND L.RESOURCE_ID = PC.RESOURCE_ID
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_BUD'
    AND A.BUDGET_PERIOD = '2013'
    --AND A.PROJECT_ID = '00064159'
    AND A.PROJECT_ID IN ('00064152','00064153','00064149','00064156','00064157','00073654','00078790','00073655','00064158','00064158','00064150','00064143'
                                                                                                                                             ,'00064145','00064146','00064160','00064151','00064163','00064168','00064169','00064173','00064170','00064174','00064166','00064171'
                                                                                                                                             ,'00064167','00064172','00073470','00064165','00064164','00075761','00083686','00064161','00064159')
    AND A.BALANCING_LINE = 'N'    
ORDER BY A.BUSINESS_UNIT, A.PROJECT_ID, PC.ACCOUNT, ACCOUNTING_PERIOD;

SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0057319340';
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0057319340';
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0057319340';
SELECT * FROM PS_KK_SOURCE_TRAN WHERE KK_SOURCE_TRAN = 'PC_BUDGET';

SELECT BUSINESS_UNIT, PROJECT_ID, PC_BUDGET_ID, ACTIVITY_ID, PC_BUDGET_ITEM, SEQ_NBR, BUDGET_PERIOD, BUSINESS_UNIT_GL, BUDGET_LN, RESOURCE_ID, ACCOUNT, DESCR, DEPTID, OPERATING_UNIT, FUND_CODE,
            FMS_DTTM_STAMP, FMS_OPRID, FMS_LASTUPDDTTM, FMS_LASTUPDOPRID, BUSINESS_UNIT_BD, KK_BUDG_LN_TYPE, JOURNAL_ID, BD_HDR_STATUS, LEDGER, LEDGER_GROUP, 
            GM_DISTRIB_STATUS, PC_DISTRIB_STATUS, KK_DISTRIB_STATUS, TRANS_DT, ACCOUNTING_DT, RT_TYPE, RATE_MULT, RATE_DIV, FOREIGN_CURRENCY, FOREIGN_AMOUNT, SYSTEM_SOURCE, ANALYSIS_TYPE,
            KK_DEFAULT_EE, KK_GEN_PARENT, KK_PARENT_ENT_TYPE, KK_BUDG_TRANS_TYPE
FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159' AND RESOURCE_ID = '37609184'

--LIQUIDATION QUERIES
--Check Referenced Documents with MONETARY_AMOUNT <> 0
--Version 1
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN,
            A.REFERENCED_BUDGET, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, B.KK_SOURCE_TRAN
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.LEDGER = 'PAR_UU_BUD'
    AND A.LEDGER_GROUP = 'DET_UU'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
    AND EXISTS (SELECT 'X' FROM PS_KK_REFERENCED R, PS_KK_LIQUIDATION L WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT AND A.KK_TRAN_LN = R.KK_TRAN_LN
                                                                                                                            AND L.KK_TRAN_ID = R.KK_REFD_ID
                                                                                                                            AND L.KK_TRAN_DT = R.KK_REFD_DT
                                                                                                                            AND L.KK_TRAN_LN = R.KK_REFD_LN
                                                                                                                            AND A.LEDGER_GROUP = L.LEDGER_GROUP
                                                                                                                            AND L.MONETARY_AMOUNT <> 0
                                                                                                                            AND A.REFERENCED_BUDGET = 'Y')

--Version 2
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN,
            A.REFERENCED_BUDGET, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, A.ACTIVITY, B.KK_SOURCE_TRAN,
            B.BUSINESS_UNIT AS BUSINESS_UNIT_SS, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, LINE.LINE_NBR, LINE.DISTRIB_LINE_NUM, LINE.DST_ACCT_TYPE, B.KEYLIST
            --B.KK_PROCESS_STATUS, B.KK_PROC_INSTANCE, B.KK_ROLLED, B.PROCESS_INSTANCE
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN LINE
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.KK_TRAN_ID = LINE.KK_TRAN_ID
    AND A.KK_TRAN_DT = LINE.KK_TRAN_DT
    AND A.KK_TRAN_LN = LINE.KK_TRAN_LN
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.LEDGER = 'PAR_UU_BUD'
    AND A.LEDGER_GROUP = 'DET_UU'
    AND A.BUDGET_PERIOD = '2012'
    --AND A.PROJECT_ID = '00064159'
    AND A.DEPTID = '11901'
    AND EXISTS (SELECT 'X' FROM PS_KK_REFERENCED R, PS_KK_LIQUIDATION L WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT AND A.KK_TRAN_LN = R.KK_TRAN_LN
                                                                                                                           AND L.KK_TRAN_ID = R.KK_REFD_ID AND L.KK_TRAN_DT = R.KK_REFD_DT AND L.KK_TRAN_LN = R.KK_REFD_LN 
                                                                                                                           AND A.LEDGER_GROUP = L.LEDGER_GROUP
                                                                                                                           AND L.MONETARY_AMOUNT <> 0
                                                                                                                           AND A.REFERENCED_BUDGET = 'Y')
ORDER BY A.ACCOUNTING_PERIOD, A.OPERATING_UNIT, A.DEPTID, A.PROJECT_ID;

--Verification Queries
--Check the detail ledger
SELECT * FROM PS_BUL_CNTL_BUD WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0048221858'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0048221858'
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0048221858' AND LEDGER_GROUP = 'DET_UU' AND REFERENCED_BUDGET = 'Y' AND BALANCING_LINE = 'N' --AND PROJECT_ID = '00064159'
SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0048221858'
--Use the KK_REFD_ID from PS_KK_REFERENCED to check the MONETARY_AMOUNT
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0048218373' AND LEDGER_GROUP = 'DET_UU' AND MONETARY_AMOUNT <> 0
--Now check the HDR & LN again for Referenced Document 
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0051304709'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0054003980'
SELECT * FROM PS_KK_TRANS_LOG WHERE KK_TRAN_ID = '0051421497'

--Version 3
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN,
            A.REFERENCED_BUDGET, A.BASE_CURRENCY, A.MONETARY_AMOUNT, A.ACTIVITY AS ACTIVITY_ACT, L.ACTIVITY AS LIQUIDATION_ACT, B.KK_SOURCE_TRAN, B.KK_ROLLED,
            B.BUSINESS_UNIT AS BUSINESS_UNIT_SS, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, LINE.LINE_NBR, LINE.DISTRIB_LINE_NUM, LINE.DST_ACCT_TYPE, B.KEYLIST,
            R.KK_REFD_ID, L.MONETARY_AMOUNT AS LIQUIDATION,            
            --(SELECT BUSINESS_UNIT || '--' || REQ_ID FROM PS_KK_SOURCE_HDR INTAB WHERE INTAB.KK_TRAN_ID = R.KK_REFD_ID AND INTAB.KK_TRAN_DT = R.KK_REFD_DT) AS BU_REQ
            (SELECT KEYLIST FROM PS_KK_SOURCE_HDR INTAB WHERE INTAB.KK_TRAN_ID = R.KK_REFD_ID AND INTAB.KK_TRAN_DT = R.KK_REFD_DT) AS SRC_KEYLIST,
            B.KK_PROCESS_STATUS--, B.KK_PROC_INSTANCE, B.PROCESS_INSTANCE
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN LINE, PS_KK_REFERENCED R, PS_KK_LIQUIDATION L, PS_BUL_CNTL_BUD D
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.KK_TRAN_ID = LINE.KK_TRAN_ID
    AND A.KK_TRAN_DT = LINE.KK_TRAN_DT
    AND A.KK_TRAN_LN = LINE.KK_TRAN_LN
    AND A.KK_TRAN_ID = R.KK_TRAN_ID
    AND A.KK_TRAN_DT = R.KK_TRAN_DT
    AND A.KK_TRAN_LN = R.KK_TRAN_LN
    AND L.KK_TRAN_ID = R.KK_REFD_ID
    AND L.KK_TRAN_DT = R.KK_REFD_DT
    AND L.KK_TRAN_LN = R.KK_REFD_LN
    AND A.LEDGER_GROUP = L.LEDGER_GROUP
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND B.BUSINESS_UNIT LIKE '6%'
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND D.KK_DETAIL_LED = 'Y'
    AND D.KK_LEDGER_GROUP = L.LEDGER_GROUP
    --AND A.LEDGER = 'PAR_UU_BUD'
    --AND A.LEDGER_GROUP = 'DET_UU'
    AND A.BUDGET_PERIOD = '2012'
    AND A.PROJECT_ID = '00064159'
    AND L.MONETARY_AMOUNT <> 0
    AND A.REFERENCED_BUDGET = 'Y'
    --AND EXISTS (SELECT 'X' FROM PS_PO_HDR H WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT AND H.PO_ID = B.PO_ID AND H.PO_STATUS NOT IN ('C','X') AND H.BUDGET_HDR_STATUS = 'V' AND H.BUDGET_HDR_STS_NP = 'V')
ORDER BY A.ACCOUNTING_PERIOD, A.OPERATING_UNIT, A.DEPTID, A.PROJECT_ID;

SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0057450251' AND BUDGET_PERIOD = 2012 AND LEDGER_GROUP = 'DET_UU';

--Process Group User Preferences
SELECT * FROM PS_OPR_DEF_TBL_RTM WHERE OPRID = 'prakash.prashant';
SELECT * FROM PS_RTM_SOURCE;
SELECT * FROM PS_RTM_SRC_PRCSGRP;
SELECT * FROM PS_RTM_PROCESS_GRP;
SELECT * FROM PS_RTM_OPR_GROUP WHERE OPRID = 'bradley.berquist'; --RTM_PROCESS_GROUP = 'ARPOST'

--Process Groups for ACTIVE UNU Users
--Version 1
SELECT A.OPRID, A.RTM_PRCS_ALLOW AS "Allow Processing", A.RTM_CONSOLE_FLG "Use Event Notification", 
       LISTAGG(B.RTM_SOURCE_TXN || ' - ' || B.RTM_PROCESS_GROUP, ' > ') WITHIN GROUP (ORDER BY B.RTM_SOURCE_TXN) AS "Process Groups"
FROM PS_OPR_DEF_TBL_RTM A, PS_RTM_OPR_GROUP B
WHERE A.OPRID = B.OPRID
  AND A.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
GROUP BY A.OPRID, A.RTM_PRCS_ALLOW, A.RTM_CONSOLE_FLG
ORDER BY A.OPRID;

--Version 2
SELECT A.OPRID, A.RTM_PRCS_ALLOW AS "Allow Processing", A.RTM_CONSOLE_FLG "Use Event Notification", 
       (SELECT LISTAGG(B.RTM_SOURCE_TXN || ' - ' || RTS.DESCR || ' - ' || B.RTM_PROCESS_GROUP || ' - ' || RTG.RTM_SHORT_DESCR, ' > ') WITHIN GROUP (ORDER BY B.RTM_SOURCE_TXN) AS "Process Groups"
        FROM PS_RTM_OPR_GROUP B, PS_RTM_PROCESS_GRP RTG, PS_RTM_SOURCE RTS WHERE A.OPRID = B.OPRID AND B.RTM_PROCESS_GROUP = RTG.RTM_PROCESS_GROUP AND B.RTM_SOURCE_TXN = RTS.RTM_SOURCE_TXN) AS "Process Groups"
FROM PS_OPR_DEF_TBL_RTM A
WHERE A.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
GROUP BY A.OPRID, A.RTM_PRCS_ALLOW, A.RTM_CONSOLE_FLG
ORDER BY A.OPRID;

--Calculates matching exceptions
SELECT V.BUSINESS_UNIT, V.VOUCHER_ID, V.VOUCHER_LINE_NUM, VCHR.INVOICE_DT, VCHR.ENTERED_DT, VCHR.ACCOUNTING_DT, V.QTY_VCHR, V.ITM_SETID, V.INV_ITEM_ID, 
            V.BUSINESS_UNIT_PO, V.PO_ID, V.LINE_NBR, V.SCHED_NBR, V.BUSINESS_UNIT_RECV, V.RECEIVER_ID, V.RECV_LN_NBR, V.RECV_SHIP_SEQ_NBR,
            V.MERCHANDISE_AMT, V.MERCH_AMT_BSE,
            X.MATCH_RULE_ID, X.MTCH_EXCPTN_TYPE, X.VCHR_FLDVALUE, X.PO_FLDVALUE, X.RECV_FLDVALUE
FROM PS_VOUCHER_LINE V, PS_AP_MTCH_EXCPTN X, PS_VOUCHER VCHR
WHERE VCHR.BUSINESS_UNIT = V.BUSINESS_UNIT
    AND VCHR.VOUCHER_ID = V.VOUCHER_ID 
    AND X.BUSINESS_UNIT = V.BUSINESS_UNIT
    AND X.VOUCHER_ID = V.VOUCHER_ID
    AND X.VOUCHER_LINE_NUM = V.VOUCHER_LINE_NUM
    AND V.BUSINESS_UNIT_PO LIKE '6%'
ORDER BY 1,2,3,4;

--Verify
SELECT * FROM PS_PO_MTCH_LN_VW WHERE BUSINESS_UNIT = '615UU' AND PO_ID = '0000001028' AND LINE_NBR = 7
SELECT * FROM PS_PO_LINE_MATCHED WHERE BUSINESS_UNIT = '615UU' AND PO_ID = '0000001028' AND LINE_NBR = 7
SELECT * FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '615UU' AND PO_ID = '0000001028'

--Identify locked objects in the DB
select do.owner, do.object_name, do.object_type, dl.session_id, dl.blocking_others, vs.blocking_session,  
         vs.serial#, vs.program, vs.machine, vs.osuser, vs.username, vs.status, vs.server, vs.client_info, vs.logon_time,
         vs.blocking_session_status, vs.client_identifier, vs.blocking_instance, vs.event
from dba_locks dl,dba_objects do,v$session vs
where do.object_name LIKE'%PS_%'
   and do.object_type = 'TABLE' 
   and dl.lock_id1 = do.object_id 
   and vs.sid = dl.session_id
   --and vs.client_identifier like '%hiromi%'
ORDER BY vs.logon_time DESC;

--identify the SQLs for the session in question
SELECT * FROM V$SQLAREA S, V$SESSION V 
WHERE S.ADDRESS = V.SQL_ADDRESS
AND SID IN (799)
ORDER BY FIRST_LOAD_TIME DESC;

--This is a sample query that ties the OS PID and PeopleSoft CLIENT_INFO to the process connected to the Oracle database
select p.spid, substr(s.osuser,1,10) osuser, substr(s.username,1,8) username, substr(s.program,1,24) program, substr(s.client_info,1,60) ClientInfo
from v$session s, v$process p
where s.paddr=p.addr
    and s.osuser is not null
order by s.osuser;

select p.spid, substr(s.osuser,1,10) osuser, substr(s.username,1,8) username, substr(s.program,1,24) program, substr(s.client_info,1,60) ClientInfo, substr(s.module,1,48) module, substr(s.action,1,32) action
from v$session s, v$process p
where s.paddr=p.addr
    and s.osuser is not null
order by s.osuser;

--ORA-00054 Resource Busy and acquire with NOWAIT
SELECT O.OBJECT_NAME, S.SID, S.SERIAL#, P.SPID, S.PROGRAM, S.USERNAME, S.MACHINE, S.PORT, S.LOGON_TIME, SQ.SQL_FULLTEXT 
FROM V$LOCKED_OBJECT L, DBA_OBJECTS O, V$SESSION S, 
V$PROCESS P, V$SQL SQ 
WHERE L.OBJECT_ID = O.OBJECT_ID 
AND L.SESSION_ID = S.SID AND S.PADDR = P.ADDR 
AND S.SQL_ADDRESS = SQ.ADDRESS;

--New Trial Balance
--OLD COPY
SELECT T.ACCOUNT, T.DESCR, SUM(OPN_BAL) "Opening Balance", SUM(T.DEBIT) "Debits", SUM(T.CREDIT) "Credits", SUM(T.TOTAL) "Total", SUM(T.CLS_BAL) "Closing Balance"
FROM
(SELECT X.ACCOUNT, X.DESCR, 0.0 AS OPN_BAL, 
            SUM(X.DEBIT) DEBIT, SUM(X.CREDIT) CREDIT,
            SUM(X.POSTED_BASE_AMT) TOTAL,
            (SUM(X.POSTED_BASE_AMT) + SUM(X.PERIOD_0)) AS CLS_BAL
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
 , CASE WHEN SUM(ST.POSTED_BASE_AMT) > 0.00 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEBIT
 , CASE WHEN SUM(ST.POSTED_BASE_AMT) < 0.00 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS CREDIT
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12)
    AND ST.FISCAL_YEAR = 2012
    AND ET.ACCOUNT_TYPE IN ('E', 'R')
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.ACCOUNT, X.DESCR
UNION
SELECT X.ACCOUNT, X.DESCR, SUM(X.PERIOD_0) AS OPN_BAL, 
            0.0 DEBIT, 0.0 CREDIT,
            SUM(X.POSTED_BASE_AMT) AS TOTAL,
            (SUM(X.POSTED_BASE_AMT) + SUM(X.PERIOD_0)) AS CLS_BAL
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
   CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
 , CASE WHEN SUM(ST.POSTED_BASE_AMT) > 0.00 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEBIT
 , CASE WHEN SUM(ST.POSTED_BASE_AMT) < 0.00 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS CREDIT
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 0 AND 12)
    AND ST.FISCAL_YEAR = 2012
    AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.ACCOUNT, X.DESCR) T
GROUP BY T.ACCOUNT, T.DESCR
ORDER BY T.ACCOUNT, T.DESCR;

--New Trial Balance
--Version 1
SELECT T.ACCOUNT, T.DESCR, SUM(OPN_BAL) "Opening Balance", SUM(T.YTD_BAL) "Movement", SUM(T.TOTAL) "Closing Balance"
FROM
(SELECT X.ACCOUNT, X.DESCR,
            0.0 AS OPN_BAL, SUM(X.PERIOD_YTD) AS YTD_BAL, SUM(X.POSTED_BASE_AMT) AS TOTAL--, 
            --(SUM(X.POSTED_BASE_AMT) + SUM(X.PERIOD_0)) AS CLS_BAL
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
   CASE WHEN ST.ACCOUNTING_PERIOD = 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
 , CASE WHEN ST.ACCOUNTING_PERIOD > 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_YTD
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12)
    AND ST.FISCAL_YEAR = 2012
    AND ET.ACCOUNT_TYPE IN ('E', 'R')
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.ACCOUNT, X.DESCR
UNION
SELECT X.ACCOUNT, X.DESCR,             
            SUM(X.PERIOD_0) AS OPN_BAL, SUM(X.PERIOD_YTD) AS YTD_BAL, SUM(X.POSTED_BASE_AMT) AS TOTAL--,
           -- (SUM(X.POSTED_BASE_AMT) + SUM(X.PERIOD_0)) AS CLS_BAL
FROM (
SELECT ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
   CASE WHEN ST.ACCOUNTING_PERIOD = 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
 , CASE WHEN ST.ACCOUNTING_PERIOD > 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_YTD
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 0 AND 12)
    AND ST.FISCAL_YEAR = 2012
    AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')
GROUP BY ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ST.PROJECT_ID, ST.CHARTFIELD2, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.ACCOUNT, X.DESCR) T
GROUP BY T.ACCOUNT, T.DESCR
ORDER BY T.ACCOUNT, T.DESCR;

--UNU New TB
--Latest Version
SELECT X.ACCOUNT, X.DESCR, SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.DEBIT) AS "Debits", SUM(X.CREDIT) AS "Credits",
            SUM(X.PERIOD_YTD) AS "Movement", SUM(X.POSTED_BASE_AMT) AS "Closing Balance"           
FROM (SELECT ST.ACCOUNT, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
     CASE WHEN ST.ACCOUNTING_PERIOD = 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
   , CASE WHEN ST.ACCOUNTING_PERIOD > 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_YTD
   , CASE WHEN (SUM(ST.POSTED_BASE_AMT) > 0.00 AND ST.ACCOUNTING_PERIOD > 0) THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEBIT
   , CASE WHEN (SUM(ST.POSTED_BASE_AMT) < 0.00 AND ST.ACCOUNTING_PERIOD > 0) THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS CREDIT
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'    
    AND ST.FISCAL_YEAR = 2012
    AND ((ST.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND ET.ACCOUNT_TYPE IN ('E', 'R')) OR (ST.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')))        
    AND ST.STATISTICS_CODE = ' '
    --AND (ST.ACCOUNTING_PERIOD BETWEEN 0 AND 12)
    --AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')    
GROUP BY ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.ACCOUNT, X.DESCR
ORDER BY X.ACCOUNT, X.DESCR;

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00012299'
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00012299'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 28324702
SELECT * FROM PSPRCSRQSTARCH WHERE PRCSINSTANCE = 28324702
SELECT POSTING_METHOD_AP FROM PS_INSTALLATION_AP

--VCHR_UNBAL_VW
--Unbalanced Accounting Entries
SELECT DISTINCT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.INVOICE_DT, A.VENDOR_SETID, B.VENDOR_NAME_SHORT, A.VENDOR_ID, B.NAME1, A.BASE_CURRENCY, C.PROCESS_INSTANCE 
FROM PS_VOUCHER A, PS_VENDOR B, PS_PST_UNBALANCED C 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID 
    AND A.ENTRY_STATUS IN ('P','R') 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.VOUCHER_ID = C.VOUCHER_ID
    AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 1,2;

SELECT ENTRY_STATUS, IN_PROCESS_FLG, BUDGET_HDR_STATUS, BUDGET_MISC_STATUS, DOC_TOL_HDR_STATUS, PROCESS_MAN_CLOSE, POST_STATUS_AP, VCHR_LINE_APPR, 
            POST_VOUCHER, APPR_STATUS, MATCH_STATUS_VCHR, A.* 
FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010416';

--VCHR_PSTBL_VW
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.BUSINESS_UNIT_PO AS BU_PO, A.PO_ID, B.VENDOR_NAME_SHORT, B.NAME1, A.INVOICE_DT, 
            A.TXN_CURRENCY_CD, A.GROSS_AMT, A.GROSS_AMT_BSE, A.BASE_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.OPRID_LAST_UPDT
FROM PS_VOUCHER A, PS_VENDOR B, PS_BUS_UNIT_TBL_AP C 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.ENTRY_STATUS = 'P' 
    AND A.IN_PROCESS_FLG = 'N' 
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_MISC_STATUS = 'V' 
    AND A.DOC_TOL_HDR_STATUS = 'V' 
    AND (A.PROCESS_MAN_CLOSE = 'Y' OR A.POST_STATUS_AP = 'U') 
    AND A.VCHR_LINE_APPR IN ('0', '1') 
    AND A.POST_VOUCHER IN ('D', 'P') 
    AND (A.APPR_STATUS = 'A' OR (A.APPR_STATUS <> 'A' AND C.POST_UNAPPRV_FLG = 'Y')) 
    AND ((C.POST_UNMATCH_FLG = 'Y') OR (C.POST_UNMATCH_FLG = 'N' AND (A.MATCH_STATUS_VCHR = 'N' OR A.MATCH_STATUS_VCHR = 'M') ))
ORDER BY 1,2;

SELECT BUSINESS_UNIT, PO_ID, BASE_CURRENCY, SUM(GROSS_AMT_BSE)
FROM PS_VOUCHER
WHERE BUSINESS_UNIT = '614UU'    
    --AND BUDGET_HDR_STATUS = 'V'
    AND VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND ENTRY_STATUS NOT IN ('X','T')
    AND ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND POST_VOUCHER NOT IN ('N')
    AND POST_STATUS_AP NOT IN ('N')
GROUP BY BUSINESS_UNIT, PO_ID, BASE_CURRENCY

SELECT DL.BUSINESS_UNIT, DL.PO_ID, DL.CURRENCY_CD, SUM(MONETARY_AMOUNT)
FROM PS_DISTRIB_LINE DL, PS_VOUCHER V
WHERE V.BUSINESS_UNIT = DL.BUSINESS_UNIT
    AND V.VOUCHER_ID = DL.VOUCHER_ID
    AND V.VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND V.ENTRY_STATUS NOT IN ('X','T')
    AND DL.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND V.POST_VOUCHER NOT IN ('N')
    AND V.POST_STATUS_AP NOT IN ('N')
    AND V.BUSINESS_UNIT = '614UU'
GROUP BY DL.BUSINESS_UNIT, DL.PO_ID, DL.CURRENCY_CD

--Amount comparison PO Vouchers Vs Non-PO Vouchers
SELECT BUSINESS_UNIT, BASE_CURRENCY, SUM(GROSS_AMT_BSE) AS NON_PO_AMT, 0.00 AS PO_AMT
FROM PS_VOUCHER
WHERE BUSINESS_UNIT = '622UU'
    AND BUSINESS_UNIT_PO = ' '
    AND PO_ID = ' '
    --AND BUDGET_HDR_STATUS = 'V'
    AND VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND ENTRY_STATUS NOT IN ('X','T')
    AND ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND POST_VOUCHER NOT IN ('N')
    AND POST_STATUS_AP NOT IN ('N')
GROUP BY BUSINESS_UNIT, BASE_CURRENCY
--ORDER BY 1,2
UNION
SELECT BUSINESS_UNIT, BASE_CURRENCY, 0.00 AS NON_PO_AMT, SUM(GROSS_AMT_BSE) AS PO_AMT
FROM PS_VOUCHER
WHERE BUSINESS_UNIT = '622UU'
    AND BUSINESS_UNIT_PO <> ' '
    AND PO_ID <> ' '
    --AND BUDGET_HDR_STATUS = 'V'
    AND VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND ENTRY_STATUS NOT IN ('X','T')
    AND ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND POST_VOUCHER NOT IN ('N')
    AND POST_STATUS_AP NOT IN ('N')
GROUP BY BUSINESS_UNIT, BASE_CURRENCY
ORDER BY 1,2

--Another Version of PO vs Non-PO comparison
SELECT BUSINESS_UNIT, BASE_CURRENCY, SUM(NON_PO_AMT), SUM(PO_AMT)
FROM (
SELECT BUSINESS_UNIT, BASE_CURRENCY
,CASE WHEN PO_ID = ' ' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS NON_PO_AMT 
,CASE WHEN PO_ID <> ' ' THEN SUM(GROSS_AMT_BSE) ELSE 0 END AS PO_AMT
FROM PS_VOUCHER
WHERE BUSINESS_UNIT = '614UU'    
    --AND BUDGET_HDR_STATUS = 'V'
    AND VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND ENTRY_STATUS NOT IN ('X','T')
    AND ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND POST_VOUCHER NOT IN ('N')
    AND POST_STATUS_AP NOT IN ('N', 'U')
GROUP BY BUSINESS_UNIT, BASE_CURRENCY, PO_ID) X
GROUP BY X.BUSINESS_UNIT, X.BASE_CURRENCY
ORDER BY 1,2

--Better Version of PO vs Non-PO comparison
SELECT X.BUSINESS_UNIT, X.CURRENCY_CD, SUM(NON_PO_AMT), SUM(PO_AMT)
FROM (
SELECT DL.BUSINESS_UNIT, DL.CURRENCY_CD
,CASE WHEN DL.PO_ID = ' ' THEN SUM(MONETARY_AMOUNT) ELSE 0 END AS NON_PO_AMT 
,CASE WHEN DL.PO_ID <> ' ' THEN SUM(MONETARY_AMOUNT) ELSE 0 END AS PO_AMT
FROM PS_DISTRIB_LINE DL, PS_VOUCHER V
WHERE V.BUSINESS_UNIT = DL.BUSINESS_UNIT
    AND V.VOUCHER_ID = DL.VOUCHER_ID
    AND V.VOUCHER_STYLE NOT IN ('TMPL','CORR','JRNL')
    AND V.ENTRY_STATUS NOT IN ('X','T')
    AND V.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND V.POST_VOUCHER NOT IN ('N')
    AND V.POST_STATUS_AP NOT IN ('N')
    AND V.BUSINESS_UNIT LIKE '6%'
GROUP BY DL.BUSINESS_UNIT, DL.PO_ID, DL.CURRENCY_CD) X
GROUP BY X.BUSINESS_UNIT, X.CURRENCY_CD
ORDER BY 1,2;

--All users grouped by state
select account_status, listagg(username, ',') within group (order by username) users
from dba_users
group by account_status;

--LISTAGG Funtion for security information
SELECT ROLEUSER, LISTAGG(ROLENAME, '|') WITHIN GROUP (ORDER BY ROLEUSER) ROLENAME 
FROM PSROLEUSER 
WHERE ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
GROUP BY ROLEUSER
ORDER BY 1;

SELECT OPRID, LISTAGG(CLASSID, '|') WITHIN GROUP (ORDER BY OPRID, CLASSID) ROLENAME
FROM PS_USERCLASS_VW
WHERE OPRID = 'jenna.kua'
GROUP BY OPRID
ORDER BY 1;

--LISTAGG Function for OPRALIASTYPE
--ARGUS has custom OPRALIASTYPE
SELECT A.OPRID, A.OPRDEFNDESC, A.EMAILID, LISTAGG(B.OPRALIASVALUE, '|') WITHIN GROUP (ORDER BY B.OPRALIASTYPE) OPRALIAS 
--B.OPRALIASVALUE
FROM PSOPRDEFN A, PSOPRALIAS B
WHERE A.OPRID = B.OPRID
    --AND B.OPRALIASTYPE = 'A02'
    --AND B.OPRALIASVALUE = 'UNUNI'
    --AND A.OPRID = 'prakash.prashant'
    AND A.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
GROUP BY A.OPRID, A.OPRDEFNDESC, A.EMAILID
ORDER BY 1;

--XMLAGG for Security
SELECT ROLEUSER, XMLAGG(XMLELEMENT(E, ROLENAME || ', ')).EXTRACT('//text()') AS ROLENAME
FROM PSROLEUSER
WHERE ROLEUSER = 'prakash.prashant'
GROUP BY ROLEUSER;

--Takes way longer than LISTAGG, need to analyse Explain Plan
SELECT ROLEUSER, XMLAGG(XMLELEMENT(E, ROLENAME || ', ')).EXTRACT('//text()') AS ROLENAME 
FROM PSROLEUSER 
WHERE ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
GROUP BY ROLEUSER
ORDER BY 1;

SELECT * FROM PS_USERCLASS_VW WHERE OPRID = 'jenna.kua'

SELECT TO_CLOB(LPAD('x',4000,'x')) || LPAD('x',4000,'x')  || LPAD('x',4000,'x') 
FROM DUAL

--List users by ORG
SELECT DISTINCT B.OPRID, B.OPRDEFNDESC, A.EMAILTYPE, SUBSTR(A.EMAILID, instr(A.EMAILID, '@')+1) AS ORG       
FROM PSUSEREMAIL A, PSOPRDEFN B 
WHERE A.OPRID = B.OPRID
  AND A.EMAILID LIKE '%unu.edu' 
  --AND A.PRIMARY_EMAIL = 'Y'
  --AND B.ACCTLOCK = 0
ORDER BY 4

SELECT DISTINCT PRCSJOBNAME, PRCSTYPE, PRCSNAME, MAINJOBNAME, RUNCNTLID, SCHEDULENAME FROM PSPRCSRQST WHERE OPRID = 'CMBATCH'

--DEPOSIT CONTROL
SELECT 'DEP_CNTRL_2012', A.ENTRY_DT, A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.DEPOSIT_TYPE, E.DESCRSHORT, A.BANK_CD, A.BANK_ACCT_KEY, 
            A.BAL_STATUS, (SELECT XLATSHORTNAME FROM PSXLATITEM D WHERE D.FIELDNAME = 'BAL_STATUS' AND D.FIELDVALUE = A.BAL_STATUS)  AS Bal,
            A.DEP_POST_STATUS, (SELECT XLATSHORTNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'DEP_POST_STATUS' AND C.FIELDVALUE = A.DEP_POST_STATUS)  AS Post_Status,
            A.CONTROL_AMT, A.ENTERED_AMT, A.POSTED_TOTAL, A.MISC_DST_TOTAL AS JOURNALLED_AMT,
            A.ACCOUNTING_DT, A.CONTROL_CURRENCY, A.PYMT_RATE_MULT, A.PYMT_RATE_DIV, B.BASE_CURRENCY,
            NVL(ROUND(((A.CONTROL_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, NVL(ROUND(((A.ENTERED_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((A.POSTED_TOTAL * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, NVL(ROUND(((A.MISC_DST_TOTAL * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE
FROM PS_DEPOSIT_CONTROL A, PS_BU_CRTCUR_VW_AR B, PS_DEPOST_TYPE_TBL E
WHERE A.DEPOSIT_BU = '600UU'
  AND A.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
  AND A.DEPOSIT_BU = B.BUSINESS_UNIT
  AND E.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = B.BUSINESS_UNIT AND RECNAME='DEPOST_TYPE_TBL')
  AND E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
  AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPOST_TYPE_TBL WHERE SETID = E.SETID AND DEPOSIT_TYPE = E.DEPOSIT_TYPE AND EFF_STATUS = 'A' AND EFFDT <= SYSDATE)
ORDER BY B.BASE_CURRENCY, A.ENTRY_DT, A.DEPOSIT_BU, A.DEPOSIT_ID;

--DEPOSIT CONTROL & CUST_ID
SELECT C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY') AS YEAR,       
       NVL(ROUND(SUM((P.PAYMENT_AMT * P.PYMT_RATE_MULT)/P.PYMT_RATE_DIV), 2), 0) AS PYMNT_AMT, P.PAYMENT_CURRENCY, SUM(D.ENTERED_AMT)       
FROM PS_PAYMENT P, PS_ITEM_ACTIVITY I, PS_CUSTOMER C, PS_DEPOSIT_CONTROL D
WHERE P.DEPOSIT_BU = I.DEPOSIT_BU 
  AND P.DEPOSIT_ID = I.DEPOSIT_ID  
  AND P.PAYMENT_SEQ_NUM = I.PAYMENT_SEQ_NUM  
  AND I.DEPOSIT_BU <> ' ' 
  AND I.DEPOSIT_BU = D.DEPOSIT_BU
  AND I.DEPOSIT_ID = D.DEPOSIT_ID  
  AND C.SETID = 'UNUNI'
  --AND D.DEP_POST_STATUS = 'C'
  AND I.CUST_ID = C.CUST_ID  
  AND I.BUSINESS_UNIT = '600UU'
  --AND I.ENTRY_TYPE IN ('PY','WO')  
  --AND I.CUST_ID = '10132'  
  AND I.CUST_ID = '10555'  
GROUP BY C.NAME1, TO_CHAR(P.ACCOUNTING_DT, 'YYYY'), P.PAYMENT_CURRENCY
ORDER BY 1,2,3

--DEPOSIT CONTROL & CUST_ID
SELECT DISTINCT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, C.CUST_ID, C.NAME1, B.OPRID, B.ASSN_OPRID, A.PAYMENT_STATUS, B.DEP_POST_STATUS,
            A.ACCOUNTING_DT, A.ENTRY_DT, B.PAY_WS_TYPE, A.PP_SW, B.BANK_SETID, B.BANK_CD, B.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.GROUP_ID, 
            A.PAYMENT_AMT, A.PAYMENT_CURRENCY,
            NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS PAYMENT_BASE, 
            A.UNPOST_REASON, B.DEPOSIT_TYPE, 
            B.CONTROL_AMT, B.ENTERED_AMT, B.POSTED_TOTAL, B.MISC_DST_TOTAL AS JOURNALLED_AMT,
            B.PYMT_RATE_MULT, B.PYMT_RATE_DIV,
            NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, 
            NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, 
            NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE,
            B.DEPOSIT_STATUS, D.OPEN_ITEM_KEY,
            J.JOURNAL_ID, J.JOURNAL_DATE, J.FISCAL_YEAR, J.ACCOUNTING_PERIOD, J.SOURCE, J.JRNL_HDR_STATUS, J.JRNL_TOTAL_DEBITS, J.JRNL_TOT_CREDITS, J.PROCESS_INSTANCE            
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B,  PS_PAYMENT_ID_CUST C, PS_PAY_MISC_DST D, PS_JRNL_HEADER J
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND A.DEPOSIT_BU = D.DEPOSIT_BU
    AND A.DEPOSIT_ID = D.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM
    AND A.DEPOSIT_BU = C.DEPOSIT_BU
    AND A.DEPOSIT_ID = C.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
    AND D.BUSINESS_UNIT_GL = J.BUSINESS_UNIT (+)
    AND D.JOURNAL_ID = J.JOURNAL_ID (+)
    AND A.DEPOSIT_BU = '600UU'
    AND TO_CHAR(B.ENTRY_DT, 'YYYY-MM-DD') >= '2012-01-01'
    AND TO_CHAR(B.ENTRY_DT, 'YYYY-MM-DD') <= '2012-12-31'
    --AND A.DEPOSIT_ID = 3135
ORDER BY A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM

--AR Deposits by selected date
--New Version    
SELECT B.DEPOSIT_BU, B.DEPOSIT_TYPE, B.RECEIVED_DT, B.DEPOSIT_ID, B.ACCOUNTING_DT, A.PAYMENT_CURRENCY, A.PAYMENT_AMT, 
            NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS PAYMENT_BASE,
            B.CONTROL_AMT, B.ENTERED_AMT, B.POSTED_TOTAL, B.MISC_DST_TOTAL AS JOURNALLED_AMT,
            B.PYMT_RATE_MULT, B.PYMT_RATE_DIV,
            NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, 
            NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, 
            NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE, 
            B.ENTRY_DT, C.CUST_ID, C.NAME1, B.POST_DT, B.BANK_CD, B.BANK_ACCOUNT_NUM, A.PAYMENT_ID, A.PAYMENT_STATUS, C.REMIT_FROM_SETID, C.REMIT_FROM_CUST_ID
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B, PS_PAYMENT_ID_CUST C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND B.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND A.DEPOSIT_BU = '600UU'
    AND A.DEPOSIT_BU = C.DEPOSIT_BU
    AND A.DEPOSIT_ID = C.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM    
ORDER BY 1, 4, 11

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3164'
SELECT * FROM PS_PAYMENT_ID_CUST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3164'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3164'

SELECT DEPOSIT_BU, DEPOSIT_ID, BANK_ACCOUNT_NUM, BNK_ID_NBR,
            SUM(PAYMENT_AMT) AS PAYMENT_AMT,  PAYMENT_CURRENCY, SUM(NVL(ROUND(((PAYMENT_AMT * PYMT_RATE_MULT)/PYMT_RATE_DIV), 2), 0)) AS PAYMENT_BASE
FROM PS_PAYMENT 
WHERE DEPOSIT_BU = '600UU' 
    AND DEPOSIT_ID = '3164'
GROUP BY DEPOSIT_BU, DEPOSIT_ID, BANK_ACCOUNT_NUM, BNK_ID_NBR, PAYMENT_CURRENCY

--Testing Latest DEPOSIT_CONTROL & CUST_ID Report
--WITH PS_PAYMENT_ID_CUST
SELECT B.DEPOSIT_BU, B.DEPOSIT_ID, C.CUST_ID, C.NAME1, B.BANK_SETID, B.BANK_CD, A.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.PAYMENT_STATUS,
            SUM(A.PAYMENT_AMT) AS PAYMENT_AMT,  A.PAYMENT_CURRENCY, SUM(NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0)) AS PAYMENT_BASE,
            --SUM(B.CONTROL_AMT) AS CONTROL_AMT, SUM(B.ENTERED_AMT) AS ENTERED_AMT, SUM(B.POSTED_TOTAL) AS POSTED_TOTAL, SUM(B.MISC_DST_TOTAL) AS JOURNALLED_AMT,
            NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, 
            NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, 
            NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B, PS_PAYMENT_ID_CUST C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND A.DEPOSIT_BU = C.DEPOSIT_BU
    AND A.DEPOSIT_ID = C.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
    AND B.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND B.DEPOSIT_BU = '600UU'
    AND B.DEPOSIT_ID = '3719'
GROUP BY B.DEPOSIT_BU, B.DEPOSIT_ID, C.CUST_ID, C.NAME1, B.BANK_SETID, B.BANK_CD, A.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.PAYMENT_STATUS, A.PAYMENT_CURRENCY,               
               NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0), NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0),
               NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0), NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0)
ORDER BY 1,2,3;

--WITHOUT PS_PAYMENT_ID_CUST
SELECT B.DEPOSIT_BU, B.DEPOSIT_ID, B.BANK_SETID, B.BANK_CD, A.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.PAYMENT_STATUS,
            SUM(A.PAYMENT_AMT) AS PAYMENT_AMT,  A.PAYMENT_CURRENCY, SUM(NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0)) AS PAYMENT_BASE,
            --SUM(B.CONTROL_AMT) AS CONTROL_AMT, SUM(B.ENTERED_AMT) AS ENTERED_AMT, SUM(B.POSTED_TOTAL) AS POSTED_TOTAL, SUM(B.MISC_DST_TOTAL) AS JOURNALLED_AMT,
            NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, 
            NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, 
            NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID    
    AND B.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND B.DEPOSIT_BU = '600UU'
    AND B.DEPOSIT_ID = '3719'
GROUP BY B.DEPOSIT_BU, B.DEPOSIT_ID, B.BANK_SETID, B.BANK_CD, A.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, A.PAYMENT_STATUS, A.PAYMENT_CURRENCY,               
               NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0), NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0),
               NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0), NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0)
ORDER BY 1,2,3;

--Item Activity From Payment
--Deposit and Item Activity
SELECT DISTINCT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.BUSINESS_UNIT, A.CUST_ID, A.POST_DT, B.PAY_WS_TYPE, A.ACCOUNTING_DT, A.GROUP_BU, A.GROUP_ID,
            A.ENTRY_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.PAYMENT_AMT, A.PAYMENT_CURRENCY, A.ENTRY_AMT_BASE, A.CURRENCY_CD, A.ENTRY_USE_ID, A.GROUP_TYPE, A.POSTED_PI, 
            A.ARRE_STATUS,
            B.BANK_SETID, B.BANK_CD, B.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, B.BAL_STATUS, B.DEP_POST_STATUS, B.ENTERED_AMT, B.POSTED_TOTAL, B.RECON_STATUS 
FROM PS_ITEM_ACTIVITY A, PS_DEPOSIT_CONTROL B 
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU 
    AND A.DEPOSIT_ID = B.DEPOSIT_ID 
    AND A.DEPOSIT_BU <> ' '
    AND A.DEPOSIT_BU = '600UU'
    AND A.DEPOSIT_ID = '3164'
ORDER BY 1,2,3

--Customer and Item Activity
SELECT A.DEPOSIT_ID, A.DEPOSIT_BU, A.PAYMENT_SEQ_NUM, A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, C.NAME1, C.SPNSR_TYPE, A.ENTRY_TYPE, A.ENTRY_REASON, 
            A.PAYMENT_AMT, A.PAYMENT_CURRENCY, 
            A.ENTRY_AMT, A.ENTRY_CURRENCY, A.ENTRY_AMT_BASE, A.CURRENCY_CD, A.DOCUMENT, A.PO_REF, A.BILL_OF_LADING, A.CONSOL_INVOICE, A.PAYMENT_ID 
FROM PS_CUSTOMER C, PS_ITEM_ACTIVITY A 
WHERE DEPOSIT_BU <> ' ' 
    AND C.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME='CUSTOMER') 
    AND C.CUST_ID=A.CUST_ID
    AND A.DEPOSIT_BU = '600UU'
    AND A.DEPOSIT_ID = '3164'

--Pending Payments Detail View
SELECT * FROM PS_CUST_PND_PYD_VW WHERE BUSINESS_UNIT LIKE '6%'
ORDER BY 1,2,3,4,5 

SELECT * FROM PS_ITEM_ACTIVITY WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3164'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '3164'
SELECT * FROM PS_CUSTOMER WHERE SETID = 'UNUNI' AND CUST_ID = '10004'

--Item Activity, Customer and Deposit
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, B.DEPOSIT_BU, B.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.ENTRY_TYPE, A.BUSINESS_UNIT, A.CUST_ID, C.NAME1, C.SPNSR_TYPE, 
            A.POST_DT, B.PAY_WS_TYPE, A.ACCOUNTING_DT, B.ENTRY_DT, A.GROUP_BU, A.GROUP_ID,
            A.ENTRY_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.PAYMENT_AMT, A.PAYMENT_CURRENCY, NVL(ROUND(((A.PAYMENT_AMT * A.PYMT_RATE_MULT)/A.PYMT_RATE_DIV), 2), 0) AS PAYMENT_BASE, 
            A.ENTRY_AMT_BASE, A.CURRENCY_CD, A.ENTRY_USE_ID, A.GROUP_TYPE, A.POSTED_PI, 
            A.ARRE_STATUS,
            B.BANK_SETID, B.BANK_CD, B.BNK_ID_NBR, B.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, B.BAL_STATUS, B.DEP_POST_STATUS, B.ENTERED_AMT, B.POSTED_TOTAL, B.RECON_STATUS,
            NVL(ROUND(((B.CONTROL_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS CONTROL_BASE, 
            NVL(ROUND(((B.ENTERED_AMT * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS ENTERED_BASE,
            NVL(ROUND(((B.POSTED_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS POSTED_TOTAL_BASE, 
            NVL(ROUND(((B.MISC_DST_TOTAL * B.PYMT_RATE_MULT)/B.PYMT_RATE_DIV), 2), 0) AS JOURNALLED_AMT_BASE
FROM PS_ITEM_ACTIVITY A, PS_DEPOSIT_CONTROL B, PS_CUSTOMER C 
WHERE B.DEPOSIT_BU = A.DEPOSIT_BU (+) 
    AND B.DEPOSIT_ID = A.DEPOSIT_ID (+)
    --AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME='CUSTOMER')
    AND C.SETID (+) = 'UNUNI'
    AND C.CUST_ID (+) = A.CUST_ID
    AND B.DEPOSIT_BU <> ' '
    AND B.DEPOSIT_BU = '613UU'
    AND B.DEPOSIT_ID IN ('196', '197', '200', '201')
    --AND A.GROUP_BU = '613UU'
    --AND A.GROUP_ID = '177'
    --AND A.ENTRY_TYPE = 'PY'
ORDER BY 1,2,3,4,6;

--AR20001P
--Point in Time - Deposit Control
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.BUSINESS_UNIT, A.DEPOSIT_TYPE, MAX(E.DESCRSHORT) AS "Deposit Type", 
            MAX(A.BNK_ID_NBR) AS "Max Bank ID", A.BANK_ACCT_KEY AS ACCOUNT, A.BANK_ACCOUNT_NUM AS "Account #", 
            MAX(A.BAL_STATUS) AS "Max Balance", A.DEP_POST_STATUS AS "Posted", MAX(A.CONTROL_AMT) AS "Max Control", A.BANK_CD AS "Bank", 
            MAX(A.ENTERED_AMT) AS "Max Entered", MAX(A.POSTED_TOTAL) AS "Max Posted", MAX(A.MISC_DST_TOTAL) AS "Max Journalled", 
            A.ENTRY_DT AS "Entered", A.ACCOUNTING_DT, MAX(A.GL_DISTRIB_STATUS) AS "Max Status", A.DEPOSIT_STATUS AS "Status", A.CONTROL_CURRENCY, A.FORMAT_CURRENCY, 
            A.PYMT_RATE_MULT, MAX(A.PYMT_RATE_DIV) AS "Max Pymt Rate Dvsr", 
            MAX(A.PYMT_RT_TYPE) AS "Max Rate Type", C.BUSINESS_UNIT_GL, MAX(D.BASE_CURRENCY) AS "Max Base Curr", 
            CASE  A.CONTROL_CURRENCY WHEN ' ' THEN SUM(ROUND((((((G.PAYMENT_AMT) / (G.PYMT_RATE_DIV)))) * (G.PYMT_RATE_MULT)),2))
            ELSE (ROUND((((((MAX(A.ENTERED_AMT)) / (MAX(A.PYMT_RATE_DIV))))) * (A.PYMT_RATE_MULT)),2)) 
            END AS "Entered Amount in Base Curr",  
            ROUND((((((MAX(A.CONTROL_AMT)) / (MAX(A.PYMT_RATE_DIV))))) * (A.PYMT_RATE_MULT)),2) AS "Control Amount in Base Curr", 
            CASE  A.CONTROL_CURRENCY WHEN ' ' THEN SUM(
                                                                                       CASE  G.PAYMENT_STATUS 
                                                                                       WHEN 'C' THEN (ROUND((((((G.PAYMENT_AMT) / (G.PYMT_RATE_DIV)))) * (G.PYMT_RATE_MULT)),2))
                                                                                       ELSE 0 
                                                                                       END )
            ELSE (ROUND((((((MAX( A.POSTED_TOTAL)) / (MAX( A.PYMT_RATE_DIV))))) * (A.PYMT_RATE_MULT)),2)) 
            END AS "Posted Total in Base Currency", 
            CASE  A.CONTROL_CURRENCY WHEN ' ' THEN SUM(
                                                                                       CASE  G.MISC_DST_BAL 
                                                                                       WHEN 'C' THEN (ROUND((((((G.PAYMENT_AMT) / (G.PYMT_RATE_DIV)))) * (G.PYMT_RATE_MULT)),2))
                                                                                       ELSE 0 
                                                                                       END )
            ELSE (ROUND(((((( MAX(A.MISC_DST_TOTAL)) / (MAX(A.PYMT_RATE_DIV))))) * (A.PYMT_RATE_MULT)),2)) 
            END AS "Misc. Dist. Total in Base Curr"                        
FROM PS_DEPOSIT_CONTROL A, PS_BUS_UNIT_TBL_AR C, PS_BUS_UNIT_TBL_GL D, PS_DEPOST_TYPE_TBL E, PS_SET_CNTRL_REC E2, PS_PAYMENT G
WHERE E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
    AND E2.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND E2.RECNAME = 'DEPOST_TYPE_TBL'
    AND E2.SETID = E.SETID
    AND (A.DEPOSIT_BU = G.DEPOSIT_BU AND A.DEPOSIT_ID = G.DEPOSIT_ID AND C.BUSINESS_UNIT = A.DEPOSIT_BU AND C.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_DEPOST_TYPE_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.DEPOSIT_TYPE = E_ED.DEPOSIT_TYPE AND E_ED.EFFDT <= A.ACCOUNTING_DT)
    AND E.DEPOSIT_TYPE = A.DEPOSIT_TYPE
    AND E.SETID = (SELECT B.SETID FROM PS_SET_CNTRL_REC B WHERE B.SETCNTRLVALUE = A.BUSINESS_UNIT AND B.RECNAME = 'DEPOST_TYPE_TBL')
    AND A.DEPOSIT_BU = '600UU'
    AND A.DEPOSIT_ID = '4145'
    AND A.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD'))
GROUP BY A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.BUSINESS_UNIT, A.DEPOSIT_TYPE, A.BANK_ACCT_KEY, A.BANK_ACCOUNT_NUM, A.DEP_POST_STATUS, A.BANK_CD,  
               A.ENTRY_DT, A.ACCOUNTING_DT, A.DEPOSIT_STATUS, A.CONTROL_CURRENCY, A.FORMAT_CURRENCY, A.PYMT_RATE_MULT, C.BUSINESS_UNIT_GL
ORDER BY 1,2;

--AR20003P
--Point in Time - Payment Summary
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.OPRID, A.ASSN_OPRID, A.ENTRY_DT, A.DEP_POST_STATUS, A.ACCOUNTING_DT, B.PAYMENT_SEQ_NUM, B.PAYMENT_ID, 
            B.PAYMENT_AMT, B.PAYMENT_STATUS, B.PAYMENT_CURRENCY, B.PYMT_RATE_MULT, B.PYMT_RATE_DIV, B.CURRENCY_CD,
            ROUND((((((B.PAYMENT_AMT) / ( B.PYMT_RATE_DIV)))) * ( B.PYMT_RATE_MULT)),2) AS "Payment Base"
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
    AND A.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND B.DEPOSIT_BU = '600UU'
    --AND B.DEPOSIT_ID = '4145'
ORDER BY 1,2;

--SELECT * FROM PS_AR_PYMNT_ITEM2 WHERE DEPOSIT_BU = '600UU'
--SELECT * FROM PS_AR_PYMNT_ITEM WHERE DEPOSIT_BU = '600UU'
--SELECT * FROM PS_PAYMENT_ID_ITEM WHERE DEPOSIT_BU = '600UU'

--AR20002P
--Point in Tm - Payment Detail
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, C.GROUP_BU, C.GROUP_ID, A.OPRID, A.ASSN_OPRID, A.CONTROL_CURRENCY, A.CONTROL_AMT, A.ENTRY_DT, A.ACCOUNTING_DT, B.PAYMENT_ID, B.PAYMENT_AMT, 
            B.PAYMENT_CURRENCY, B.PAYMENT_SEQ_NUM, B.PAYMENT_STATUS, 
            --J.PAYMENT_SEQ_NUM, J.ID_SEQ_NUM, J.ITEM, J.ITEM_LINE, J.PAY_AMT,
            F.ITEM, F.ITEM_LINE, F.ENTRY_AMT, F.ENTRY_CURRENCY, F.ENTRY_AMT_BASE,
            F.CURRENCY_CD, 
            --J.ITEM_AMT, J.BAL_AMT, J.BAL_CURRENCY, J.PAY_AMT_BASE, J.CURRENCY_CD, 
            F.ENTRY_TYPE, G.DESCRSHORT, F.ENTRY_REASON, F.CUST_ID, D.NAMESHORT, 
            F.POSTED_FLAG, ROUND((((((B.PAYMENT_AMT) / (B.PYMT_RATE_DIV)))) * (B.PYMT_RATE_MULT)),2) AS "Payment Base"
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_CUSTOMER D, PS_PENDING_ITEM F, PS_ENTRY_TYPE_TBL G, PS_GROUP_CONTROL C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID    
     AND D.SETID = (SELECT E.SETID FROM PS_SET_CNTRL_REC E WHERE E.SETCNTRLVALUE = F.BUSINESS_UNIT AND E.RECNAME = 'CUSTOMER')
     AND D.CUST_ID = F.CUST_ID
     AND G.ENTRY_TYPE = F.ENTRY_TYPE     
     AND G.SETID = (SELECT H.SETID FROM PS_SET_CNTRL_REC H WHERE H.SETCNTRLVALUE = F.BUSINESS_UNIT AND H.RECNAME = 'ENTRY_TYPE_TBL')
     AND F.GROUP_BU = C.GROUP_BU
     AND F.GROUP_ID = C.GROUP_ID
     AND C.DEPOSIT_BU = B.DEPOSIT_BU 
     AND C.DEPOSIT_ID = B.DEPOSIT_ID
     AND C.PAYMENT_SEQ_NUM = B.PAYMENT_SEQ_NUM
     AND B.DEPOSIT_BU LIKE '6%'
     --AND B.DEPOSIT_ID = '3164'
     AND A.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     --AND F.ENTRY_TYPE IN ('PY','WO')
     AND A.DEP_POST_STATUS = 'C'
--ORDER BY 1,2
UNION
SELECT K.DEPOSIT_BU, K.DEPOSIT_ID, ' ', ' ', K.OPRID, K.ASSN_OPRID, K.CONTROL_CURRENCY, K.CONTROL_AMT, K.ENTRY_DT, K.ACCOUNTING_DT, L.PAYMENT_ID, L.PAYMENT_AMT, 
            L.PAYMENT_CURRENCY, L.PAYMENT_SEQ_NUM, L.PAYMENT_STATUS, 
            --M.ID_SEQ_NUM, M.ITEM, M.ITEM_LINE, M.PAY_AMT, 0, ' ', 0, ' ', M.ITEM_AMT, M.BAL_AMT, M.BAL_CURRENCY, M.PAY_AMT_BASE, M.CURRENCY_CD, ' ', ' ', ' ', ' ', ' ',
            ' ', 0, 0.00, ' ', 0.00, ' ', ' ', ' ', ' ', ' ', ' ',  
            K.DEP_POST_STATUS, ROUND((((((L.PAYMENT_AMT) / (L.PYMT_RATE_DIV)))) * (L.PYMT_RATE_MULT)),2)
FROM PS_DEPOSIT_CONTROL K, PS_PAYMENT L, PS_PAYMENT_ID_ITEM M, PS_CUSTOMER N
WHERE K.DEPOSIT_BU = L.DEPOSIT_BU
     AND K.DEPOSIT_ID = L.DEPOSIT_ID
     AND L.DEPOSIT_BU = M.DEPOSIT_BU
     AND L.DEPOSIT_ID = M.DEPOSIT_ID
     AND L.PAYMENT_SEQ_NUM = M.PAYMENT_SEQ_NUM
     AND M.ITEM = ' '
     AND L.DEPOSIT_BU LIKE '6%'
     --AND L.DEPOSIT_ID = '3164'
     AND K.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND K.DEP_POST_STATUS <> 'C'
UNION
SELECT P.DEPOSIT_BU, P.DEPOSIT_ID, ' ', ' ', P.OPRID, P.ASSN_OPRID, P.CONTROL_CURRENCY, P.CONTROL_AMT, P.ENTRY_DT, P.ACCOUNTING_DT, Q.PAYMENT_ID, Q.PAYMENT_AMT, 
            Q.PAYMENT_CURRENCY, Q.PAYMENT_SEQ_NUM, Q.PAYMENT_STATUS, 
            ' ', 0, 0.00, ' ', 0.00, ' ', ' ', 
            T.DESCRSHORT, ' ', ' ', U.NAMESHORT, P.DEPOSIT_STATUS,
            ROUND((((((Q.PAYMENT_AMT) / (Q.PYMT_RATE_DIV)))) * (Q.PYMT_RATE_MULT)),2)            
FROM PS_DEPOSIT_CONTROL P, PS_PAYMENT Q, PS_PAYMENT_ID_ITEM S, PS_ENTRY_TYPE_TBL T, PS_CUSTOMER U
WHERE P.DEPOSIT_BU = Q.DEPOSIT_BU
     AND P.DEPOSIT_ID = Q.DEPOSIT_ID
     AND Q.DEPOSIT_BU = S.DEPOSIT_BU
     AND Q.DEPOSIT_ID = S.DEPOSIT_ID
     AND Q.PAYMENT_SEQ_NUM = S.PAYMENT_SEQ_NUM
     AND S.ITEM <> ''' '''
     AND Q.DEPOSIT_BU LIKE '6%'
     --AND Q.DEPOSIT_ID = '3164'
     AND P.ENTRY_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
     AND P.DEP_POST_STATUS <> 'C'
     AND T.ENTRY_TYPE = S.ENTRY_TYPE
     AND T.SETID = (SELECT V.SETID FROM PS_SET_CNTRL_REC V WHERE V.SETCNTRLVALUE = S.BUSINESS_UNIT AND V.RECNAME = 'ENTRY_TYPE_TBL')
     AND U.CUST_ID = S.CUST_ID
     AND U.SETID = (SELECT W.SETID FROM PS_SET_CNTRL_REC W WHERE W.SETCNTRLVALUE = S.BUSINESS_UNIT AND W.RECNAME = 'CUSTOMER')
ORDER BY 1,2,3,4;


--Asset Management
--Accounting Entry Templates
SELECT A.SETID, B.DESCR, A.CATEGORY, C.DESCR, A.COST_TYPE, X1.XLATLONGNAME AS TRANS_TYPE, A.TRANS_CODE, A.APPL_JRNL_ID, X2.XLATLONGNAME AS DISTRIBUTION_TYPE, 
            D.ACCOUNT_SIGN, D.ACCOUNT, E.DESCR, D.BOOK_CODE, A.ACCT_ENT_TMPL_ID
FROM PS_DIST_TMPL_TBL A, PS_SP_SETID_NONVW B, PS_CATEGORY_TBL C, PS_DIST_TMPLLN_TBL D, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F, PS_SETID_TBL G, PSXLATITEM X1, PSXLATITEM X2
WHERE B.SETID = A.SETID 
    AND C.CATEGORY = A.CATEGORY 
    AND C.SETID = A.SETID 
    AND G.SETID = F.SETID
    AND X1.FIELDNAME (+) = 'TRANS_TYPE'
     AND X1.FIELDVALUE (+) = A.TRANS_TYPE
     AND X1.EFF_STATUS (+)  = 'A' 
     AND X2.FIELDNAME (+) = 'DISTRIBUTION_TYPE'
     AND X2.FIELDVALUE (+) = D.DISTRIBUTION_TYPE
     AND X2.EFF_STATUS (+)  = 'A' 
    AND ( C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_CATEGORY_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.CATEGORY = C_ED.CATEGORY AND C_ED.EFFDT <= SYSDATE) 
     AND C.EFF_STATUS = 'A' 
     AND A.SETID = 'SHARE' 
     AND A.SETID = D.SETID 
     --AND A.CATEGORY = :2 
     AND A.CATEGORY = D.CATEGORY 
     AND A.COST_TYPE = D.COST_TYPE 
     AND A.TRANS_TYPE = D.TRANS_TYPE 
     AND A.TRANS_CODE = D.TRANS_CODE 
     AND A.ACCT_ENT_TMPL_ID = D.ACCT_ENT_TMPL_ID
     --AND  A.ACCT_ENT_TMPL_ID = 'UNDP1_DFLT'
     AND E.ACCOUNT = D.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL' 
     AND F.SETCNTRLVALUE = D.SETID ) 
ORDER BY 1, 3, 14, 5, 6, 7;

--Voucher Closing
SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00013943';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00013943';

SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, VOUCHER_STYLE, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010327';
SELECT PYMNT_SELCT_STATUS, PYMNT_TYPE, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010327';

SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, VOUCHER_STYLE, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010416';
SELECT PYMNT_SELCT_STATUS, PYMNT_TYPE, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010416';

SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, VOUCHER_STYLE, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010105';
SELECT PYMNT_SELCT_STATUS, PYMNT_TYPE, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010105';

SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, VOUCHER_STYLE, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00011590';
SELECT PYMNT_SELCT_STATUS, PYMNT_TYPE, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00011590';

SELECT PROCESS_MAN_CLOSE, POST_STATUS_AP, IN_PROCESS_FLG, VOUCHER_STYLE, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00016277';
SELECT PYMNT_SELCT_STATUS, PYMNT_TYPE, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00016277';

--Check if the Voucher is ready to be posted
SELECT ENTRY_STATUS, IN_PROCESS_FLG, BUDGET_HDR_STATUS, BUDGET_MISC_STATUS, DOC_TOL_HDR_STATUS, PROCESS_MAN_CLOSE, POST_STATUS_AP, VCHR_LINE_APPR, 
            POST_VOUCHER, APPR_STATUS, MATCH_STATUS_VCHR, A.* 
FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010416';

--VCHR_SRCH_CLOSE
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.INVOICE_ID, A.VENDOR_SETID, B.VENDOR_NAME_SHORT, B.VENDOR_ID, B.NAME1, A.CLOSE_STATUS 
FROM PS_VOUCHER A, PS_VENDOR B 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID
    AND A.PROCESS_MAN_CLOSE IN ('Y','N') 
    AND A.POST_STATUS_AP = 'P' 
    AND A.IN_PROCESS_FLG = 'N'
    AND A.BUSINESS_UNIT LIKE '6%' AND A.VOUCHER_ID = '00016277'
    AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF C WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.VOUCHER_ID = C.VOUCHER_ID 
                                                                                     AND ((C.PYMNT_SELCT_STATUS = 'N' AND C.PYMNT_TYPE <> 'W') OR (C.PYMNT_SELCT_STATUS = 'X' AND A.VOUCHER_STYLE = 'CLBK'))) 
    AND NOT EXISTS (SELECT 'X' FROM PS_VCHR_PPAY_XREF D WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT AND A.VOUCHER_ID = D.VOUCHER_ID AND D.PREPAID_STATUS IN ('A','F')) 
    AND NOT EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF G WHERE A.BUSINESS_UNIT = G.BUSINESS_UNIT AND A.VOUCHER_ID = G.VOUCHER_ID AND G.PYMNT_TYPE = 'W' 
                                                                                                    AND G.PYMNT_SELCT_STATUS <> 'X')
ORDER BY 1,2;

--APY0005_SPEEDCHARTS
SELECT A.SETID, A.SPEEDCHART_KEY, A.DESCR, A.SPEEDTYPE_TYPE, A.OPRID, A.OPRCLASS, A.EFFDT, 
            B.ACCOUNT, B.ALTACCT, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD2, B.DEPTID, B.BUSINESS_UNIT_PC, B.PROJECT_ID, B.ACTIVITY_ID, B.PERCENTAGE, B.BUSINESS_UNIT_GL 
FROM PS_SPEEDCHART_HDR A, PS_SPEEDCHART_DTL B, PS_SETID_TBL E 
WHERE A.SETID = 'UNUNI'
     AND A.EFF_STATUS = 'A'
     AND A.EFFDT = (SELECT MAX(  C.EFFDT) FROM PS_SPEEDCHART_HDR C WHERE C.EFFDT <= sysdate AND C.SETID = A.SETID AND C.SPEEDCHART_KEY = A.SPEEDCHART_KEY AND C.OPRID = A.OPRID 
                                                                                                                     AND C.OPRCLASS = A.OPRCLASS)
     AND A.SETID = B.SETID
     AND A.SPEEDCHART_KEY = B.SPEEDCHART_KEY
     AND A.OPRID = B.OPRID
     AND A.OPRCLASS = B.OPRCLASS
     AND A.EFFDT = B.EFFDT
     AND A.SETID = E.SETID
ORDER BY 1,2;

--APY0012_ACCTG_ENTRY_TMPLT
SELECT A.SETID, A.DST_CNTRL_ID, A.DESCR, A.DESCRSHORT, B.EFFDT, B.DST_ACCT_TYPE, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.PROJECT_ID, B.CHARTFIELD2 
FROM PS_DST_CNTRL_HDR A, PS_DST_DETL_CNTRL B, PS_SETID_TBL C 
WHERE B.SETID = A.SETID
     AND B.DST_CNTRL_ID = A.DST_CNTRL_ID
     AND (A.SETID = 'SHARE'
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DST_DETL_CNTRL B_ED WHERE B.SETID = B_ED.SETID AND B.DST_CNTRL_ID = B_ED.DST_CNTRL_ID AND B_ED.EFFDT <= sysdate) 
     AND A.SETID = C.SETID)

--APY1010_VOUCHER_REGISTER
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.INVOICE_DT, A.VENDOR_ID, B.NAME1, B.SETID, A.GRP_AP_ID, A.ORIGIN, A.OPRID, A.ENTRY_STATUS, A.ACCOUNTING_DT, 
            A.POST_STATUS_AP, A.DST_CNTRL_ID, A.GROSS_AMT, A.DSCNT_AMT, A.USETAX_AMT, A.SALETX_AMT, A.FREIGHT_AMT, A.MISC_AMT, A.SALETX_PRORATE_FLG, A.FRGHT_PRORATE_FLG, 
            A.USETAX_PRORATE_FLG, A.MISC_PRORATE_FLG, A.DUE_DT, A.DSCNT_DUE_DT, D.DESCRSHORT, A.ENTERED_DT, A.TXN_CURRENCY_CD, A.RT_TYPE, A.RATE_MULT, E.VOUCHER_LINE_NUM, 
            E.DESCR, E.MERCHANDISE_AMT, E.INV_ITEM_ID, E.UNIT_PRICE, E.FRGHT_PRORATE_FLG, E.WTHD_SW, E.DSCNT_APPL_FLG, E.WTHD_CD, F.DISTRIB_LINE_NUM, F.SUSPENSE_REF_NUM, 
            F.ACCOUNT, F.OPERATING_UNIT, F.FUND_CODE, F.CHARTFIELD2, F.DEPTID, F.PROJECT_ID, F.ACTIVITY_ID, F.MERCHANDISE_AMT, F.OPEN_ITEM_KEY, F.OPEN_ITEM_STATUS, 
            A.APPR_STATUS, A.VAT_INV_AMT, A.VAT_NONINV_AMT, A.VAT_BASIS_AMT, A.VAT_DCLRTN_POINT, 
            A.VAT_CALC_TYPE, A.VAT_CALC_GROSS_NET, A.VAT_RECALC_FLG, B.VAT_SW, E.TAX_CD_VAT, E.VAT_RECOVERY_PCT, F.VAT_INV_AMT, F.VAT_NONINV_AMT, G.SETCNTRLVALUE, 
            G.RECNAME, G.SETID, A.RATE_DIV            
FROM PS_VOUCHER A, PS_VENDOR B, PS_VOUCHER_LINE E, PS_DISTRIB_LINE F, PS_SET_CNTRL_REC G, PS_PYMT_TRMS_HDR D 
WHERE E.BUSINESS_UNIT = A.BUSINESS_UNIT
     AND E.VOUCHER_ID = A.VOUCHER_ID
     AND A.BUSINESS_UNIT = '600UU'
     AND A.VENDOR_ID = '0000005935'
     AND A.ENTERED_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD') 
     AND B.SETID = A.VENDOR_SETID
     AND B.VENDOR_ID = A.VENDOR_ID
     AND G.SETCNTRLVALUE = A.BUSINESS_UNIT 
     AND G.RECNAME = 'PAY_TRMS_TBL' 
     AND F.BUSINESS_UNIT = A.BUSINESS_UNIT 
     AND F.VOUCHER_ID = A.VOUCHER_ID 
     AND F.VOUCHER_LINE_NUM = E.VOUCHER_LINE_NUM      
     AND D.SETID = G.SETID 
     AND A.PYMNT_TERMS_CD = D.PYMNT_TERMS_CD 
ORDER BY 1,2;

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_VCHRBLD' AND RUNCNTLID = 'AP_AP_VCHRBLD_D_01' ORDER BY RUNDTTM DESC
SELECT * FROM PS_VCHR_BATCH_RUN WHERE RUN_CNTL_ID = 'AP_AP_VCHRBLD_D_01'
SELECT * FROM PS_VCHR_BATCH_PARM WHERE RUN_CNTL_ID = 'AP_AP_VCHRBLD_D_01'
SELECT * FROM PS_VCHR_BATCH_SRC WHERE RUN_CNTL_ID = 'AP_AP_VCHRBLD_D_01'

SELECT * FROM PS_VCHR_BATCH_RUN WHERE RUN_CNTL_ID = 'AP_EA_VCHRBLD_D_01'
SELECT * FROM PS_VCHR_BATCH_PARM WHERE RUN_CNTL_ID = 'AP_EA_VCHRBLD_D_01'
SELECT * FROM PS_VCHR_BATCH_SRC WHERE RUN_CNTL_ID = 'AP_EA_VCHRBLD_D_01'

--Project Costing
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.DESCR AS PROJ_DESCR, B.PROJECT_STATUS, PS.DESCR AS PROJ_STATUS, A.PROJECT_TYPE, TY.DESCR AS PROJ_TYPE_DESCR, A.START_DT, A.END_DT 
FROM PS_PROJECT A, PS_PROJECT_STATUS B, PS_PROJ_TYPE_TBL TY, PS_PROJ_STATUS_TBL PS
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND A.PROJECT_ID = B.PROJECT_ID (+)
    AND TY.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = A.BUSINESS_UNIT AND G.RECNAME = 'PROJ_TYPE_TBL')
    AND PS.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC H WHERE H.SETCNTRLVALUE = B.BUSINESS_UNIT AND H.RECNAME = 'PROJ_STATUS_TBL')
    AND A.PROJECT_TYPE = TY.PROJECT_TYPE
    AND B.PROJECT_STATUS = PS.PROJECT_STATUS
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND B.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_PROJECT_STATUS D WHERE B.BUSINESS_UNIT = D.BUSINESS_UNIT AND B.PROJECT_ID = D.PROJECT_ID AND D.EFFDT <= sysdate) 
    AND B.EFFSEQ = (SELECT MAX(C.EFFSEQ) FROM PS_PROJECT_STATUS C WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT AND B.PROJECT_ID = C.PROJECT_ID AND B.EFFDT = C.EFFDT)
ORDER BY A.BUSINESS_UNIT, A.PROJECT_ID;

SELECT PROJECT_TYPE, EFFDT, EFF_STATUS, DESCR FROM PS_PROJ_TYPE_TBL WHERE SETID = 'UNUNI'
SELECT PROJECT_STATUS, EFFDT, EFF_STATUS, DESCR, PROCESSING_STATUS FROM PS_PROJ_STATUS_TBL WHERE SETID = 'SHARE'

SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.EFFDT, A.EFFSEQ, A.PROJECT_STATUS, A.PROJECT_PRIORITY, A.PERCENT_COMPLETE, A.INTEREST_FACTOR, A.DESCRLONG 
FROM PS_PROJECT_STATUS A
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_PROJECT_STATUS B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.PROJECT_ID = B.PROJECT_ID AND B.EFFDT <= sysdate) 
    AND A.EFFSEQ = (SELECT MAX(C.EFFSEQ) FROM PS_PROJECT_STATUS C WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.PROJECT_ID = C.PROJECT_ID AND A.EFFDT = C.EFFDT)

--Verification Query
SELECT * FROM PS_PROJECT WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID NOT IN (
SELECT A.PROJECT_ID 
FROM PS_PROJECT A, PS_PROJECT_STATUS B, PS_PROJ_TYPE_TBL TY, PS_PROJ_STATUS_TBL PS
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND A.PROJECT_ID = B.PROJECT_ID (+)
    AND TY.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = A.BUSINESS_UNIT AND G.RECNAME = 'PROJ_TYPE_TBL')
    AND PS.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC H WHERE H.SETCNTRLVALUE = B.BUSINESS_UNIT AND H.RECNAME = 'PROJ_STATUS_TBL')
    AND A.PROJECT_TYPE = TY.PROJECT_TYPE
    AND B.PROJECT_STATUS = PS.PROJECT_STATUS
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND B.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_PROJECT_STATUS D WHERE B.BUSINESS_UNIT = D.BUSINESS_UNIT AND B.PROJECT_ID = D.PROJECT_ID AND D.EFFDT <= sysdate) 
    AND B.EFFSEQ = (SELECT MAX(C.EFFSEQ) FROM PS_PROJECT_STATUS C WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT AND B.PROJECT_ID = C.PROJECT_ID AND B.EFFDT = C.EFFDT))

--UNU_GL_POSTED_JRNL_DETAIL_ALL
SELECT A.BUSINESS_UNIT "GL Bus Unit", A.JOURNAL_ID "Journal ID", A.JOURNAL_DATE "Journal Date", A.UNPOST_SEQ "Unpost Seq", A.BUSINESS_UNIT_IU "Header GL Bus Unit", 
            A.SOURCE "Journal Source", A.JOURNAL_CLASS "Journal Class", A.IU_TRAN_CD "Transaction Code", A.FISCAL_YEAR "Fiscal Year", A.ACCOUNTING_PERIOD "Accounting Period", 
            A.POSTED_DATE "Posted Date", A.UNPOST_JRNL_DATE "Unpost Date", A.REVERSAL_CD "Reversal Code", A.REVERSAL_DATE "Reversal Date", A.OPRID "User Id Entered", 
            A.SYSTEM_SOURCE "System Source", TO_CHAR(CAST((A.JRNL_CREATE_DTTM) AS TIMESTAMP) ,'YYYY-MM-DD-HH24.MI.SS.FF') "Creation Date", A.DESCR254 "Header Description", 
            B.JOURNAL_LINE "Journal Line", B.LEDGER "Ledger", B.ACCOUNT "Account", B.OPERATING_UNIT "Oper Unit", B.FUND_CODE "Fund", B.DEPTID "DeptID", B.BUSINESS_UNIT_PC "PC Bus Unit", 
            B.PROJECT_ID "Project", B.ACTIVITY_ID "Activity", B.CHARTFIELD2 "Donor", B.AFFILIATE "BU Affiliate", B.AFFILIATE_INTRA2 "Oper Unit Affil", B.AFFILIATE_INTRA1 "Fund Affil",
            B.ANALYSIS_TYPE "Analysis Type", C.OPEN_ITEM_KEY "Open Item Key", B.JRNL_LN_REF "Journal Ref", B.LINE_DESCR "Line Descr", B.FOREIGN_AMOUNT "Amount(TXN)", 
            B.FOREIGN_CURRENCY "Txn Currency", B.RATE_MULT "Exch Rate Multiplier", B.RATE_DIV "Exch Rate Divisor", B.MONETARY_AMOUNT "Amount(USD)"            
FROM PS_JRNL_HEADER A, PS_JRNL_LN B, PS_OPEN_ITEM_GL C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE
     AND A.UNPOST_SEQ = B.UNPOST_SEQ
     AND B.BUSINESS_UNIT = 'UNUNI'
     --AND B.OPERATING_UNIT LIKE '' 
     --AND B.DEPTID LIKE :3
     --AND B.PROJECT_ID LIKE :4
     --AND B.CHARTFIELD2 LIKE :5
     AND B.ACCOUNT >= '15100'
     AND B.ACCOUNT <= '15100'
     AND B.JOURNAL_DATE >= TO_DATE('2013-01-01','YYYY-MM-DD')
     AND B.JOURNAL_DATE <= TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.JRNL_HDR_STATUS IN ('P','U')
     AND A.LEDGER_GROUP = 'ACTUALS'
     AND B.BUSINESS_UNIT =  C.BUSINESS_UNIT (+)
     AND B.JOURNAL_ID =  C.JOURNAL_ID (+)
     AND B.JOURNAL_DATE =  C.JOURNAL_DATE (+)
     AND B.UNPOST_SEQ =  C.UNPOST_SEQ (+)
     AND B.JOURNAL_LINE =  C.JOURNAL_LINE (+)
     AND B.LEDGER =  C.LEDGER (+)
ORDER BY 1, 2, 3, 4, 19;

--UNU_AWARD_PROJECT_LIST
SELECT A.BUSINESS_UNIT "Business Unit", A.CONTRACT_NUM "Award Id", A.TITLE56 "Award Title", A.DESCR254 "Award Long Description", A.AWARD_STATUS "Award Status", 
            A.PURPOSE "Award Purpose", A.EMPLID "PI EmplId", A.NAME "PI Name", A.BEGIN_DT "Award Begin Date", A.END_DT "Award End Date", A.CUST_ID "Award Sponsor", A.DEPTID "Award DeptID", 
            A.INSTID "Award Institution", D.ATTR_CODE_VALUE "FBPMS Project Ref", C.PROJECT_ID "Project Id", C.DESCR "Project Description", C.PROJECT_TYPE "Project Type", 
            C.START_DT "Project Start Date", C.END_DT "Project End Date",
            H.PROJECT_STATUS "Project Status", J.PARENT_NODE_NAME "Programme", G.LOCATION "Project Location", F.DEPTID "Project DeptID", F.MAJOR_SUBDIVISION "Project Subdivision (Dtl Dept)", 
            F.INSTID "Project Institution", E.ACTIVITY_ID "Activity Id", E.DESCR "Activity Description", E.ACTIVITY_TYPE "Activity Type"
FROM PS_GM_AWARD A, PS_GM_AWD_PROJT_VW B, PS_PROJECT C, PS_GM_AWD_ATTR D, PS_PROJ_ACTIVITY E, PS_GM_PRJ_DEPT F, PS_PROJ_LOCATION G, PS_PROJECT_STATUS H, PSTREENODE J
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.CONTRACT_NUM = B.CONTRACT_NUM
     AND B.PROJECT_ID = C.PROJECT_ID
     AND C.BUSINESS_UNIT = B.BUSINESS_UNIT_PC
     AND A.CONTRACT_NUM =  D.CONTRACT_NUM (+)
     AND D.ATTR_CODE (+) = 'FBPMS_PROJ'
     AND C.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND C.PROJECT_ID = E.PROJECT_ID
     AND C.BUSINESS_UNIT = F.BUSINESS_UNIT
     AND C.PROJECT_ID = F.PROJECT_ID
     AND C.BUSINESS_UNIT = G.BUSINESS_UNIT
     AND C.PROJECT_ID = G.PROJECT_ID
     AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_PROJ_LOCATION G_ED WHERE G.BUSINESS_UNIT = G_ED.BUSINESS_UNIT AND G.PROJECT_ID = G_ED.PROJECT_ID AND G_ED.EFFDT <= SYSDATE)
     AND G.EFFSEQ = (SELECT MAX(G_ES.EFFSEQ) FROM PS_PROJ_LOCATION G_ES WHERE G.BUSINESS_UNIT = G_ES.BUSINESS_UNIT AND G.PROJECT_ID = G_ES.PROJECT_ID AND G.EFFDT = G_ES.EFFDT)
     AND ((C.BUSINESS_UNIT = H.BUSINESS_UNIT
     AND C.PROJECT_ID = H.PROJECT_ID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_PROJECT_STATUS H_ED WHERE H.BUSINESS_UNIT = H_ED.BUSINESS_UNIT AND H.PROJECT_ID = H_ED.PROJECT_ID AND H_ED.EFFDT <= SYSDATE)
     AND H.EFFSEQ = (SELECT MAX(H_ES.EFFSEQ) FROM PS_PROJECT_STATUS H_ES WHERE H.BUSINESS_UNIT = H_ES.BUSINESS_UNIT AND H.PROJECT_ID = H_ES.PROJECT_ID AND H.EFFDT = H_ES.EFFDT))
     OR NOT EXISTS (SELECT 'X' FROM PS_PROJECT_STATUS I WHERE I.BUSINESS_UNIT = C.BUSINESS_UNIT AND I.PROJECT_ID = C.PROJECT_ID AND I.EFFDT <= SYSDATE))
     --AND F.INSTID LIKE :1
     --AND F.DEPTID LIKE :2
     AND C.PROJECT_ID =  J.TREE_NODE (+)
     AND  J.SETID (+) = 'UNUNI'
     AND  J.TREE_NAME (+) = 'UNU_PROGRAMME'
ORDER BY 15, 24;

--AM Query to check Capitalized Assets with Non Cap Profile
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.ACQUISITION_DT, A.ASSET_STATUS, X2.XLATLONGNAME, A.PROFILE_ID, A.FINANCIAL_ASSET_SW, B.CAPITALIZATION_SW, X1.XLATLONGNAME
FROM PS_ASSET A, PS_ASSET_ACQ_DET B, PSXLATITEM X1, PSXLATITEM X2 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.ASSET_ID = B.ASSET_ID
    AND X1.FIELDNAME (+) = 'CAPITALIZATION_SW'
    AND X1.FIELDVALUE (+) = B.CAPITALIZATION_SW
    AND X1.EFF_STATUS (+)  = 'A'
    AND X2.FIELDNAME (+) = 'ASSET_STATUS'
    AND X2.FIELDVALUE (+) = A.ASSET_STATUS
    AND X2.EFF_STATUS (+)  = 'A'
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.ASSET_ID = '000000000299'
    AND A.PROFILE_ID LIKE 'NC%'
    AND A.FINANCIAL_ASSET_SW = 'Y'
ORDER BY 1,2;

--UNDP DBLink
--USER_DB_LINKS
--ALL_DB_LINKS
SELECT * FROM DBA_DB_LINKS;

SELECT * 
FROM PS_GP_PAYMENT@undphrlink
WHERE BUSINESS_UNIT = 'UNUNI'
AND EMPLID = '265466'

SELECT * 
FROM PS_UN_GP_PAYMENT@undphrlink
WHERE EMPLID = '265466'

SELECT DISTINCT SRC_BANK_ID
FROM PS_GP_PAYMENT@undphrlink
WHERE BUSINESS_UNIT = 'UNUNI'

SELECT * FROM PS_SRC_BANK@undphrlink WHERE SRC_BANK_ID IN ('00004', '00199', '00227', 'GH047', 'H1705', 'JP007', 'MO001')
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'nurul.asyira'
--UN PeopleSoft User
--UN_UNU_BUYER
--UN_UNU_PROJECT_MANAGER
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'khairul.bariah'
--UN PeopleSoft User
--UN_UNU_BUYER
--UN_UNU_GENERAL_USER
SELECT * FROM PSROLEUSER WHERE ROLEUSER LIKE 'suzainur%'
--UN PeopleSoft User
--UN_UNU_BUYER
--UN_UNU_GENERAL_USER
--UN_UNU_PROJECT_MANAGER

--Commitments Creation
SELECT * FROM PS_UN_JGEN_ACCT_EN WHERE BUSINESS_UNIT = 'UNDP1' AND FISCAL_YEAR > 2012
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_RCPT_SUM'
SELECT * FROM PS_UN_PO_RECPT

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'CAPITALIZATION_SW'

--AHD17574 - KK Issue
SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00071314'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0038570589'
SELECT * FROM PS_KK_BUDGET_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004711746' 
SELECT * FROM PS_KK_BUDGET_LN WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00071314'
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.CHARTFIELD2, A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT,
            B.KK_SOURCE_TRAN, L.RESOURCE_ID, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, B.JOURNAL_ID, T.KK_SOURCE_TRAN,
            PC.BUSINESS_UNIT, PC.PROJECT_ID, PC.PC_BUDGET_ID, PC.ACTIVITY_ID, PC.PC_BUDGET_ITEM, PC.SEQ_NBR, PC.BUDGET_PERIOD, PC.BUSINESS_UNIT_GL, PC.BUDGET_LN, PC.RESOURCE_ID, 
            PC.ACCOUNT, PC.DESCR, PC.DEPTID, PC.OPERATING_UNIT, PC.FUND_CODE, PC.FMS_DTTM_STAMP, PC.FMS_OPRID, PC.FMS_LASTUPDDTTM, PC.FMS_LASTUPDOPRID, PC.BUSINESS_UNIT_BD, PC.KK_BUDG_LN_TYPE, 
            PC.JOURNAL_ID, PC.BD_HDR_STATUS, PC.LEDGER, PC.LEDGER_GROUP, PC.GM_DISTRIB_STATUS, PC.PC_DISTRIB_STATUS, PC.KK_DISTRIB_STATUS, PC.TRANS_DT, PC.ACCOUNTING_DT, 
            PC.RT_TYPE, PC.RATE_MULT, PC.RATE_DIV, PC.FOREIGN_CURRENCY, PC.FOREIGN_AMOUNT, PC.SYSTEM_SOURCE, PC.ANALYSIS_TYPE,
            PC.KK_DEFAULT_EE, PC.KK_GEN_PARENT, PC.KK_PARENT_ENT_TYPE, PC.KK_BUDG_TRANS_TYPE
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_TRANS_LOG T, PS_KK_SOURCE_LN L, PS_PC_BUD_DETAIL PC
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.KK_TRAN_ID = T.KK_TRAN_ID (+)
    AND A.KK_TRAN_DT = T.KK_TRAN_DT (+)
    AND A.KK_TRAN_LN = T.KK_TRAN_LN (+)
    AND A.SEQNBR = T.SEQNBR (+)
    AND A.KK_TRAN_ID = L.KK_TRAN_ID
    AND A.KK_TRAN_DT = L.KK_TRAN_DT
    AND A.KK_TRAN_LN = L.KK_TRAN_LN
    AND A.BUSINESS_UNIT = PC.BUSINESS_UNIT
    AND A.PROJECT_ID = PC.PROJECT_ID
    AND L.RESOURCE_ID = PC.RESOURCE_ID
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND A.LEDGER = 'PAR_UU_BUD'
    AND A.BUDGET_PERIOD = '2013'
    --AND A.PROJECT_ID = '00064159'
    AND A.PROJECT_ID IN ('00071314')
    --AND A.BALANCING_LINE = 'N'
ORDER BY A.BUSINESS_UNIT, A.PROJECT_ID, PC.ACCOUNT, ACCOUNTING_PERIOD;

--GLS8510 INRA
SELECT X.ACCOUNT AS "Account", X.DEPTID AS "DeptID", X.OPERATING_UNIT AS "Operating Unit", X.FUND_CODE AS "Fund", X.CHARTFIELD2 AS "Donor", X.PROJECT_ID AS "ProjectID", 
            X.BUDGET_PERIOD AS "Budget Period", X.CURRENCY_CD AS "Currency", 
            SUM(BUD) AS "Budget", SUM(EXP) AS "Expense", SUM(ENC) AS "Encumbrance", SUM(PRE) AS "Pre-Encumbrance", SUM((-1*BUD) - (EXP + (ENC))) AS "Available Budget"
FROM (
SELECT LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD,
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE
FROM PS_KK_RPT_LED_VW
WHERE BUSINESS_UNIT = 'UNUNI'
    AND LEDGER_GROUP = 'PAR_UU'
    AND BUDGET_PERIOD IN (2012, 2013)
    AND DEPTID = 'B0420'
GROUP BY LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD) X
GROUP BY X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.BUDGET_PERIOD, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID;

--Changed PS_KK_RPT_LED_VW to PS_KK_RPT_LED_VW1
--Only includes Ledger Group Types - Commitment Control Expense & Revenue
SELECT X.ACCOUNT AS "Account", X.DEPTID AS "DeptID", X.OPERATING_UNIT AS "Operating Unit", X.FUND_CODE AS "Fund", X.CHARTFIELD2 AS "Donor", X.BUSINESS_UNIT_PC AS "Project BU", 
            X.PROJECT_ID AS "ProjectID",
            X.BUDGET_PERIOD AS "Budget Period", X.CURRENCY_CD AS "Currency", 
            SUM(BUD) AS "Budget", SUM(EXP) AS "Expense", SUM(ENC) AS "Encumbrance", SUM(PRE) AS "Pre-Encumbrance", SUM((-1*BUD) - (EXP + (ENC))) AS "Available Budget"
FROM (
SELECT LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, BUSINESS_UNIT_PC, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD,
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE
FROM PS_KK_RPT_LED_VW1
WHERE BUSINESS_UNIT = 'UNUNI'
    AND LEDGER_GROUP = 'DET_UU'
    AND BUDGET_PERIOD IN (2012)
    --AND DEPTID = 'B0420'
    AND DEPTID = '11901'
GROUP BY LEDGER, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, BUSINESS_UNIT_PC, PROJECT_ID, BUDGET_PERIOD, CURRENCY_CD) X
GROUP BY X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.BUSINESS_UNIT_PC, X.PROJECT_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.BUDGET_PERIOD, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.BUSINESS_UNIT_PC, X.PROJECT_ID;

SELECT * FROM PS_KK_RPT_LED_VW1 WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'DET_UU' AND BUDGET_PERIOD IN (2012, 2013) AND DEPTID = '42001'

SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, B.ACTIVITY_ID, A.BUDGET_PERIOD, A.FISCAL_YEAR, 
            A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, B.KK_SOURCE_TRAN, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, 
            A.KK_AUTO_GEN, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, B.JOURNAL_ID, B.JOURNAL_DATE, B.APPL_JRNL_ID
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_EXP'
    AND A.BUDGET_PERIOD IN ('2012')
    AND A.PROJECT_ID = '00064159'
ORDER BY ACCOUNTING_PERIOD;

--Detail Ledger Group
SELECT A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, B.ACTIVITY_ID, A.BUDGET_PERIOD, A.FISCAL_YEAR, 
            A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, B.KK_SOURCE_TRAN, A.KK_TRAN_ID, A.KK_TRAN_LN, A.KK_TRAN_DT, 
            A.REFERENCED_BUDGET, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, B.JOURNAL_ID, B.JOURNAL_DATE, B.APPL_JRNL_ID, B.KK_PROCESS_STATUS, B.KEYLIST
            --, A.KK_BUDG_TRANS_TYPE, A.KK_GEN_PARENT, A.KK_AUTO_GEN
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'DET_UU_EXP'
    AND A.BUDGET_PERIOD IN ('2012')
    AND A.PROJECT_ID IN ('00064159')
ORDER BY ACCOUNTING_PERIOD, DEPTID, ACCOUNT;

--Club PRE,ENC & EXP
--Works now
SELECT A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, B.ACTIVITY_ID, A.BUDGET_PERIOD, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, B.JOURNAL_ID, 
            --B.JOURNAL_DATE, B.APPL_JRNL_ID, B.KK_PROCESS_STATUS, --B.KEYLIST,
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS PRE
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N'
    AND A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT        
    AND A.BUSINESS_UNIT = 'UNUNI'    
    AND A.BUDGET_PERIOD IN ('2012')
    AND A.PROJECT_ID IN ('00064153')
    AND LEDGER_GROUP = 'DET_UU'
    --AND DEPTID = 'B0420'
GROUP BY A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, B.ACTIVITY_ID, A.BUDGET_PERIOD, 
               A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, B.REQ_ID, B.PO_ID, B.VOUCHER_ID, B.JOURNAL_ID 
            --B.JOURNAL_DATE, B.APPL_JRNL_ID, B.KK_PROCESS_STATUS--, B.KEYLIST

--GLC8043
--GL Report for Project Exp
--Detail Level
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, H.BUDG_TYPE, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID,  D.CHARTFIELD2,
            E.LEDGER_TYPE_KK, E.LEDGER_GROUP, E.LEDGER, D.POSTED_BASE_AMT 
FROM PS_PROJECT_FS A, PS_PROJECT_STATUS C, PS_LEDGER_KK D, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I 
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PROJECT_ID = C.PROJECT_ID
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_PROJECT_STATUS C_ED WHERE C.BUSINESS_UNIT = C_ED.BUSINESS_UNIT AND C.PROJECT_ID = C_ED.PROJECT_ID AND C_ED.EFFDT <= SYSDATE) 
    AND C.EFFSEQ = (SELECT MAX(C_ES.EFFSEQ) FROM PS_PROJECT_STATUS C_ES WHERE C.BUSINESS_UNIT = C_ES.BUSINESS_UNIT AND C.PROJECT_ID = C_ES.PROJECT_ID AND C.EFFDT = C_ES.EFFDT) 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.PROJECT_ID = D.PROJECT_ID
    AND D.LEDGER = E.LEDGER
    AND E.LEDGER_GROUP = 'PAR_UU'
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.PROJECT_ID = '00064158'
    AND D.BUDGET_PERIOD > 2011
ORDER BY 1,2,D.BUDGET_PERIOD,E.LEDGER_TYPE_KK;

--GLC8043
--GL Report for Project Exp
--Grouped
SELECT 'PROJECT_EXP_KK', X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDG_TYPE, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2,
            SUM(BUD) AS "Budget", SUM(PRE) AS "Pre-Encumbrance", SUM(ENC) AS "Encumbrance", SUM(EXP) AS "Expense", SUM((-1*BUD) - (EXP + (ENC))) AS "Available Budget"
FROM (            
SELECT E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, H.BUDG_TYPE, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2, 
            CASE WHEN E.LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS BUD,
            CASE WHEN E.LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS PRE,
            CASE WHEN E.LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS ENC,
            CASE WHEN E.LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS EXP            
FROM PS_PROJECT_FS A, PS_PROJECT_STATUS C, PS_LEDGER_KK D, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I 
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PROJECT_ID = C.PROJECT_ID    
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_PROJECT_STATUS C_ED WHERE C.BUSINESS_UNIT = C_ED.BUSINESS_UNIT AND C.PROJECT_ID = C_ED.PROJECT_ID AND C_ED.EFFDT <= SYSDATE) 
    AND C.EFFSEQ = (SELECT MAX(C_ES.EFFSEQ) FROM PS_PROJECT_STATUS C_ES WHERE C.BUSINESS_UNIT = C_ES.BUSINESS_UNIT AND C.PROJECT_ID = C_ES.PROJECT_ID AND C.EFFDT = C_ES.EFFDT) 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.PROJECT_ID = D.PROJECT_ID
    AND D.LEDGER = E.LEDGER
    AND E.LEDGER_GROUP = 'PAR_UU'
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.PROJECT_ID = '00064158'
    AND D.BUDGET_PERIOD > '2011'
GROUP BY E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, H.BUDG_TYPE, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2) X
GROUP BY X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDG_TYPE, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2
ORDER BY X.PROJECT_ID, X.BUDGET_PERIOD;

--SELECT * FROM PS_PROJ_ACTIVITY WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064158'

--Testing to sync with UNU Resource Overview Query
--Does not work yet
--SUM(DECODE(A.LEDGER,'AX1_UU_BUD',- A.POSTED_BASE_AMT,'ALT_UU_BUD',- A.POSTED_BASE_AMT,'AX1_UU_ENC',- A.POSTED_BASE_AMT,'ALT_UU_ENC',- A.POSTED_BASE_AMT,'AX1_UU_EXP',- A.POSTED_BASE_AMT,'ALT_UU_EXP',- A.POSTED_BASE_AMT,'REV_UU_COL',- A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Avail Budget",
SELECT X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2 AS "Donor",
            SUM(CASH_BUD) AS "Allotment/Cash Budget(E)", SUM(CASH_COL) AS "Cash Collected(R)",
            SUM(CASH_PRE_ENC) AS "Allotment/Cash Pre-Enc", SUM(CASH_ENC) AS "Allotment/Cash Enc", SUM(CASH_EXP) AS "Allotment/Cash Exp",
            SUM(BUD) AS "Project Budget", SUM(PRE) AS "Project Pre-Encumbrance", SUM(ENC) AS "Project Encumbrance", SUM(EXP) AS "Project Expense", 
            SUM((-1*BUD) - (EXP + (ENC))) AS "Project Available Budget"
FROM (            
SELECT E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2,
            CASE WHEN (E.LEDGER = 'AX1_UU_BUD' OR E.LEDGER = 'ALT_UU_BUD') THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS CASH_BUD,
            CASE WHEN E.LEDGER = 'REV_UU_COL' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS CASH_COL,
            CASE WHEN (E.LEDGER = 'AX1_UU_PRE' OR E.LEDGER = 'ALT_UU_PRE') THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS CASH_PRE_ENC,
            CASE WHEN (E.LEDGER = 'AX1_UU_ENC' OR E.LEDGER = 'ALT_UU_ENC') THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS CASH_ENC,
            CASE WHEN (E.LEDGER = 'AX1_UU_EXP' OR E.LEDGER = 'ALT_UU_EXP') THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS CASH_EXP,
            CASE WHEN E.LEDGER = 'PAR_UU_BUD' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS BUD,
            CASE WHEN E.LEDGER = 'PAR_UU_PRE' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS PRE,
            CASE WHEN E.LEDGER = 'PAR_UU_ENC' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS ENC,
            CASE WHEN E.LEDGER = 'PAR_UU_EXP' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS EXP            
FROM PS_PROJECT_FS A, PS_PROJECT_STATUS C, PS_LEDGER_KK D, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I 
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PROJECT_ID = C.PROJECT_ID
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_PROJECT_STATUS C_ED WHERE C.BUSINESS_UNIT = C_ED.BUSINESS_UNIT AND C.PROJECT_ID = C_ED.PROJECT_ID AND C_ED.EFFDT <= SYSDATE) 
    AND C.EFFSEQ = (SELECT MAX(C_ES.EFFSEQ) FROM PS_PROJECT_STATUS C_ES WHERE C.BUSINESS_UNIT = C_ES.BUSINESS_UNIT AND C.PROJECT_ID = C_ES.PROJECT_ID AND C.EFFDT = C_ES.EFFDT) 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.PROJECT_ID = D.PROJECT_ID
    AND D.LEDGER = E.LEDGER
    --AND E.LEDGER_GROUP = 'PAR_UU'
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    --AND A.PROJECT_ID = '00064377'
    AND (D.BUDGET_PERIOD > '2011' OR D.BUDGET_PERIOD = ' ') 
GROUP BY E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2) X
GROUP BY X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2
ORDER BY 1,X.BUDGET_PERIOD;

SELECT OPERATING_UNIT, DESCR FROM PS_OPER_UNIT_TBL WHERE SETID = 'SHARE' AND (OPERATING_UNIT LIKE '6%' OR OPERATING_UNIT LIKE '7%') ORDER BY 1;

--GLC8050_BUD_KEY_TRANS
SELECT DISTINCT A.SETID1, A.LEDGER_GROUP, A.EFFDT, B.EFF_STATUS, B.BUDG_TYPE, B.FILTER_CHARTFIELD, A.SUBTYPE, D.LONGNAME, A.TREE_NAME, A.TREE_LEVEL, A.REQUIRED_FLAG, 
            C.CALENDAR_ID, C.KK_ENABLE_CUM, C.KK_DERIVE_DATES, C.KK_CUM_CAL_ID, C.DEFAULT_FLAG, B.DESCR, F.LONGNAME, A.VALUE_REQUIRED             
FROM PS_KK_KEY_CF A, PS_KK_BUDGET_TYPE B, PS_KK_SUBTYPE C, PSDBFLDLABL_VW D, PSDBFLDLABL_VW F 
WHERE A.SETID1 = B.SETID1 
     AND B.SETID1 = C.SETID1 
     AND A.LEDGER_GROUP = B.LEDGER_GROUP 
     AND B.LEDGER_GROUP = C.LEDGER_GROUP 
     AND A.EFFDT = B.EFFDT 
     AND C.EFFDT = B.EFFDT 
     AND C.SUBTYPE = A.SUBTYPE 
     AND D.FIELDNAME = A.CHARTFIELD 
     AND F.FIELDNAME = B.FILTER_CHARTFIELD 
     AND A.SETID1 = 'SHARE'
     AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_KEY_CF A_ED WHERE A.SETID1 = A_ED.SETID1 AND A.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
     AND A.LEDGER_GROUP = 'ALT_UU'
ORDER BY 1, 2, 3, 6, 7;

--GLC8110_ASSOCIATED_BUDGETS
--GLC8110 - Associated Budgets
--Version 1
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.SEQ_NBR, C.ASSOC_EXP_BD, A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.PROJECT_ID, A.FUND_CODE, A.AFFILIATE, A.AFFILIATE_INTRA1, 
            A.AFFILIATE_INTRA2, A.CHARTFIELD1, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.ACTIVITY_ID, A.RESOURCE_TYPE, A.BUDGET_PERIOD, A.REV_METHOD, A.CAP, A.PERCENTAGE, 
            B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, B.CHARTFIELD1, B.CHARTFIELD2, B.BUSINESS_UNIT_PC, 
            B.PROJECT_ID, B.RESOURCE_TYPE, B.ACTIVITY_ID, B.BUDGET_PERIOD 
FROM PS_KK_REV_XREF A, PS_KK_EX_XREF B, PS_KK_BUDGET_TYPE C, PS_SET_CNTRL_REC D 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.SEQ_NBR = B.SEQ_NBR 
    AND A.LEDGER_GROUP = C.LEDGER_GROUP 
    AND D.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND D.RECNAME = 'KK_BUDGET_TYPE' 
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND C.SETID1 = D.SETID 
    AND B.LEDGER_GROUP = C.ASSOC_EXP_BD
ORDER BY 1,2,3;

--Version 2
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.SEQ_NBR, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, 
            A.CHARTFIELD1, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.RESOURCE_TYPE, A.BUDGET_PERIOD, A.REV_METHOD, A.CAP, A.PERCENTAGE, 
            C.ASSOC_EXP_BD, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, B.CHARTFIELD1, B.CHARTFIELD2, 
            B.BUSINESS_UNIT_PC, B.PROJECT_ID, B.RESOURCE_TYPE, B.ACTIVITY_ID, B.BUDGET_PERIOD 
FROM PS_KK_REV_XREF A, PS_KK_EX_XREF B, PS_KK_BUDGET_TYPE C, PS_SET_CNTRL_REC D 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.SEQ_NBR = B.SEQ_NBR 
    AND A.LEDGER_GROUP = C.LEDGER_GROUP 
    AND D.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND D.RECNAME = 'KK_BUDGET_TYPE' 
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND C.SETID1 = D.SETID
    AND C.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE C.SETID1 = H_ED.SETID1 AND C.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE)
    AND B.LEDGER_GROUP = C.ASSOC_EXP_BD    
    AND A.PROJECT_ID = '00064262'
ORDER BY 1,2,3;

SELECT * FROM PS_KK_ASCRV_AMT_VW WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'AX1_UU' AND PROJECT_ID = '00087864';
SELECT * FROM PS_KK_ASCRV_AMT_VW WHERE BUSINESS_UNIT = 'UNUNI' AND CHARTFIELD2 = '10255';
SELECT * FROM PS_KK_ASCRV_AMT_VW WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'AX1_UU' AND PROJECT_ID = '00064262';

--Based on PS_KK_ASCRV_AMT_VW
--Version 1
SELECT C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT AS EX_ACCT, C.DEPTID AS EX_DEPT, C.OPERATING_UNIT AS EX_OU, C.FUND_CODE AS EX_FUND_CODE, 
            C.CHARTFIELD2 AS EX_DONOR, C.PROJECT_ID AS EX_PROJECT, C.ACTIVITY_ID AS EX_ACTIVITY, C.BUDGET_PERIOD, 
            D.ACCOUNT AS REV_ACCOUNT, D.DEPTID AS REV_DEPTID, D.OPERATING_UNIT AS REV_OU, D.FUND_CODE AS REV_FUND_CODE, 
            D.CHARTFIELD2 AS REV_DONOR, D.PROJECT_ID AS REV_PROJECT, D.ACTIVITY_ID AS REV_ACTIVITY,            
            D.LEDGER_GROUP, D.SEQ_NBR, - SUM(A.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT, A.LEDGER, E.LEDGER_TYPE_KK, D.CAP, D.PERCENTAGE 
FROM PS_LEDGER_KK A, PS_KK_BUDGET_TYPE B, PS_KK_EX_XREF C, PS_KK_REV_XREF D, PS_LED_GRP_LED_TBL E, PS_SET_CNTRL_REC F, PS_SET_CNTRL_REC G, PS_BUS_UNIT_TBL_GL H 
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = H.BUSINESS_UNIT 
    AND A.CURRENCY_CD = H.BASE_CURRENCY 
    AND A.LEDGER = E.LEDGER 
    AND E.SETID = F.SETID 
    AND F.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND F.RECNAME = 'LED_GRP_LED_TBL' 
    AND E.LEDGER_GROUP = D.LEDGER_GROUP 
    AND E.LEDGER_GROUP = B.LEDGER_GROUP 
    AND E.LEDGER_TYPE_KK = D.REV_METHOD 
    AND B.SETID1 = G.SETID 
    AND A.BUDGET_PERIOD = D.BUDGET_PERIOD 
    AND G.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND G.RECNAME = 'KK_BD_TYPE_VW' 
    AND B.EFFDT = (SELECT MAX(H.EFFDT) FROM PS_KK_BUDGET_TYPE H WHERE H.SETID1 = B.SETID1 AND H.LEDGER_GROUP = B.LEDGER_GROUP AND H.EFFDT <= SYSDATE 
                                                                                                                AND H.EFF_STATUS = 'A')
    AND C.SEQ_NBR = D.SEQ_NBR 
    AND B.ASSOC_EXP_BD = C.LEDGER_GROUP 
    AND B.LEDGER_GROUP = D.LEDGER_GROUP 
    AND (A.ACCOUNT = D.ACCOUNT 
       OR A.ACCOUNT = (SELECT I.ACCOUNT FROM PS_KK_BD_DFLT_ACCT I, PS_SET_CNTRL_REC J 
                                   WHERE I.SETID1 = B.SETID1 AND I.LEDGER_GROUP = B.LEDGER_GROUP AND I.EFFDT = B.EFFDT AND I.SETID = J.SETID 
                                                                             AND J.SETCNTRLVALUE = A.BUSINESS_UNIT AND J.RECNAME = 'KK_BD_TYPE_VW')) 
    AND A.DEPTID = D.DEPTID
    AND A.OPERATING_UNIT = D.OPERATING_UNIT  
    AND A.PRODUCT = D.PRODUCT  
    AND A.FUND_CODE = D.FUND_CODE  
    AND A.CLASS_FLD = D.CLASS_FLD  
    AND A.PROGRAM_CODE = D.PROGRAM_CODE  
    AND A.BUDGET_REF = D.BUDGET_REF  
    AND A.AFFILIATE = D.AFFILIATE  
    AND A.AFFILIATE_INTRA1 = D.AFFILIATE_INTRA1  
    AND A.AFFILIATE_INTRA2 = D.AFFILIATE_INTRA2  
    AND A.CHARTFIELD1 = D.CHARTFIELD1  
    AND A.CHARTFIELD2 = D.CHARTFIELD2  
    AND A.CHARTFIELD3 = D.CHARTFIELD3  
    AND A.BUSINESS_UNIT_PC = D.BUSINESS_UNIT_PC  
    AND A.PROJECT_ID = D.PROJECT_ID  
    AND A.ACTIVITY_ID = D.ACTIVITY_ID  
    AND A.RESOURCE_TYPE = D.RESOURCE_TYPE
    AND D.BUSINESS_UNIT = 'UNUNI'-- AND C.CHARTFIELD2 = '10255'
GROUP BY C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, 
               C.BUDGET_PERIOD, D.ACCOUNT, D.DEPTID, D.OPERATING_UNIT, D.FUND_CODE, D.CHARTFIELD2, D.BUSINESS_UNIT_PC, D.PROJECT_ID, D.ACTIVITY_ID, 
               D.LEDGER_GROUP, A.LEDGER, E.LEDGER_TYPE_KK, D.SEQ_NBR, D.CAP, D.PERCENTAGE
ORDER BY C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT;

--Version 2
--Based on PS_KK_ASCRV_AMT_VW
SELECT C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT AS EX_ACCT, C.DEPTID AS EX_DEPT, C.OPERATING_UNIT AS EX_OU, C.FUND_CODE AS EX_FUND_CODE, 
            C.CHARTFIELD2 AS EX_DONOR, C.PROJECT_ID AS EX_PROJECT, C.ACTIVITY_ID AS EX_ACTIVITY, C.BUDGET_PERIOD, 
            D.ACCOUNT AS REV_ACCOUNT, D.DEPTID AS REV_DEPTID, D.OPERATING_UNIT AS REV_OU, D.FUND_CODE AS REV_FUND_CODE, 
            D.CHARTFIELD2 AS REV_DONOR, D.PROJECT_ID AS REV_PROJECT, D.ACTIVITY_ID AS REV_ACTIVITY,            
            D.LEDGER_GROUP, D.SEQ_NBR, - SUM(A.POSTED_TOTAL_AMT) AS POSTED_TOTAL_AMT, A.LEDGER, E.LEDGER_TYPE_KK, D.CAP, D.PERCENTAGE 
FROM PS_LEDGER_KK A, PS_KK_BUDGET_TYPE B, PS_KK_EX_XREF C, PS_KK_REV_XREF D, PS_LED_GRP_LED_TBL E, PS_SET_CNTRL_REC F, PS_SET_CNTRL_REC G, 
         PS_BUS_UNIT_TBL_GL H
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = H.BUSINESS_UNIT 
    AND A.CURRENCY_CD = H.BASE_CURRENCY 
    AND A.LEDGER = E.LEDGER 
    AND E.SETID = F.SETID 
    AND F.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND F.RECNAME = 'LED_GRP_LED_TBL' 
    AND E.LEDGER_GROUP = D.LEDGER_GROUP 
    AND E.LEDGER_GROUP = B.LEDGER_GROUP 
    AND E.LEDGER_TYPE_KK = D.REV_METHOD 
    AND B.SETID1 = G.SETID 
    AND A.BUDGET_PERIOD = D.BUDGET_PERIOD 
    AND G.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND G.RECNAME = 'KK_BD_TYPE_VW' 
    AND B.EFFDT = (SELECT MAX(H.EFFDT) FROM PS_KK_BUDGET_TYPE H WHERE H.SETID1 = B.SETID1 AND H.LEDGER_GROUP = B.LEDGER_GROUP AND H.EFFDT <= SYSDATE 
                                                                                                                AND H.EFF_STATUS = 'A')
    AND C.SEQ_NBR = D.SEQ_NBR 
    AND B.ASSOC_EXP_BD = C.LEDGER_GROUP 
    AND B.LEDGER_GROUP = D.LEDGER_GROUP 
    AND (A.ACCOUNT = D.ACCOUNT 
       OR A.ACCOUNT = (SELECT I.ACCOUNT FROM PS_KK_BD_DFLT_ACCT I, PS_SET_CNTRL_REC J 
                                   WHERE I.SETID1 = B.SETID1 AND I.LEDGER_GROUP = B.LEDGER_GROUP AND I.EFFDT = B.EFFDT AND I.SETID = J.SETID 
                                                                             AND J.SETCNTRLVALUE = A.BUSINESS_UNIT AND J.RECNAME = 'KK_BD_TYPE_VW')) 
    AND A.DEPTID = D.DEPTID
    AND A.OPERATING_UNIT = D.OPERATING_UNIT
    AND A.PRODUCT = D.PRODUCT  
    AND A.FUND_CODE = D.FUND_CODE  
    AND A.CLASS_FLD = D.CLASS_FLD  
    AND A.PROGRAM_CODE = D.PROGRAM_CODE  
    AND A.BUDGET_REF = D.BUDGET_REF  
    AND A.AFFILIATE = D.AFFILIATE  
    AND A.AFFILIATE_INTRA1 = D.AFFILIATE_INTRA1  
    AND A.AFFILIATE_INTRA2 = D.AFFILIATE_INTRA2  
    AND A.CHARTFIELD1 = D.CHARTFIELD1  
    AND A.CHARTFIELD2 = D.CHARTFIELD2  
    AND A.CHARTFIELD3 = D.CHARTFIELD3  
    AND A.BUSINESS_UNIT_PC = D.BUSINESS_UNIT_PC  
    AND A.PROJECT_ID = D.PROJECT_ID  
    AND A.ACTIVITY_ID = D.ACTIVITY_ID  
    AND A.RESOURCE_TYPE = D.RESOURCE_TYPE
    AND A.BUSINESS_UNIT = 'UNUNI'
GROUP BY C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, 
               C.BUDGET_PERIOD, D.ACCOUNT, D.DEPTID, D.OPERATING_UNIT, D.FUND_CODE, D.CHARTFIELD2, D.BUSINESS_UNIT_PC, D.PROJECT_ID, D.ACTIVITY_ID, 
               D.LEDGER_GROUP, A.LEDGER, E.LEDGER_TYPE_KK, D.SEQ_NBR, D.CAP, D.PERCENTAGE
ORDER BY C.BUSINESS_UNIT, B.ASSOC_EXP_BD, C.ACCOUNT;

SELECT * FROM PS_KK_INQ_BDLD_VW2 WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359'
AND LEDGER_GROUP IN ('AX1_UU', 'REV_UU')
ORDER BY 1;

SELECT * FROM PS_KK_ACTIVITY_LOG WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359'
AND LEDGER_GROUP IN ('AX1_UU', 'REV_UU')
ORDER BY 1;

SELECT ACT.KK_TRAN_ID, ACT.LEDGER, ACT.ACCOUNT, ACT.DEPTID, ACT.OPERATING_UNIT, ACT.FUND_CODE, ACT.PROJECT_ID, ACT.ACTIVITY_ID, CHARTFIELD2, 
            ACT.FOREIGN_AMOUNT, ACT.FOREIGN_CURRENCY, ACT.MONETARY_AMOUNT, ACT.BASE_CURRENCY,
            HDR.KK_SOURCE_TRAN, KEYLIST
FROM PS_KK_ACTIVITY_LOG ACT, PS_KK_SOURCE_HDR HDR 
WHERE ACT.KK_TRAN_ID = HDR.KK_TRAN_ID 
    AND ACT.KK_TRAN_DT = HDR.KK_TRAN_DT 
    --AND ACT.KK_TRAN_LN  = HDR.KK_TRAN_LN
    AND ACT.BUSINESS_UNIT = 'UNUNI' 
    AND ACT.FUND_CODE = '11000' 
    AND ACT.PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359'
    AND ACT.LEDGER_GROUP IN ('AX1_UU', 'REV_UU')
ORDER BY 1;

SELECT X.KK_TRAN_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, 
            X.BASE_CURRENCY, X.KEYLIST, SUM(EXP) AS EXP, SUM(REC_REV) AS REC_REV, SUM(REC_COL) AS REC_COL
FROM
(SELECT ACT.KK_TRAN_ID, ACT.LEDGER, ACT.ACCOUNT, ACT.DEPTID, ACT.OPERATING_UNIT, ACT.FUND_CODE, ACT.PROJECT_ID, ACT.ACTIVITY_ID, ACT.CHARTFIELD2, 
            ACT.BASE_CURRENCY, KEYLIST,
            CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM( ACT.MONETARY_AMOUNT)) ELSE 0 END AS EXP,
            CASE WHEN LEDGER LIKE '%_UU_REC' THEN (1 * SUM( ACT.MONETARY_AMOUNT)) ELSE 0 END AS REC_REV,
            CASE WHEN LEDGER LIKE '%_UU_COL' THEN (1 * SUM( ACT.MONETARY_AMOUNT)) ELSE 0 END AS REC_COL
FROM PS_KK_ACTIVITY_LOG ACT, PS_KK_SOURCE_HDR HDR 
WHERE ACT.KK_TRAN_ID = HDR.KK_TRAN_ID 
    AND ACT.KK_TRAN_DT = HDR.KK_TRAN_DT 
    --AND ACT.KK_TRAN_LN  = HDR.KK_TRAN_LN
    AND ACT.BUSINESS_UNIT = 'UNUNI'
    AND ACT.LEDGER_GROUP IN ('AX1_UU', 'REV_UU')
GROUP BY ACT.KK_TRAN_ID, ACT.LEDGER, ACT.ACCOUNT, ACT.DEPTID, ACT.OPERATING_UNIT, ACT.FUND_CODE, ACT.PROJECT_ID, ACT.ACTIVITY_ID, CHARTFIELD2, 
                ACT.BASE_CURRENCY, HDR.KEYLIST) X
WHERE X.FUND_CODE = '11000' 
    AND X.PROJECT_ID = '00064262' 
    --AND X.CHARTFIELD2 = '10359'
GROUP BY X.KK_TRAN_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.PROJECT_ID, X.ACTIVITY_ID, X.CHARTFIELD2, 
               X.BASE_CURRENCY, X.KEYLIST
ORDER BY 1;


SELECT X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD,  
SUM(BUD) AS BUD, SUM(EXP) AS EXP, SUM(ENC) AS ENC, SUM(PRE) AS PRE, SUM((-1*BUD) - (EXP + (ENC))) AS AVAILABLE, SUM(REC_REV) AS REC_REV, SUM(REC_COL) AS REC_COL
FROM (
SELECT LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, 
CASE WHEN LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
CASE WHEN LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS EXP,
CASE WHEN LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
CASE WHEN LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS PRE,
CASE WHEN LEDGER LIKE '%_UU_REC' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS REC_REV,
CASE WHEN LEDGER LIKE '%_UU_COL' THEN (1 * SUM(POSTED_TOTAL_AMT)) ELSE 0 END AS REC_COL
FROM PS_KK_INQ_BDLD_VW2
WHERE BUSINESS_UNIT = 'UNUNI'
AND LEDGER_GROUP NOT IN ('CHD_UU', 'DET_UU', 'PAR_UU')
GROUP BY LEDGER_GROUP, ACCOUNT, DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, PROJECT_ID, ACTIVITY_ID, BUDGET_PERIOD, CURRENCY_CD, LEDGER
) X
WHERE --X.BUDGET_PERIOD IN ('2012', '2013')
          FUND_CODE = '11000' AND PROJECT_ID = '00064262'
GROUP BY X.LEDGER_GROUP, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID, X.ACTIVITY_ID, X.BUDGET_PERIOD, X.CURRENCY_CD
ORDER BY X.LEDGER_GROUP, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.PROJECT_ID;

--Verification queries
--obtain the group type for the ledger group that has been drilled on
SELECT * FROM PS_LED_GRP_BU_VW WHERE BUSINESS_UNIT = 'UNUNI';
--Absence of row(s) means that no REV transaction exists in LEDGER_KK for that CF combination
SELECT * FROM PS_LEDGER_KK WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10004';
SELECT * FROM PS_LEDGER_KK WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE BUSINESS_UNIT = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359';
--10359 shows an additional 180 USD when compared to PS_ITEM_DST as there is no ITEM for that
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0024570974';
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID IN ('0024942689', '0024997680', '0024997681', '0024997682', '0019247017', '0019247018');
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID IN ('0063775709', '0070688553');
SELECT * FROM PS_ITEM_DST WHERE BUSINESS_UNIT_GL = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359';
SELECT * FROM PS_PAY_MISC_DST WHERE BUSINESS_UNIT_GL = 'UNUNI' AND FUND_CODE = '11000' AND PROJECT_ID = '00064262' AND CHARTFIELD2 = '10359';
SELECT * FROM PS_LED_GRP_LED_TBL WHERE SETID = 'SHARE' AND LEDGER_GROUP LIKE 'AX1_UU';

--GLS8005
--KK Budget Transaction Detail Report
--Modified Version as per the PDF output - refer to separate file for updated query
SELECT A.BASE_CURRENCY, A.PROJECT_ID, A.BUDGET_PERIOD, B.KK_TRAN_DT, B.KK_SOURCE_TRAN, B.BUSINESS_UNIT, B.JOURNAL_ID, B.JOURNAL_DATE,
            B.UNPOST_SEQ, C.JOURNAL_LINE, A.LEDGER, C.LEDGER, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.DEPOSIT_ID, B.PAYMENT_SEQ_NUM, B.VOUCHER_ID, C.VOUCHER_LINE_NUM, B.PO_ID, B.REQ_ID, 
            C.LINE_NBR, C.DISTRIB_LINE_NUM, B.ACCOUNTING_DT, C.ACCTG_LINE_NO, B.INVOICE, C.LINE_SEQ_NUM, B.ACTIVITY_ID, B.RESOURCE_ID, B.EMPLID, B.TRANS_NBR,
            A.MONETARY_AMOUNT, C.PROJECT_ID, A.KK_TRAN_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE,            
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'R') THEN (1 * A.MONETARY_AMOUNT) ELSE 0 END AS "Total Recognized Amount",
            CASE WHEN E.LEDGER_TYPE_KK = 4 THEN (1 * A.MONETARY_AMOUNT) ELSE 0 END AS "Total Collected Amount",
            CASE WHEN E.LEDGER_TYPE_KK = 3 THEN (1 * A.MONETARY_AMOUNT) ELSE 0 END AS "Pre Encumbered Amount",
            CASE WHEN E.LEDGER_TYPE_KK = 2 THEN (1 * A.MONETARY_AMOUNT) ELSE 0 END AS "Encumbered Amount",
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'E') THEN (1 * A.MONETARY_AMOUNT) ELSE 0 END AS "Expended Amount"
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN C, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I, PS_LED_GRP_TBL J
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND B.KK_TRAN_ID = C.KK_TRAN_ID
    AND B.KK_TRAN_DT = C.KK_TRAN_DT
    AND A.KK_TRAN_LN = C.KK_TRAN_LN
    AND A.LEDGER = E.LEDGER
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND E.SETID = J.SETID
    AND E.LEDGER_GROUP = J.LEDGER_GROUP
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.BALANCING_LINE <> 'Y'
    AND A.BUSINESS_UNIT = 'UNUNI'    
    AND (A.BUDGET_PERIOD IN ('2012') OR A.BUDGET_PERIOD = ' ')
    AND A.PROJECT_ID IN ('00064153')
    AND A.LEDGER_GROUP = 'DET_UU'
ORDER BY 2,4;

--NEP - ISP
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.VENDOR_ID, C.NAME1, C.NAME2, B.INVOICE_ID, B.INVOICE_DT, A.UNPOST_SEQ, A.POSTING_PROCESS, A.PYMNT_CNT, 
            A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, A.ACCOUNTING_DT, A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, 
            A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, A.SHIPTO_ID, A.POSTING_DATE, A.BUSINESS_UNIT_GL, A.ACCOUNT, 
            A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.OPEN_ITEM_KEY, A.BUDGET_DT, A.DESCR, 
            A.JOURNAL_ID, A.JOURNAL_DATE, A.JOURNAL_LINE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.MONETARY_AMOUNT, 
            A.QTY_VCHR, B.OPRID, B.OPRID_LAST_UPDT, E.BUYER_ID
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_HEADER D, PS_PO_HDR E
WHERE A.DST_ACCT_TYPE IN ('DST','RXL','RXG')
    AND A.GL_DISTRIB_STATUS = 'D'
    AND A.BUSINESS_UNIT_GL = 'UNUNI'    
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND C.VENDOR_ID = B.VENDOR_ID
    AND C.SETID = B.VENDOR_SETID
    AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND D.JOURNAL_ID = A.JOURNAL_ID
    AND D.JOURNAL_DATE = A.JOURNAL_DATE
    AND A.BUSINESS_UNIT_PO = E.BUSINESS_UNIT (+)
    AND A.PO_ID = E.PO_ID (+)
    AND D.JRNL_HDR_STATUS IN ('P','U')
    AND D.UNPOST_SEQ = 0
    AND A.OPERATING_UNIT = '618'
    AND A.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')    
ORDER BY 1, 2, 9, 10, 11, 12, 13, 14;

SELECT * FROM PS_FIN_OPEN_ADJ 
WHERE PSFT_PRODUCT='GL' 
AND BUSINESS_UNIT=:1 
AND LEDGER_GROUP=:2 
AND ACCOUNTING_PERIOD=:3 
AND IS_OPEN='Y'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = 2013

SELECT BUSINESS_UNIT, FISCAL_YEAR, ACCOUNTING_PERIOD, COUNT(1) FROM PS_JRNL_HEADER WHERE ACCOUNTING_PERIOD NOT IN ('1','2','3','4','5','6','7','8','9','10','11','12')
GROUP BY BUSINESS_UNIT, FISCAL_YEAR, ACCOUNTING_PERIOD
ORDER BY 1,2,3;

--Full Portal Registry Path
WITH PORTAL_REGISTRY (PORTAL_NAME, PORTAL_REFTYPE, PORTAL_OBJNAME, PORTAL_LABEL, PORTAL_URI_SEG1, PORTAL_URI_SEG2, PORTAL_URI_SEG3, PATH) AS (
SELECT P.PORTAL_NAME
     , P.PORTAL_REFTYPE
     , P.PORTAL_OBJNAME
     , P.PORTAL_LABEL
     , PORTAL_URI_SEG1
     , PORTAL_URI_SEG2
     , PORTAL_URI_SEG3
     , P.PORTAL_LABEL AS PATH
FROM PSPRSMDEFN P
WHERE P.PORTAL_PRNTOBJNAME = ' '
UNION ALL
SELECT P_ONE.PORTAL_NAME
     , P_ONE.PORTAL_REFTYPE
     , P_ONE.PORTAL_OBJNAME
     , P_ONE.PORTAL_LABEL
     , P_ONE.PORTAL_URI_SEG1
     , P_ONE.PORTAL_URI_SEG2
     , P_ONE.PORTAL_URI_SEG3
     , PATH || ' --> ' || P_ONE.PORTAL_LABEL AS PATH
FROM PORTAL_REGISTRY P INNER JOIN PSPRSMDEFN P_ONE
                                                  ON P.PORTAL_NAME = P_ONE.PORTAL_NAME
                                                AND P.PORTAL_REFTYPE = 'F'
                                                AND P.PORTAL_OBJNAME = P_ONE.PORTAL_PRNTOBJNAME
WHERE P_ONE.PORTAL_PRNTOBJNAME != ' ' )
   
SELECT PORTAL_NAME
     , PORTAL_OBJNAME
     , PORTAL_REFTYPE
     , PATH
     , PORTAL_LABEL
FROM PORTAL_REGISTRY
WHERE PORTAL_REFTYPE != 'F'
 
 --Find the path when you know the CREF ID
WITH PORTAL_REGISTRY (PORTAL_NAME, PORTAL_REFTYPE, PORTAL_OBJNAME, PORTAL_LABEL, PORTAL_URI_SEG1, PORTAL_URI_SEG2, PORTAL_URI_SEG3, PATH) AS (
SELECT P.PORTAL_NAME
     , P.PORTAL_REFTYPE
     , P.PORTAL_OBJNAME
     , P.PORTAL_LABEL
     , PORTAL_URI_SEG1
     , PORTAL_URI_SEG2
     , PORTAL_URI_SEG3
     , P.PORTAL_LABEL AS PATH
FROM PSPRSMDEFN P
WHERE P.PORTAL_PRNTOBJNAME = ' '
UNION ALL
SELECT P_ONE.PORTAL_NAME
     , P_ONE.PORTAL_REFTYPE
     , P_ONE.PORTAL_OBJNAME
     , P_ONE.PORTAL_LABEL
     , P_ONE.PORTAL_URI_SEG1
     , P_ONE.PORTAL_URI_SEG2
     , P_ONE.PORTAL_URI_SEG3
     , PATH || ' --> ' || P_ONE.PORTAL_LABEL AS PATH
FROM PORTAL_REGISTRY P INNER JOIN PSPRSMDEFN P_ONE
                                             ON P.PORTAL_NAME = P_ONE.PORTAL_NAME
                                           AND P.PORTAL_REFTYPE = 'F'
                                           AND P.PORTAL_OBJNAME = P_ONE.PORTAL_PRNTOBJNAME
WHERE P_ONE.PORTAL_PRNTOBJNAME != ' ' )
   
SELECT PORTAL_NAME
     , PORTAL_OBJNAME
     , PORTAL_REFTYPE
     , PATH
     , PORTAL_LABEL
  FROM PORTAL_REGISTRY
 WHERE PORTAL_REFTYPE != 'F'
   AND PORTAL_NAME = 'EMPLOYEE'
   AND PORTAL_OBJNAME = 'UN_RPT_CASHMNG'


SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = '2013' AND SOURCE = 'BI' AND JRNL_HDR_STATUS = 'V'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 31971269
SELECT * FROM PSPRCSRQST WHERE OPRID = 'sarath.patibandla'
SELECT * FROM PS_JRNLGEN_REQUEST WHERE OPRID = 'ravikiran.koritala' AND RUN_CNTL_ID = 'AR_Gen_Journals'
SELECT * FROM PSOPRDEFN WHERE OPRID = 'ravikiran.koritala'

--Asset Class for UNUNI
SELECT * FROM PS_REC_GROUP_REC WHERE RECNAME = 'ASSET_CLASS_TBL'
SELECT * FROM PS_REC_GROUP_REC WHERE REC_GROUP_ID = 'AM_21'
SELECT * FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = 'UNUNI' AND REC_GROUP_ID = 'AM_21'
SELECT * FROM PS_SET_CNTRL_TBL WHERE SETCNTRLVALUE = 'UNUNI'
SELECT * FROM PS_SET_CNTRL_GROUP WHERE SETCNTRLVALUE = 'UNUNI'

SELECT * FROM PS_ASSET_CLASS_TBL WHERE SETID = 'UNFPA'
SELECT * FROM PS_REC_GROUP_REC WHERE RECNAME = 'CATEGORY_TBL'
SELECT * FROM PS_REC_GROUP_REC WHERE REC_GROUP_ID = 'AM_10'
SELECT * FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = 'UNUNI' AND REC_GROUP_ID = 'AM_10'
SELECT * FROM PS_DIST_TMPL_TBL

--Matching Troubleshooting
SELECT IN_PROCESS_FLG, MATCH_ACTION, MATCH_STATUS_VCHR, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00022104'
SELECT MATCH_LINE_STATUS, A.* FROM PS_VOUCHER_LINE A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00022104'
SELECT * FROM PS_AP_PYMPOVCH_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005840'
SELECT * FROM PS_VCHR_RECV_MTCH WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00022104'
SELECT * FROM PS_VCHR_MTCH_DETLS WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00022104'
SELECT * FROM PS_PO_LINE_MATCHED WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005840'
SELECT * FROM PS_RECV_LN_SHP_MTH WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID IN ('0000001202', '0000001220')
SELECT IN_PROCESS_FLG, RECV_STATUS, MATCH_ACTION, MATCH_CNTRL_ID, MATCH_STATUS_PO, MATCH_PROCESS_FLG, A.* 
FROM PS_PO_HDR A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005840'
SELECT MATCH_STATUS_LN_PO, MATCH_LINE_OPT, A.* FROM PS_PO_LINE_SHIP A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005840'
SELECT * FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005840'
SELECT IN_PROCESS_FLG, MATCH_CNTRL_ID, MATCH_PROCESS_FLG, MATCH_STATUS_RECV, RECV_STATUS, A.* 
FROM PS_RECV_HDR A WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID IN ('0000001202', '0000001220')
SELECT MATCH_LINE_FLG, RECV_LN_MATCH_OPT, RECV_SHIP_STATUS, A.* FROM PS_RECV_LN_SHIP A WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID IN ('0000001202', '0000001220')
SELECT * FROM PS_RECV_VCHR_MTCH WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID IN ('0000001202', '0000001220');
SELECT * FROM PS_AP_VCHR_LN_SUM WHERE VENDOR_SETID = 'UNUNI' AND VENDOR_ID = '0000005935';
SELECT * FROM PS_VCHR_LOG_PO_VW WHERE BUSINESS_UNIT LIKE '6%' AND TO_CHAR(PO_DT, 'YYYY') > '2012'
ORDER BY 2,3;
SELECT * FROM PS_VCHR_MM_PO_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942';

SELECT * FROM PS_PO_LINE_MATCHED POM WHERE POM.BUSINESS_UNIT LIKE '6%' 
AND NOT EXISTS (SELECT 'X' FROM PS_VOUCHER V WHERE V.BUSINESS_UNIT = POM.BUSINESS_UNIT_AP AND POM.VOUCHER_ID = V.VOUCHER_ID AND MATCH_STATUS_VCHR = 'M')
AND EXISTS (SELECT 'X' FROM PS_PO_HDR POH WHERE POH.BUSINESS_UNIT = POM.BUSINESS_UNIT AND POH.PO_ID = POM.PO_ID AND MATCH_STATUS_PO IN ('M', 'P'))
ORDER BY 1,2,3,4,5,6,7,8,9,10,11;

--Vouchers which have not been deleted and no payment
SELECT * FROM PS_VCHR_NO_PAY_VW A WHERE BUSINESS_UNIT = '600UU' AND TO_CHAR(INVOICE_DT, 'YYYY') > '2012'
AND NOT EXISTS (SELECT 'X' FROM PS_VOUCHER V WHERE V.BUSINESS_UNIT = A.BUSINESS_UNIT AND V.VOUCHER_ID = A.VOUCHER_ID AND V.ENTRY_STATUS = 'X');

SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00021848'

SELECT * FROM PS_UN_PO_REVAL WHERE BUSINESS_UNIT_GL = 'UNUNI' AND TO_CHAR(PO_DT, 'YYYY-MM-DD') > '2013-02-28' AND BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%5840'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN (32229151, 32229543)
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID LIKE '%5840'

SELECT * FROM PSQRYRECORD WHERE RECNAME = 'OPEN_ITEM_GL'
SELECT * FROM PS_JRNL_OPENITM_VW WHERE BUSINESS_UNIT = 'UNUNI'

--UN_GL_PO_OBLIGATION_DETAIL
SELECT DISTINCT B.PROCESS_INSTANCE FROM PS_UN_PO_REVAL B WHERE B.PROCESS_DATE = TO_DATE('2013-03-31','YYYY-MM-DD') AND B.BUSINESS_UNIT_GL = 'UNUNI';
--32229543
SELECT A.PROCESS_DATE, A.PROCESS_INSTANCE, A.BUSINESS_UNIT, A.PO_ID, C.PO_REF, C.BUYER_ID, C.VENDOR_ID, D.NAME1, TO_CHAR(C.PO_DT,'YYYY-MM-DD'), 
TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD'), TO_CHAR(C.ACTIVITY_DATE,'YYYY-MM-DD'), A.CHNG_ORD_SEQ, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, 
A.BUSINESS_UNIT_GL, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD1, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.TXN_CURRENCY_CD, 
A.FOREIGN_AMOUNT, A.MERCH_AMT_BSE, A.UN_OPEN_ENC_AMT, A.UN_OPEN_ENC_AMTBSE, A.UN_GAIN_LOSS,D.SETID,D.VENDOR_ID
FROM PS_UN_PO_REVAL A, PS_PO_HDR C, PS_VENDOR D
WHERE A.BUSINESS_UNIT = '600UU'
     AND A.PROCESS_INSTANCE = (SELECT MAX( B.PROCESS_INSTANCE) FROM PS_UN_PO_REVAL B WHERE B.PROCESS_DATE = A.PROCESS_DATE AND B.BUSINESS_UNIT_GL = A.BUSINESS_UNIT_GL)
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.PROCESS_DATE = TO_DATE('2013-03-31','YYYY-MM-DD')
     AND A.OPERATING_UNIT = '601'     
     AND A.ACCOUNT NOT BETWEEN '00001' AND '59999'
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND D.VENDOR_ID = C.VENDOR_ID
     AND D.SETID = C.VENDOR_SETID
ORDER BY 1, 2, 3, 4, 12, 13, 14, 15;

--UNU_OPEN_ITEM_BALANCES
SELECT B.OPEN_ITEM_KEY, A.BUSINESS_UNIT, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD2, SUM(B.MONETARY_AMOUNT) MONETARY_AMOUNT, 
            B.FOREIGN_CURRENCY, SUM(B.FOREIGN_AMOUNT) FOREIGN_AMOUNT
FROM PS_JRNL_HEADER A, PS_OPEN_ITEM_GL B
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.JRNL_HDR_STATUS IN ('P','U')
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE
     AND A.UNPOST_SEQ = B.UNPOST_SEQ
GROUP BY B.OPEN_ITEM_KEY, A.BUSINESS_UNIT, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD2, B.FOREIGN_CURRENCY
ORDER BY 1, 2, 3, 4, 5, 6, 7;

--Open Item Status
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, A.PROJECT_ID, A.BOOK_CODE, A.CURRENCY_CD, A.OPEN_ITEM_KEY, 
            A.OPEN_ITEM_STATUS, A.CLOSED_DT, A.OPENITEM_RECON_NBR, A.FOREIGN_CURRENCY, 
            SUM(A.FOREIGN_AMOUNT) AS FOREIGN_AMOUNT, SUM(A.MONETARY_AMOUNT) AS MONETARY_AMOUNT
FROM PS_OPEN_ITEM_GL A
WHERE BUSINESS_UNIT = 'UNUNI'
AND LEDGER = 'USD'
--AND OPEN_ITEM_KEY = '786081'
--AND JOURNAL_DATE BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-03-21','YYYY-MM-DD')
GROUP BY A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, A.PROJECT_ID, A.BOOK_CODE, A.CURRENCY_CD, A.OPEN_ITEM_KEY, 
               A.OPEN_ITEM_STATUS, A.CLOSED_DT, A.OPENITEM_RECON_NBR, A.FOREIGN_CURRENCY
ORDER BY A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, OPERATING_UNIT, FUND_CODE, CHARTFIELD2, A.PROJECT_ID, A.BOOK_CODE, A.CURRENCY_CD, A.OPEN_ITEM_KEY, 
               A.OPEN_ITEM_STATUS, A.CLOSED_DT, A.OPENITEM_RECON_NBR, A.FOREIGN_CURRENCY;
               
--OPEN_ITEM_ALL_BU
SELECT SUM( B.MONETARY_AMOUNT), B.OPEN_ITEM_KEY, A.BUSINESS_UNIT
FROM PS_JRNL_HEADER A, PS_OPEN_ITEM_GL B, PS_PERSONAL_DATA C
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND B.LEDGER = 'USD' 
    AND A.JRNL_HDR_STATUS IN ('P','U')
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.JOURNAL_ID = B.JOURNAL_ID
    AND A.JOURNAL_DATE = B.JOURNAL_DATE
    AND A.UNPOST_SEQ = B.UNPOST_SEQ    
    --AND B.OPEN_ITEM_KEY LIKE :1
    AND C.EMPLID = B.OPEN_ITEM_KEY
GROUP BY B.OPEN_ITEM_KEY, A.BUSINESS_UNIT

--OPEN_ITEM_RPT_DTL
SELECT B.MONETARY_AMOUNT, B.OPEN_ITEM_KEY, B.OPEN_ITEM_STATUS, B.CLOSED_DT, B.OPENITEM_RECON_NBR, 
            A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.LEDGER_GROUP
FROM PS_JRNL_HEADER A, PS_OPEN_ITEM_GL B, PS_PERSONAL_DATA C
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.JRNL_HDR_STATUS IN ('P','U')
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE
     AND A.UNPOST_SEQ = B.UNPOST_SEQ
     AND B.LEDGER = 'USD'
     --AND B.OPEN_ITEM_KEY LIKE :1
     AND C.EMPLID = B.OPEN_ITEM_KEY
     AND A.JOURNAL_DATE BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-03-21','YYYY-MM-DD')
ORDER BY ACCOUNTING_PERIOD;

SELECT * FROM PS_GL_ACCOUNT_TBL WHERE SETID = 'SHARE' AND OPEN_ITEM = 'Y';

--UNU_ALL_OPEN_ITEMS
SELECT B.JOURNAL_ID, B.JOURNAL_DATE, B.JOURNAL_LINE, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD2, B.PROJECT_ID, 
            B.OPEN_ITEM_KEY, B.MONETARY_AMOUNT, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, A.LINE_DESCR, B.OPEN_ITEM_STATUS, B.OPEN_DT, B.CLOSED_DT
FROM PS_JRNL_OPENITM_VW B, PS_JRNL_LN A, PS_JRNL_HEADER C
WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT
    AND B.JOURNAL_ID = A.JOURNAL_ID
    AND B.JOURNAL_DATE = A.JOURNAL_DATE
    AND B.UNPOST_SEQ = A.UNPOST_SEQ
    AND B.JOURNAL_LINE = A.JOURNAL_LINE
    AND B.LEDGER = A.LEDGER
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.JOURNAL_ID = C.JOURNAL_ID
    AND A.JOURNAL_DATE = C.JOURNAL_DATE
    AND A.UNPOST_SEQ = C.UNPOST_SEQ
    AND C.JRNL_HDR_STATUS IN ('P','U')
    AND C.FISCAL_YEAR <= 2014
    --AND B.OPEN_ITEM_STATUS LIKE :3
    --AND A.DEPTID BETWEEN :2 AND :5
    AND C.BUSINESS_UNIT = 'UNUNI'
    --AND B.ACCOUNT LIKE :6
ORDER BY 5, 4, 11, 1;

--UNU_OPEN_ITEMS_BY_DEPT
--GL Open Items by department
SELECT B.JOURNAL_ID, B.JOURNAL_DATE, B.JOURNAL_LINE, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.CHARTFIELD2, B.PROJECT_ID, B.OPEN_ITEM_KEY, 
            B.MONETARY_AMOUNT, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, A.LINE_DESCR
FROM PS_JRNL_OPENITM_VW B, PS_JRNL_LN A
WHERE B.BUSINESS_UNIT = 'UNUNI'
     AND B.OPEN_ITEM_STATUS = 'O'
     AND B.DEPTID = '11601'
     AND B.BUSINESS_UNIT = A.BUSINESS_UNIT
     AND B.JOURNAL_ID = A.JOURNAL_ID
     AND B.JOURNAL_DATE = A.JOURNAL_DATE
     AND B.UNPOST_SEQ = A.UNPOST_SEQ
     AND B.JOURNAL_LINE = A.JOURNAL_LINE
     AND B.LEDGER = A.LEDGER
ORDER BY 5, 4, 11, 1;

--UNU_PO_OPEN_VOUCHER
--Open POs and associated vchrs    
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_DT, A.ACCOUNTING_DT, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUYER_ID, A.VENDOR_SETID, A.VENDOR_ID,
            D.OPERATING_UNIT, D.DEPTID, D.ACCOUNT, D.FUND_CODE, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, 
            D.MERCH_AMT_BSE, E.BUSINESS_UNIT, E.VOUCHER_ID, E.VOUCHER_LINE_NUM, E.DISTRIB_LINE_NUM, E.MONETARY_AMOUNT, G.ENTRY_STATUS
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, PS_PO_LINE_DISTRIB D, PS_DISTRIB_LINE E, PS_VOUCHER_LINE F, PS_VOUCHER G
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.PO_STATUS NOT IN ('C','X')
    AND B.CANCEL_STATUS NOT IN ('C','X')
    AND C.CANCEL_STATUS NOT IN ('C','X')
    AND D.BUSINESS_UNIT =  E.BUSINESS_UNIT_PO(+)
    AND D.PO_ID =  E.PO_ID(+)
    AND D.LINE_NBR =  E.LINE_NBR(+)
    AND D.SCHED_NBR =  E.SCHED_NBR(+)
    AND D.DISTRIB_LINE_NUM =  E.PO_DIST_LINE_NUM(+)
    AND E.BUSINESS_UNIT = F.BUSINESS_UNIT (+)
    AND E.VOUCHER_ID = F.VOUCHER_ID (+)
    AND E.VOUCHER_LINE_NUM = F.VOUCHER_LINE_NUM (+)
    AND F.BUSINESS_UNIT = G.BUSINESS_UNIT (+)
    AND F.VOUCHER_ID = G.VOUCHER_ID (+)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.PO_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    --AND D.DEPTID = '11601'
ORDER BY 1,2,3;

--UNU_PO_OPEN_BY_DEPT
--Open PO Lines by Dept
SELECT B.BUSINESS_UNIT, B.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.DISTRIB_LINE_NUM, B.PO_DT, B.VENDOR_ID, B.PO_STATUS, B.BUDGET_HDR_STATUS, B.RECV_STATUS, B.MATCH_STATUS_PO, 
            C.REQ_ID, D.REQUESTOR_ID, C.BUDGET_DT, 
            B.PO_REF, C.MERCH_AMT_BSE, B.ACCOUNTING_DT, B.BUYER_ID, 
            C.OPERATING_UNIT, C.ACCOUNT, C.DEPTID, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, C.ACTIVITY_ID, C.KK_CLOSE_FLAG, A.DESCR254_MIXED
FROM PS_PO_LINE A, PS_PO_HDR B, PS_PO_LINE_DISTRIB C, PS_REQ_HDR D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PO_ID = C.PO_ID
    AND A.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT (+)
    AND C.REQ_ID = D.REQ_ID (+)
    AND B.BUSINESS_UNIT LIKE '6%'
    AND B.PO_STATUS NOT IN ('C','X')
    AND B.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    AND A.CANCEL_STATUS IN ('A','H')
    --AND C.DEPTID = ' '
ORDER BY 1, 2, 3, 4, 5, 6;

SELECT X.DEPTID, TO_CHAR(X.PO_DT, 'YYYY') AS YEAR, COUNT(1) FROM 
(SELECT B.BUSINESS_UNIT, B.PO_ID, B.PO_DT, B.VENDOR_ID, B.PO_STATUS, B.BUDGET_HDR_STATUS, B.RECV_STATUS, B.MATCH_STATUS_PO, C.LINE_NBR, C.REQ_ID, D.REQUESTOR_ID, C.BUDGET_DT, 
            B.PO_REF, C.MERCH_AMT_BSE, B.ACCOUNTING_DT, B.BUYER_ID, C.ACCOUNT, C.DEPTID, C.FUND_CODE, C.CHARTFIELD2, C.PROJECT_ID, C.ACTIVITY_ID, C.KK_CLOSE_FLAG, A.DESCR254_MIXED
FROM PS_PO_LINE A, PS_PO_HDR B, PS_PO_LINE_DISTRIB C, PS_REQ_HDR D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PO_ID = C.PO_ID
    AND A.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT =  D.BUSINESS_UNIT(+)
    AND D.REQ_ID(+) = C.REQ_ID
    AND B.BUSINESS_UNIT LIKE '6%'
    AND B.PO_STATUS NOT IN ('C','X')
    --AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
    AND A.CANCEL_STATUS IN ('A','H')
    --AND C.DEPTID = '11601'
    ) X
GROUP BY X.DEPTID, TO_CHAR(X.PO_DT, 'YYYY')
ORDER BY X.DEPTID, TO_CHAR(X.PO_DT, 'YYYY');

SELECT 'UNU_AP_POSTED_TRANS_DETAIL', A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_STYLE, B.VENDOR_ID, C.NAME1, C.NAME2, B.INVOICE_ID, B.INVOICE_DT, A.UNPOST_SEQ, A.POSTING_PROCESS, A.PYMNT_CNT, 
            A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, A.ACCOUNTING_DT, A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, 
            A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, A.SHIPTO_ID, A.POSTING_DATE, 
            A.BUSINESS_UNIT_GL, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.OPEN_ITEM_KEY, A.BUDGET_DT, A.DESCR, 
            A.JOURNAL_ID, A.JOURNAL_DATE, A.JOURNAL_LINE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.MONETARY_AMOUNT, A.QTY_VCHR
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER B, PS_VENDOR C, PS_JRNL_HEADER D
WHERE A.DST_ACCT_TYPE IN ('DST','RXL','RXG')
    AND A.GL_DISTRIB_STATUS = 'D'
    AND A.BUSINESS_UNIT_GL = 'UNUNI'    
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND C.VENDOR_ID = B.VENDOR_ID
    AND C.SETID = B.VENDOR_SETID
    AND A.BUSINESS_UNIT_GL = D.BUSINESS_UNIT
    AND D.JOURNAL_ID = A.JOURNAL_ID
    AND D.JOURNAL_DATE = A.JOURNAL_DATE
    AND D.JRNL_HDR_STATUS IN ('P','U')
    AND D.UNPOST_SEQ = 0
    AND C.VENDOR_ID = '0000000001'
    AND A.ACCOUNTING_DT BETWEEN TO_DATE('2011-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')    
ORDER BY 1, 2, 9, 10, 11, 12, 13, 14;

--UNAP531
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'), A.INVOICE_ID, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD'), A.VENDOR_ID, C.NAME1, 
            TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD'), B.FOREIGN_AMOUNT, B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD1, B.FUND_CODE, B.CHARTFIELD2, B.DEPTID, B.OPERATING_UNIT, 
            B.ACCOUNT, B.MONETARY_AMOUNT, D.BUSINESS_UNIT_GL, E.ADDRESS1, E.CITY, E.STATE, E.POSTAL, E.COUNTRY, F.DESCR, A.PO_ID, TO_CHAR(A.RECEIPT_DT,'YYYY-MM-DD'), G.DESCR, 
            G.VOUCHER_LINE_NUM, A.VOUCHER_STYLE, B.TXN_CURRENCY_CD, B.RT_TYPE, B.RATE_MULT, B.RATE_DIV, TO_CHAR(A.INVOICE_DT,'YYYY-MM-DD')            
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_VENDOR C, PS_BUS_UNIT_TBL_AP D, PS_VENDOR_ADDR E, PS_BUS_UNIT_TBL_FS F, PS_VOUCHER_LINE G, PS_SET_CNTRL_REC H
WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT
    AND B.VOUCHER_ID = A.VOUCHER_ID
    AND (A.BUSINESS_UNIT = '614UU'
    AND A.VOUCHER_ID BETWEEN '00015272' AND '00015272'
    AND H.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND H.RECNAME = 'VENDOR'
    AND C.SETID = H.SETID
    AND C.VENDOR_ID = A.VENDOR_ID
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.SETID = E.SETID
    AND C.VENDOR_ID = E.VENDOR_ID
    AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_VENDOR_ADDR E_ED WHERE E.SETID = E_ED.SETID AND E.VENDOR_ID = E_ED.VENDOR_ID AND E.ADDRESS_SEQ_NUM = E_ED.ADDRESS_SEQ_NUM
                                                                                                                        AND E_ED.EFFDT <= SYSDATE)
    AND A.ADDRESS_SEQ_NUM = E.ADDRESS_SEQ_NUM
    AND F.BUSINESS_UNIT = A.BUSINESS_UNIT
    AND B.BUSINESS_UNIT = G.BUSINESS_UNIT
    AND B.VOUCHER_ID = G.VOUCHER_ID
    AND B.VOUCHER_LINE_NUM = G.VOUCHER_LINE_NUM) 

SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'UN_RUN_AP531'
SELECT * FROM PS_UN_RUN_AP531 WHERE RUN_CNTL_ID = 'test' AND OPRID = 'nafissah.abd-wahab'
SELECT * FROM PS_UN_RUN_AP531 WHERE OPRID = 'prakash.prashant'
SELECT * FROM PS_UN_RUN_AP531 WHERE OPRID = 'sabrina.zwick'
SELECT * FROM PS_UN_RUN_AP531 WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID_FROM = '00015272' OR VOUCHER_ID_TO = '00015272'
SELECT * FROM PS_PRCSRUNCNTL WHERE RUN_CNTL_ID = 'sabrina.zwick'
SELECT * FROM PSPRCSRUNCNTL WHERE RUNCNTLID = 'sabrina.zwick'

SELECT 'LEVEL1', A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, 
            SUM( DECODE(SUBSTR(A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0)) AS BUDGET, 
            --SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            --SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) ENCUMBRANCE, 
            --SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE,
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS EXPANDENCANDPRE,
            SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'ENC',0-POSTED_BASE_AMT,'EXP',0-POSTED_BASE_AMT,0)) AS AVAILABLE
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.LEDGER LIKE 'ALT%'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUDGET_PERIOD IN ('2012', '2013')
    --AND A.DEPTID = 'B0119'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
    AND A.BUSINESS_UNIT = B.SETID
    AND A.DEPTID = B.DEPTID
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2
ORDER BY A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT;

SELECT * FROM PSQRYSTATS WHERE QRYNAME LIKE 'UNFPA%'
ORDER BY EXECCOUNT DESC;

SELECT * FROM PSQRYRECORD WHERE RECNAME = 'REQ_APPROVAL'
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'COMMENTS_TBL'

SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '600UU'

--UNU_PO_SELF_APPROVAL
SELECT A.BUSINESS_UNIT, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.OPRID_MODIFIED_BY, A.PO_ID, A.VENDOR_ID, A.PO_STATUS, A.PO_DT, A.PO_REF, A.BUYER_ID, 
            A.ENTERED_DT, A.APPROVAL_DT
FROM PS_PO_HDR A
WHERE A.OPRID_ENTERED_BY = A.OPRID_APPROVED_BY
     AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY A.BUSINESS_UNIT, A.PO_ID, A.PO_DT;

SELECT A.BUSINESS_UNIT, A.OPRID_ENTERED_BY, A.REQUESTOR_ID, A.OPRID_MODIFIED_BY, A.OPRID_APPROVED_BY, A.REQ_ID
FROM PS_REQ_HDR A
WHERE A.REQUESTOR_ID = A.OPRID_APPROVED_BY
    AND A.BUSINESS_UNIT LIKE '6%'


--UNU_VOUCHER_BY_DATE_NONPO
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, C.VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM, A.ACCOUNTING_DT, A.TXN_CURRENCY_CD, B.FOREIGN_AMOUNT, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD2, 
            B.MONETARY_AMOUNT, A.ENTRY_STATUS, A.POST_STATUS_AP, A.BUDGET_HDR_STATUS, A.VOUCHER_STYLE, A.INVOICE_ID, A.INVOICE_DT, B.DESCR, 
            B.BUDGET_DT
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_VOUCHER_LINE C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.VOUCHER_ID = C.VOUCHER_ID
     AND C.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND C.VOUCHER_ID = B.VOUCHER_ID
     AND C.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND TRIM( A.BUSINESS_UNIT_PO) IS NULL
     AND TRIM( B.BUSINESS_UNIT_PO) IS NULL
     AND TRIM( C.BUSINESS_UNIT_PO) IS NULL
     AND A.VOUCHER_STYLE <> 'JRNL'
     AND A.CLOSE_STATUS <> 'C'
ORDER BY 1, 2, 3, 4;

--UNU_REQ_TO_DO
--Does not work
SELECT A.REQ_ID, A.LINE_NBR, A.QTY_REQ, A.CATEGORY_ID, A.PRICE_REQ, C.DESCR, B.REQUESTOR_ID, A.INV_ITEM_ID, A.INVENTORY_SRC_FLG, A.DESCR254_MIXED            
FROM PS_REQ_LINE A, PS_REQ_HDR B, PS_ITM_CAT_TBL C, PS_REQ_LN_DISTRIB D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.REQ_STATUS = 'A'
     --AND A.BUYER_ID = :1
     AND A.SOURCE_STATUS = 'A'
     AND C.CATEGORY_ID = A.CATEGORY_ID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_ITM_CAT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.CATEGORY_TYPE = C_ED.CATEGORY_TYPE AND C.CATEGORY_CD = C_ED.CATEGORY_CD
                                                                                                                       AND C.CATEGORY_ID = C_ED.CATEGORY_ID AND C_ED.EFFDT <= SYSDATE)
     AND C.SETID = 'UNUNI'
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.REQ_ID = D.REQ_ID
     AND A.LINE_NBR = D.LINE_NBR
     AND D.KK_CLOSE_FLAG = 'N'

--UNU_NON_CORE_FUNDS_VS_BUDGET
SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.FUND_CODE, B.DESCRSHORT, 
            SUM(DECODE(A.LEDGER,'AX1_UU_BUD',0- A.POSTED_BASE_AMT,'REV_UU_REC',0- A.POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'CHD_UU_BUD',0- A.POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'AX1_UU_BUD',0-POSTED_BASE_AMT,'REV_UU_REC',0-POSTED_BASE_AMT,'CHD_UU_BUD',POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'CHD_UU_PRE',POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'CHD_UU_ENC',POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'CHD_UU_EXP',POSTED_BASE_AMT,0)), 
            SUM( DECODE(LEDGER,'CHD_UU_ENC',POSTED_BASE_AMT,'CHD_UU_EXP',POSTED_BASE_AMT,0))
FROM PS_LEDGER_KK A, PS_FUND_TBL B
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUDGET_PERIOD = '2012'
     AND (A.LEDGER IN ('AX1_UU_BUD','REV_UU_REC') OR A.LEDGER LIKE 'CHD%')
     --AND A.FUND_CODE >= :3
     --AND A.FUND_CODE <= :4
     AND A.FUND_CODE = B.FUND_CODE
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_FUND_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.FUND_CODE = B_ED.FUND_CODE AND B_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.SETID
GROUP BY  A.BUSINESS_UNIT,  A.BUDGET_PERIOD,  A.FUND_CODE,  B.DESCRSHORT,B.SETID,B.FUND_CODE,TO_CHAR(B.EFFDT,'YYYY-MM-DD')
ORDER BY 3

--UNU_AP_PAYMENTS_BY_VENDOR
--List all payments to a vendor     
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.VENDOR_ID, D.VENDOR_NAME_SHORT, C.PYMNT_ID_REF, C.PYMNT_DT, C.PYMNT_METHOD, C.PYMNT_STATUS, 
            A.VOUCHER_STYLE, B.PAID_AMT, B.CURRENCY_PYMNT, B.PAID_AMT_BSE, C.REMIT_BANK_ACCOUNT, C.DFI_ID_NUM            
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_PAYMENT_TBL C, PS_VENDOR D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND C.BANK_SETID = B.BANK_SETID
     AND C.BANK_CD = B.BANK_CD
     AND C.BANK_ACCT_KEY = B.BANK_ACCT_KEY
     AND C.PYMNT_ID = B.PYMNT_ID
     AND D.VENDOR_ID = A.VENDOR_ID
     AND D.SETID = A.VENDOR_SETID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.VENDOR_SETID = 'UNUNI'
     AND A.VENDOR_ID = '0000005935'
ORDER BY 1, 2, 6; 

--UNU_PO_BY_REQUESTOR
SELECT B.BUSINESS_UNIT, A.REQ_ID, B.PO_ID, E.VOUCHER_ID, D.ENTRY_STATUS, SUM(E.MERCH_AMT_BSE)
FROM PS_REQ_HDR A, PS_PO_LINE_DISTRIB B, PS_VOUCHER D, PS_DISTRIB_LINE E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     --AND A.REQUESTOR_ID = :1
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.VOUCHER_ID = E.VOUCHER_ID
     --AND TO_CHAR( A.REQ_DT,'YYYY') = :2
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.BUSINESS_UNIT = E.BUSINESS_UNIT_PO
     AND B.PO_ID = E.PO_ID
     AND B.LINE_NBR = E.LINE_NBR
     AND B.SCHED_NBR = E.SCHED_NBR
     AND B.DISTRIB_LINE_NUM = E.PO_DIST_LINE_NUM
GROUP BY B.BUSINESS_UNIT, A.REQ_ID, B.PO_ID, E.VOUCHER_ID, D.ENTRY_STATUS

--UNU_REQS_FOR_A_PROJECT
--Requistions for a project
SELECT B.DESCR254_MIXED, A.BUSINESS_UNIT, A.REQ_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.QTY_REQ, D.QTY_REQ, A.QTY_OPEN, B.ITM_SETID, B.INV_ITEM_ID, B.VENDOR_SETID,
            B.BUYER_ID, B.CATEGORY_ID, B.UNIT_OF_MEASURE, 
            B.VENDOR_ID, A.ACCOUNT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.MERCHANDISE_AMT, A.CURRENCY_CD, A.MERCH_AMT_BSE, 
            A.BUDGET_DT, A.DISTRIB_LN_STATUS, C.REQ_STATUS, D.SHIPTO_ID, A.BUSINESS_UNIT_AM, A.PROFILE_ID, A.TAG_NUMBER
FROM PS_REQ_LN_DISTRIB A, PS_REQ_LINE B, PS_REQ_HDR C, PS_REQ_LINE_SHIP D
WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.REQ_ID = C.REQ_ID
     AND B.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND B.REQ_ID = D.REQ_ID
     AND B.LINE_NBR = D.LINE_NBR
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.REQ_ID = D.REQ_ID
     AND A.LINE_NBR = D.LINE_NBR
     AND A.SCHED_NBR = D.SCHED_NBR
     AND A.BUDGET_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2015-12-31','YYYY-MM-DD')
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT_PC = 'UNUNI'
     AND A.PROJECT_ID = '00064158'
     
--UNU_UNMATCHED_PO     
SELECT DISTINCT B.BUSINESS_UNIT, B.PO_ID, B.PO_DT, B.VENDOR_ID, B.PO_STATUS, B.RECV_STATUS, B.MATCH_STATUS_PO
FROM PS_PO_LINE A, PS_PO_HDR B, PS_PO_LINE_DISTRIB C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND B.PO_STATUS NOT IN ('C','X')
     AND B.MATCH_STATUS_PO NOT IN ('M','N')
     AND A.CANCEL_STATUS <> 'X'
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND A.LINE_NBR = C.LINE_NBR
     AND C.KK_CLOSE_FLAG = 'N'
ORDER BY 1, 2;

--UNU_VENDORS_FOR_A_COUNTRY
SELECT DISTINCT A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.VNDR_NAME_SHRT_USR, A.VNDR_NAME_SEQ_NUM, A.NAME1, A.NAME2, A.VENDOR_CLASS, A.ENTERED_BY, 
            A.LAST_ACTIVITY_DT, A.AR_NUM, A.OLD_VENDOR_ID, A.VNDR_STATUS_PO, A.HRMS_CLASS, B.COUNTRY
FROM PS_VENDOR A, PS_VENDOR_ADDR B
WHERE B.SETID = A.SETID
    AND B.VENDOR_ID = A.VENDOR_ID
    AND (A.SETID = 'UNUNI'
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_VENDOR_ADDR B_ED WHERE B.SETID = B_ED.SETID AND B.VENDOR_ID = B_ED.VENDOR_ID AND B.ADDRESS_SEQ_NUM = B_ED.ADDRESS_SEQ_NUM
                                                                                                                       AND B_ED.EFFDT <= SYSDATE)
    --AND B.COUNTRY = :1
    AND A.VENDOR_STATUS = 'A' )
ORDER BY 1;

--UNU_PO_PAYMENTS
SELECT A.BUSINESS_UNIT, A.PO_ID, A.BUYER_ID, B.LINE_NBR, C.SCHED_NBR, C.MERCH_AMT_BSE, E.INVOICE_ID, E.VOUCHER_ID, F.SCHEDULED_PAY_DT, G.PYMNT_DT, G.PYMNT_ID_REF, 
            A.PO_STATUS
FROM PS_PO_HDR A, PS_PO_LINE B, ((((PS_PO_LINE_SHIP C LEFT OUTER JOIN PS_VOUCHER_LINE D ON C.BUSINESS_UNIT = D.BUSINESS_UNIT_PO
                                                                                                                                                  AND C.PO_ID = D.PO_ID 
                                                                                                                                                  AND C.LINE_NBR = D.LINE_NBR 
                                                                                                                                                  AND C.SCHED_NBR = D.SCHED_NBR ) 
                                                                                         LEFT OUTER JOIN PS_VOUCHER E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT 
                                                                                                                                           AND D.VOUCHER_ID = E.VOUCHER_ID 
                                                                                                                                           AND E.ENTRY_STATUS <> 'X' ) 
                                                                                        LEFT OUTER JOIN PS_PYMNT_VCHR_XREF F ON E.BUSINESS_UNIT = F.BUSINESS_UNIT 
                                                                                                                                                AND E.VOUCHER_ID = F.VOUCHER_ID 
                                                                                                                                                AND F.PYMNT_SELCT_STATUS <> 'X' ) 
                                                                                       LEFT OUTER JOIN PS_PAYMENT_TBL G ON G.BANK_SETID = F.BANK_SETID 
                                                                                                                                              AND G.BANK_CD = F.BANK_CD 
                                                                                                                                              AND G.BANK_ACCT_KEY = F.BANK_ACCT_KEY 
                                                                                                                                              AND G.PYMNT_ID = F.PYMNT_ID )
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.PO_ID = C.PO_ID
     AND B.LINE_NBR = C.LINE_NBR
     AND C.CANCEL_STATUS <> 'X'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.PO_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.VENDOR_ID = '0000000157'
     --AND A.BUYER_ID LIKE :5
     
SELECT * FROM PS_JRNL_EDIT_LOG;

--Reversal Option selected for these journals - treasury
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('0004800542', '0004800545', '0004800550', '0004800563', '0004804837')
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND PROCESS_INSTANCE = 31834930
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 31834930

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND REVERSAL_CD <> 'N' AND SOURCE = 'ONL' ORDER BY 3

SELECT FISCAL_YEAR, ACCOUNTING_PERIOD, SOURCE, COUNT(1) FROM PS_JRNL_HEADER 
WHERE BUSINESS_UNIT = 'UNUNI' 
    AND REVERSAL_CD <> 'N'
GROUP BY FISCAL_YEAR, ACCOUNTING_PERIOD, SOURCE
ORDER BY 1,2,3;

SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196', '201')
SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID IN ('AR04746033', 'AR04768103')

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('AR04746033', 'AR04768103')


--Total paid to Vendor by Currency
SELECT X.NAME1, X.YEAR, X.CURRENCY, SUM(X.AMT_PAID) AMT_PAID, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM
(SELECT NAME1, TO_CHAR(PYMNT_DT, 'YYYY') AS YEAR, CURRENCY_PYMNT AS CURRENCY, SUM(PYMNT_AMT) AS AMT_PAID 
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '01' THEN SUM(PYMNT_AMT) ELSE 0 END AS JAN
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '02' THEN SUM(PYMNT_AMT) ELSE 0 END AS FEB
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '03' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAR
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '04' THEN SUM(PYMNT_AMT) ELSE 0 END AS APR
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '05' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAY
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '06' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUN
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '07' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUL
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '08' THEN SUM(PYMNT_AMT) ELSE 0 END AS AUG
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '09' THEN SUM(PYMNT_AMT) ELSE 0 END AS SEP
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '10' THEN SUM(PYMNT_AMT) ELSE 0 END AS OCT
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '11' THEN SUM(PYMNT_AMT) ELSE 0 END AS NOV
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '12' THEN SUM(PYMNT_AMT) ELSE 0 END AS DEC
FROM PS_PMT_INQ_SRCH_VW
WHERE REMIT_SETID = 'UNUNI' 
  AND REMIT_VENDOR LIKE '%5935'
  --AND (UPPER(NAME1) LIKE '%TOUR%' OR UPPER(NAME1) LIKE '%TRAVEL%')
  AND PYMNT_STATUS NOT IN ('V', 'X')
  AND POST_STATUS_AP = 'P'
  --AND TO_CHAR(PYMNT_DT, 'YYYY') = '2013'
GROUP BY NAME1, TO_CHAR(PYMNT_DT, 'YYYY'), TO_CHAR(PYMNT_DT,'MM'), CURRENCY_PYMNT) X
GROUP BY X.NAME1, X.YEAR, X.CURRENCY
ORDER BY 1,2;

--Total paid to Vendor by Currency
--Version 2
SELECT X.REMIT_VENDOR, X.NAME1, X.V_NAME, X.VENDOR_CLASS, X.YEAR, X.CURRENCY, 
            SUM(X.AMT_PAID) AMT_PAID, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM
(SELECT P.REMIT_VENDOR, P.NAME1, V.NAME1 AS V_NAME, V.VENDOR_CLASS, TO_CHAR(PYMNT_DT, 'YYYY') AS YEAR, CURRENCY_PYMNT AS CURRENCY, SUM(PYMNT_AMT) AS AMT_PAID 
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '01' THEN SUM(PYMNT_AMT) ELSE 0 END AS JAN
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '02' THEN SUM(PYMNT_AMT) ELSE 0 END AS FEB
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '03' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAR
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '04' THEN SUM(PYMNT_AMT) ELSE 0 END AS APR
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '05' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAY
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '06' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUN
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '07' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUL
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '08' THEN SUM(PYMNT_AMT) ELSE 0 END AS AUG
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '09' THEN SUM(PYMNT_AMT) ELSE 0 END AS SEP
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '10' THEN SUM(PYMNT_AMT) ELSE 0 END AS OCT
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '11' THEN SUM(PYMNT_AMT) ELSE 0 END AS NOV
          , CASE TO_CHAR(PYMNT_DT,'MM') WHEN '12' THEN SUM(PYMNT_AMT) ELSE 0 END AS DEC
FROM PS_PMT_INQ_SRCH_VW P, PS_VENDOR V
WHERE V.SETID = P.REMIT_SETID
    AND V.VENDOR_ID = P.REMIT_VENDOR
    AND P.REMIT_SETID = 'UNUNI'
    AND PYMNT_STATUS NOT IN ('V', 'X')
    AND POST_STATUS_AP = 'P'
    --AND TO_CHAR(PYMNT_DT, 'YYYY') = '2013'
    --AND V.VENDOR_CLASS = 'C'
    AND V.VENDOR_STATUS = 'A'
    AND P.REMIT_VENDOR LIKE '%0157'
GROUP BY P.REMIT_VENDOR, P.NAME1, V.NAME1, V.VENDOR_CLASS, TO_CHAR(PYMNT_DT, 'YYYY'), TO_CHAR(PYMNT_DT,'MM'), CURRENCY_PYMNT) X
GROUP BY X.REMIT_VENDOR, X.NAME1, X.V_NAME, X.VENDOR_CLASS, X.YEAR, X.CURRENCY
ORDER BY 1,2;

--Total paid to Vendor by Currency
--Version 3
--Not reporting correctly yet
SELECT X.REMIT_VENDOR, X.NAME1, X.V_NAME, X.VENDOR_CLASS, X.YEAR, SUM(X.BASE_AMT) AS USD_AMT, X.CURRENCY, 
            SUM(X.AMT_PAID) AMT_PAID, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM
(SELECT P.REMIT_VENDOR, P.NAME1, V.NAME1 AS V_NAME, V.VENDOR_CLASS, TO_CHAR(P.PYMNT_DT, 'YYYY') AS YEAR, SUM(PAID_AMT_GROSS_BSE) AS BASE_AMT, 
             P.CURRENCY_PYMNT AS CURRENCY, SUM(P.PYMNT_AMT) AS AMT_PAID 
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '01' THEN SUM(PYMNT_AMT) ELSE 0 END AS JAN
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '02' THEN SUM(PYMNT_AMT) ELSE 0 END AS FEB
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '03' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAR
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '04' THEN SUM(PYMNT_AMT) ELSE 0 END AS APR
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '05' THEN SUM(PYMNT_AMT) ELSE 0 END AS MAY
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '06' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUN
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '07' THEN SUM(PYMNT_AMT) ELSE 0 END AS JUL
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '08' THEN SUM(PYMNT_AMT) ELSE 0 END AS AUG
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '09' THEN SUM(PYMNT_AMT) ELSE 0 END AS SEP
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '10' THEN SUM(PYMNT_AMT) ELSE 0 END AS OCT
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '11' THEN SUM(PYMNT_AMT) ELSE 0 END AS NOV
          , CASE TO_CHAR(P.PYMNT_DT,'MM') WHEN '12' THEN SUM(PYMNT_AMT) ELSE 0 END AS DEC
FROM PS_PMT_INQ_SRCH_VW P, PS_VENDOR V, PS_PYMNT_VCHR_XREF D
WHERE V.SETID = P.REMIT_SETID
    AND V.VENDOR_ID = P.REMIT_VENDOR
    AND D.BANK_SETID = P.BANK_SETID
    AND D.BANK_CD= P.BANK_CD
    AND D.BANK_ACCT_KEY = P.BANK_ACCT_KEY
    AND D.PYMNT_ID = P.PYMNT_ID
    AND P.REMIT_SETID = 'UNUNI'
    AND PYMNT_STATUS NOT IN ('V', 'X')
    AND P.POST_STATUS_AP = 'P'
    --AND TO_CHAR(P.PYMNT_DT, 'YYYY') = '2013'
    --AND V.VENDOR_CLASS = 'C'
    AND V.VENDOR_STATUS = 'A'
    AND P.REMIT_VENDOR LIKE '%5935'
GROUP BY P.REMIT_VENDOR, P.NAME1, V.NAME1, V.VENDOR_CLASS, TO_CHAR(P.PYMNT_DT, 'YYYY'), TO_CHAR(P.PYMNT_DT,'MM'), P.CURRENCY_PYMNT) X
GROUP BY X.REMIT_VENDOR, X.NAME1, X.V_NAME, X.VENDOR_CLASS, X.YEAR, X.CURRENCY
ORDER BY 1,2;

--Monetary Amount from Journal based on SOURCE
SELECT H.SOURCE, A.ACCOUNT, A.CURRENCY_CD, SUM(A.MONETARY_AMOUNT)
FROM PS_JRNL_LN A, PS_JRNL_HEADER H
WHERE A.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND A.JOURNAL_ID = H.JOURNAL_ID
    AND A.JOURNAL_DATE = H.JOURNAL_DATE
    AND A.UNPOST_SEQ = H.UNPOST_SEQ
    AND H.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'USD'
    AND H.FISCAL_YEAR = '2012'
    --AND A.ACCOUNT = '11004'
    --AND H.SOURCE = 'YEC'
    --AND H.JRNL_HDR_STATUS NOT IN ('D')
GROUP BY H.SOURCE, A.ACCOUNT, A.CURRENCY_CD
ORDER BY 1,2;

SELECT DISTINCT JOURNAL_ID, BUSINESS_UNIT_IU, JOURNAL_DATE, LEDGER_GROUP, SOURCE, SYSTEM_SOURCE, PROC_PART_ID, JRNL_HDR_STATUS, DESCR, PROCESS_INSTANCE 
FROM PS_JRNL_HEADER
WHERE BUSINESS_UNIT = 'UNUNI'
    --AND SOURCE = 'AP'
    AND JRNL_HDR_STATUS IN ('N','E','V')
    
SELECT SOURCE, SYSTEM_SOURCE, A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004759289'
SELECT SOURCE, SYSTEM_SOURCE, A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004755433'
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004755433'
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004759289'
SELECT * FROM PS_OPEN_ITEM_GL WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004755433'
SELECT * FROM PS_OPEN_ITEM_GL WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004759289'

--AP_ACCTLN_VW
--Check Vouchers which have yet to undergo RXL & RXG Budget Check or have failed budget check
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID--, BUDGET_HDR_STATUS, VOUCHER_LINE_NUM, DISTRIB_LINE_NUM, BUDGET_LINE_STATUS, DST_ACCT_TYPE
FROM PS_VCHR_ACCTG_LINE
WHERE BUSINESS_UNIT LIKE '6%'
    AND BUDGET_HDR_STATUS IN ('N','E')
    AND DST_ACCT_TYPE NOT IN ('APA','IUP','DSE','RSA')
    AND PRIMARY_LEDGER = 'Y'
ORDER BY 1,2;

--AP_VCHR_KK_VW
--Check Vouchers which have yet to undergo Budget Check or have failed budget check
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID, INVOICE_ID, INVOICE_DT, VENDOR_ID 
FROM PS_VOUCHER
WHERE BUSINESS_UNIT LIKE '6%'
    AND BUDGET_HDR_STATUS IN ('N', 'E')
    AND ENTRY_STATUS <> 'X'
    AND APPR_STATUS IN ('A','P')
ORDER BY 1,2;

SELECT * FROM PS_VCHR_ACCTG_LINE
WHERE BUSINESS_UNIT LIKE '6%'
    AND BUDGET_HDR_STATUS IN ('N','E')
    AND DST_ACCT_TYPE NOT IN ('APA','IUP','DSE','RSA')
    AND PRIMARY_LEDGER = 'Y'
ORDER BY 1,2,9;

SELECT * FROM PS_VENDOR_PAY WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000005935'
SELECT * FROM PS_BANK_ACCT_DEFN WHERE SETID = 'SHARE' AND BANK_CD = '60002' AND BANK_ACCT_KEY = '1001'

SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196', '201')
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196', '201')

SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196', '201')
SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID IN ('196', '201')
SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID = 'AR04833267'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'AR04833267'

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = '32137216'

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND SOURCE = 'AP' AND JRNL_HDR_STATUS = 'V'
SELECT * FROM PS_GL_JCOBOL_TMP WHERE BUSINESS_UNIT = 'UNUNI'

--DELETE PS_GL_JCOBOL_TMP WHERE PROCESS_INSTANCE = '32139086'
--DELETE PS_GL_JCOBOL_TMP WHERE PROCESS_INSTANCE = 32139796
SELECT 'LOCKED_JOURNALS', A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_LOCKED = 'Y';

SELECT * FROM PS_GL_JCOBOL_TMP WHERE PROCESS_INSTANCE = '34612675'
--DELETE PS_GL_JCOBOL_TMP WHERE PROCESS_INSTANCE = 34612675

SELECT * FROM PS_MESSAGE_LOG WHERE PROCESS_INSTANCE = '32139796';
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 65 AND MESSAGE_NBR = 30;
SELECT * FROM PS_MESSAGE_LOGPARM WHERE PROCESS_INSTANCE = '32139796';

SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ 
    --AND PL.PROCESS_INSTANCE = 32139796
    --AND PL.PROCESS_INSTANCE =32344197
    --AND PL.PROCESS_INSTANCE =34121930
    AND ML.MESSAGE_SET_NBR = 65
    AND ML.MESSAGE_NBR = 30
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ;

--Find the Message Log text for programs WHERE RUNSTATUS <> 9
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS,
            LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = 65
    AND ML.MESSAGE_NBR = 30
    AND (PR.OPRID = 'prakash.prashant' OR 
           (PR.PRCSJOBNAME LIKE 'UNU%' OR PR.MAINJOBNAME LIKE 'UNU%'))
    --AND PR.RUNSTATUS <> 9
    --AND PL.PROCESS_INSTANCE IN (SELECT PRCSINSTANCE FROM PSPRCSRQST B 
      --                                                                                 WHERE (B.OPRID = 'prakash.prashant' or (B.PRCSJOBNAME LIKE 'UNU%' OR B.MAINJOBNAME LIKE 'UNU%')) AND B.RUNSTATUS <> 9)
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS;

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = '32121272'
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'RUNSTATUS'

--Monitor runs of AE which have not ended Successfully
SELECT AE.PROCESS_INSTANCE, AE.CURTEMPINSTANCE, AE.OPRID, AE.RUN_CNTL_ID, AE.AE_APPLID, AE.AE_DISABLE_RESTART, AE.AE_DEDICATED, AE.AE_TRUNCATED,
            PRCS.RUNSTATUS, LISTAGG(AE.RECNAME, '|') WITHIN GROUP (ORDER BY AE.RUN_DTTM) RECNAME
FROM PS_AETEMPTBLMGR AE, PSPRCSRQST PRCS
WHERE PRCS.PRCSINSTANCE = AE.PROCESS_INSTANCE
    AND PRCS.RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6)
GROUP BY AE.PROCESS_INSTANCE, AE.CURTEMPINSTANCE, AE.OPRID, AE.RUN_CNTL_ID, AE.AE_APPLID, AE.AE_DISABLE_RESTART, AE.AE_DEDICATED, AE.AE_TRUNCATED, PRCS.RUNSTATUS
ORDER BY AE.PROCESS_INSTANCE DESC, AE.CURTEMPINSTANCE;

--Capture Message Log for failed runs of AE
--PI is returned by the query above
--Still testing the XMLAGG, seems to be running slow
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT,
            RTRIM(XMLAGG(XMLELEMENT(E, PL.MESSAGE_PARM, '|').EXTRACT('//text()') ORDER BY PL.PARM_SEQ).GETCLOBVAL(),',') AS MESSAGE_PARM
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN MSG
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = MSG.MESSAGE_NBR    
    --AND PL.PROCESS_INSTANCE IN (SELECT DISTINCT AE.PROCESS_INSTANCE FROM PS_AETEMPTBLMGR AE, PSPRCSRQST PRCS WHERE PRCS.PRCSINSTANCE = AE.PROCESS_INSTANCE
    --                                                                                                                                                                                               AND PRCS.RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6))
    AND PL.PROCESS_INSTANCE = 37617612
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--Added Message Set Number and Message Number to the Query for filtering purposes
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, 
            MSG.MESSAGE_NBR, RTRIM(XMLAGG(XMLELEMENT(E, PL.MESSAGE_PARM, '|').EXTRACT('//text()') ORDER BY PL.PARM_SEQ).GETCLOBVAL(),',') AS MESSAGE_PARM
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN MSG
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = MSG.MESSAGE_NBR    
    AND PL.PROCESS_INSTANCE IN (SELECT DISTINCT AE.PROCESS_INSTANCE FROM PS_AETEMPTBLMGR AE, PSPRCSRQST PRCS WHERE PRCS.PRCSINSTANCE = AE.PROCESS_INSTANCE
    AND PRCS.RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6))
    --AND PL.PROCESS_INSTANCE = 37617612
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, 
               MSG.MESSAGE_NBR
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--Exclusive AE Monitoring
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, 
            MSG.MESSAGE_SET_NBR, MSG.MESSAGE_NBR, RTRIM(XMLAGG(XMLELEMENT(E, PL.MESSAGE_PARM, '|').EXTRACT('//text()') ORDER BY PL.PARM_SEQ).GETCLOBVAL(),',') AS MESSAGE_PARM
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN MSG
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = MSG.MESSAGE_NBR    
    AND PL.PROCESS_INSTANCE IN (SELECT DISTINCT AE.PROCESS_INSTANCE FROM PS_AETEMPTBLMGR AE, PSPRCSRQST PRCS 
                                                                                                                 WHERE PRCS.PRCSINSTANCE = AE.PROCESS_INSTANCE AND PRCS.RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6))
    --AND PL.PROCESS_INSTANCE = 37617612
    --AND ML.MESSAGE_SET_NBR = 108
    --including 65,20 to see the dynamic messages
    AND ((ML.MESSAGE_SET_NBR = 108) OR (ML.MESSAGE_SET_NBR = 65 AND MSG.MESSAGE_NBR = 30))
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, 
               MSG.MESSAGE_NBR
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--Monitoring for Processes/Jobs which have not run successfully within the last 1 day from date of running
SELECT PL.PROCESS_INSTANCE, PR.OPRID, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, 
       ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, MSG.MESSAGE_NBR, 
       RTRIM(XMLAGG(XMLELEMENT(E, PL.MESSAGE_PARM, '|').EXTRACT('//text()') ORDER BY PL.PARM_SEQ).GETCLOBVAL(),',') AS MESSAGE_PARM
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN MSG
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = MSG.MESSAGE_NBR
    AND ((ML.MESSAGE_SET_NBR = 108) --OR (ML.MESSAGE_SET_NBR = 65 AND MSG.MESSAGE_NBR = 30)
    )
    AND PR.RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6)
    AND TO_CHAR(((RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY PL.PROCESS_INSTANCE, PR.OPRID, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, 
         ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, MSG.MESSAGE_NBR
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--Trying to modify to include all ACTIVE UNU Users
--Not working
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS,
            LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = 65
    AND ML.MESSAGE_NBR = 30
    AND ((PR.OPRID = 'prakash.prashant') OR
           (PR.PRCSJOBNAME LIKE 'UNU%' OR PR.MAINJOBNAME LIKE 'UNU%') OR
           (PR.OPRID IN (SELECT ROLEUSER FROM PSROLEUSER 
                                WHERE ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0))))
    AND PR.RUNSTATUS <> 9
    --AND PL.PROCESS_INSTANCE IN (SELECT PRCSINSTANCE FROM PSPRCSRQST B 
      --                                                                                 WHERE (B.OPRID = 'prakash.prashant' or (B.PRCSJOBNAME LIKE 'UNU%' OR B.MAINJOBNAME LIKE 'UNU%')) AND B.RUNSTATUS <> 9)
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS;

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = '2012' AND TO_CHAR(DTTM_STAMP_SEC, 'YYYY-MM-DD') >= '2013-04-01'
ORDER BY DTTM_STAMP_SEC

SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = '2011' AND SOURCE = 'YEC'
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '31005' AND FUND_CODE = '01300' AND JOURNAL_ID LIKE 'YEC%'
ORDER BY JOURNAL_DATE

--KK Exceptions with more details
SELECT A.KK_TRAN_ID, TO_CHAR(A.KK_TRAN_DT,'YYYY-MM-DD') As KK_TRAN_DT, A.KK_SOURCE_TRAN, A.KK_PROCESS_STATUS, C.EXCPTN_TYPE, D.XLATLONGNAME, 
       A.KK_PROC_INSTANCE, A.BUSINESS_UNIT, A.DEPOSIT_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DATE, A.JOURNAL_ID, A.PO_ID, 
       F.PO_STATUS, F.VENDOR_ID, F.BUYER_ID, F.OPRID_ENTERED_BY, F.OPRID_APPROVED_BY, F.IN_PROCESS_FLG, F.BUDGET_HDR_STATUS, 
       A.REQ_ID, G.REQ_STATUS, G.REQUESTOR_ID, G.OPRID_APPROVED_BY, G.IN_PROCESS_FLG, G.BUDGET_HDR_STATUS, G.BUDGET_CHECK, 
       A.VOUCHER_ID, A.KEYLIST, B.KK_TRAN_LN, B.JOURNAL_LINE, B.LEDGER, B.UNPOST_SEQ, C.LEDGER_GROUP, C.BUSINESS_UNIT, 
       C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, 
       C.BUDGET_PERIOD, C.MESSAGE_NBR, C.MESSAGE_PARM1, C.MESSAGE_PARM2, C.MESSAGE_PARM3, C.MESSAGE_PARM4, C.PROCESS_INSTANCE, 
       E.PRCSTYPE, E.PRCSNAME, E.OPRID, E.RUNSTATUS, TO_CHAR(CAST((E.BEGINDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS BEGINDTTM, 
       TO_CHAR(CAST((E.ENDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS ENDDTTM, E.RUNCNTLID      
FROM PS_KK_SOURCE_HDR A, PS_KK_SOURCE_LN B, PS_KK_EXCPTN_TBL C, PSXLATITEM D, PSPRCSRQST E, PS_PO_HDR F, PS_REQ_HDR G
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
  AND A.KK_TRAN_DT = B.KK_TRAN_DT
  AND B.KK_TRAN_ID = C.KK_TRAN_ID
  AND B.KK_TRAN_DT = C.KK_TRAN_DT
  AND B.KK_TRAN_LN = C.KK_TRAN_LN
  AND ( A.BUSINESS_UNIT = 'UNUNI' OR A.BUSINESS_UNIT LIKE '6%')
  AND A.KK_PROCESS_STATUS NOT IN ('V', 'W')
  AND TO_CHAR(A.KK_TRAN_DT, 'YYYY') IN ('2014')
  AND D.FIELDNAME = 'EXCPTN_TYPE'
  AND D.FIELDVALUE = C.EXCPTN_TYPE
  AND C.PROCESS_INSTANCE =  E.PRCSINSTANCE (+)
  AND A.BUSINESS_UNIT =  F.BUSINESS_UNIT (+)
  AND A.PO_ID =  F.PO_ID (+)
  AND A.BUSINESS_UNIT =  G.BUSINESS_UNIT (+)
  AND A.REQ_ID =  G.REQ_ID (+)
ORDER BY 2 DESC;

SELECT * FROM PSQRYRECORD WHERE RECNAME = 'KK_OVERRIDE_TBL'

--Modified version of (KK Exceptions with more details) query
--Includes the Message Text and DESCRLONG from Message Catalog
SELECT A.KK_TRAN_ID, TO_CHAR(A.KK_TRAN_DT,'YYYY-MM-DD') As KK_TRAN_DT, A.KK_SOURCE_TRAN, A.KK_PROCESS_STATUS, C.EXCPTN_TYPE, D.XLATLONGNAME, 
       A.KK_PROC_INSTANCE, A.BUSINESS_UNIT, A.CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, 
       A.INVOICE, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.JOURNAL_DATE, A.JOURNAL_ID, B.JOURNAL_LINE, B.LEDGER, B.UNPOST_SEQ,
       A.REQ_ID, G.REQ_STATUS, G.REQUESTOR_ID, G.OPRID_APPROVED_BY, G.IN_PROCESS_FLG, G.BUDGET_HDR_STATUS, G.BUDGET_CHECK,
       A.PO_ID, B.LINE_NBR, B.SCHED_NBR, F.PO_STATUS, F.VENDOR_ID, F.BUYER_ID, F.OPRID_ENTERED_BY, F.OPRID_APPROVED_BY, F.IN_PROCESS_FLG, F.BUDGET_HDR_STATUS,        
       A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.VOUCHER_ID, B.VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM,
       A.KEYLIST, B.KK_TRAN_LN, C.LEDGER_GROUP, C.BUSINESS_UNIT, 
       C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, 
       C.BUDGET_PERIOD, C.MESSAGE_NBR, C.MESSAGE_PARM1, C.MESSAGE_PARM2, C.MESSAGE_PARM3, C.MESSAGE_PARM4, MSG.MESSAGE_TEXT, MSG.DESCRLONG, 
       C.PROCESS_INSTANCE, E.PRCSTYPE, E.PRCSNAME, E.OPRID, E.RUNSTATUS, TO_CHAR(CAST((E.BEGINDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS BEGINDTTM, 
       TO_CHAR(CAST((E.ENDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS ENDDTTM, E.RUNCNTLID      
FROM PS_KK_SOURCE_HDR A, PS_KK_SOURCE_LN B, PS_KK_EXCPTN_TBL C, PSXLATITEM D, PSPRCSRQST E, PS_PO_HDR F, PS_REQ_HDR G, PSMSGCATDEFN MSG
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
  AND A.KK_TRAN_DT = B.KK_TRAN_DT
  AND B.KK_TRAN_ID = C.KK_TRAN_ID
  AND B.KK_TRAN_DT = C.KK_TRAN_DT
  AND B.KK_TRAN_LN = C.KK_TRAN_LN
  AND (A.BUSINESS_UNIT = 'UNUNI' OR A.BUSINESS_UNIT LIKE '6%')
  AND A.KK_PROCESS_STATUS NOT IN ('V', 'W')
  AND TO_CHAR(A.KK_TRAN_DT, 'YYYY') >= '2014'
  AND D.FIELDNAME = 'EXCPTN_TYPE'
  AND D.FIELDVALUE = C.EXCPTN_TYPE
  AND 18021 = MSG.MESSAGE_SET_NBR (+)
  AND C.MESSAGE_NBR = MSG.MESSAGE_NBR (+)
  AND C.PROCESS_INSTANCE =  E.PRCSINSTANCE (+)
  AND A.BUSINESS_UNIT =  F.BUSINESS_UNIT (+)
  AND A.PO_ID =  F.PO_ID (+)
  AND A.BUSINESS_UNIT =  G.BUSINESS_UNIT (+)
  AND A.REQ_ID =  G.REQ_ID (+)
ORDER BY 2 DESC, KK_SOURCE_TRAN, KK_TRAN_LN;

SELECT DISTINCT MESSAGE_NBR FROM PS_KK_EXCPTN_TBL
WHERE MESSAGE_NBR <> 0
ORDER BY 1;

SELECT DISTINCT MESSAGE_NBR, MESSAGE_PARM1, MESSAGE_PARM2, MESSAGE_PARM3, MESSAGE_PARM4 
FROM PS_KK_EXCPTN_TBL
WHERE MESSAGE_NBR <> 0
ORDER BY 1;

SELECT DISTINCT C.MESSAGE_NBR, C.MESSAGE_PARM1, C.MESSAGE_PARM2, C.MESSAGE_PARM3, C.MESSAGE_PARM4, MSG.MESSAGE_TEXT--, MSG.DESCRLONG
FROM PS_KK_EXCPTN_TBL C, PSMSGCATDEFN MSG
WHERE 18021 = MSG.MESSAGE_SET_NBR (+)
    AND C.MESSAGE_NBR = MSG.MESSAGE_NBR (+)
    --AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
    AND C.MESSAGE_NBR <> 0
ORDER BY 1;

--KK Exception Message Catalog - Message Set Number 18021
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 18021

--UNU_ATS_BUDGET_OVERRIDE_YR
SELECT DISTINCT A.KK_TRAN_ID, A.KK_TRAN_DT, A.LEDGER_GROUP, A.BUSINESS_UNIT, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.FUND_CODE, A.CHARTFIELD2, 
            A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.BUDGET_PERIOD, A.KK_TRAN_OVER_FLAG, A.KK_TRAN_OVER_OPRID, 
            TO_CHAR(CAST((A.KK_TRAN_OVER_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), 
            C.KK_SOURCE_TRAN, D.BUSINESS_UNIT, D.JOURNAL_ID, D.PO_ID, D.VOUCHER_ID, C.MONETARY_AMOUNT
FROM PS_KK_OVERRIDE_TBL A, PS_DEPT_TBL B, PS_KK_ACT_LOG_VW C, PS_KK_SOURCE_HDR D
WHERE A.BUSINESS_UNIT LIKE '6%'
     --AND A.DEPTID >= :2
     --AND A.DEPTID <= :3
     AND A.DEPTID = B.DEPTID
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.SETID
     AND A.KK_TRAN_ID = C.KK_TRAN_ID
     AND A.KK_TRAN_DT = C.KK_TRAN_DT
     AND A.LEDGER_GROUP = C.LEDGER_GROUP
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.ACCOUNT = C.ACCOUNT
     AND A.DEPTID = C.DEPTID
     AND A.FUND_CODE = C.FUND_CODE
     AND A.CHARTFIELD1 = C.CHARTFIELD1
     AND A.PROJECT_ID = C.PROJECT_ID
     AND A.ACTIVITY_ID = C.ACTIVITY_ID
     AND A.BUDGET_PERIOD = C.BUDGET_PERIOD
     AND C.KK_SOURCE_TRAN <> 'GL_JOURNAL'
     AND C.KK_SOURCE_TRAN = D.KK_SOURCE_TRAN
     AND C.KK_TRAN_ID = D.KK_TRAN_ID
     AND C.KK_TRAN_DT = D.KK_TRAN_DT
     --AND A.FUND_CODE LIKE :4
     --AND A.LEDGER_GROUP = :5
ORDER BY 6, 1

--AR11002P - Point in Time - Pending Items - 2013
SELECT 'PIT_PENDING_ITEMS_2013', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAMESHORT, TO_CHAR(B.ASOF_DT,'YYYY-MM-DD') AS ASOF_DT, TO_CHAR(B.DUE_DT,'YYYY-MM-DD') AS DUE_DT, TO_CHAR(B.POST_DT,'YYYY-MM-DD') AS POST_DT,
            B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     --AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE
     --AND A.ENTRY_DT BETWEEN G.FROM_DT AND G.TO_DT
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD'))
     AND A.ENTRY_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD'))
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, B.ENTRY_REASON;

SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = '7254'
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU = '600UU' AND GROUP_ID = '7254'

--ALL PENDING ITEMS TILL DATE
SELECT A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.OPRID, A.ACCOUNTING_DT, A.BUSINESS_UNIT, B.CUST_ID, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT,
            B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY                        
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     --AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE
     --AND A.ENTRY_DT BETWEEN G.FROM_DT AND G.TO_DT
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD'))
     AND A.ENTRY_DT BETWEEN TO_DATE('2000-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD'))
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, B.ENTRY_REASON;

--UNU User Roles Matrix excluding AUDIT IDs
SELECT ROLEUSER, LISTAGG(ROLENAME, '|') WITHIN GROUP (ORDER BY ROLEUSER) ROLENAME
FROM PSROLEUSER 
WHERE (ROLEUSER NOT IN ('chen.zhuo', 'fu.xin', 'hu-xue.wen', 'lu.xin-yi', 'unu.audit.1', 'unu.audit.2', 'unu.audit.3', 'wang.su-mei', 'zhao.gang') 
      AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0))
GROUP BY ROLEUSER
ORDER BY 1;

SELECT * FROM PSOPRDEFN WHERE OPRID LIKE 'unu.audit%'

--Reassignment Grants
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '690UU' --AND VENDOR_ID LIKE '%157'
ORDER BY 1,2;

--AHD17808
--Receipts case - YOKO
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942'
SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001584'
SELECT * FROM PS_RECV_LN_SHIP WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942'
SELECT * FROM PS_RECV_HDR WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID IN ('0000001248', '0000001249', '0000001250')
SELECT * FROM PS_INSTALLATION_PO
SELECT * FROM PS_ITM_CAT_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_AP_MTCH_EXCPTN WHERE BUSINESS_UNIT LIKE '6%' AND PO_FLDVALUE = '0000005942'

SELECT H.BUSINESS_UNIT, B.DESCR, TO_CHAR(H.JOURNAL_DATE, 'YYYY') AS YEAR, TO_CHAR(H.JOURNAL_DATE, ' MM') AS MONTH, 
            COUNT(A.JOURNAL_LINE) AS JRNL_LINE_COUNT
FROM PS_JRNL_LN A, PS_BUS_UNIT_TBL_FS B, PS_JRNL_HEADER H
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND A.JOURNAL_ID = H.JOURNAL_ID
    AND A.JOURNAL_DATE = H.JOURNAL_DATE
    AND A.UNPOST_SEQ = H.UNPOST_SEQ
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND H.JRNL_HDR_STATUS NOT IN ('D')
    AND H.SOURCE = 'ONL'
GROUP BY H.BUSINESS_UNIT, B.DESCR, TO_CHAR(H.JOURNAL_DATE, 'YYYY'), TO_CHAR(H.JOURNAL_DATE, ' MM')
ORDER BY 3,4;

--Online Journal Lines for UNU by CF's, Fiscal Year and Accounting Period
SELECT H.BUSINESS_UNIT, B.DESCR, FISCAL_YEAR, ACCOUNTING_PERIOD, ACCOUNT, OPERATING_UNIT, FUND_CODE, DEPTID, CHARTFIELD2, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2, 
            BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, COUNT(A.JOURNAL_ID) AS JRNL_LINE_COUNT
FROM PS_JRNL_LN A, PS_BUS_UNIT_TBL_FS B, PS_JRNL_HEADER H
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND A.JOURNAL_ID = H.JOURNAL_ID
    AND A.JOURNAL_DATE = H.JOURNAL_DATE
    AND A.UNPOST_SEQ = H.UNPOST_SEQ
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND H.JRNL_HDR_STATUS NOT IN ('D')
    AND H.SOURCE = 'ONL'
GROUP BY H.BUSINESS_UNIT, B.DESCR, FISCAL_YEAR, ACCOUNTING_PERIOD, ACCOUNT, OPERATING_UNIT, FUND_CODE, DEPTID, CHARTFIELD2, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2, 
               BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID
ORDER BY 3,4;

--Online Journals for UNU by Fiscal Year and Accounting Period
SELECT H.BUSINESS_UNIT, B.DESCR, FISCAL_YEAR, ACCOUNTING_PERIOD, COUNT(H.JOURNAL_ID) AS JRNL_COUNT
FROM PS_BUS_UNIT_TBL_FS B, PS_JRNL_HEADER H
WHERE B.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND H.BUSINESS_UNIT = 'UNUNI'
    AND H.JRNL_HDR_STATUS NOT IN ('D')
    AND H.SOURCE = 'ONL'
GROUP BY H.BUSINESS_UNIT, B.DESCR, FISCAL_YEAR, ACCOUNTING_PERIOD
ORDER BY 3,4;

--Match Overrides
SELECT * FROM PS_MTCH_RULE_OVRD WHERE BUSINESS_UNIT LIKE '6%';
SELECT * FROM PS_AP_MTCH_RULES;

--UNU_MATCH_OVERRIDES.xls
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.MATCH_CNTRL_ID, A.MATCH_RULE_ID, DESCR50,  MTCH_RULE_LEVEL, DESCR254,
            A.OPRID, NVL(TO_CHAR(A.DATETIME_STAMP, 'DD-MON-YYYY'), '01-JAN-1901') AS DATE_STAMP, A.OVRD_REASON, A.REASONDESCR
FROM PS_MTCH_RULE_OVRD A, PS_AP_MTCH_RULES B
WHERE A.MATCH_RULE_ID = B.MATCH_RULE_ID 
    AND A.BUSINESS_UNIT = '600UU'
ORDER BY 1, 2, 3, DATE_STAMP;

--UNU_MATCH_OVERRIDES.xls
--Version 1
--Updated for AP BUs and added clause to check from 7th October only
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.MATCH_CNTRL_ID, A.MATCH_RULE_ID, DESCR50,  MTCH_RULE_LEVEL, DESCR254,
            A.OPRID, NVL(TO_CHAR(A.DATETIME_STAMP, 'DD-MON-YYYY'), '01-JAN-1901') AS DATE_STAMP, A.OVRD_REASON, A.REASONDESCR
FROM PS_MTCH_RULE_OVRD A, PS_AP_MTCH_RULES B
WHERE A.MATCH_RULE_ID = B.MATCH_RULE_ID 
    AND A.BUSINESS_UNIT LIKE '6%'
    AND TO_CHAR(((A.DATETIME_STAMP ) + (0)),'YYYY-MM-DD') >= '2013-10-07' 
    AND TO_CHAR(((A.DATETIME_STAMP ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1, 2, 3, DATE_STAMP;

--UNU_MATCH_OVERRIDES.xls
--Version 2
--Added Voucher, Voucher Line, Vendor and Item tables
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VOUCHER_LINE_NUM, B.INV_ITEM_ID, NVL(M.DESCR, 'NO_ITEM') AS ITEM_DESCR, A.MATCH_STATUS_VCHR, 
            A.INVOICE_DT, A.ACCOUNTING_DT, B.QTY_VCHR, B.UNIT_OF_MEASURE, B.UNIT_PRICE, A.VENDOR_ID, D.NAME1,  
            B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, B.DESCR, B.MERCHANDISE_AMT, 
            B.TXN_CURRENCY_CD, B.MERCH_AMT_BSE,
            B.BUSINESS_UNIT_RECV, B.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR,
            C.MATCH_CNTRL_ID, C.MATCH_RULE_ID, R.DESCR50,  R.MTCH_RULE_LEVEL, R.DESCR254,
            C.OPRID, NVL(TO_CHAR(C.DATETIME_STAMP, 'DD-MON-YYYY'), '01-JAN-1901') AS DATE_STAMP, C.OVRD_REASON, C.REASONDESCR
FROM  PS_VOUCHER A, PS_VOUCHER_LINE B, PS_MTCH_RULE_OVRD C, PS_VENDOR D, PS_AP_MTCH_RULES R, PS_MASTER_ITEM_TBL M
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.VOUCHER_ID = B.VOUCHER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.VOUCHER_ID = C.VOUCHER_ID
    AND B.VOUCHER_LINE_NUM = C.VOUCHER_LINE_NUM
    AND D.SETID = A.VENDOR_SETID
    AND D.VENDOR_ID = A.VENDOR_ID
    AND C.MATCH_RULE_ID = R.MATCH_RULE_ID
    AND B.ITM_SETID = M.SETID (+)
    AND B.INV_ITEM_ID = M.INV_ITEM_ID (+) 
    AND A.BUSINESS_UNIT LIKE '6%'
    --AND TO_CHAR(((C.DATETIME_STAMP ) + (0)),'YYYY-MM-DD') >= '2013-10-07' 
    --AND TO_CHAR(((C.DATETIME_STAMP ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1, 2, 3, DATE_STAMP;

SELECT * FROM PS_PO_LINE_MATCHED WHERE BUSINESS_UNIT LIKE '6%' AND BUSINESS_UNIT_AP = '614UU' AND VOUCHER_ID IN ('00016536', '00016554');

SELECT * FROM PS_MTCH_VCHR_MSG WHERE BUSINESS_UNIT LIKE '6%' AND VOUCHER_ID = '00000143';
SELECT * FROM PS_MISMTCH_RPT;
SELECT * FROM PS_AP_MTCH_EXCPTN WHERE BUSINESS_UNIT LIKE '6%' AND PO_FLDVALUE = '0000005942';

--UNU Cancelled Receipts
SELECT BUSINESS_UNIT, RECEIVER_ID, COUNTRY_SHIP_FROM, OPRID, ORIGIN, PO_RECEIPT_FLG, RECEIPT_DT, SHIPTO_ID, VENDOR_SETID, VENDOR_ID, VNDR_LOC, OPRID_MODIFIED_BY   
FROM PS_RECV_HDR WHERE BUSINESS_UNIT LIKE '6%' AND RECV_STATUS = 'X';

--KK Source Transactions
--Definitions
SELECT A1.KK_SOURCE_TRAN, DESCR, X1.XLATLONGNAME AS KK_AMOUNT_TYPE, RECNAME_HEADER, RECNAME_LINE, RECNAME_UPD_HEADER, RECNAME_UPD_LINE, RECNAME_REFREC_KEY, 
            FIELDNAME_ORDER_BY, FIELDNAME_FRN_CUR, 
            FIELDNAME_FRN_AMT, FIELDNAME_BASE_CUR, FIELDNAME_MON_AMT, FIELDNAME_STAT_AMT, FIELDNAME_ACCTDATE, FIELDNAME_BUDGDATE, FIELDNAME_BU_GL, FIELDNAME_CLOSED, 
            CLOSED_VALUE, KK_SOURCE_TRAN_REF, X2.XLATLONGNAME AS CNTRL_OPTN, X3.XLATLONGNAME AS OVERRIDE_OPTN, KK_LOG_OPTN, FIELDNAME_EFFDT, FIELDNAME_QUANTITY, 
            RECNAME_SRC_TAO, KK_SKIP_EDITS, AE_APPLID, AE_SECTION
FROM PS_KK_SOURCE_TRAN A1, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3 
WHERE X1.FIELDNAME = 'KK_AMOUNT_TYPE'
    AND X1.FIELDVALUE = A1.KK_AMOUNT_TYPE
    AND X2.FIELDNAME = 'CNTRL_OPTN'
    AND X2.FIELDVALUE = A1.CNTRL_OPTN
    AND X3.FIELDNAME = 'OVERRIDE_OPTN'
    AND X3.FIELDVALUE = A1.OVERRIDE_OPTN
ORDER BY 1;

--Page Events
SELECT * FROM PS_KK_PANEL_EVENT

--Referenced Record Keys
SELECT * FROM PS_KK_REFREC_KEYS 

--Define Control Budgets
--KK Budget Definitions

--Control Budget Options Page
SELECT * FROM PS_KK_BUDGET_TYPE A1
WHERE LEDGER_GROUP = 'ALT_UU'
    AND A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_BUDGET_TYPE A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Ruleset Chartfield Page
SELECT * FROM PS_KK_SUBTYPE A1
WHERE LEDGER_GROUP = 'ALT_UU'
    AND A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_SUBTYPE A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;
--Ruleset Chartfield Page
SELECT * FROM PS_KK_FILTER A1 
WHERE LEDGER_GROUP = 'ALT_UU' 
    AND A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Keys and Translations Page
SELECT * FROM PS_KK_KEY_CF A1
WHERE LEDGER_GROUP = 'ALT_UU' 
    AND A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_KEY_CF A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Control Chartfield Page
SELECT * FROM PS_KK_CF_VALUE B1
WHERE LEDGER_GROUP = 'ALT_UU'
    AND B1.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B1.SETID1 = B_ED.SETID1 AND B1.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE) 
ORDER BY 1,2;

SELECT * FROM PS_REQ_RC_WB_AL_VW WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000000004'
SELECT * FROM PS_REQ_RC_WB_AL_VW WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001072'

--UNU REQ/PO/VOUCHER Details
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, A.HOLD_STATUS, A.BUDGET_HDR_STATUS, A.REQ_DT, H.PO_ID, I.VOUCHER_ID, A.ACCOUNTING_DT, A.REQUESTOR_ID, A.OPRID_ENTERED_BY, 
      A.ENTERED_DT, A.OPRID_MODIFIED_BY, TO_CHAR(CAST((A.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, 
      A.OPRID_APPROVED_BY, A.APPROVAL_DT, A.ACTIVITY_DATE, B.LINE_NBR, B.CURR_STATUS, G.CATEGORY_CD, G.DESCR, B.INV_ITEM_ID, B.UNIT_OF_MEASURE, B.AMT_ONLY_FLG, B.BUYER_ID, 
      B.VENDOR_ID, E.NAME1, B.SOURCE_STATUS, B.SOURCE_DATE, C.SCHED_NBR, C.CURR_STATUS, C.PRICE_REQ, C.DUE_DT, C.SHIPTO_ID, D.DISTRIB_LINE_NUM, D.DISTRIB_LN_STATUS, 
      D.DISTRIB_PCT, D.QTY_REQ, D.QTY_OPEN, D.LOCATION, D.PROFILE_ID, D.BUSINESS_UNIT_GL, D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.BUSINESS_UNIT_PC, D.PROJECT_ID, 
      D.ACTIVITY_ID, D.CHARTFIELD2, D.BUDGET_DT, D.CURRENCY_CD, B.MERCHANDISE_AMT, D.MERCH_AMT_BSE, D.MONETARY_AMOUNT, D.MONETARY_AMT_BSE      
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D, PS_VENDOR E, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G, PS_PO_LINE_DISTRIB H, PS_DISTRIB_LINE I
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.REQ_ID = C.REQ_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.REQ_ID = D.REQ_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND B.VENDOR_SETID =  E.SETID (+)
    AND B.VENDOR_ID =  E.VENDOR_ID (+)
    AND B.CURR_STATUS <> 'X'
    AND C.CURR_STATUS <> 'X'
    AND D.DISTRIB_LN_STATUS <> 'X'
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND A.REQUESTOR_ID LIKE :3
  --AND A.REQ_STATUS LIKE :4
    AND A.REQ_DT >= TO_DATE('2013-01-01','YYYY-MM-DD')
    AND A.REQ_DT <= TO_DATE('2013-12-31','YYYY-MM-DD')
    AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND G.CATEGORY_ID = B.CATEGORY_ID
    AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE AND G.CATEGORY_CD = G_ED.CATEGORY_CD
                                                                                                                      AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE)
    AND G.SETID = F.SETID
    AND F.RECNAME = 'ITM_CAT_TBL'
    AND D.BUSINESS_UNIT =  H.BUSINESS_UNIT (+)
    AND D.REQ_ID =  H.REQ_ID (+)
    AND D.LINE_NBR =  H.REQ_LINE_NBR (+)
    AND D.SCHED_NBR =  H.REQ_SCHED_NBR (+)
    AND D.DISTRIB_LINE_NUM =  H.REQ_DISTRIB_NBR (+)
    AND H.BUSINESS_UNIT = I.BUSINESS_UNIT_PO (+)
    AND H.PO_ID = I.PO_ID (+)
    AND H.LINE_NBR = I.LINE_NBR (+)
    AND H.SCHED_NBR = I.SCHED_NBR (+)
    AND H.DISTRIB_LINE_NUM = I.PO_DIST_LINE_NUM (+)
ORDER BY 1, 2, 18, 30, 35, 7;

SELECT * FROM PS_PO_MTCH_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942'
SELECT * FROM PS_PO_LINE_MATCHED WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942'
SELECT * FROM PS_AP_PYMPOVCH_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005942'

SELECT * FROM PS_AP_VCHR_KK_VW WHERE BUSINESS_UNIT LIKE '6%' ORDER BY 1

--EXPANDED APVM_MATCHD_VW matches UNU_AP_DTL_MATCH_EXCEPTIONS output
SELECT D.MATCH_STATUS_VCHR, A.BUSINESS_UNIT, A.VENDOR_SETID, C.VENDOR_NAME_SHORT, A.VENDOR_ID, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.INVOICE_DT, 
       A.PO_ID, A.SHIPTO_ID, B.MATCH_RULE_ID, E.MESSAGE_SET_NBR, E.MESSAGE_NBR, E.DESCR254, F.DESCRLONG, A.MERCH_AMT_VCHR, A.MERCH_AMT_RECV, A.MERCH_AMT_PO, C.NAME1, A.INVOICE_ID, D.MATCH_DUE_DT, 
       A.MATCH_CNTRL_ID, A.BUYER_ID, A.BUSINESS_UNIT_PO, A.ITM_SETID, A.INV_ITEM_ID, D.AP_MATCH_TYPE, C.OFAC_STATUS 
FROM PS_VCHR_MTCH_DETLS A, PS_AP_MTCH_EXCPTN B, PS_VENDOR C, PS_VOUCHER D, PS_AP_MTCH_RULES E, PSMSGCATDEFN F 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND A.VOUCHER_ID = B.VOUCHER_ID 
  AND A.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM 
  AND A.VENDOR_SETID = C.SETID 
  AND A.VENDOR_ID = C.VENDOR_ID 
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
  AND A.VOUCHER_ID = D.VOUCHER_ID 
  AND B.MATCH_RULE_ID = E.MATCH_RULE_ID 
  AND D.MATCH_STATUS_VCHR <> 'M'
  AND E.MESSAGE_SET_NBR = F.MESSAGE_SET_NBR
  AND E.MESSAGE_NBR = F.MESSAGE_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY 2,6;

--Match Exceptions Analysis
SELECT A.VENDOR_SETID, A.VENDOR_ID, C.VENDOR_NAME_SHORT, B.MATCH_RULE_ID, COUNT(B.MATCH_RULE_ID) AS "Total Exceptions"
FROM PS_VCHR_MTCH_DETLS A, PS_AP_MTCH_EXCPTN B, PS_VENDOR C, PS_VOUCHER D, PS_AP_MTCH_RULES E, PSMSGCATDEFN F 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND A.VOUCHER_ID = B.VOUCHER_ID 
  AND A.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM 
  AND A.VENDOR_SETID = C.SETID 
  AND A.VENDOR_ID = C.VENDOR_ID 
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
  AND A.VOUCHER_ID = D.VOUCHER_ID 
  AND B.MATCH_RULE_ID = E.MATCH_RULE_ID 
  AND D.MATCH_STATUS_VCHR <> 'M'
  AND E.MESSAGE_SET_NBR = F.MESSAGE_SET_NBR
  AND E.MESSAGE_NBR = F.MESSAGE_NBR
  AND A.BUSINESS_UNIT LIKE '6%'
GROUP BY A.VENDOR_SETID, A.VENDOR_ID, C.VENDOR_NAME_SHORT, B.MATCH_RULE_ID
ORDER BY A.VENDOR_SETID, A.VENDOR_ID, C.VENDOR_NAME_SHORT, B.MATCH_RULE_ID;

--FIND REQUISITIONS THAT DO NOT HAVE A PO/VOUCHER
SELECT * FROM PS_REQ_HDR A
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND REQ_STATUS NOT IN ('C', 'X') 
    AND A.REQ_ID NOT IN (SELECT REQ_ID FROM PS_PV_REQ_VOUCH_VW B WHERE B.BUSINESS_UNIT_REQ = A.BUSINESS_UNIT AND B.REQ_ID = A.REQ_ID AND B.BUSINESS_UNIT LIKE '6%')
ORDER BY 1, 5 DESC, 2;

--EXPANDED/MODIFIED PV_REQ_VOUCH_VW
SELECT DISTINCT A.BUSINESS_UNIT_REQ, A.REQ_ID, C.LINE_NBR, C.SCHED_NBR, C.DISTRIB_LINE_NUM, B.BUSINESS_UNIT, A.PO_ID, B.VOUCHER_ID
FROM PS_PO_LINE_DISTRIB A, PS_DISTRIB_LINE B, PS_REQ_LN_DISTRIB C 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT_PO 
  AND A.PO_ID = B.PO_ID 
  AND A.LINE_NBR = B.LINE_NBR 
  AND A.SCHED_NBR = B.SCHED_NBR 
  AND A.DISTRIB_LINE_NUM = B.PO_DIST_LINE_NUM
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT 
  AND A.REQ_ID = C.REQ_ID
  AND A.REQ_LINE_NBR = C.LINE_NBR
  AND A.REQ_SCHED_NBR = C.SCHED_NBR
  AND A.REQ_DISTRIB_NBR = C.DISTRIB_LINE_NUM
  AND C.BUSINESS_UNIT = '600UU' 
  --AND C.REQ_ID = '0000001613'
ORDER BY 2,3,5,6;

--PPs version of Requisition Inquiry
--Experimental Version 1
SELECT X.BUSINESS_UNIT_REQ, X.REQ_ID, X.LINE_NBR, X.SCHED_NBR, X.DISTRIB_LINE_NUM,
            X.BU_PO, X.PO_ID, X.PO_LINE_NBR, X.PO_SCHED_NBR, X.PO_DISTRIB_NBR,
            X.BU_AP, X.VOUCHER_ID, X.VOUCHER_LINE_NUM, X.VCHR_DISTRIB_LINE_NUM
FROM
(--Req, PO and Voucher
SELECT DISTINCT A.BUSINESS_UNIT_REQ, A.REQ_ID, C.LINE_NBR, C.SCHED_NBR, C.DISTRIB_LINE_NUM, 
            A.BUSINESS_UNIT AS BU_PO, A.PO_ID AS PO_ID, A.LINE_NBR AS PO_LINE_NBR, A.SCHED_NBR AS PO_SCHED_NBR, A.DISTRIB_LINE_NUM AS PO_DISTRIB_NBR,
            B.BUSINESS_UNIT AS BU_AP, B.VOUCHER_ID AS VOUCHER_ID, B.VOUCHER_LINE_NUM AS VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM AS VCHR_DISTRIB_LINE_NUM
FROM (PS_PO_LINE_DISTRIB A LEFT OUTER JOIN PS_DISTRIB_LINE B ON A.BUSINESS_UNIT = B.BUSINESS_UNIT_PO AND A.PO_ID = B.PO_ID AND A.LINE_NBR = B.LINE_NBR 
                                                                                                  AND A.SCHED_NBR = B.SCHED_NBR AND A.DISTRIB_LINE_NUM = B.PO_DIST_LINE_NUM), PS_REQ_LN_DISTRIB C 
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.REQ_ID = C.REQ_ID
    AND A.REQ_LINE_NBR = C.LINE_NBR
    AND A.REQ_SCHED_NBR = C.SCHED_NBR
    AND A.REQ_DISTRIB_NBR = C.DISTRIB_LINE_NUM
    AND C.BUSINESS_UNIT LIKE '6%'
    --AND C.BUSINESS_UNIT = '614UU'
    --AND C.REQ_ID = '0000002470'
) X, PS_REQ_HDR HDR
WHERE HDR.BUSINESS_UNIT = X.BUSINESS_UNIT_REQ
    AND HDR.REQ_ID = X.REQ_ID
    AND HDR.REQ_STATUS NOT IN ('X')
    AND X.BUSINESS_UNIT_REQ LIKE '6%'
    AND X.BUSINESS_UNIT_REQ = '600UU'
    AND X.REQ_ID IN ('0000002029', '0000002019')
ORDER BY 1,2,3,4,5;

SELECT A.BUSINESS_UNIT, A.PO_ID, C.VENDOR_ID, A.CURRENCY_CD, SUM(A.MERCHANDISE_AMT), E.ACCOUNT, E.DESCR, B.CNTRCT_ID
FROM PS_PO_LINE_SHIP A, PS_PO_LINE B, PS_PO_HDR C, PS_ITM_CAT_TBL E, PS_SET_CNTRL_REC F
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND A.LINE_NBR = B.LINE_NBR
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND E.CATEGORY_ID = B.CATEGORY_ID
  AND E.SETID = F.SETID
  AND F.RECNAME = 'ITM_CAT_TBL'
  AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED
                 WHERE E.SETID = E_ED.SETID
                   AND E.CATEGORY_TYPE = E_ED.CATEGORY_TYPE
                   AND E.CATEGORY_CD = E_ED.CATEGORY_CD
                   AND E.CATEGORY_ID = E_ED.CATEGORY_ID
                   AND E_ED.EFFDT <= SYSDATE)  
  AND A.BUSINESS_UNIT IN ('600UU')
  --AND A.PO_ID = '0000004424'
GROUP BY A.BUSINESS_UNIT, A.PO_ID, C.VENDOR_ID, A.CURRENCY_CD, E.ACCOUNT, E.DESCR, B.CNTRCT_ID
ORDER BY 1, 2, 3;

--DEPT ROLLUP
SELECT D.DEPTID, D.DESCR, LISTAGG(E.TREE_NODE, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH
FROM PSTREENODE E, PSTREELEAF C , PS_DEPT_TBL D
WHERE E.SETID = 'UNUNI' 
  AND D.SETID = 'UNUNI' 
  AND E.TREE_NAME = 'DEPT_ROLLUP_UNUNI' 
  AND E.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') 
  --AND E.TREE_NODE = %Bind(TREE_NODE) 
  AND C.SETID = E.SETID 
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE 
  AND C.TREE_NAME = E.TREE_NAME 
  AND C.TREE_BRANCH = E.TREE_BRANCH 
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END 
  AND D.DEPTID BETWEEN C.RANGE_FROM AND C.RANGE_TO 
  AND D.EFFDT = (SELECT MAX(INTAB.EFFDT) FROM PS_DEPT_TBL INTAB WHERE INTAB.SETID = D.SETID AND INTAB.DEPTID = D.DEPTID AND INTAB.EFFDT <= SYSDATE)
  AND D.EFF_STATUS = 'A'
  --AND D.DEPTID = 'B0106'
GROUP BY D.DEPTID, D.DESCR
ORDER BY D.DEPTID;

--Dept Rollup works
--Version 2
SELECT LISTAGG(E.TREE_NODE || '-' || N.DESCR, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH, D.DEPTID, D.DESCR
FROM PSTREENODE E, PSTREELEAF C , PS_DEPT_TBL D, PS_TREE_NODE_TBL N
WHERE E.SETID = 'UNUNI'
  AND D.SETID = 'UNUNI'
  AND N.SETID = 'UNUNI'
  AND N.SETID = E.SETID
  AND N.TREE_NODE = E.TREE_NODE
  AND E.TREE_NAME = 'DEPT_ROLLUP_UNUNI' 
  AND E.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')  
  AND C.SETID = E.SETID 
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE 
  AND C.TREE_NAME = E.TREE_NAME 
  AND C.TREE_BRANCH = E.TREE_BRANCH 
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
  AND D.DEPTID BETWEEN C.RANGE_FROM AND C.RANGE_TO  
  AND D.EFFDT = (SELECT MAX(INTAB.EFFDT) FROM PS_DEPT_TBL INTAB WHERE INTAB.SETID = D.SETID AND INTAB.DEPTID = D.DEPTID AND INTAB.EFFDT <= SYSDATE)
  AND N.EFFDT = (SELECT MAX(INTAC.EFFDT) FROM PS_TREE_NODE_TBL INTAC WHERE INTAC.SETID = N.SETID AND INTAC.TREE_NODE = N.TREE_NODE AND INTAC.EFFDT <= E.EFFDT)
  AND D.EFF_STATUS = 'A'
  AND N.EFF_STATUS = 'A'
  --AND D.DEPTID = 'B0106'
GROUP BY D.DEPTID, D.DESCR
ORDER BY PATH, D.DEPTID;

--Does not work
SELECT D.SETID, D.DEPTID, D.DESCR FROM PS_DEPT_TBL D, PSTREENODE T1, PSTREENODE T2
WHERE T1.TREE_NAME = 'DEPT_ROLLUP_UNUNI'
    AND T2.TREE_NAME = T1.TREE_NAME
    AND T1.SETID = 'UNUNI'
    AND T2.SETID = T1.SETID
    AND D.SETID = T1.SETID
    AND T1.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
    AND T2.EFFDT = T1.EFFDT
    --AND T1.TREE_NODE = 'FRG'
    AND T2.TREE_NODE_NUM BETWEEN T1.TREE_NODE_NUM AND T1.TREE_NODE_NUM_END
    AND T2.TREE_NODE = D.DEPTID

--PROJECT ROLLUP Does not work
SELECT E.TREE_NODE, D.DESCR, LISTAGG(N.TREE_NODE, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH
FROM PSTREENODE E, PS_PROJECT D, PSTREENODE N, PSTREELEVEL F
WHERE E.SETID = 'UNUNI'
    AND D.BUSINESS_UNIT = 'UNUNI'
    AND E.TREE_NAME = 'UNU_PROGRAMME'
    AND F.SETCNTRLVALUE = ' '    
    AND F.TREE_LEVEL = 'UU_PROG'
    AND F.SETID = E.SETID
    AND F.SETCNTRLVALUE = E.SETCNTRLVALUE
    AND F.TREE_NAME = E.TREE_NAME
    AND E.EFFDT = F.EFFDT
    AND E.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
    AND N.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
    AND D.PROJECT_ID = E.TREE_NODE
    AND N.SETID = E.SETID
    AND N.SETCNTRLVALUE = E.SETCNTRLVALUE
    AND N.TREE_NAME = E.TREE_NAME
    AND N.PARENT_NODE_NUM = E.TREE_NODE_NUM
    AND E.EFFDT = N.EFFDT 
    --AND D.PROJECT_ID = N.TREE_NODE
    --AND N.TREE_NODE = E.TREE_NODE    
    AND N.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
GROUP BY E.TREE_NODE, D.DESCR
ORDER BY E.TREE_NODE;

--PROJECT ROLLUP working version
--UNU_PROGRAMME_TREE_FLATTENED.xls
SELECT (A.TREE_LEVEL || '-' || LD.DESCR) "Level Descr", (E.TREE_NODE || '-' || D.DESCR) "Tree Node Descr", 
            LISTAGG(LN.DESCR || '-' || N.TREE_NODE || '-' || L.DESCR, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) AS "DrillDown"
FROM PSTREELEVEL A, PSTREENODE E, PS_PROJECT D, PSTREENODE N, PSTREELEVEL F, PS_PROJECT L, PS_TREE_LEVEL_TBL LD, PS_TREE_LEVEL_TBL LN
WHERE E.SETID = 'UNUNI'
    AND D.BUSINESS_UNIT = 'UNUNI'
    AND D.PROJECT_ID = E.TREE_NODE
    AND E.TREE_NAME = 'UNU_PROGRAMME'    
    AND N.SETID = E.SETID
    AND N.SETCNTRLVALUE = E.SETCNTRLVALUE
    AND N.TREE_NAME = E.TREE_NAME
    AND N.PARENT_NODE_NUM = E.TREE_NODE_NUM
    AND E.EFFDT = N.EFFDT
    AND E.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
    AND N.EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD')
    --A and E
    AND A.SETCNTRLVALUE = ' '
    --AND F.TREE_LEVEL = 'UU_ALL'
    AND A.SETID = E.SETID
    AND A.SETCNTRLVALUE = E.SETCNTRLVALUE
    AND A.TREE_NAME = E.TREE_NAME
    AND A.TREE_LEVEL_NUM = E.TREE_LEVEL_NUM
    AND A.SETID = LD.SETID
    AND A.TREE_LEVEL = LD.TREE_LEVEL
    --F and N
    AND F.SETCNTRLVALUE = ' '
    --AND F.TREE_LEVEL = 'UU_ALL'
    AND F.SETID = N.SETID
    AND F.SETCNTRLVALUE = N.SETCNTRLVALUE
    AND F.TREE_NAME = N.TREE_NAME
    AND F.TREE_LEVEL_NUM = N.TREE_LEVEL_NUM
    AND F.SETID = LN.SETID
    AND F.TREE_LEVEL = LN.TREE_LEVEL
    AND L.BUSINESS_UNIT = 'UNUNI'
    AND L.PROJECT_ID = N.TREE_NODE       
    AND N.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
GROUP BY A.TREE_LEVEL, LD.DESCR, E.TREE_NODE, D.DESCR
ORDER BY A.TREE_LEVEL, E.TREE_NODE;

--Fund Code ROLLUP
--UNUNI_FUND_TREE
SELECT LISTAGG(E.TREE_NODE || '-' || N.DESCR, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH, D.FUND_CODE, D.DESCR
FROM PSTREENODE E, PSTREELEAF C , PS_FUND_TBL D, PS_TREE_NODE_TBL N
WHERE E.SETID = 'UNUNI'
  AND D.SETID = 'UNUNI'
  AND N.SETID = 'UNUNI'
  AND N.SETID = E.SETID
  AND N.TREE_NODE = E.TREE_NODE
  AND E.TREE_NAME = 'UNUNI_FUND_TREE' 
  AND E.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')  
  AND C.SETID = E.SETID
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE 
  AND C.TREE_NAME = E.TREE_NAME 
  AND C.TREE_BRANCH = E.TREE_BRANCH 
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
  AND D.FUND_CODE BETWEEN C.RANGE_FROM AND C.RANGE_TO  
  AND D.EFFDT = (SELECT MAX(INTAB.EFFDT) FROM PS_FUND_TBL INTAB WHERE INTAB.SETID = D.SETID AND INTAB.FUND_CODE = D.FUND_CODE AND INTAB.EFFDT <= SYSDATE)
  AND N.EFFDT = (SELECT MAX(INTAC.EFFDT) FROM PS_TREE_NODE_TBL INTAC WHERE INTAC.SETID = N.SETID AND INTAC.TREE_NODE = N.TREE_NODE AND INTAC.EFFDT <= E.EFFDT)
  AND D.EFF_STATUS = 'A'
  AND N.EFF_STATUS = 'A'  
GROUP BY D.FUND_CODE, D.DESCR
ORDER BY PATH, D.FUND_CODE;

--UNU KK ACCOUNT Tree Rollup
--UNUNI_CC_ACCT
--Version 1
SELECT LISTAGG(E.TREE_NODE, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH, D.ACCOUNT, D.DESCR
FROM PSTREENODE E, PSTREELEAF C , PS_GL_ACCOUNT_TBL D
WHERE E.SETID = 'SHARE'
  AND D.SETID = 'SHARE'  
  AND E.TREE_NAME = 'UNUNI_CC_ACCT'
  AND E.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
  AND C.SETID = E.SETID
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
  AND C.TREE_NAME = E.TREE_NAME
  AND C.TREE_BRANCH = E.TREE_BRANCH
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
  AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO
  AND D.EFFDT = (SELECT MAX(INTAB.EFFDT) FROM PS_GL_ACCOUNT_TBL INTAB WHERE INTAB.SETID = D.SETID AND INTAB.ACCOUNT = D.ACCOUNT AND INTAB.EFFDT <= SYSDATE)  
  AND D.EFF_STATUS = 'A'
  AND D.ACCOUNT_TYPE IN ('E')
GROUP BY D.ACCOUNT, D.DESCR
ORDER BY PATH, D.ACCOUNT;

--Version 2
--Added EFFDT as a column
SELECT LISTAGG(E.TREE_NODE, ' > ') WITHIN GROUP (ORDER BY E.TREE_NODE_NUM) PATH, D.ACCOUNT, D.DESCR, E.EFFDT
FROM PSTREENODE E, PSTREELEAF C, PS_GL_ACCOUNT_TBL D
WHERE E.SETID = 'SHARE'
  AND D.SETID = 'SHARE'  
  AND E.TREE_NAME = 'UNUNI_CC_ACCT'
  AND E.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
  AND C.SETID = E.SETID
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
  AND C.TREE_NAME = E.TREE_NAME
  AND C.TREE_BRANCH = E.TREE_BRANCH
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
  AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO
  AND D.EFFDT = (SELECT MAX(INTAB.EFFDT) FROM PS_GL_ACCOUNT_TBL INTAB WHERE INTAB.SETID = D.SETID AND INTAB.ACCOUNT = D.ACCOUNT AND INTAB.EFFDT <= SYSDATE)  
  AND D.EFF_STATUS = 'A'
  AND D.ACCOUNT_TYPE IN ('E')
GROUP BY D.ACCOUNT, D.DESCR, E.EFFDT
ORDER BY PATH, D.ACCOUNT;

SELECT PSTREENODE.SETID, PSTREENODE.TREE_NAME, PSTREENODE.EFFDT, PARENT_NODE_NAME AS PARENTNODE, TREE_NODE AS NODENAME, TREE_NODE AS TREENODE, TREE_LEVEL_NUM,
            TREE_NODE_NUM
FROM PSTREENODE
WHERE PSTREENODE.SETID = 'UNUNI'  
    AND TREE_NAME = 'DEPT_ROLLUP_UNUNI'
    AND EFFDT = TO_DATE('01012010','MMDDYYYY')
UNION ALL
SELECT 'UNUNI', N.TREE_NAME, TO_DATE('01012010','MMDDYYYY'), N.TREE_NODE AS PARENTNODE,  ' ',  ' ', TREE_LEVEL_NUM, N.TREE_NODE_NUM
FROM PSTREENODE N
WHERE TREE_NAME = 'DEPT_ROLLUP_UNUNI'
     AND EFFDT = TO_DATE('01012010','MMDDYYYY')
ORDER BY TREE_NODE_NUM, TREE_LEVEL_NUM, TREENODE;

SELECT * FROM PSTREENODE WHERE TREE_NAME = 'UNU_PROGRAMME' AND EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') AND TREE_NODE = '00064159'
SELECT * FROM PSTREENODE WHERE TREE_NAME = 'UNU_PROGRAMME' AND EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') AND TREE_NODE_NUM = 999998092
SELECT * FROM PSTREENODE WHERE TREE_NAME = 'UNU_PROGRAMME' AND EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') AND TREE_NODE_NUM = 999996185
SELECT * FROM PSTREENODE WHERE TREE_NAME = 'UNU_PROGRAMME' AND EFFDT = TO_DATE('2010-01-01','YYYY-MM-DD') AND TREE_NODE_NUM = 500000000

SELECT COUNT(*),
CASE WHEN MONTHS_BETWEEN(ENTERED_DT, NVL(RECEIPT_DT, TRUNC(SYSDATE))) <= 0
          THEN 'PO NOT RECD PRIOR TO INV'
     WHEN MONTHS_BETWEEN(ENTERED_DT, NVL(RECEIPT_DT, TRUNC(SYSDATE))) <=.033
          THEN 'PO RECD DAY BEFORE INV'
     ELSE 'PO RECD PRIOR TO PO' END AS RECVD
FROM PS_VOUCHER
WHERE BUSINESS_UNIT LIKE '6%'
  --AND ORIGIN IN('ONL', 'BAT') AND ENTERED_DT > SYSDATE - 30
GROUP BY
CASE WHEN MONTHS_BETWEEN(ENTERED_DT, NVL(RECEIPT_DT, TRUNC(SYSDATE))) <= 0
          THEN 'PO NOT RECD PRIOR TO INV'
     WHEN MONTHS_BETWEEN(ENTERED_DT, NVL(RECEIPT_DT, TRUNC(SYSDATE))) <=.033
          THEN 'PO RECD DAY BEFORE INV'
     ELSE 'PO RECD PRIOR TO PO' END

SELECT * FROM PS_APPR_INST_LOG WHERE BUSPROCNAME =  'UN_VNDR_APPR_BP' AND ROLEUSER = 'shan-yin.woh'
--UN_UNOPS_CA_REQ_BP
--UN_UNFPA_CA_BP
--UN_UNFPA_VNDR_APPR_BP
--UN_REQ_APPROVALS
--UN_UNOPS_CA_PO_APPRV_BP
--UN_UNU_VCHR_APPR_BP
--UN_UNOPS_CA_NPO_VCHR_APPR_BP
--UN_VNDR_APPR_BP
--UN_REQ_APPROVALS2
--UN_JOURNAL_ENTRY_APPROVAL
--UN_NPO_VCHR_APPR_BP
--UN_PO_APPROVALS
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'APPR_INST_LOG'
--UNU_VENDOR_APPROVER
SELECT DISTINCT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.NAME1, A.NAME2, A.VENDOR_STATUS, A.VENDOR_CLASS, A.AR_NUM, 
            TO_CHAR(CAST((A.CREATED_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') CREATED_DTTM, A.CREATED_BY_USER, 
            TO_CHAR(CAST((A.LAST_MODIFIED_DATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') LAST_MODIFIED_DATE, A.ENTERED_BY, TO_CHAR(A.LAST_ACTIVITY_DT,'YYYY-MM-DD'), L.ROLEUSER
FROM PS_VENDOR A, PS_UN_VENDOR_WL K, PS_APPR_INST_LOG L
WHERE A.SETID = 'UNUNI'
     --AND A.CREATED_BY_USER LIKE :2
     --AND A.VENDOR_STATUS LIKE :3
     AND A.VENDOR_ID LIKE '%5935'
     --AND A.VENDOR_ID <= :5
     AND A.SETID = K.SETID (+)
     AND A.VENDOR_ID = K.VENDOR_ID (+)
     AND K.BUSPROCNAME = L.BUSPROCNAME (+)
     AND K.APPR_INSTANCE = L.APPR_INSTANCE (+)
     AND (L.APPR_INST_STATUS = 'A' OR L.APPR_INST_STATUS IS NULL)
ORDER BY 1, 2;

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'FS_ALLC'
SELECT * FROM PS_ALLOC_REQUEST ORDER BY AS_OF_DATE DESC
SELECT DISTINCT SETID FROM PS_ALLOC_STEP_TBL

--Generating Column List for a table with Alias
-- :1 is the table name
-- :2 is the Alias
SELECT :1, LISTAGG(UPPER(:2 || '.' || column_name), ', ') WITHIN GROUP (ORDER BY column_id) column_list
FROM user_tab_columns
WHERE table_name = :1
GROUP BY :1
ORDER BY :1;

--If the concatenated string is greater than 4000 characters, then use the below query
SELECT :1, RTRIM(XMLAGG(XMLELEMENT(E,column_name, ', ').EXTRACT('//text()') ORDER BY column_id).GETCLOBVAL(),',') column_list
--LISTAGG(UPPER(column_name), ', ') WITHIN GROUP (ORDER BY column_id) column_list
FROM user_tab_columns
WHERE table_name = :1
GROUP BY :1
ORDER BY :1;

--PS Field label for a given rec in sequence
SELECT B.FIELDNUM, A.FIELDNAME, B.RECNAME, C.LONGNAME, A.FIELDTYPE, A.FORMAT, A.LENGTH, A.DECIMALPOS, C.FIELDNAME, C.LABEL_ID 
FROM PSDBFIELD A, PSRECFIELDDB B, PSDBFLDLABL C 
WHERE A.FIELDNAME = B.FIELDNAME 
     AND B.FIELDNAME = C.FIELDNAME 
     AND C.DEFAULT_LABEL = 1
     --AND B.RECNAME = 'DEPR_RPT'
     AND B.RECNAME = :1
ORDER BY 1, 2;

--Advanced version
SELECT :1, LISTAGG(UPPER(column_name) || ' ' ||
            (CASE
               WHEN data_type LIKE '%CHAR%' THEN data_type || '(' || data_length || ')'
               WHEN data_type = 'DATE' THEN data_type
               WHEN data_type IN ('NUMBER', 'FLOAT') THEN
                 (CASE
                    WHEN data_precision IS NULL AND data_scale IS NULL THEN data_type
                    WHEN data_precision IS NULL AND data_scale = 0 THEN 'INTEGER'
                    WHEN data_precision IS NOT NULL AND NVL(data_scale, 0) = 0 THEN data_type || '(' || data_precision || ')'
                    ELSE data_type || '(' || data_precision || ',' || data_scale || ')'
                  END)
               ELSE data_type
             END) , ',' || CHR(13) || CHR(10) -- CRLF
       ) WITHIN GROUP (ORDER BY column_id) column_list
FROM user_tab_columns
WHERE table_name = :1
GROUP BY :1
ORDER BY :1;

--Active processes value for Batch Server 
SELECT * FROM PS_PMN_PRCSACTV_VW
--Expanded PS_PMN_PRCSACTV_VW
SELECT S.SERVERNAME, S.PRCSTYPE, S.PRCSPRIORITY, A.ITEMCOUNT, S.MAXCONCURRENT, PMN_QUEUED_CNT, PMN_PENDING_CNT, PMN_BLOCKED_CNT 
FROM PS_SERVERMONITOR A, PS_SERVERCLASS S 
WHERE A.OBJTYPE = 2
    AND S.SERVERNAME = A.SERVERNAME (+)
    AND S.PRCSTYPE = A.OBJNAME (+)
ORDER BY 1,2;
--SELECT * FROM PS_SERVERMONITOR
--SELECT * FROM PS_SERVERCLASS

--Summary of requested processes by process status
SELECT RQST.RUNSTATUS, RQST.PRCSTYPE, (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED 
                                                                                                                                                                                                                         WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                                                                                                         AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                                                                    AND XLAT.FIELDVALUE = RQST.RUNSTATUS) AS RUNSTATUS_XLAT,
          COUNT(RQST.PRCSINSTANCE) AS TOTAL_PROCESSES, MIN(RUNDTTM) AS FIRST_OCCURRED, MAX(RUNDTTM) AS LAST_OCCURRED
FROM PSPRCSRQST RQST
GROUP BY RQST.RUNSTATUS, RQST.PRCSTYPE
ORDER BY RUNSTATUS_XLAT, RQST.PRCSTYPE;

SELECT COUNT(1) FROM PSPRCSRQST UNION ALL SELECT COUNT(1) FROM PSPRCSQUE UNION ALL SELECT COUNT(1) FROM PSPRCSPARMS;

SELECT * FROM PSBATCHAUTH ORDER BY 3 DESC;
SELECT * FROM PSBATCHAUTHLONG WHERE GUID = '6d452fa4-267b-11e3-a0f7-fdc972f6442c';
SELECT TO_CHAR(CREATED_DTTM,'YYYY-MM-DD-HH24.MI.SS."000000"') AS TIMESTAMP FROM PSBATCHAUTH ORDER BY 1 DESC;
SELECT * FROM PSPRCSRQSTSTRNG

--Identify Master Scheduler
SELECT A.SERVERNAME, X1.XLATLONGNAME AS SERVERACTIVITYTYPE, A.SERVERSTATE, TO_CHAR(A.LASTUPDDTTM,'DD-MM-YYYY HH:MI:SS') LAST_UPDATE_TIME 
FROM PS_SERVERACTVTY A, PSXLATITEM X1 
WHERE X1.FIELDNAME = 'SERVERACTIVITYTYPE'
    AND X1.FIELDVALUE = A.SERVERACTIVITYTYPE
    AND A.SERVERACTIVITYTYPE = '1'
    AND A.SERVERSTATE = 2
    AND (ROUND((CAST((SYSTIMESTAMP) AS DATE) - CAST((A.LASTUPDDTTM) AS DATE)) * 1440, 0) < 5)
ORDER BY 1;

--Monitor Process Scheduler
SELECT S.SRVRHOSTNAME, S.SERVERNAME, B.DESCR, X.XLATSHORTNAME, X.FIELDVALUE,
            NVL((SELECT SUM(ITEMCOUNT) FROM PS_PMN_PRCSACTV_VW PR WHERE PR.SERVERNAME = S.SERVERNAME), 0) AS ITEMCOUNT,
            cast(S.MAXCPU as varchar2(3))||'%' "CPU (%)",
            cast(S.MINMEM as varchar2(3))||'%' "Memory (%)",
            cast(S.PRCSDISKSPACE as varchar2(15))||' MB' PRCS_DISK_SPACE,            
            TO_CHAR(S.BEGINDTTM,'DD-MM-YYYY HH:MI:SS') BEGIN_DATE_TIME,
            TO_CHAR(S.LASTUPDDTTM,'DD-MM-YYYY HH:MI:SS') LAST_UPDATE_TIME
FROM PSSERVERSTAT S, PS_SERVERDEFN B, PSXLATITEM X
WHERE S.SERVERNAME = B.SERVERNAME
    AND X.FIELDNAME = 'SERVERSTATUS'
    AND X.FIELDVALUE = S.SERVERSTATUS
ORDER BY 1;


--Monitor %RECV% Jobs which have not run successfully
SELECT OPRID, PRCSNAME, PRCSJOBNAME, MAINJOBNAME, PRCSINSTANCE, JOBINSTANCE, MAINJOBINSTANCE,
            RUNSTATUS, (SELECT C.XLATLONGNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = PSPRCSRQST.RUNSTATUS)  RUNDESCR, 
            TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm , 
            TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm , TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min
FROM PSPRCSRQST
WHERE (PRCSJOBNAME LIKE '%RECV%' OR MAINJOBNAME LIKE '%RECV%')
     --AND TO_CHAR(rundttm,'YYYY-MM') = TO_CHAR(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM'),'YYYY-MM')
     --AND TO_CHAR(rundttm,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
     AND RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2)
    AND OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSPRCSRQST.OPRID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY PRCSINSTANCE;

--Monitor any Process/PSJob triggered by UNU user(s) which have not run successfully
SELECT OPRID, PRCSNAME, PRCSJOBNAME, MAINJOBNAME, PRCSINSTANCE, JOBINSTANCE, MAINJOBINSTANCE,
            RUNSTATUS, (SELECT C.XLATLONGNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = PSPRCSRQST.RUNSTATUS)  RUNDESCR, 
            TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm , 
            TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm , TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min
FROM PSPRCSRQST
WHERE --(PRCSJOBNAME LIKE 'RECV%' OR MAINJOBNAME LIKE 'RECV%')
     --AND TO_CHAR(rundttm,'YYYY-MM') = TO_CHAR(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM'),'YYYY-MM')
     --AND TO_CHAR(rundttm,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
     RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2, 5, 6)
     AND OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSPRCSRQST.OPRID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY PRCSINSTANCE;

--Monitor all %RECV% Jobs (triggered by UNU user(s))
SELECT OPRID, PRCSNAME, PRCSJOBNAME, MAINJOBNAME, PRCSINSTANCE, JOBINSTANCE, MAINJOBINSTANCE,
            RUNSTATUS, (SELECT C.XLATLONGNAME FROM PSXLATITEM C WHERE C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = PSPRCSRQST.RUNSTATUS)  RUNDESCR, 
            TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm , 
            TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm , TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min
FROM PSPRCSRQST
WHERE (PRCSJOBNAME LIKE 'RECV%' OR MAINJOBNAME LIKE '%RECV%')
     --AND TO_CHAR(rundttm,'YYYY-MM') = TO_CHAR(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM'),'YYYY-MM')
     --AND TO_CHAR(rundttm,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
     --AND RUNSTATUS IN (8, 10, 18, 19, 4, 3, 2)
    AND OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSPRCSRQST.OPRID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY PRCSINSTANCE;

SELECT * FROM PS_PMN_PRCSLIST WHERE MAINJOBINSTANCE = 32312656
ORDER BY SEQUENCENO DESC, PRCSJOBSEQ;

SELECT * FROM PS_PMN_SRVRLIST; 
--Expanded PS_PMN_SRVRLIST
SELECT A.SERVERNAME, A.BEGINDTTM, A.LASTUPDDTTM, A.SERVERSTATUS, A.SRVRHOSTNAME, X.XLATLONGNAME, B.DESCR, S.DESCR, B.DISTNODENAME, B.MAXAPIAWARE, B.SLEEPTIME, B.HEARTBEAT,
            B.DAEMONENABLED, B.DAEMONGROUP, B.DAEMONSLEEPTIME, A.PRCSTHRESHOLD, A.PRCSDISKSPACE, B.SRVRLOADBALOPTN, B.MAXCPU, B.MINMEM, B.OPSYS 
FROM PSSERVERSTAT A, PS_SERVERDEFN B, PS_PRCSSRVROPSYS S, PSXLATITEM X 
WHERE A.SERVERNAME = B.SERVERNAME 
    AND A.SERVERSTATUS = X.FIELDVALUE 
    AND S.OPSYS = B.OPSYS 
    AND X.FIELDNAME = 'SERVERSTATUS'
ORDER BY 1;

SELECT * FROM PS_PMN_CATGACTV_VW ORDER BY 1;

--Monitoring Process Performance
--Check processes where runtime has been greater than 300 seconds in the last 7 days
--Works
SELECT PQ.SERVERNAMERUN, PQ.PRCSINSTANCE, PQ.JOBINSTANCE, PQ.MAINJOBINSTANCE, PQ.PRCSTYPE, PQ.PRCSJOBNAME, PQ.MAINJOBNAME, PQ.PRCSNAME, PD.DESCR, PQ.OPRID, PQ.RUNCNTLID, 
            (SELECT  XLATSHORTNAME FROM PSXLATITEM WHERE FIELDNAME = 'RUNSTATUS' AND FIELDVALUE = PQ.RUNSTATUS) AS RUNSTATUS,
            PQ.RUNDTTM, PQ.RQSTDTTM, --(CASE WHEN ENDDTTM IS NULL THEN 'Not Available' ELSE TO_CHAR(ROUND((ENDDTTM - BEGINDTTM) * 24 * 60 * 60)) END) || ' seconds' AS PROCESSING_TIME
            TRUNC((CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE))*24*60*60) || ' seconds' AS SEC_PROCESSING_TIME
            --TRUNC((CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE))*24*60) || ' minutes' AS MIN_PROCESSING_TIME,
            --TRUNC((CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE))*24) || ' hours' AS HR_PROCESSING_TIME
FROM PSPRCSRQST PQ INNER JOIN PS_PRCSDEFN PD ON PQ.PRCSNAME = PD.PRCSNAME
WHERE TRUNC((CAST(ENDDTTM AS DATE) - CAST(BEGINDTTM AS DATE))*24*60*60) >= 300 --TO_CHAR(ROUND((ENDDTTM - BEGINDTTM) * 24 * 60 * 60)) >= 300
    AND TRUNC(PQ.RUNDTTM) >= TRUNC(SYSDATE - 7)
ORDER BY PRCSINSTANCE DESC;


--Monitor Jobs with status of Processing(7)
SELECT A.PRCSINSTANCE, A.JOBINSTANCE, A.PRCSNAME, A.PRCSJOBNAME, A.PRCSTYPE, A.OPRID, B.XLATLONGNAME RUN_STATUS, TO_CHAR(BEGINDTTM,'DAY') AS DAY, 
            TO_CHAR(A.BEGINDTTM,'DD.MON.YYYY HH:MI:SS') BEGINDTTM,
            --ROUND((SYSDATE ֠BEGINDTTM)* 1440, 2) AS DURATION_MINUTES,
            TRUNC((CAST(SYSDATE AS DATE) - CAST(BEGINDTTM AS DATE))*24*60) || ' minutes' AS DURATION_MINUTES,
            TO_CHAR(A.RUNDTTM,'DD.MON.YYYY HH:MI:SS') RUNDTTM, P.XLATSHORTNAME DISTRIBUTION_STATUS
FROM PSPRCSRQST A INNER JOIN PSXLATITEM B ON B.FIELDNAME = 'RUNSTATUS' AND B.FIELDVALUE = A.RUNSTATUS 
                                 INNER JOIN PSXLATITEM P ON P.FIELDNAME = 'DISTSTATUS' AND P.FIELDVALUE =  A.DISTSTATUS
WHERE UPPER(B.XLATLONGNAME) = 'PROCESSING' 
    --AND ROWNUM < 25
ORDER BY BEGINDTTM DESC;

--Find Offending Rows
--RETRYCOUNT = 0 and RUNSTATUS = 'Error'
--Update the retrieved rows to set the RETRYCOUNT value to -1
SELECT * FROM PSPRCSQUE WHERE RETRYCOUNT = 0 AND RUNSTATUS = '3' ORDER BY RUNDTTM DESC;

--Check RETRYCOUNT of Processes in both PSPRCSRQST and PSPRCSQUE Tables
SELECT RETRYCOUNT, COUNT(1) FROM PSPRCSRQST
GROUP BY RETRYCOUNT
ORDER BY 1;

SELECT RETRYCOUNT, COUNT(1) FROM PSPRCSQUE
GROUP BY RETRYCOUNT
ORDER BY 1;

--Components Navigation Setup record
SELECT * FROM PS_PTLT_COMP_NAV WHERE PTLT_TASK_CODE IN ('BUS_UNIT_TBL_GL.GBL');

--PSACCESSLOG Scripts
--Number of users connected to the environment per day
SELECT COUNT(NUM) USERS_NUMBER  
FROM 
(SELECT COUNT(A.OPRID) AS NUM
FROM PSACCESSLOG A
WHERE TO_CHAR(((A.LOGINDTTM ) + (0)),'YYYY-MM-DD') >='2013-04-14'
    AND TO_CHAR(((A.LOGINDTTM ) + (-1)),'YYYY-MM-DD') <'2013-04-15'
GROUP BY OPRID)

SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 32312665
SELECT * FROM PSPRCSRQST WHERE MAINJOBINSTANCE = 32312656 ORDER BY PRCSITEMLEVEL, PRCSJOBSEQ;

--Check UNU Jobs which have been Cancelled/Blocked/Restart/Hold
SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS, PRCSINSTANCE, JOBINSTANCE, MAINJOBINSTANCE,
        TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') as BeginTm ,
        TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') as EndTm ,
        TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') as Hr_Min        
FROM PSPRCSRQST
WHERE (OPRID = 'prakash.prashant' or (PRCSJOBNAME LIKE 'UNU%' OR MAINJOBNAME LIKE 'UNU%'))     
      --AND TO_CHAR(rundttm,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
      AND RUNSTATUS IN (8, 18, 19, 4)
ORDER BY PRCSINSTANCE;

--Contracts which may or may not have PO's 
--Contract status neither cancelled or closed
--Upto Dec 2012
SELECT A.SETID, A.CNTRCT_ID, X1.XLATLONGNAME AS CNTRCT_STATUS, A.CNTRCT_BEGIN_DT, A.CNTRCT_EXPIRE_DT, LN.CNTRCT_LINE_NBR, LN.LINE_STATUS, LN.CURRENCY_CD, 
            LN.MERCHANDISE_AMT, LN.DESCR254_MIXED, B.BUSINESS_UNIT, B.PO_ID, B.CHNG_ORD_BATCH, B.PO_STATUS, 
            B.BUDGET_HDR_STATUS, B.HOLD_STATUS, B.RECV_STATUS, B.PO_DT, B.ACCOUNTING_DT, B.PO_REF, B.VENDOR_ID, F.VENDOR_NAME_SHORT, F.NAME1, B.VNDR_LOC, B.BUYER_ID, 
            B.CURRENCY_CD, B.BILL_LOCATION, B.MATCH_ACTION, B.MATCH_STATUS_PO, B.OPRID_ENTERED_BY, B.ENTERED_DT, B.OPRID_APPROVED_BY, 
            B.APPROVAL_DT, B.OPRID_MODIFIED_BY, B.ACTIVITY_DATE, C.LINE_NBR, C.CANCEL_STATUS, C.CATEGORY_ID, C.DESCR254_MIXED, C.CNTRCT_LINE_NBR, C.RELEASE_NBR, C.RECV_REQ, 
            C.AMT_ONLY_FLG, D.SCHED_NBR, D.CANCEL_STATUS, D.QTY_PO, D.PRICE_PO, D.DUE_DT, D.SHIPTO_ID, D.MATCH_LINE_OPT, D.MATCH_STATUS_LN_PO, 
            E.DISTRIB_LINE_NUM, E.DISTRIB_LN_STATUS, E.BUSINESS_UNIT_GL, E.ACCOUNT, E.OPERATING_UNIT, E.FUND_CODE, E.DEPTID, E.BUSINESS_UNIT_PC, E.PROJECT_ID, E.ACTIVITY_ID, 
            E.CHARTFIELD1, E.CHARTFIELD2, E.BUDGET_DT, E.LOCATION, E.CHARTFIELD_STATUS, E.BUDGET_LINE_STATUS, E.KK_CLOSE_FLAG, E.DISTRIB_PCT, 
            E.QTY_PO, E.CURRENCY_CD, E.MERCHANDISE_AMT, E.CURRENCY_CD_BASE, E.MERCH_AMT_BSE, E.MONETARY_AMOUNT, E.MONETARY_AMT_BSE, E.RATE_MULT, E.RATE_DIV
FROM PS_CNTRCT_HDR A, PS_CNTRCT_LINE LN, PS_PO_HDR B, PS_PO_LINE C, PS_PO_LINE_SHIP D, PS_PO_LINE_DISTRIB E, PS_VENDOR F, PSXLATITEM X1
WHERE A.SETID = LN.SETID
     AND A.CNTRCT_ID = LN.CNTRCT_ID     
     --LN and C
     AND LN.SETID = C.CNTRCT_SETID (+)
     AND LN.CNTRCT_ID = C.CNTRCT_ID (+)
     AND LN.CNTRCT_LINE_NBR = C.CNTRCT_LINE_NBR (+)
     --B and C     
     AND C.BUSINESS_UNIT = B.BUSINESS_UNIT (+) 
     AND C.PO_ID = B.PO_ID (+)
     --C and D     
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT (+)
     AND C.PO_ID = D.PO_ID (+)
     AND C.LINE_NBR = D.LINE_NBR (+)
     --D and E
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT (+)
     AND D.PO_ID = E.PO_ID (+)
     AND D.LINE_NBR = E.LINE_NBR (+)
     AND D.SCHED_NBR = E.SCHED_NBR (+)
     --F and A
     AND F.SETID = A.VENDOR_SETID
     AND F.VENDOR_ID = A.VENDOR_ID
     --XLAT X1
    AND X1.FIELDNAME = 'CNTRCT_STATUS'
    AND X1.FIELDVALUE = A.CNTRCT_STATUS
    --Criteria
     AND A.SETID LIKE '6%'
     --AND A.CNTRCT_ID IN ('0000000000000000000000050')
     AND A.CNTRCT_STATUS NOT IN ('C', 'X')
     AND A.CNTRCT_BEGIN_DT BETWEEN TO_DATE('2009-01-01','YYYY-MM-DD') AND TO_DATE('2012-12-31','YYYY-MM-DD')
ORDER BY 1, 2, LN.CNTRCT_LINE_NBR;

--Verification Queries
SELECT * FROM PS_CNTRCT_HDR WHERE SETID = '600UU' AND CNTRCT_ID LIKE '%808'
SELECT * FROM PS_PO_LINE WHERE CNTRCT_SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000808'
SELECT * FROM PS_CNTRCT_RLS_HDR WHERE SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000050'
SELECT * FROM PS_CNTRCT_RLS_LN WHERE SETID = '600UU' AND CNTRCT_ID = '0000000000000000000000050'
SELECT * FROM PS_CNTRCT_HDR WHERE SETID = '600UU' AND VENDOR_ID = '0000004677'


--17871
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID IN ('4429', '4438', '4444');
SELECT * FROM PS_PAY_MISC_DST WHERE BUSINESS_UNIT_GL = 'UNUNI' AND JOURNAL_ID IN ('AR04852150', 'AR04848802');
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;

--UNU_USER_APPROVAL
--What can a person approve?
SELECT A.ROLEUSER, A.ROLENAME, B.DESCR, A.RTE_CNTL_PROFILE 
FROM PS_RTE_CNTL_RUSER A, PSROLEDEFN B 
WHERE A.ROLENAME = B.ROLENAME 
    AND A.ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
    AND A.ROLENAME NOT LIKE '%LEVEL0%'
    AND A.RTE_CNTL_PROFILE NOT IN ('ADMIN_PO','ADMIN_AP')
ORDER BY 1, 2, 3;

--Version 2
SELECT A.ROLEUSER, A.ROLENAME, B.DESCR, A.RTE_CNTL_PROFILE, H.RTE_CNTL_TYPE, L.RTE_FROM_VALUE, L.RTE_TO_VALUE
FROM PS_RTE_CNTL_RUSER A, PSROLEDEFN B, PS_RTE_CNTL_HDR H, PS_RTE_CNTL_LN L 
WHERE A.ROLENAME = B.ROLENAME
    AND A.RTE_CNTL_PROFILE = H.RTE_CNTL_PROFILE
    AND H.RTE_CNTL_PROFILE = L.RTE_CNTL_PROFILE
    AND H.RTE_CNTL_TYPE = L.RTE_CNTL_TYPE
    AND A.ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
    --AND A.ROLEUSER = 'susan.bocardo'
    --AND A.RTE_CNTL_PROFILE = 'UN_BU_UNU_690UU'
    --AND A.ROLENAME NOT LIKE '%LEVEL0%'
    AND A.RTE_CNTL_PROFILE NOT IN ('ADMIN_PO','ADMIN_AP')
ORDER BY 1, 2, 3;

--UNU_REQS_NOT_APPRVD
SELECT A.BUSINESS_UNIT, A.REQ_ID, B.REQ_STATUS, A.LINE_NBR, A.VENDOR_SETID, A.VENDOR_ID, A.QTY_REQ, A.CATEGORY_ID, C.CATEGORY_CD, C.DESCR, A.PRICE_REQ, 
            A.CURRENCY_CD, A.MERCHANDISE_AMT, A.MERCH_AMT_BSE, A.AMT_ONLY_FLG,
            A.BUYER_ID, A.INV_ITEM_ID, A.SOURCE_STATUS, D.SHIPTO_ID, D.SCHED_NBR, B.REQ_DT, B.REQUESTOR_ID, B.ENTERED_DT, B.OPRID_ENTERED_BY, B.ACCOUNTING_DT,
            A.DESCR254_MIXED 
FROM PS_REQ_LINE A, PS_REQ_HDR B, PS_ITM_CAT_TBL C, PS_REQ_LINE_SHIP D, PS_SET_CNTRL_REC F
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND B.REQ_STATUS IN ('I','O','P')
     AND A.BUSINESS_UNIT LIKE '6%'
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND C.SETID = F.SETID
     AND F.RECNAME = 'ITM_CAT_TBL'
     AND C.CATEGORY_ID = A.CATEGORY_ID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_ITM_CAT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.CATEGORY_TYPE = C_ED.CATEGORY_TYPE 
                                                                                                                       AND C.CATEGORY_CD = C_ED.CATEGORY_CD AND C.CATEGORY_ID = C_ED.CATEGORY_ID AND C_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.REQ_ID = D.REQ_ID
     AND A.LINE_NBR = D.LINE_NBR
ORDER BY 1, 2, 4;

--UNU_AP_VCHR_TRAV_ACCOUNTS
--AP Vouchers charged to 716##
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.INVOICE_DT, B.VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM, C.NAME1, A.ACCOUNTING_DT, A.TXN_CURRENCY_CD, B.FOREIGN_AMOUNT, 
            B.OPERATING_UNIT, B.ACCOUNT, B.FUND_CODE, B.DEPTID, B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD2, B.MONETARY_AMOUNT, A.POST_STATUS_AP, A.BUDGET_HDR_STATUS, B.DESCR, 
            C.AR_NUM 
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_VENDOR C 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND A.VENDOR_SETID = C.SETID
     AND A.VENDOR_ID = C.VENDOR_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND B.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND B.ACCOUNT LIKE '716%'
     AND A.CLOSE_STATUS <> 'C'
     AND A.ENTRY_STATUS NOT IN ('X')
     AND B.DEPTID = '11601'
ORDER BY 1, 2, 5, 6;

SELECT * FROM PSOPRDEFN WHERE OPRID = 'chi-cheung.leung';
SELECT * FROM PSACCESSLOG WHERE OPRID = 'chi-cheung.leung';
SELECT DISTINCT LOGIPADDRESS FROM PSACCESSLOG WHERE OPRID = 'prakash.prashant';
SELECT A.* FROM PSPRCSPRFL A, PSOPRDEFN B WHERE A.CLASSID = B.PRCSPRFLCLS AND B.OPRID = 'prakash.prashant';
SELECT * FROM PS_PRCSSEQUENCE;
SELECT * FROM PS_LEDGER_BUDG_KK;

--POS8001
--Procurement Budgetary Activity Report
--Does work - Testing with Distinct
SELECT DISTINCT HD.VENDOR_ID, D.BUSINESS_UNIT, D.PO_ID, HD.PO_REF, D.LINE_NBR, D.SCHED_NBR, D.DISTRIB_LINE_NUM, D.MONETARY_AMT_BSE, D.BUSINESS_UNIT_GL,
            D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2, D.BUSINESS_UNIT_PC, D.PROJECT_ID, D.ACTIVITY_ID,
            BC.KK_LEDGER_GROUP, Q.KK_TRAN_ID, Q.KK_POSTED_AMT AS PO_AMT_BSE, (Q.KK_POSTED_AMT - Q.MONETARY_AMOUNT) AS LIQUIDATED_AMT, 
            Q.MONETARY_AMOUNT AS REMAIN_AMT_BSE, Q.ACTIVITY,
            NVL((SELECT SUM(PD.MONETARY_AMT_BSE)
                    FROM PS_DISTRIB_LINE PD, PS_VOUCHER V, PS_PYMNT_VCHR_XREF C WHERE HD.BUSINESS_UNIT = PD.BUSINESS_UNIT_PO
                                                                                         AND HD.PO_ID = PD.PO_ID
                                                                                         AND PD.PO_ID <> ' '
                                                                                         AND PD.LINE_NBR = D.LINE_NBR
                                                                                         AND PD.SCHED_NBR = D.SCHED_NBR
                                                                                         AND PD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
                                                                                         AND PD.BUSINESS_UNIT = V.BUSINESS_UNIT
                                                                                         AND PD.VOUCHER_ID = V.VOUCHER_ID
                                                                                         AND C.BUSINESS_UNIT = V.BUSINESS_UNIT
                                                                                         AND C.VOUCHER_ID = V.VOUCHER_ID
                                                                                         AND V.ENTRY_STATUS <> 'X'
                                                                                         AND PYMNT_SELCT_STATUS = 'P'), 0) VOUCHERED_AMT_BSE --(Q.ACTIVITY - VOUCHERED_AMT_BSE) AS DIFF      
FROM  PS_PO_HDR HD, PS_PO_LINE_DISTRIB D, PS_BUL_CNTL_BUD BC, PS_KK_LIQUIDATION Q, PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_LN L, PS_KK_SOURCE_HDR H          
WHERE HD.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND HD.PO_ID = D.PO_ID
    AND BC.BUSINESS_UNIT = D.BUSINESS_UNIT_GL
    AND H.BUSINESS_UNIT = HD.BUSINESS_UNIT
    AND H.PO_ID = HD.PO_ID    
    AND L.LINE_NBR = D.LINE_NBR
    AND L.SCHED_NBR = D.SCHED_NBR
    AND L.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
    AND H.KK_TRAN_ID = L.KK_TRAN_ID
    AND H.KK_TRAN_DT = L.KK_TRAN_DT
    AND L.KK_TRAN_ID = A.KK_TRAN_ID
    AND L.KK_TRAN_DT = A.KK_TRAN_DT
    AND L.KK_TRAN_LN = A.KK_TRAN_LN
    AND A.BALANCING_LINE = 'N'
    AND A.LEDGER_GROUP = BC.KK_LEDGER_GROUP
    AND Q.KK_TRAN_ID = A.KK_TRAN_ID
    AND Q.KK_TRAN_DT = A.KK_TRAN_DT
    AND Q.KK_TRAN_LN = A.KK_TRAN_LN
    AND Q.LEDGER_GROUP = A.LEDGER_GROUP
    AND Q.KK_TRAN_ID <> ' '    
    AND HD.BUSINESS_UNIT LIKE '6%'    
    AND H.PO_ID <> ' '
    AND BC.KK_DETAIL_LED = 'Y'
    AND L.DST_ACCT_TYPE = 'DST'
    AND A.RVRSL_FLG <> 'Y'
    AND D.BUDGET_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    AND D.BUDGET_LINE_STATUS IN ('W','V')
    AND D.DISTRIB_LN_STATUS <> 'X'
    --AND D.DEPTID = '11001'
ORDER BY D.BUSINESS_UNIT, D.PO_ID, D.LINE_NBR, D.SCHED_NBR, D.DISTRIB_LINE_NUM;

SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0047993780' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0047993780'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0047993780'
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0047993780' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0058834607' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0058834607'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0058834607'
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0058834607' AND LEDGER_GROUP = 'DET_UU'

SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID IN ('00017394', '00017421')
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID IN ('00017394', '00017421')
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID IN ('00017394', '00017421')
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID IN ('00017394', '00017421')

SELECT Q.KK_TRAN_ID, Q.MONETARY_AMOUNT, Q.KK_POSTED_AMT, Q.ACTIVITY
FROM PS_KK_LIQUIDATION Q, PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_LN L, PS_KK_SOURCE_HDR H
WHERE H.BUSINESS_UNIT = '600UU'
AND H.PO_ID = '0000005834'
AND H.PO_ID <> ' '
AND L.LINE_NBR = 1
AND L.SCHED_NBR = 1
AND L.DISTRIB_LINE_NUM = 1
AND H.KK_TRAN_ID = L.KK_TRAN_ID
AND H.KK_TRAN_DT = L.KK_TRAN_DT
AND L.KK_TRAN_ID = A.KK_TRAN_ID
AND L.KK_TRAN_DT = A.KK_TRAN_DT
AND L.KK_TRAN_LN = A.KK_TRAN_LN
AND A.BALANCING_LINE = 'N'
AND A.LEDGER_GROUP = 'DET_UU'
AND Q.KK_TRAN_ID = A.KK_TRAN_ID
AND Q.KK_TRAN_DT = A.KK_TRAN_DT
AND Q.KK_TRAN_LN = A.KK_TRAN_LN
AND Q.LEDGER_GROUP = A.LEDGER_GROUP
AND Q.KK_TRAN_ID <> ' '
AND L.DST_ACCT_TYPE = 'DST'

--VCHR_RELAT_VW_J
SELECT A.BUSINESS_UNIT, A.VENDOR_ID, A.VOUCHER_ID, A.INVOICE_ID, A.INVOICE_DT 
FROM PS_VOUCHER A 
WHERE ((A.VOUCHER_STYLE IN ('ADJ', 'PPAY', 'REG', 'THRD', 'JRNL')) 
      OR (A.VOUCHER_STYLE = 'RGTR' 
     AND EXISTS (SELECT 'X' FROM PS_VCHR_REG_LC B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT AND B.VOUCHER_ID = A.VOUCHER_ID AND B.REG_CMPL_FLAG = 'C'))) 
     AND A.ENTRY_STATUS <> 'X'


SELECT * FROM PS_VCHR_REG_LC WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID IN ('00017394', '00017421')
SELECT DISTINCT OPRID_LAST_UPDT FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_STYLE IN ('JRNL') AND VOUCHER_ID_RELATED = ' ' ORDER BY INVOICE_DT DESC

--GL_RECN
SELECT * FROM PS_GLRCN_HEADER;
SELECT * FROM PS_GLRCN_DETAIL;
SELECT * FROM PS_GLRCN_DTL_SRC;
SELECT * FROM PS_JRNLGEN_DEFN;
SELECT * FROM PS_SOURCE_TBL WHERE SETID = 'SHARE'
SELECT * FROM PSXLATITEM A WHERE A.FIELDNAME = 'SYSTEM_SOURCE' AND A.EFF_STATUS = 'A' 
            AND A.EFFDT = (SELECT (A_ED.EFFDT) FROM PSXLATITEM A_ED WHERE A.FIELDNAME = A_ED.FIELDNAME AND A.FIELDVALUE = A_ED.FIELDVALUE)
SELECT * FROM PSRECDEFN WHERE RECNAME = 'DM_DST_GL_VW'
--Analyse System Source in GL for UNU
SELECT DISTINCT SYSTEM_SOURCE, (SELECT XLATLONGNAME FROM PSXLATITEM A WHERE A.FIELDNAME = 'SYSTEM_SOURCE' AND A.EFF_STATUS = 'A' AND A.FIELDVALUE = J.SYSTEM_SOURCE
                                                        AND A.EFFDT = (SELECT (A_ED.EFFDT) FROM PSXLATITEM A_ED WHERE A.FIELDNAME = A_ED.FIELDNAME AND A.FIELDVALUE = A_ED.FIELDVALUE)) AS DESCR 
FROM PS_JRNL_HEADER J WHERE J.BUSINESS_UNIT = 'UNUNI'
ORDER BY 1,2;

--Find Journal Template and associated information for all System Sources for GL BU UNUNI
SELECT DISTINCT ACCTG_DEF_NAME, SYSTEM_SOURCE, RECNAME, FIELDNAME_MON_AMT, FIELDNAME_ACCTDATE
FROM PS_JRNLGEN_DEFN
WHERE SYSTEM_SOURCE IN (SELECT DISTINCT SYSTEM_SOURCE FROM PS_JRNL_HEADER J WHERE J.BUSINESS_UNIT = 'UNUNI')
    AND SETID = (SELECT DISTINCT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'JRNLGEN_DEFN' AND SETCNTRLVALUE = 'UNUNI')
    --AND RECNAME NOT LIKE 'RVL%'
ORDER BY 1,2;

--Select System Source for SubSystem(s)
SELECT DISTINCT SYSTEM_SOURCE, X1.XLATLONGNAME AS SYS_SRC_DESCR, RECNAME, FIELDNAME_MON_AMT, FIELDNAME_ACCTDATE
FROM (PS_JRNLGEN_DEFN A LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'SYSTEM_SOURCE' AND X1.FIELDVALUE = A.SYSTEM_SOURCE)
WHERE SETID = (SELECT DISTINCT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'JRNLGEN_DEFN' AND SETCNTRLVALUE = 'UNUNI')
  --AND SYSTEM_SOURCE = ''
ORDER BY 1,2;

SELECT DISTINCT BUSINESS_UNIT FROM PS_UN_JGEN_ACCT_EN ORDER BY 1

SELECT DISTINCT ACCTG_DEF_NAME, SYSTEM_SOURCE, RECNAME, FIELDNAME_MON_AMT, FIELDNAME_ACCTDATE
FROM PS_JRNLGEN_DEFN
WHERE SYSTEM_SOURCE = 'GAR'
    AND SETID = (SELECT DISTINCT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'JRNLGEN_DEFN'
    AND SETCNTRLVALUE = 'UNUNI')

--Subsystem Journal in Error, no prompt for DEPTID field while creating Direct Journals
SELECT SETID, COMBO_EDIT_FLG, CHART_EDIT_OPTION FROM PS_BUS_UNIT_OPT_AR
SELECT * FROM PS_PAY_MISC_DST WHERE JOURNAL_ID = 'AR04862310'
SELECT * FROM PS_DEPOSIT_CONTROL WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '214'
SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '214'
SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '613UU' AND DEPOSIT_ID = '214'
SELECT * FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'AR04862310'

--PO Change Order History
SELECT * FROM PS_PO_CHNG_ORD WHERE BUSINESS_UNIT = '622UU' AND PO_ID = '0000000007'
SELECT * FROM PS_PO_CHNG_HDR WHERE BUSINESS_UNIT = '622UU' AND PO_ID = '0000000007'
SELECT * FROM PS_PO_CHNG_LINE WHERE BUSINESS_UNIT = '622UU' AND PO_ID = '0000000007'
SELECT * FROM PS_PO_CHNG_SHIP WHERE BUSINESS_UNIT = '622UU' AND PO_ID = '0000000007'
SELECT * FROM PS_PO_LINE_SHIP WHERE BUSINESS_UNIT = '622UU' AND PO_ID = '0000000007'
SELECT * FROM PS_PO_CHG_FLD_VW WHERE BUSINESS_UNIT = '600UU'

--UN_REQ_TRACKING_DETAILS
SELECT DISTINCT D.REQ_ID, E.REQ_DT, E.REQ_STATUS, E.REQUESTOR_ID, E.OPRID_ENTERED_BY, E.APPROVAL_DT, E.OPRID_APPROVED_BY, A.PO_ID, A.VENDOR_ID, M.NAME1, B.DESCR254_MIXED, 
            A.ENTERED_DT, ((TO_DATE(TO_CHAR(A.ENTERED_DT,'YYYY-MM-DD'),'YYYY-MM-DD')) - (TO_DATE(TO_CHAR(E.REQ_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))) "Days - Req to PO",
            A.OPRID_ENTERED_BY, A.BUYER_ID, A.APPROVAL_DT, A.OPRID_APPROVED_BY, A.PO_STATUS, A.BUDGET_HDR_STATUS, C.QTY_PO, C.MERCH_AMT_BSE, C.DEPTID, N.CONTRACT_NUM, 
            L.PARENT_CONTR_ID, C.PROJECT_ID, C.ACTIVITY_ID, C.ACCOUNT, F.QTY_DS_ACCPT_SUOM, F.RECEIVER_ID, 
            SUBSTR(TO_CHAR(CAST((G.RECEIPT_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'),1,10) "Receipt Date",
            ((TO_DATE(SUBSTR(TO_CHAR(CAST((G.RECEIPT_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'),1,10),'YYYY-MM-DD')) - (TO_DATE(TO_CHAR(A.APPROVAL_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))) "Days to Receive", 
            I.ENTERED_DT, H.VOUCHER_ID, H.MONETARY_AMOUNT, A.MATCH_STATUS_PO, K.CREATION_DT, K.PYMNT_METHOD, K.PYMNT_ID_REF, 
            ((TO_DATE(TO_CHAR(K.CREATION_DT,'YYYY-MM-DD'),'YYYY-MM-DD')) - (TO_DATE(SUBSTR(TO_CHAR(CAST((G.RECEIPT_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'),1,10),'YYYY-MM-DD'))) "Days to Pay"
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_DISTRIB C, PS_REQ_LN_DISTRIB D, PS_REQ_HDR E, PS_RECV_LN_DISTRIB F, PS_RECV_LN_SHIP G, PS_DISTRIB_LINE H, PS_VOUCHER I, 
         PS_PYMNT_VCHR_XREF J, PS_PAYMENT_TBL K, PS_VENDOR M, PS_GM_AWD_PROJT_VW N, PS_CA_CONTR_HDR L
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT_REQ =  D.BUSINESS_UNIT (+)
    AND C.REQ_ID =  D.REQ_ID (+)
    AND C.REQ_LINE_NBR =  D.LINE_NBR (+)
    AND C.REQ_SCHED_NBR =  D.SCHED_NBR (+)
    AND C.REQ_DISTRIB_NBR =  D.DISTRIB_LINE_NUM (+)
    AND D.BUSINESS_UNIT =  E.BUSINESS_UNIT (+)
    AND D.REQ_ID =  E.REQ_ID (+)
    AND C.BUSINESS_UNIT =  F.BUSINESS_UNIT_PO (+)
    AND C.PO_ID =  F.PO_ID (+)
    AND C.LINE_NBR =  F.LINE_NBR (+)
    AND C.SCHED_NBR =  F.SCHED_NBR (+)
    AND C.DST_ACCT_TYPE =  F.DST_ACCT_TYPE (+)
    AND C.DISTRIB_LINE_NUM =  F.DISTRIB_LINE_NUM (+)
    AND F.BUSINESS_UNIT =  G.BUSINESS_UNIT (+)
    AND F.RECEIVER_ID =  G.RECEIVER_ID (+)
    AND F.RECV_LN_NBR =  G.RECV_LN_NBR (+)
    AND F.RECV_SHIP_SEQ_NBR =  G.RECV_SHIP_SEQ_NBR (+)
    AND C.BUSINESS_UNIT =  H.BUSINESS_UNIT_PO (+)
    AND C.PO_ID =  H.PO_ID (+)
    AND C.LINE_NBR =  H.LINE_NBR (+)
    AND C.SCHED_NBR =  H.SCHED_NBR (+)
    AND C.DISTRIB_LINE_NUM =  H.DISTRIB_LINE_NUM (+)
    AND H.BUSINESS_UNIT =  I.BUSINESS_UNIT (+)
    AND H.VOUCHER_ID =  I.VOUCHER_ID (+)
    AND I.BUSINESS_UNIT =  J.BUSINESS_UNIT (+)
    AND I.VOUCHER_ID =  J.VOUCHER_ID (+)
    AND J.BANK_SETID =  K.BANK_SETID (+)
    AND J.BANK_CD =  K.BANK_CD (+)
    AND J.BANK_ACCT_KEY =  K.BANK_ACCT_KEY (+)
    AND J.PYMNT_ID =  K.PYMNT_ID (+)
    AND A.VENDOR_SETID = M.SETID
    AND A.VENDOR_ID = M.VENDOR_ID
    AND E.BUSINESS_UNIT LIKE '6%'
    AND E.ENTERED_DT >= TO_DATE('2011-01-01','YYYY-MM-DD')
    AND E.ENTERED_DT <= TO_DATE('2013-12-31','YYYY-MM-DD')
    AND C.BUSINESS_UNIT_PC = 'UNUNI'
    AND C.PROJECT_ID = '00083429'
    --AND E.REQ_ID LIKE :7
    --AND A.VENDOR_SETID = 'UNUNI'
    --AND A.VENDOR_ID = '0000005935'
    --AND M.VENDOR_CLASS NOT IN ('C','S')
    AND N.BUSINESS_UNIT_PC = C.BUSINESS_UNIT_PC
    AND N.PROJECT_ID = C.PROJECT_ID
    AND N.CONTRACT_NUM = L.CONTRACT_NUM
    AND E.REQ_STATUS <> 'X'
ORDER BY 8;

SELECT * FROM PS_GROUP_CONTROL WHERE DEPOSIT_ID = '4661'

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4429'
SELECT * FROM PS_UN_DEP_DSCR WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4429'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4429'

SELECT * FROM PS_PAYMENT WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4438'
SELECT * FROM PS_UN_DEP_DSCR WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4438'
SELECT * FROM PS_PAY_MISC_DST WHERE DEPOSIT_BU = '600UU' AND DEPOSIT_ID = '4438'

SELECT * FROM PS_EX_EE_ORG_DTL WHERE EMPLID = '265466'
SELECT * FROM PS_JOB WHERE EMPLID = '265466'
SELECT BUSINESS_UNIT_GL, COUNT(1) FROM PS_EX_SHEET_HDR GROUP BY BUSINESS_UNIT_GL ORDER BY 2 DESC
SELECT EMPLID, COUNT(1) FROM PS_EX_SHEET_HDR GROUP BY EMPLID HAVING COUNT(1) > 100 ORDER BY 2 DESC

SELECT PER_STATUS, COUNT(1) FROM PS_PERSONAL_DATA GROUP BY PER_STATUS

SELECT EMPLID, NAME, FIRST_NAME, LAST_NAME, COUNTRY, CITY, PER_STATUS, SEX
FROM PS_PERSONAL_DATA P WHERE P.EMPLID IN (SELECT EMPLID FROM PS_EX_SHEET_HDR GROUP BY EMPLID HAVING COUNT(1) > 100)
AND EXISTS (SELECT EMPLID FROM PS_EX_SHEET_HDR H WHERE H.EMPLID = P.EMPLID)

SELECT * FROM PS_PERSONAL_DATA WHERE PER_STATUS <> 'E'
SELECT * FROM PS_EX_SHEET_HDR WHERE EMPLID IN ('N000035368', '24898')

SELECT NAME, COUNT(1) FROM PS_NAMES A WHERE A.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES A_ED WHERE A_ED.EMPLID = A.EMPLID AND A.NAME_TYPE = A_ED.NAME_TYPE) 
GROUP BY NAME HAVING COUNT(1) > 1 
ORDER BY 2 DESC

--Four Steps to Change Dates on Existing POs
SELECT ACCOUNTING_DT, A.* FROM PS_PO_HDR A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005705';
SELECT BUDGET_DT, A.* FROM PS_PO_DFLT_DISTRIB A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005705';
SELECT BUDGET_DT, A.* FROM PS_PO_LINE_DISTRIB A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005705';

--Now check Vouchers
SELECT ACCOUNTING_DT, BUDGET_DT, DESCR, A.* 
FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT_PO = '600UU' AND PO_ID = '0000005705'
ORDER BY 1 DESC;

SELECT ACCOUNTING_DT, BUDGET_DT, DESCR, A.* 
FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT_PO = '605UU'
AND TO_CHAR(A.BUDGET_DT, 'YYYY') > '2011'
AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DISTRIB B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT_PO AND B.PO_ID = A.PO_ID AND B.LINE_NBR = A.LINE_NBR 
                                                                                     AND B.SCHED_NBR = A.SCHED_NBR AND B.DISTRIB_LINE_NUM = A.PO_DIST_LINE_NUM 
                                                                                     AND TO_CHAR(B.BUDGET_DT, 'YYYY') <> TO_CHAR(A.BUDGET_DT, 'YYYY'))

SELECT BUDGET_DT, B.* 
FROM PS_PO_LINE_DISTRIB B WHERE BUSINESS_UNIT = '600UU'
AND TO_CHAR(B.BUDGET_DT, 'YYYY') > '2011'
AND EXISTS (SELECT 'X' FROM PS_DISTRIB_LINE A WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT_PO AND B.PO_ID = A.PO_ID AND B.LINE_NBR = A.LINE_NBR 
                                                                                     AND B.SCHED_NBR = A.SCHED_NBR AND B.DISTRIB_LINE_NUM = A.PO_DIST_LINE_NUM 
                                                                                     AND TO_CHAR(B.BUDGET_DT, 'YYYY') <> TO_CHAR(A.BUDGET_DT, 'YYYY'))

SELECT * FROM PS_AUTO_NUM_TBL

--Sampling of SPC
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND OPERATING_UNIT = '600' AND FUND_CODE = '11000' AND DEPTID = '10504' AND CHARTFIELD2 = '10158'
AND PROJECT_ID = '00064426' AND FISCAL_YEAR = '2012' AND ACCOUNT = '72125'

--14th May
SELECT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, APPL_JRNL_ID, POSTING_PROCESS, PYMNT_CNT, VOUCHER_LINE_NUM, DISTRIB_LINE_NUM, DST_ACCT_TYPE, LEDGER,
BUSINESS_UNIT_GL, ACCOUNT, OPERATING_UNIT, FUND_CODE, DEPTID, BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, CHARTFIELD2, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2,
FOREIGN_AMOUNT, FOREIGN_CURRENCY, RT_TYPE, RATE_MULT, RATE_DIV, MONETARY_AMOUNT,QTY_VCHR, JRNL_LN_REF, DESCR, MERCHANDISE_AMT, MERCH_AMT_BSE,
ACCOUNTING_DT, ACCOUNTING_PERIOD, FISCAL_YEAR, JOURNAL_ID, JOURNAL_DATE, JOURNAL_LINE, MOVEMENT_FLAG, GL_DISTRIB_STATUS, PROCESS_INSTANCE, ERROR_FLAG, FINAL_REF_IND,
BUSINESS_UNIT_PO, PO_ID, LINE_NBR, SCHED_NBR, PO_DIST_LINE_NUM, CURRENCY_CD, LEDGER_GROUP, SHIPTO_ID, POSTING_DATE, IST_DISTRIB_STATUS, PRIMARY_LEDGER, BUDGET_HDR_STATUS, 
BUDGET_LINE_STATUS, CLOSE_STATUS, BUDGET_DT
FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND FISCAL_YEAR = '2012' AND (ACCOUNT LIKE '6%' OR ACCOUNT LIKE '7%') 
AND FUND_CODE = '11000' AND OPERATING_UNIT = '600'
AND PROJECT_ID IN ('00064426', '00079970', '00064494', '00064148', '00064435', '00074751', '00078522', '00079441')

--16th May
SELECT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, APPL_JRNL_ID, POSTING_PROCESS, PYMNT_CNT, VOUCHER_LINE_NUM, DISTRIB_LINE_NUM, DST_ACCT_TYPE, LEDGER,
BUSINESS_UNIT_GL, ACCOUNT, OPERATING_UNIT, FUND_CODE, DEPTID, BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, CHARTFIELD2, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2,
FOREIGN_AMOUNT, FOREIGN_CURRENCY, RT_TYPE, RATE_MULT, RATE_DIV, MONETARY_AMOUNT,QTY_VCHR, JRNL_LN_REF, DESCR, MERCHANDISE_AMT, MERCH_AMT_BSE,
ACCOUNTING_DT, ACCOUNTING_PERIOD, FISCAL_YEAR, JOURNAL_ID, JOURNAL_DATE, JOURNAL_LINE, MOVEMENT_FLAG, GL_DISTRIB_STATUS, PROCESS_INSTANCE, ERROR_FLAG, FINAL_REF_IND,
BUSINESS_UNIT_PO, PO_ID, LINE_NBR, SCHED_NBR, PO_DIST_LINE_NUM, CURRENCY_CD, LEDGER_GROUP, SHIPTO_ID, POSTING_DATE, IST_DISTRIB_STATUS, PRIMARY_LEDGER, BUDGET_HDR_STATUS, 
BUDGET_LINE_STATUS, CLOSE_STATUS, BUDGET_DT
FROM PS_VCHR_ACCTG_LINE 
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
    AND FISCAL_YEAR = '2012' 
    AND (ACCOUNT LIKE '6%' OR ACCOUNT LIKE '7%')
    --AND FUND_CODE BETWEEN '04000' AND '11000'
    AND FUND_CODE >= '04000'
    AND FUND_CODE <= '15100' 
    AND OPERATING_UNIT = '600'
    AND PROJECT_ID IN ('00073148', '00073151', '00078790', '00080342', '00064146', '00064414', '00064417', '00064418', '00064419', '00064420', '00078822', '00081718', '00064149', '00064435', '00064152',
                                   '00064437', '00064438', '00064439', '00074034', '00064153', '00076146', '00064493', '00073149', '00073150', '00073152', '00073153', '00073654', '00073732')

--Verification Queries
SELECT DISTINCT FUND_CODE FROM (
SELECT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, APPL_JRNL_ID, POSTING_PROCESS, PYMNT_CNT, VOUCHER_LINE_NUM, DISTRIB_LINE_NUM, DST_ACCT_TYPE, LEDGER,
BUSINESS_UNIT_GL, ACCOUNT, OPERATING_UNIT, FUND_CODE, DEPTID, BUSINESS_UNIT_PC, PROJECT_ID, ACTIVITY_ID, CHARTFIELD2, AFFILIATE, AFFILIATE_INTRA1, AFFILIATE_INTRA2,
FOREIGN_AMOUNT, FOREIGN_CURRENCY, RT_TYPE, RATE_MULT, RATE_DIV, MONETARY_AMOUNT,QTY_VCHR, JRNL_LN_REF, DESCR, MERCHANDISE_AMT, MERCH_AMT_BSE,
ACCOUNTING_DT, ACCOUNTING_PERIOD, FISCAL_YEAR, JOURNAL_ID, JOURNAL_DATE, JOURNAL_LINE, MOVEMENT_FLAG, GL_DISTRIB_STATUS, PROCESS_INSTANCE, ERROR_FLAG, FINAL_REF_IND,
BUSINESS_UNIT_PO, PO_ID, LINE_NBR, SCHED_NBR, PO_DIST_LINE_NUM, CURRENCY_CD, LEDGER_GROUP, SHIPTO_ID, POSTING_DATE, IST_DISTRIB_STATUS, PRIMARY_LEDGER, BUDGET_HDR_STATUS, 
BUDGET_LINE_STATUS, CLOSE_STATUS, BUDGET_DT
FROM PS_VCHR_ACCTG_LINE 
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
    AND FISCAL_YEAR = '2012' 
    AND (ACCOUNT LIKE '6%' OR ACCOUNT LIKE '7%')
    AND PROJECT_ID IN ('00064146'))


SELECT DISTINCT PC_DISTRIB_STATUS, SOURCE, UNPOST_SEQ FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND JRNL_HDR_STATUS = 'U'
ORDER BY 1,2,3;

SELECT * FROM PSOPRDEFN WHERE OPRID = 'ben.zhu'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'ben.zhu'
--UN PeopleSoft User
--UN_UNU_BUYER
--UN_UNU_HR

--613 Budget Journal Issue Level 2 - 00082982
--Posted by Brad
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982' AND ANALYSIS_TYPE = 'BUD'
SELECT * FROM PS_KK_REV_XREF WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982'
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'REV_METHOD'
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND ANALYSIS_TYPE = 'BUD' AND OPRID = 'bradley.berquist' ORDER BY JOURNAL_DATE;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 32973182
SELECT * FROM PS_LEDGER_KK WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982' AND (LEDGER LIKE 'REV_UU%' OR LEDGER LIKE 'PAR_UU%')
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982' AND LEDGER_GROUP IN ('REV_UU', 'PAR_UU')
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID IN ('0057437472', '0057402441', '0062240620')
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID IN ('0057437472', '0057402441', '0062240620')
SELECT * FROM PS_GM_BUD_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND SUB_PROP_NBR = '00082982'
SELECT * FROM PS_GM_AWD_FUND_PD WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982'
SELECT * FROM PS_PC_BUD_PLAN WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982'
SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00082982'
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND RESOURCE_ID = '39572632'
SELECT * FROM PS_KK_BUDGET_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0039596834'
SELECT A.BUSINESS_UNIT, A.KK_BUDG_TRANS_TYPE, A.BD_HDR_STATUS, A.POSTED_DATE, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            B.JOURNAL_ID, B.JOURNAL_DATE, B.UNPOST_SEQ, B.JOURNAL_LINE, B.LINE_DESCR, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.BUSINESS_UNIT_PC, 
            B.PROJECT_ID, B.BUDGET_PERIOD, B.FOREIGN_CURRENCY, B.MONETARY_AMOUNT, B.CURRENCY_CD, B.FOREIGN_AMOUNT
FROM PS_KK_BUDGET_HDR A, PS_KK_BUDGET_LN B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.JOURNAL_ID = B.JOURNAL_ID 
    AND A.JOURNAL_DATE = B.JOURNAL_DATE 
    AND A.UNPOST_SEQ = B.UNPOST_SEQ 
    --AND (B.BUDGET_LINE_STATUS = 'E' OR BD_LINE_STATUS = 'E' OR KSEC_LINE_STATUS = 'E')
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.JOURNAL_ID = '0039596834'

--Find all those projects who have a row at PAR_UU (Expense Level 2) and Revenue Associated (Revenue Budget )
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.ACTIVITY_ID,  A.BUDGET_PERIOD, A.CURRENCY_CD, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.POSTED_TOTAL_AMT, A.POSTED_BASE_AMT, A.POSTED_TRAN_AMT, A.BASE_CURRENCY, 
            B.BUSINESS_UNIT, B.LEDGER, B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.PROJECT_ID, B.ACTIVITY_ID,  B.BUDGET_PERIOD, B.CURRENCY_CD, 
            B.FISCAL_YEAR, B.ACCOUNTING_PERIOD, B.POSTED_TOTAL_AMT, B.POSTED_BASE_AMT, B.POSTED_TRAN_AMT, B.BASE_CURRENCY
FROM PS_LEDGER_KK A, PS_LEDGER_KK B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.PROJECT_ID = B.PROJECT_ID
    AND A.LEDGER LIKE 'REV_UU%'
    AND B.LEDGER = 'PAR_UU_BUD'
    AND A.PROJECT_ID = '00082982'

--Try Exists
SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.ACTIVITY_ID,  A.BUDGET_PERIOD, A.CURRENCY_CD, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.POSTED_TOTAL_AMT, A.POSTED_BASE_AMT, A.POSTED_TRAN_AMT, A.BASE_CURRENCY
FROM PS_LEDGER_KK A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER LIKE 'REV_UU%'
    AND A.PROJECT_ID = '00082982'
    AND EXISTS (SELECT 'X' FROM PS_LEDGER_KK B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.PROJECT_ID = B.PROJECT_ID AND B.BUSINESS_UNIT = 'UNUNI' AND B.LEDGER LIKE 'PAR_UU%')

SELECT A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.PROJECT_ID, A.ACTIVITY_ID,  A.BUDGET_PERIOD, A.CURRENCY_CD, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.POSTED_TOTAL_AMT, A.POSTED_BASE_AMT, A.POSTED_TRAN_AMT, A.BASE_CURRENCY
FROM PS_LEDGER_KK A
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.LEDGER = 'PAR_UU_BUD'
    AND A.PROJECT_ID = '00082982'
    AND EXISTS (SELECT 'X' FROM PS_KK_REV_XREF B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.PROJECT_ID = B.PROJECT_ID)

SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID = '0000002676';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'VENDOR_STATUS';

SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND JOURNAL_ID = 'AP04896737';
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00015385';
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00015385';
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = 14492119;
SELECT * FROM PSAUDIT WHERE RECNAME = 'FIN_OPEN_PERIOD' AND AUDIT_OPRID = 'sharon.koh' AND TO_CHAR(AUDIT_STAMP, 'YYYY') = '2013';

SELECT * FROM PSAUDIT WHERE RECNAME = 'FIN_OPEN_PERIOD' AND (KEY2 = 'UNUNI' OR KEY2 LIKE '6%') AND TO_CHAR(AUDIT_STAMP, 'YYYY') = '2015' AND KEY1 = 'AM' 
ORDER BY AUDIT_STAMP DESC;

SELECT * FROM PSAUDIT WHERE (KEY2 = 'UNUNI' OR KEY2 LIKE '6%') AND TO_CHAR(AUDIT_STAMP, 'YYYY') = '2015' ORDER BY AUDIT_STAMP DESC;

SELECT * FROM PSAUDIT WHERE RECNAME = 'FIN_OPEN_PERIOD' AND AUDIT_OPRID = 'anna.arenth' AND TO_CHAR(AUDIT_STAMP, 'YYYY') = '2013';

SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '615UU' AND PO_ID = '0000001532';
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 32499724;

SELECT * FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT = '605UU';
SELECT * FROM PS_BUS_UNIT_TBL_FS WHERE BUSINESS_UNIT = '605UU';
SELECT * FROM PS_BUYER_TBL WHERE BUYER_ID = 'tuuli.levit';
SELECT * FROM PS_AUTO_NUM_TBL_BU WHERE (BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT LIKE '6%');

SELECT * FROM PS_RUN_CNTL_GL WHERE OPRID = 'prakash.prashant';
SELECT * FROM PS_FS_RPTCF WHERE OPRID = 'prakash.prashant' AND PNLGRPNAME = 'RUN_GLS8010';

SELECT DISTINCT QRYNAME FROM PSQRYRECORD WHERE RECNAME = 'ASSET_CUSTODIAN';

--UNU Departments
SELECT SETID, DEPTID, EFFDT, DESCR, EFF_STATUS, DESCRSHORT, COMPANY, SETID_LOCATION, LOCATION, BUDGET_LVL, BUDGET_DEPTID, BUDGETARY_ONLY
FROM PS_DEPT_TBL D WHERE SETID = 'UNUNI' AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_DEPT_TBL D_ED WHERE D_ED.SETID = D.SETID AND D_ED.DEPTID = D.DEPTID)

--Review Commitment Control - PC Exceptions
--SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'KK_DISTRIB_STATUS'
--Version 1
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.RESOURCE_ID, A.PC_BUDGET_ID, B.PC_BUD_TYPE, B.DESCR, B.START_DT, B.CALENDAR_ID, B.NUM_PERIODS, 
            B.PC_BUDGET_STATUS, B.ANALYSIS_TYPE, B.PC_FUND_FINALIZED, B.FINALIZE_SW, B.PROJECT_ID_TO, B.POST_OPTION, B.PC_SEND_TO_KK, B.LAST_DTTIME, 
            B.FMS_DTTM_STAMP, B.FMS_OPRID, B.FMS_LASTUPDDTTM, B.FMS_LASTUPDOPRID, B.BUDGET_ADJUST,
            A.ANALYSIS_TYPE, A.INTFC_ID, A.PROCESS_INSTANCE, A.KK_DISTRIB_STATUS, A.PC_BUDGET_ITEM, KK_BUDG_LN_TYPE, BD_HDR_STATUS, GM_DISTRIB_STATUS, LOAD_STATUS,
            A.JOURNAL_ID, ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.CHARTFIELD2,
            A.MESSAGE_SET_NBR, A.MESSAGE_NBR, C.MESSAGE_TEXT
FROM PS_INTFC_PROJ_RES A, PS_PC_BUD_PLAN B, PSMSGCATDEFN C
WHERE A.KK_DISTRIB_STATUS IN ('E', 'S', 'B', 'C', 'N', ' ') 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PROJECT_ID = B.PROJECT_ID 
    AND (A.PC_BUDGET_ID = B.PC_BUDGET_ID OR A.PC_BUDGET_ID = 0)
    AND A.MESSAGE_SET_NBR = C.MESSAGE_SET_NBR (+)
    AND A.MESSAGE_NBR = C.MESSAGE_NBR (+)
    AND A.BUSINESS_UNIT = 'UNUNI'
ORDER BY B.FMS_LASTUPDDTTM DESC;

--Version 2
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.RESOURCE_ID, A.BUDGET_PERIOD, A.BUDGET_LN, A.KK_SOURCE_TRAN, A.TRANS_DT, A.ACCOUNTING_DT, A.CALENDAR_ID,
            A.PC_BUDGET_ID, B.PC_BUD_TYPE, B.DESCR AS PROJ_DESCR, B.START_DT, B.CALENDAR_ID, B.NUM_PERIODS, A.DESCR AS BUD_ITEM_DESCR, 
            A.PC_INTFC_STATUS, A.PC_LOAD_STATUS, B.PC_BUDGET_STATUS, B.ANALYSIS_TYPE, B.PC_FUND_FINALIZED, B.FINALIZE_SW, B.PROJECT_ID_TO, B.POST_OPTION, 
            B.PC_SEND_TO_KK, B.LAST_DTTIME, B.FMS_DTTM_STAMP, B.FMS_OPRID, B.FMS_LASTUPDDTTM, B.FMS_LASTUPDOPRID, B.BUDGET_ADJUST,
            A.ANALYSIS_TYPE, A.INTFC_ID, A.PROCESS_INSTANCE, A.KK_DISTRIB_STATUS, A.PC_BUDGET_ITEM, KK_BUDG_LN_TYPE, BD_HDR_STATUS, GM_DISTRIB_STATUS, LOAD_STATUS,
            A.JOURNAL_ID, ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.CHARTFIELD2, A.ACTIVITY_ID, A.MESSAGE_SET_NBR, A.MESSAGE_NBR, C.MESSAGE_TEXT
FROM PS_INTFC_PROJ_RES A, PS_PC_BUD_PLAN B, PSMSGCATDEFN C
WHERE A.KK_DISTRIB_STATUS IN ('E', 'S', 'B', 'C', 'N', ' ') 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PROJECT_ID = B.PROJECT_ID 
    AND (A.PC_BUDGET_ID = B.PC_BUDGET_ID OR A.PC_BUDGET_ID = 0)
    AND A.MESSAGE_SET_NBR = C.MESSAGE_SET_NBR (+)
    AND A.MESSAGE_NBR = C.MESSAGE_NBR (+)
    AND A.BUSINESS_UNIT = 'UNUNI'
ORDER BY BUDGET_PERIOD DESC, B.FMS_LASTUPDDTTM DESC;

SELECT * FROM PSPRCSRQST
WHERE PRCSINSTANCE IN (SELECT A.PROCESS_INSTANCE FROM PS_INTFC_PROJ_RES A, PS_PC_BUD_PLAN B WHERE A.KK_DISTRIB_STATUS IN ('E', 'S', 'B', 'C', 'N', ' ') 
                                                                                                                                                                      AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
                                                                                                                                                                      AND A.PROJECT_ID = B.PROJECT_ID 
                                                                                                                                                                      AND (A.PC_BUDGET_ID = B.PC_BUDGET_ID OR A.PC_BUDGET_ID = 0)
                                                                                                                                                                      AND A.BUSINESS_UNIT = 'UNUNI');

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PC_KK_TO_PC'
SELECT * FROM PS_RUN_CNTL_PC_AE WHERE OPRID = 'craig.booth'
SELECT * FROM PS_PC_BUD_SUMMARY

--UNU Budget Items
SELECT * FROM PS_GM_BUD_CATEGORY B 
WHERE SETID = 'UNUNI'
    AND EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GM_BUD_CATEGORY B_ED WHERE B.SETID = B_ED.SETID AND B.BUDGET_CATEGORY = B_ED.BUDGET_CATEGORY AND B_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--UNU Budget Items
SELECT DISTINCT SETID, A.BUDGET_CATEGORY, EFFDT, A.DESCR, BUD_CAT_TYPE 
FROM PS_GM_BUD_CATEGORY A, PS_PC_BUD_DETAIL D 
WHERE EFF_STATUS = 'A' 
    AND EFFDT = (SELECT MAX(B.EFFDT) FROM PS_GM_BUD_CATEGORY B WHERE B.SETID = A.SETID AND B.BUDGET_CATEGORY = A.BUDGET_CATEGORY AND B.EFFDT <= SYSDATE) 
    AND A.BUDGET_CATEGORY = D.PC_BUDGET_ITEM
    AND SETID = 'UNUNI'
ORDER BY 1,2;


--Brads Issues - 71822
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00071822'
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 33023537

SELECT * FROM PS_INTFC_PROJ_RES WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00071822'
SELECT * FROM PS_PC_KK_HDR WHERE BUSINESS_UNIT_PC = 'UNUNI' AND PROJECT_ID = '00071822'

SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '613UU' AND PO_ID = '0000001818'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '613UU' AND PO_ID = '0000001818'
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '613UU' AND PO_ID = '0000001861'
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_EX_XREF WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_KK_REV_XREF WHERE BUSINESS_UNIT = 'UNUNI'
SELECT * FROM PS_KK_BUDGET_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'PAR_UU'
--Find all those transactions which have a line for PAR_UU missing
--Does not work
SELECT A.KK_TRAN_ID, B.KK_TRAN_ID
FROM PS_KK_LIQUIDATION A, PS_KK_LIQUIDATION B 
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
AND A.KK_TRAN_DT = B.KK_TRAN_DT
AND A.KK_TRAN_LN = B.KK_TRAN_LN
AND A.LEDGER_GROUP = B.LEDGER_GROUP
AND A.LEDGER_GROUP <> 'PAR_UU'
AND A.LEDGER_GROUP LIKE '%UU'
AND A.KK_TRAN_ID = '0060771983'

SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_TRANS_LOG WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0062557139'
SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0060771983'
SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0062557139'
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0062545737'


SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000006186', '0000006187', '0000006188')

--Budgets Overview Testing Query
--LEDGER_KK
--Version 1
SELECT X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID,
            SUM(X.BUD) "Total Budgeted Amount", SUM(X.EXP) "Expended Amount",
            SUM(X.ENC) "Encumbered Amount", SUM(X.PRE_ENC) "Pre Encumbered Amount", SUM((-1 * X.BUD) - (X.EXP + (X.ENC))) AS "Available Budget",
            SUM(X.RECOG) "Total Recognized Amount", SUM(X.COLL) "Total Collected Amount"
FROM
(SELECT E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
            --E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE,
            CASE WHEN E.LEDGER_TYPE_KK = 0 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'R') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS RECOG,
            CASE WHEN E.LEDGER_TYPE_KK = 4 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS COLL,
            CASE WHEN E.LEDGER_TYPE_KK = 3 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS PRE_ENC,
            CASE WHEN E.LEDGER_TYPE_KK = 2 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'E') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS EXP
FROM PS_LEDGER_KK A, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I, PS_LED_GRP_TBL J
WHERE A.LEDGER = E.LEDGER
    AND A.CURRENCY_CD = A.BASE_CURRENCY
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND E.SETID = J.SETID
    AND E.LEDGER_GROUP = J.LEDGER_GROUP
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.BUSINESS_UNIT = 'UNUNI'    
GROUP BY E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
               E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE)X
WHERE (X.BUDGET_PERIOD IN ('2012', '2013') OR X.BUDGET_PERIOD = ' ') 
      --AND X.PROJECT_ID = '00082982'
GROUP BY X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID
ORDER BY X.LEDGER_GROUP, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID;

--Version 2 - SUMMARY
--Added BUDG_TYPE to distinguish Expense and Revenue Budgets
SELECT X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID,
            SUM(X.REV_BUD) "Total Revenue Budgeted Amount", SUM(X.RECOG) "Total Recognized Amount", SUM(X.COLL) "Total Collected Amount",
            SUM(X.EXP_BUD) "Total Expense Budgeted Amount", SUM(X.EXP) "Expended Amount", SUM(X.ENC) "Encumbered Amount", SUM(X.PRE_ENC) "Pre Encumbered Amount",
            SUM((X.EXP_BUD + X.COLL) - (X.EXP + X.ENC)) AS "Available Budget"
FROM
(SELECT A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
            --E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE,
            --CASE WHEN E.LEDGER_TYPE_KK = 0 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 0 AND H.BUDG_TYPE = 'E') THEN (-1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS EXP_BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 0 AND H.BUDG_TYPE = 'R') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS REV_BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'R') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS RECOG,
            CASE WHEN E.LEDGER_TYPE_KK = 4 THEN (-1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS COLL,
            CASE WHEN E.LEDGER_TYPE_KK = 3 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS PRE_ENC,
            CASE WHEN E.LEDGER_TYPE_KK = 2 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'E') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS EXP
FROM PS_LEDGER_KK A, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I, PS_LED_GRP_TBL J
WHERE A.LEDGER = E.LEDGER
    AND A.CURRENCY_CD = A.BASE_CURRENCY
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND E.SETID = J.SETID
    AND E.LEDGER_GROUP = J.LEDGER_GROUP
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND E.LEDGER_GROUP NOT IN ('CHD_UU', 'DET_UU')
GROUP BY E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
               E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE, H.BUDG_TYPE)X
WHERE (X.BUDGET_PERIOD IN ('2012', '2013') OR X.BUDGET_PERIOD = ' ') 
     --AND X.PROJECT_ID = '00082982'
GROUP BY X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID
ORDER BY X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID;

--Version 3 - DETAIL
--Added BUDG_TYPE to distinguish Expense and Revenue Budgets
--Still Fails to calculate the Available Budget for Projects which have -ve Encumbrance or Expense
--For level 1 keep in mind that Account is not mentioned for programs (UUxxxxxx)
SELECT X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID,
            SUM(X.REV_BUD) "Total Revenue Budgeted Amount", SUM(X.RECOG) "Total Recognized Amount", SUM(X.COLL) "Total Collected Amount",
            SUM(X.EXP_BUD) "Total Expense Budgeted Amount", SUM(X.EXP) "Expended Amount", SUM(X.ENC) "Encumbered Amount", SUM(X.PRE_ENC) "Pre Encumbered Amount",
            SUM((X.EXP_BUD + X.COLL) - (X.EXP + X.ENC)) AS "Available Budget"
FROM
(SELECT E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
            --E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE,
            --CASE WHEN E.LEDGER_TYPE_KK = 0 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 0 AND H.BUDG_TYPE = 'E') THEN (-1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS EXP_BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 0 AND H.BUDG_TYPE = 'R') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS REV_BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'R') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS RECOG,
            CASE WHEN E.LEDGER_TYPE_KK = 4 THEN (-1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS COLL,
            CASE WHEN E.LEDGER_TYPE_KK = 3 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS PRE_ENC,
            CASE WHEN E.LEDGER_TYPE_KK = 2 THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS ENC,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'E') THEN (1 * SUM(A.POSTED_TOTAL_AMT)) ELSE 0 END AS EXP
FROM PS_LEDGER_KK A, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I, PS_LED_GRP_TBL J
WHERE A.LEDGER = E.LEDGER
    AND A.CURRENCY_CD = A.BASE_CURRENCY
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND E.SETID = J.SETID
    AND E.LEDGER_GROUP = J.LEDGER_GROUP
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.BUSINESS_UNIT = 'UNUNI'
    --AND E.LEDGER_GROUP NOT IN ('CHD_UU', 'DET_UU')
GROUP BY E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
               E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE, H.BUDG_TYPE)X
WHERE (X.BUDGET_PERIOD IN ('2012', '2013') OR X.BUDGET_PERIOD = ' ') 
     --AND X.PROJECT_ID = '00082982'
GROUP BY X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID
ORDER BY X.LEDGER_GROUP, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID;

--Budgets Overview Testing Query
--KK_ACTIVITY_LOG
SELECT X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID,
            SUM(X.BUD) "Total Budgeted Amount", SUM(X.EXP) "Expended Amount",
            SUM(X.ENC) "Encumbered Amount", SUM(X.PRE_ENC) "Pre Encumbered Amount", SUM((-1 * X.BUD) - (X.EXP + (X.ENC))) AS "Available Budget",
            SUM(X.RECOG) "Total Recognized Amount", SUM(X.COLL) "Total Collected Amount" 
FROM
(SELECT E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
            --E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE,             
           CASE WHEN E.LEDGER_TYPE_KK = 0 THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS BUD,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'R') THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS RECOG,
            CASE WHEN E.LEDGER_TYPE_KK = 4 THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS COLL,
            CASE WHEN E.LEDGER_TYPE_KK = 3 THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS PRE_ENC,
            CASE WHEN E.LEDGER_TYPE_KK = 2 THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS ENC,
            CASE WHEN (E.LEDGER_TYPE_KK = 1 AND J.LEDGER_GROUP_TYPE = 'E') THEN (1 * SUM(A.MONETARY_AMOUNT)) ELSE 0 END AS EXP
FROM PS_KK_ACTIVITY_LOG A, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I, PS_LED_GRP_TBL J
WHERE A.LEDGER = E.LEDGER
    AND A.BASE_CURRENCY = 'USD'
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND E.SETID = J.SETID
    AND E.LEDGER_GROUP = J.LEDGER_GROUP
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    AND A.BUSINESS_UNIT = 'UNUNI'    
GROUP BY E.LEDGER_GROUP, A.BUDGET_PERIOD, A.PROJECT_ID, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.ACTIVITY_ID, 
               E.LEDGER_TYPE_KK, J.LEDGER_GROUP_TYPE)X
WHERE (X.BUDGET_PERIOD IN ('2013') OR X.BUDGET_PERIOD = ' ') 
    AND X.PROJECT_ID = '00082982'
GROUP BY X.LEDGER_GROUP, X.BUDGET_PERIOD, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID
ORDER BY X.LEDGER_GROUP, X.PROJECT_ID, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.CHARTFIELD2, X.ACTIVITY_ID;

--Budget Transaction Type
SELECT KKB.LEDGER_GROUP, X1.XLATLONGNAME AS KK_BUDG_TRANS_TYPE , X2.XLATLONGNAME AS BD_HDR_STATUS, KKB.OPRID,
            KKL.LINE_DESCR, KKL.ACCOUNT, KKL.OPERATING_UNIT, KKL.FUND_CODE, KKL.DEPTID, KKL.CHARTFIELD2, KKL.PROJECT_ID, KKL.ACTIVITY_ID, 
            KKL.BUDGET_PERIOD, KKL.FOREIGN_CURRENCY, SUM(KKL.FOREIGN_AMOUNT) AS FOREIGN_AMT, KKL.CURRENCY_CD, SUM(KKL.MONETARY_AMOUNT) AS BASE_AMT 
FROM PS_KK_BUDGET_HDR KKB, PSXLATITEM X1, PSXLATITEM X2, PS_KK_BUDGET_LN KKL
WHERE KKB.BUSINESS_UNIT = 'UNUNI'
    AND KKB.BUSINESS_UNIT = KKL.BUSINESS_UNIT 
    AND KKB.JOURNAL_ID = KKL.JOURNAL_ID 
    AND KKB.JOURNAL_DATE = KKL.JOURNAL_DATE 
    AND KKB.UNPOST_SEQ = KKL.UNPOST_SEQ
    AND X1.FIELDNAME = 'KK_BUDG_TRANS_TYPE'
    AND X1.FIELDVALUE = KKB.KK_BUDG_TRANS_TYPE
    AND X2.FIELDNAME = 'BD_HDR_STATUS'
    AND X2.FIELDVALUE = KKB.BD_HDR_STATUS
    AND (KKL.BUDGET_PERIOD IN ('2012', '2013') OR KKL.BUDGET_PERIOD = ' ') 
    --AND KKL.DEPTID = 'B0119'
GROUP BY LEDGER_GROUP,  X1.XLATLONGNAME,  X2.XLATLONGNAME, KKL.LINE_DESCR, KKB.OPRID, KKL.ACCOUNT, KKL.OPERATING_UNIT, KKL.FUND_CODE, KKL.DEPTID, KKL.CHARTFIELD2, 
               KKL.PROJECT_ID, KKL.ACTIVITY_ID, KKL.BUDGET_PERIOD, KKL.FOREIGN_CURRENCY, KKL.CURRENCY_CD
ORDER BY 1;

--Receipt Cancellation
SELECT * FROM PS_RECV_DEL_STG;
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'RECV_DEL_STG';

SELECT BUSINESS_UNIT, REJECT_REASON, COUNT(1) FROM PS_RECV_LN_SHIP
GROUP BY BUSINESS_UNIT, REJECT_REASON;

SELECT * FROM PS_UN_RCPT_REV_DB;
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'UN_RCPT_REV_DB';
SELECT * FROM PS_REASON_CD;

--Find Process Navigation
SELECT DISTINCT TRIM(B.MENUGROUP) || ' > ' || TRIM(B.MENULABEL) || ' > ' || TRIM(BARLABEL) || ' > ' || TRIM(A.ITEMLABEL) || ' > ' || TRIM(D.PNLGRPNAME) || ' > ' || TRIM(PRCSTYPE) ||
       ' > ' || TRIM(PRCSNAME) NAVIGATION
FROM PSMENUITEM A, PSMENUDEFN B, PS_PRCSDEFNPNL C, PSPNLGROUP D
WHERE A.MENUNAME = B.MENUNAME
  AND A.PNLGRPNAME = C.PNLGRPNAME
  AND A.PNLGRPNAME = D.PNLGRPNAME
-- Substitute the PRCSNAME value with the Process Name that you are looking for
  AND PRCSNAME IN ('APY2100-', 'APY2101-', 'RECV_00G', 'GM_PT_STAGE', 'PVY2000-', 'PORC700', 'APS8001-')
GROUP BY B.MENUNAME, B.MENUGROUP, B.MENULABEL, BARLABEL, A.ITEMLABEL, D.PNLGRPNAME, PRCSTYPE, PRCSNAME;

--Receiver ID & Asset ID
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '600UU'

--Requisition Closing
SELECT * FROM PS_REQ_RC_HDR WHERE BUSINESS_UNIT LIKE '6%' AND TO_CHAR(LAST_DTTM_UPDATE, 'YYYY') = '2013' AND TO_CHAR(LAST_DTTM_UPDATE, 'MM') = 07 
ORDER BY 4 DESC;
SELECT A.*, B.MESSAGE_TEXT, B.DESCRLONG
FROM PS_REQ_RC_WB_EXP A, PSMSGCATDEFN B 
WHERE A.MESSAGE_NBR = B.MESSAGE_NBR
    AND A.MESSAGE_SET_NBR = B.MESSAGE_SET_NBR   
    AND A.BUSINESS_UNIT = '600UU'
    AND WORKBENCH_ID = 'A'

SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, A.REQ_DT, A.ACCOUNTING_DT, A.REQUESTOR_ID, A.BUDGET_CHECK, A.BUDGET_HDR_STATUS, B.SOURCE_STATUS, 
            B.LINE_NBR, B.VENDOR_ID, B.CATEGORY_ID, C.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            D.DISTRIB_LN_STATUS, D.BUDGET_DT, C.SHIPTO_ID, D.DEPTID, B.BUYER_ID, D.BUDGET_LINE_STATUS, B.DESCR254_MIXED,
            D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.CHARTFIELD2, D.DEPTID, D.PROJECT_ID, D.ACTIVITY_ID, 
            POD.PO_ID, POH.PO_STATUS, POH.CHNG_ORD_BATCH, POD.LINE_NBR, POD.SCHED_NBR, POD.DISTRIB_LINE_NUM,
            POD.ACCOUNT, POD.OPERATING_UNIT, POD.FUND_CODE, POD.CHARTFIELD2, POD.DEPTID, POD.PROJECT_ID, POD.ACTIVITY_ID, 
            POD.DISTRIB_LN_STATUS, B.QTY_REQ "QTY on REQ Line", D.QTY_OPEN "QTY Open on REQ Distrib", D.AMT_OPEN "AMT Open on Req Distrib", 
            POD.QTY_PO "QTY PO on PO Distrib", POD.QTY_REQ "QTY Req on PO Distrib"
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D, PS_PO_LINE_DISTRIB POD, PS_PO_HDR POH
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.REQ_ID = B.REQ_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.REQ_ID = C.REQ_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.REQ_ID = D.REQ_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.REQ_STATUS NOT IN ('X','C')
  AND D.KK_CLOSE_FLAG = 'N'
  --AND B.SOURCE_STATUS = 'A'
  AND B.CURR_STATUS NOT IN ('C','X')
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ (+)
  AND D.REQ_ID = POD.REQ_ID (+)
  AND D.LINE_NBR = POD.REQ_LINE_NBR (+)
  AND D.SCHED_NBR = POD.REQ_SCHED_NBR (+)
  AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR (+)
  AND POD.BUSINESS_UNIT = POH.BUSINESS_UNIT (+)
  AND POD.PO_ID = POH.PO_ID (+)
  AND A.ACCOUNTING_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2011-12-31','YYYY-MM-DD')
ORDER BY 1, 2, 3, 4, 9, 12, 13;

--AM Security Changes

--UNU Buyers who will get AM Focal Point Access
--UN_UNU_BUYER
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_BUYER' 
AND EXISTS (SELECT 'X' FROM PSOPRDEFN WHERE OPRID = PSROLEUSER.ROLEUSER AND ACCTLOCK = 0)
ORDER BY 1;

--CO's who will get AM Manager Access
--UN_LEVEL1_REQ
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_LEVEL1_REQ' 
AND EXISTS (SELECT 'X' FROM PSOPRDEFN WHERE OPRID = PSROLEUSER.ROLEUSER AND ACCTLOCK = 0)
AND EXISTS (SELECT 'X' FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSROLEUSER.ROLEUSER AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

--Level 3 AO's who will get AM Manager Access
--UN_LEVEL3_PO, UN_VOUCHER_LVL3
SELECT * FROM PSROLEUSER WHERE ROLENAME IN ('UN_VOUCHER_LVL3', 'UN_LEVEL3_PO') 
AND EXISTS (SELECT 'X' FROM PSOPRDEFN WHERE OPRID = PSROLEUSER.ROLEUSER AND ACCTLOCK = 0)
AND EXISTS (SELECT 'X' FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSROLEUSER.ROLEUSER AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

--Level 2 AO's who will get AM Manager Access
--UN_LEVEL2_PO, UN_VOUCHER_LVL2
SELECT * FROM PSROLEUSER WHERE ROLENAME IN ('UN_VOUCHER_LVL2', 'UN_LEVEL2_PO') 
AND EXISTS (SELECT 'X' FROM PSOPRDEFN WHERE OPRID = PSROLEUSER.ROLEUSER AND ACCTLOCK = 0)
AND EXISTS (SELECT 'X' FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSROLEUSER.ROLEUSER AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

SELECT * FROM PSOPRDEFN WHERE OPRID = 'prakash.prashant'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'francois.dartagnan'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'sharon.koh'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'susan.bocardo'


--Find all the tables which have a particular column
select owner, table_name 
from all_tab_columns
where column_name = 'IN_PROCESS_FLG'
AND EXISTS (SELECT 'X' FROM PSRECDEFN WHERE ('PS_' || RECNAME) = table_name AND RECTYPE = 0)
ORDER BY 1,2;

--Item UOM Default Stock UOM --- why it is grayed out
--If serial controlled and UOM match on the Master Item Table and Item UOM Table then PS will gray out the Default Stock UOM checkbox
SELECT SERIAL_CONTROL, UNIT_MEASURE_STD,  A.* FROM PS_MASTER_ITEM_TBL A WHERE SETID = 'UNUNI'
SELECT UNIT_OF_MEASURE, A.* FROM PS_INV_ITEM_UOM A WHERE SETID = 'UNUNI'

--make a query to check approval status
--UN AP Budget Check
SELECT * FROM PS_UN_VOUCHER2_VW WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00015949'
SELECT * FROM PS_UN_VOUCHER2_VW WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00013248'
SELECT * FROM PS_UN_VOUCHER2_VW WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00022337'
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = 14738052
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = 13526416
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = 14284753

SELECT BUSINESS_UNIT, VOUCHER_ID, OPRID FROM PS_VOUCHER
WHERE APPR_INSTANCE = '0'
    AND VCHR_APPRVL_FLG = 'S' 
    AND APPR_STATUS = 'A'
   AND BUSINESS_UNIT LIKE '6%'

SELECT * FROM PS_UN_APPBCHK1_RUN WHERE BUSINESS_UNIT LIKE '6%' ORDER BY 3,4;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 33336522;

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_APPBCHK';

SELECT * FROM PS_UN_APPBCHK_RUN A WHERE BUSINESS_UNIT LIKE '6%'
AND EXISTS (SELECT 'X' FROM PS_VOUCHER V WHERE V.BUSINESS_UNIT = A.BUSINESS_UNIT AND A.VOUCHER_ID = V.VOUCHER_ID AND V.BUSINESS_UNIT LIKE '6%' AND APPR_STATUS <> 'A');

--UNU Bonn Location change
SELECT LOCATION, EFFDT, EFF_STATUS, DESCR, COUNTRY, ADDRESS1, CITY, POSTAL, PHONE
FROM PS_LOCATION_TBL L
WHERE SETID = 'UNUNI' 
    AND COUNTRY = 'DEU'
    AND CITY = 'Bonn'
    AND EFFDT = (SELECT MAX(L_ED.EFFDT) FROM PS_LOCATION_TBL L_ED WHERE L.SETID = L_ED.SETID AND L.LOCATION = L_ED.LOCATION AND EFFDT <= SYSDATE);

--Who Approved the Requisition
SELECT OPRID_APPROVED_BY, A.* FROM PS_REQ_HDR A WHERE BUSINESS_UNIT = '615UU' AND REQ_ID LIKE '%1060';
SELECT * FROM PS_APPR_INST_LOG WHERE ROLEUSER = 'francois.dartagnan' AND TO_CHAR(DTTM_STAMP, 'YYYY') = '2013' AND TO_CHAR(DTTM_STAMP, 'MM') = '09';
SELECT * FROM PS_REQ_APPROVAL WHERE BUSINESS_UNIT = '615UU' AND REQ_ID LIKE '%1060';
SELECT * FROM PS_REQ_APPROVAL_WL WHERE BUSINESS_UNIT = '615UU' AND REQ_ID LIKE '%1060';
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'REQ_APPROVAL'
SELECT * FROM PSRECDEFN WHERE RECTYPE = 0 AND RECNAME LIKE 'UN%REQ%'
SELECT * FROM PS_UN_BUYER_REQ_WL WHERE BUSINESS_UNIT LIKE '6%'

SELECT RH.BUSINESS_UNIT, RH.REQ_ID, RH.REQ_STATUS, RH.REQUESTOR_ID, RH.OPRID_ENTERED_BY, RH.OPRID_MODIFIED_BY, RH.OPRID_APPROVED_BY, RH.REQ_DT, RH.ENTERED_DT,
            RH.APPROVAL_DT, RH.ACCOUNTING_DT,
            RA.APPROVAL_TYPE, RA.APPR_ACTION, RA.APPROVAL_STATUS, RA.APPR_INSTANCE, RA.COMMENTS,
            RH.BUDGET_HDR_STATUS, RH.KK_AMOUNT_TYPE, RH.KK_TRAN_OVER_FLAG, RH.KK_TRAN_OVER_OPRID, RH.KK_TRAN_OVER_DTTM
FROM PS_REQ_HDR RH, PS_REQ_APPROVAL RA
WHERE RH.BUSINESS_UNIT = RA.BUSINESS_UNIT (+)
    AND RH.REQ_ID = RA.REQ_ID (+)
    AND RH.BUSINESS_UNIT LIKE '6%'
    --AND RH.OPRID_ENTERED_BY = RH.OPRID_APPROVED_BY
    --AND RH.BUSINESS_UNIT = '615UU'
    AND RH.REQ_ID LIKE '%1060';

SELECT * FROM PS_REQ_APPROVAL WHERE BUSINESS_UNIT LIKE '6%' AND APPR_INSTANCE <> 0 ORDER BY 1,2;

--UN_REQ_WFA
--REQs without Approval
SELECT D.BUSINESS_UNIT, D.REQ_ID, D.DEPTID, SUM( D.MERCHANDISE_AMT)
FROM PSWORKLIST A, PS_REQ_APPROVAL_WL B, PS_REQ_APPROVAL C, PS_REQ_LN_DISTRIB D, PS_WF_SYS_DEFAULTS E
WHERE (A.BUSPROCNAME = B.BUSPROCNAME
     AND A.ACTIVITYNAME = B.ACTIVITYNAME
     AND A.EVENTNAME = B.EVENTNAME
     AND A.WORKLISTNAME = B.WORKLISTNAME
     AND A.INSTANCEID = B.INSTANCEID
     AND B.TRANSACTIONID = A.TRANSACTIONID
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.REQ_ID = C.REQ_ID
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.REQ_ID = D.REQ_ID
     AND C.APPROVAL_STATUS = 'P'
     AND D.LINE_NBR = 1
     AND D.SCHED_NBR = 1
     AND D.SCHED_NBR = 1
     AND A.OPRID = E.ROLEUSER)
GROUP BY  D.BUSINESS_UNIT,  D.REQ_ID,  D.DEPTID
ORDER BY 1, 2;

SELECT * FROM PSPROJECTDEFN WHERE PROJECTNAME LIKE 'FIN%CR%413%' ORDER BY LASTUPDDTTM DESC;

--UN_F2025 process failure(s)
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_F2025' AND RUNSTATUS <> 9;
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'hui-sin.sia'
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'lu-kar.pee'
SELECT * FROM PSAUTHPRCS WHERE PRCSGRP = 'TRALL'
SELECT * FROM PSPRCSPARMS WHERE PRCSINSTANCE IN (34121136, 34121930)
SELECT * FROM PSPRCSPARMS WHERE PRCSINSTANCE = 34120286
SELECT * FROM PS_PYCYCL_STAT WHERE OPRID = 'hui-sin.sia'  ORDER BY 7 DESC
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 34067982
SELECT * FROM PS_MESSAGE_LOGPARM WHERE PROCESS_INSTANCE = 34121930
SELECT * FROM PS_PYCYCL_STATRPT WHERE PAY_CYCLE = '600UUA' AND PAY_CYCLE_SEQ_NUM IN (1116, 1115, 1117, 1118, 1119);
SELECT * FROM PS_PYCYCL_ERR_TMP;

SELECT COUNT(*) FROM PS_PYCYCL_STAT_VW2 WHERE PAY_CYCLE = '600UUA' AND PAY_RUN_AP_STATUS = 'V';

SELECT * FROM PSROLECLASS WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHPRCS WHERE PRCSGRP = 'TRALL')
SELECT * FROM PSROLEUSER WHERE ROLENAME IN (SELECT ROLENAME FROM PSROLECLASS WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHPRCS WHERE PRCSGRP = 'TRALL'))
AND ROLEUSER = 'hui-sin.sia'

SELECT * FROM PS_PO_LINE WHERE CNTRCT_SETID = '607UU' AND CNTRCT_ID = '0000000000000000000000091'
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '607UU' AND PO_ID = '0000001742'
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '607UU' AND PO_ID = '0000001742'

SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT = '621UU' AND REQ_ID IN ('0000000029', '0000000012')
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'parvati.nair'

--PO Line Accounting Entries
SELECT * FROM PS_PO_LN_DIST_KK WHERE BUSINESS_UNIT = '611UU' AND PO_ID = '0000000633'

--UN_REVAL_SUMM
SELECT * FROM PS_UN_PO_CHNG_DST WHERE BUSINESS_UNIT = '600UU';
SELECT * FROM PS_UN_PO_REVAL WHERE BUSINESS_UNIT_GL = 'UNUNI' AND BUSINESS_UNIT = '600UU' AND PO_ID = '0000005705';
SELECT * FROM PS_UN_INTFC_PATH;
SELECT * FROM PSPNLFIELD WHERE RECNAME = 'UN_INTFC_PATH';

--Monitor Attachments
--Upto PT 8.5x
SELECT ATTACHSYSFILENAME, FILE_SEQ, FILE_SIZE FROM PSFILE_ATTDET WHERE FILE_SIZE = 5 AND FILE_SEQ = 0 AND ATTACHSYSFILENAME LIKE '%.txt';

--For PT 8.5x +
SELECT * FROM PSPTFILE_PRCS

--Journal Voucher
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024083';
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024083';
SELECT * FROM PS_APPR_INST_LOG WHERE APPR_INSTANCE = 14823760;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 33819107;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE =33820013;
SELECT * FROM PS_VOUCHER WHERE BUSINESS_UNIT LIKE '6%' AND VOUCHER_TYPE = 'J';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024083';
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024083';

--Query under testing
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.BUDGET_HDR_STATUS, A.ENTERED_DT, A.VENDOR_ID, D.NAME1, A.VNDR_LOC, A.OPRID, 
            A.ACCOUNTING_DT, A.LAST_UPDATE_DT, A.APPR_STATUS, A.APPR_INSTANCE, A.OPRID_LAST_UPDT, E.ROLEUSER AS APPROVER,
            B.VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM, B.DESCR, B.FOREIGN_AMOUNT, B.TXN_CURRENCY_CD, B.MONETARY_AMOUNT, B.MONETARY_AMT_BSE,
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, 
            C.PYMNT_CNT, C.PYMNT_TYPE, C.BANK_SETID, C.BANK_CD, C.BANK_ACCT_KEY, C.PYMNT_SELCT_STATUS, C.PYMNT_METHOD,
            B.CUR_RT_TYPE, B.CUR_RATE_MULT, B.CUR_RATE_DIV, B.PROCESS_INSTANCE
FROM PS_VOUCHER A, PS_DISTRIB_LINE B, PS_PYMNT_VCHR_XREF C, PS_VENDOR D, PS_APPR_INST_LOG E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.VOUCHER_ID = B.VOUCHER_ID
  AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND A.VOUCHER_ID = C.VOUCHER_ID
  AND A.VENDOR_ID =  D.VENDOR_ID
  AND D.SETID = 'UNUNI'
  AND A.APPR_INSTANCE = E.APPR_INSTANCE (+)
  AND 'A' = E.APPR_INST_STATUS (+)    
  AND A.VENDOR_SETID = 'UNUNI'
  AND A.VENDOR_ID = '0000005936'
  AND A.VOUCHER_TYPE = 'J'
  AND A.ENTRY_STATUS NOT IN ('X','T')
  AND EXISTS (SELECT 'X' FROM PS_VCHR_ACCTG_LINE F WHERE A.BUSINESS_UNIT = F.BUSINESS_UNIT AND A.VOUCHER_ID = F.VOUCHER_ID AND F.DST_ACCT_TYPE = 'DST')
ORDER BY A.BUSINESS_UNIT, A.VOUCHER_ID, A.ENTERED_DT, B.VOUCHER_LINE_NUM, B.DISTRIB_LINE_NUM;

--Find all Reqs that are copied (from Reqs)
SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001754' AND STATUS = 'A';

SELECT A.BUSINESS_UNIT, A.REQ_ID, A.OPRID, A.COMMENT_ID, A.RANDOM_CMMT_NBR, A.PUBLIC_FLG, A.SOURCE_FROM, A.SOURCE_BU_SETID, A.SOURCE_ID, A.SOURCE_LINE_NBR, 
            A.SCM_ATTACH_ID, A.COMMENT_TYPE, A.LINE_NBR, A.STATUS, B.STATUS
FROM PS_REQ_COMMENTS A, PS_REQ_COMMENTS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND A.LINE_NBR = B.LINE_NBR
    AND A.REQ_ID <> B.SOURCE_ID
    AND B.STATUS = 'A'
    AND A.BUSINESS_UNIT = '600UU' 
    AND A.REQ_ID = '0000001754'

SELECT A.BUSINESS_UNIT, A.REQ_ID, A.OPRID, A.COMMENT_ID, A.RANDOM_CMMT_NBR, A.PUBLIC_FLG, A.SOURCE_FROM, A.SOURCE_BU_SETID, A.SOURCE_ID, A.SOURCE_LINE_NBR, 
            A.SCM_ATTACH_ID, B.SCM_ATTACH_ID, 
            --A.FILENAME, A.ATTACH_DESCR, B.FILENAME, B.ATTACH_DESCR,
            A.COMMENT_TYPE, A.LINE_NBR, A.STATUS AS CURR_REQ_STATUS, B.STATUS AS SRC_REQ_STATUS
FROM PS_REQ_COMMENTS A, PS_REQ_COMMENTS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND A.LINE_NBR = B.LINE_NBR
    AND A.REQ_ID <> B.SOURCE_ID
    AND B.STATUS = 'A'    
    AND A.BUSINESS_UNIT = '600UU'
    AND A.REQ_ID = '0000001630'

SELECT A.BUSINESS_UNIT, A.REQ_ID, A.OPRID, A.COMMENT_ID, A.RANDOM_CMMT_NBR, A.PUBLIC_FLG, A.SOURCE_FROM, A.SOURCE_BU_SETID, A.SOURCE_ID, A.SOURCE_LINE_NBR, 
            A.SCM_ATTACH_ID, A.COMMENT_TYPE, A.LINE_NBR, A.STATUS, B.STATUS
FROM PS_REQ_COMMENTS A, PS_REQ_COMMENTS B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND A.LINE_NBR = B.LINE_NBR
    AND A.REQ_ID <> B.SOURCE_ID
    AND B.STATUS = 'A'
    AND A.BUSINESS_UNIT = '600UU' 
    AND A.REQ_ID = '0000001721'

SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001721'
SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001661'

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT IN ('21010', '21011', '21035');

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_APCSHCLR'
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE DST_ACCT_TYPE = 'CAC' AND BUSINESS_UNIT LIKE '6%' AND FISCAL_YEAR = '2013' ORDER BY PROCESS_INSTANCE DESC;

--ITEM, CATEGORY AND ATTR
SELECT M.SETID, M.INV_ITEM_ID, M.DESCR AS ITM_DESCR, M.CATEGORY_ID AS ITM_CAT, P.ACCOUNT AS PURCH_ACCOUNT, 
            E.CATEGORY_CD, E.CATEGORY_ID, E.DESCR AS CAT_DESCR, E.PROFILE_ID, E.ACCOUNT AS CAT_ACCOUNT, E.RECV_REQ, E.PHYSICAL_NATURE
FROM PS_MASTER_ITEM_TBL M, PS_PURCH_ITEM_ATTR P, PS_ITM_CAT_TBL E
WHERE M.SETID = 'UNUNI'
     AND E.SETID = 'UNUNI'
     AND M.SETID = P.SETID
     AND M.INV_ITEM_ID = P.INV_ITEM_ID
     AND E.SETID = M.SETID
     AND E.CATEGORY_ID = M.CATEGORY_ID
     --AND E.PROFILE_ID LIKE 'HYME%'
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.CATEGORY_TYPE = E_ED.CATEGORY_TYPE AND E.CATEGORY_CD = E_ED.CATEGORY_CD
                                                                                                                   AND E.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--ITEM, CATEGORY, ATTR AND ASSET ITEM
SELECT M.SETID, M.INV_ITEM_ID, M.ITM_STATUS_CURRENT, X1.XLATLONGNAME, M.DESCR AS ITM_DESCR, AIA.PROFILE_ID AS ITM_PROFILE, M.CATEGORY_ID AS ITM_CAT, 
            P.ACCOUNT AS PURCH_ACCOUNT, E.CATEGORY_CD, E.CATEGORY_ID, E.DESCR AS CAT_DESCR, E.PROFILE_ID AS CAT_PROFILE, E.ACCOUNT AS CAT_ACCOUNT, E.RECV_REQ, E.PHYSICAL_NATURE
FROM PS_MASTER_ITEM_TBL M, PS_PURCH_ITEM_ATTR P, PS_ITM_CAT_TBL E, PS_ASSET_ITEM_ATTR AIA, PSXLATITEM X1
WHERE M.SETID = 'UNUNI'
  AND E.SETID = 'UNUNI'
  AND M.SETID = P.SETID
  AND M.INV_ITEM_ID = P.INV_ITEM_ID
  AND E.SETID = M.SETID
  AND E.CATEGORY_ID = M.CATEGORY_ID
  AND M.SETID = AIA.SETID
  AND M.INV_ITEM_ID = AIA.INV_ITEM_ID
  AND X1.FIELDNAME = 'ITM_STATUS_CURRENT'
  AND X1.FIELDVALUE = M.ITM_STATUS_CURRENT
  --AND E.PROFILE_ID LIKE 'HYME%'
  AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                   AND E.CATEGORY_CD = E_ED.CATEGORY_CD 
                                                                                                                   AND E.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--JRNL Unlock and Shared Table Maintenance
SELECT * FROM PS_JRNL_EDIT_LOG;
SELECT * FROM PS_GL_JCOBOL_TMP ORDER BY 1;
SELECT * FROM PS_TEMP_TBL_ASGNM WHERE PROCESS_INSTANCE <> 0 ORDER BY 4;
SELECT DISTINCT PROCESS_INSTANCE FROM PS_TEMP_TBL_ASGNM T WHERE PROCESS_INSTANCE <> 0 
AND NOT EXISTS (SELECT PRCSINSTANCE FROM PSPRCSRQST P WHERE T.PROCESS_INSTANCE = P.PRCSINSTANCE) ORDER BY 1;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN (SELECT PROCESS_INSTANCE FROM PS_TEMP_TBL_ASGNM WHERE PROCESS_INSTANCE <> 0);
SELECT * FROM PS_LEDGER_TMP
SELECT * FROM PS_AEONLINEINST
SELECT * FROM PSOPTIONS
--Number of times each base working table was shared by GL processes due to unavailability of non-shared instances YEAR wise
--Version 1
SELECT TEMP_TBL_NAME "Shared Table", TO_CHAR(DATE_ASSIGNED ,'YYYY') "YEAR", COUNT(1) "Shared Table Count" 
FROM PS_TEMP_TBL_STATS 
GROUP BY TEMP_TBL_NAME, TO_CHAR(DATE_ASSIGNED ,'YYYY')
ORDER BY  TO_CHAR(DATE_ASSIGNED ,'YYYY');

SELECT SUBSTR(A.TEMP_TBL_NAME, 1, LENGTH(A.TEMP_TBL_NAME) - 3) AS SUBREC, A.* FROM PS_TEMP_TBL_STATS A;

--Version 2
SELECT STS.TEMP_TBL_NAME "Shared Table", REC.RECDESCR, TO_CHAR(STS.DATE_ASSIGNED ,'YYYY') "YEAR", COUNT(1) "Shared Table Count" 
FROM PS_TEMP_TBL_STATS STS, PSRECDEFN REC
WHERE STS.TEMP_TBL_NAME = REC.RECNAME (+)
GROUP BY STS.TEMP_TBL_NAME, REC.RECDESCR, TO_CHAR(STS.DATE_ASSIGNED ,'YYYY')
ORDER BY  TO_CHAR(STS.DATE_ASSIGNED ,'YYYY'), STS.TEMP_TBL_NAME;

--GL Non Shared tables being used
SELECT --DateDIFF(minute,Q.BEGINDTTM ,Q.ENDDTTM) AS "TIME DIFF",
            TRUNC((CAST(Q.BEGINDTTM AS DATE) - CAST(Q.ENDDTTM AS DATE))*24*60) || ' minutes' AS DURATION_MINUTES, 
            A.*, Q.PRCSTYPE, Q.PRCSNAME , Q.RUNDTTM, Q.RQSTDTTM, 
            Q.LASTUPDDTTM, Q.BEGINDTTM, Q.ENDDTTM, Q.ORIGPRCSINSTANCE, Q.OPRID
FROM PS_TEMP_TBL_ASGNM A, PSPRCSRQST Q 
WHERE A.PROCESS_INSTANCE = Q.PRCSINSTANCE
    AND A.IN_USE_SW <> 'N';

--Use this query to identify potential candidates for Batch Temp Tables locking
SELECT P.MESSAGE_PARM RECNAME, R.PRCSNAME, COUNT(*) OCCURRENCES, MAX(L.DTTM_STAMP_SEC) LAST_OCCURRENCE, MAX(P.PROCESS_INSTANCE) PROCESS_INSTANCE
FROM PS_MESSAGE_LOG L, PS_MESSAGE_LOGPARM P 
              LEFT OUTER JOIN PSPRCSRQST R ON R.PRCSINSTANCE = P.PROCESS_INSTANCE
                                                          WHERE L.MESSAGE_SET_NBR = 108 AND L.MESSAGE_NBR = 544
    AND P.PROCESS_INSTANCE = L.PROCESS_INSTANCE
    AND P.MESSAGE_SEQ = L.MESSAGE_SEQ 
    AND TO_CHAR(L.DTTM_STAMP_SEC, 'YYYY') > 2012
GROUP BY P.MESSAGE_PARM, R.PRCSNAME
ORDER BY 4 DESC, 5;

SELECT TEMPTBLINSTANCES, A.* FROM PSAEAPPLDEFN A WHERE A.AE_APPLID = 'AP_PAYSELECT';
SELECT * FROM PSMSGCATDEFN L WHERE L.MESSAGE_SET_NBR = 108 AND L.MESSAGE_NBR = 544;

--HANDY DATES CALCULATION - How to calculate Years, Months, and Days between two dates
SELECT TRUNC (MONTHS_BETWEEN (:end_date, :start_date) / 12) YEARS, MOD (TRUNC (MONTHS_BETWEEN (:end_date, :start_date)), 12) MONTHS,
            (TO_DATE (:end_date) - ADD_MONTHS (:start_date, TRUNC (MONTHS_BETWEEN (:end_date, :start_date)))) DAYS
FROM DUAL;

--VCHR Delete Check
--Check accounting entries, if rows are found then cannot be deleted
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024541';

SELECT POST_STATUS_AP, ENTRY_STATUS, IN_PROCESS_FLG, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024541';
SELECT A.* FROM PS_KK_SOURCE_HDR A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024541';
SELECT KK_CLOSE_PRIOR, A.* FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024541';
SELECT PYMNT_SELCT_STATUS, NET_SELCT_STATUS, A.* FROM PS_PYMNT_VCHR_XREF A WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00024541';
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE = 34285270;

--Scheduler is performing Post-Failure steps
--Check RETRYCOUNT and UPDATE it to '-1'
SELECT RETRYCOUNT, A.* FROM PSPRCSRQST A WHERE PRCSINSTANCE = 34312453
SELECT RETRYCOUNT, A.* FROM PSPRCSQUE A WHERE PRCSINSTANCE = 34312453

SELECT BUDGET_DT, A.* FROM PS_VCHR_ACCTG_LINE A WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID LIKE '%5195'
SELECT ACCOUNTING_DT, A.* FROM PS_VOUCHER A WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID LIKE '%5195'
SELECT TO_CHAR(A.ACCOUNTING_DT, 'YYYY-MM-DD') AS ACCTG_DT, TO_CHAR(A.BUDGET_DT, 'YYYY-MM-DD') AS BUDGET_DT, A.* 
FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT = '606UU' AND VOUCHER_ID LIKE '%5195';

--Requestor Items
SELECT * FROM PS_REQUESTOR_ITEMS WHERE LAST_ORDER_DATE IS NOT NULL ORDER BY LAST_ORDER_DATE DESC;

SELECT * FROM PS_UN_EX_EMP_CST WHERE VENDOR_SETID = 'UNUNI';

SELECT A.*, TRUNC((CAST(SYSDATE AS DATE) - CAST(CREATED_DTTM AS DATE))*24*60) || ' minutes' AS DURATION_MINUTES
--TO_CHAR(CREATED_DTTM,'YYYY-MM-DD-HH24.MI.SS."000000"') AS TIMESTAMP 
FROM PSBATCHAUTH A
WHERE TRUNC((CAST(SYSDATE AS DATE) - CAST(CREATED_DTTM AS DATE))*24*60) > 5
ORDER BY 3 DESC;

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PRCSYSPURGE' ORDER BY RQSTDTTM;

--ARGUS
--Business Profile to Role Name matching
SELECT * FROM PS_UN_BUS_PROFILE WHERE UN_AGENCY_NAME = 'UNUNI';

--Find Special Access roles for an OPRID
SELECT RU.ROLEUSER, RU.ROLENAME, UB.UN_BUS_PROFILE 
FROM PSROLEUSER RU, PS_UN_BUS_PROFILE UB 
WHERE RU.ROLENAME = UB.ROLENAME (+)
    AND RU.ROLEUSER = 'prakash.prashant'
    AND UN_AGENCY_NAME (+) = 'UNUNI'
ORDER BY 1,2,3;

--Find all UNU receipts which are not closed and raised since 7th Oct 2013
SELECT H.BUSINESS_UNIT, H.RECEIVER_ID, H.RECEIPT_DT, S.OPRID, H.MATCH_STATUS_RECV, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, LD.DISTRIB_LINE_NUM, S.CURRENCY_CD, 
            S.QTY_SH_NETRCV_VUOM, S.MERCHANDISE_AMT, S.MERCH_AMT_BSE, S.MERCH_AMT_PO_BSE, S.BUSINESS_UNIT_PO AS BU_PO, S.PO_ID, L.LINE_NBR, D.SCHED_NBR, 
            D.DISTRIB_LINE_NUM, S.DISTRIB_MTHD_FLG, S.INV_ITEM_ID, L.CATEGORY_ID, G.CATEGORY_CD, G.DESCR, G.ACCOUNT AS CAT_ACCOUNT,
            S.DESCR254_MIXED,
            LD.BUSINESS_UNIT_AM, LD.BUSINESS_UNIT_GL, LD.PROFILE_ID, LD.FINANCIAL_ASSET_SW, LD.RECV_DS_STATUS, LD.MERCHANDISE_AMT_PO, LD.LOCATION, LD.REQ_ID,
            S.QTY_LN_ASSET_SUOM, S.QTY_LN_INV_SUOM, S.QTY_SH_ACCPT, S.QTY_SH_ACCPT_SUOM, S.QTY_SH_ACCPT_VUOM, S.QTY_SH_NETRCV_VUOM, S.QTY_SH_RECVD, 
            S.QTY_SH_RECVD_SUOM, S.QTY_SH_RECVD_VUOM, S.REJECT_ACTION, S.REJECT_REASON, 
            S.RECEIPT_ALLOC_TYPE, S.RECEIPT_DTTM, S.RECEIPT_UM, S.RECEIVE_UOM, S.RECV_LN_MATCH_OPT, S.RECV_SHIP_STATUS, S.RECV_STOCK_UOM, 
            S.SERIAL_CONTROL, S.SERIAL_STATUS, S.SHIP_DATE_STATUS, S.SHIP_QTY_STATUS, S.UNIT_MEASURE_STD
FROM PS_RECV_HDR H, PS_PO_LINE L, PS_RECV_LN_SHIP S, PS_PO_LINE_DISTRIB D, PS_SET_CNTRL_REC F, PS_ITM_CAT_TBL G, PS_RECV_LN_DISTRIB LD
WHERE H.BUSINESS_UNIT = S.BUSINESS_UNIT
    AND H.RECEIVER_ID = S.RECEIVER_ID
    AND S.BUSINESS_UNIT_PO = L.BUSINESS_UNIT 
    AND S.PO_ID = L.PO_ID 
    AND S.LINE_NBR = L.LINE_NBR    
    AND S.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
    AND S.PO_ID = D.PO_ID 
    AND S.LINE_NBR = D.LINE_NBR
    AND S.BUSINESS_UNIT = LD.BUSINESS_UNIT 
    AND S.RECEIVER_ID = LD.RECEIVER_ID 
    AND S.RECV_LN_NBR = LD.RECV_LN_NBR 
    AND S.RECV_SHIP_SEQ_NBR = LD.RECV_SHIP_SEQ_NBR
    AND F.SETCNTRLVALUE = S.BUSINESS_UNIT
    AND G.SETID = F.SETID
    AND G.CATEGORY_ID = S.CATEGORY_ID
    AND F.RECNAME = 'ITM_CAT_TBL'   
    AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_ITM_CAT_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.CATEGORY_TYPE = G_ED.CATEGORY_TYPE 
           AND G.CATEGORY_CD = G_ED.CATEGORY_CD 
           AND G.CATEGORY_ID = G_ED.CATEGORY_ID AND G_ED.EFFDT <= SYSDATE)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND H.RECV_STATUS <> 'C' 
    AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (0)),'YYYY-MM-DD') >= '2013-10-07' 
    AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
    --AND INTFC_ASSET = 'Y' 
ORDER BY 1,2;

--Testing for Requisition reconciliation tables
SELECT HDR.BUSINESS_UNIT, HDR.REQ_STATUS, HDR.REQ_ID, LINE.LINE_NBR, SHIP.SCHED_NBR, DIST.DISTRIB_LINE_NUM, 
            LINE.CURR_STATUS AS LINE_CURR_STATUS, SHIP.CURR_STATUS AS SHIP_CURR_STATUS, DIST.DISTRIB_LN_STATUS, DIST.BUDGET_LINE_STATUS, DIST.KK_CLOSE_FLAG,
            HDR.LAST_DTTM_UPDATE AS HDR_UPDATE, LINE.LAST_DTTM_UPDATE AS LINE_UPDATE, SHIP.LAST_DTTM_UPDATE AS SHIP_UPDATE, DIST.LAST_DTTM_UPDATE AS DISTRIB_UPDATE
FROM PS_REQ_RC_HDR HDR, PS_REQ_RC_LINE LINE, PS_REQ_RC_SHIP SHIP, PS_REQ_RC_DIST DIST
WHERE HDR.BUSINESS_UNIT = LINE.BUSINESS_UNIT
    AND HDR.REQ_ID = LINE.REQ_ID
    AND HDR.BUSINESS_UNIT = SHIP.BUSINESS_UNIT
    AND HDR.REQ_ID = SHIP.REQ_ID
    AND LINE.LINE_NBR = SHIP.LINE_NBR
    AND HDR.BUSINESS_UNIT = DIST.BUSINESS_UNIT
    AND HDR.REQ_ID = DIST.REQ_ID
    AND LINE.LINE_NBR = DIST.LINE_NBR
    AND SHIP.SCHED_NBR = DIST.SCHED_NBR
    AND HDR.BUSINESS_UNIT = '622UU'
ORDER BY 1,3,4,5,6;

--UNU Assets without Custodian
SELECT A.BUSINESS_UNIT, A.ASSET_ID,  A.PROFILE_ID, A.DESCR, A.ASSET_STATUS, X1.XLATLONGNAME AS ASSET_STATUS_DESCR, A.TAG_NUMBER, A.SERIAL_ID, A.MODEL, 
            TO_CHAR(A.ACQUISITION_DT,'YYYY-MM-DD') AS ACQ_DATE,
            A.FINANCIAL_ASSET_SW, C.CUSTODIAN, C.DEPTID AS CUSTODIAN_DEPTID, C.PROJECT_ID AS CUSTODIAN_PROJECT_ID
FROM PS_ASSET A, PS_ASSET_CUSTODIAN C, PSXLATITEM X1
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.ASSET_ID = C.ASSET_ID
     AND X1.FIELDNAME = 'ASSET_STATUS'
     AND X1.FIELDVALUE = A.ASSET_STATUS
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND C.CUSTODIAN = ' '
ORDER BY 1,2;

--Approval Step Maintenance
SELECT * FROM PS_APPR_RULE_HDR WHERE APPR_RULE_SET IN ('UN_UNU_PO_APPROVAL_ARS', 'UN_UNU_REQ_APPR_ARS', 'UN_UNU_VCHR_APPRV_ARS');
SELECT * FROM PS_APPR_RULE_DETL WHERE APPR_RULE_SET IN ('UN_UNU_PO_APPROVAL_ARS', 'UN_UNU_REQ_APPR_ARS', 'UN_UNU_VCHR_APPRV_ARS');
SELECT * FROM PS_APPR_RULE_AMT WHERE APPR_RULE_SET IN ('UN_UNU_PO_APPROVAL_ARS', 'UN_UNU_REQ_APPR_ARS', 'UN_UNU_VCHR_APPRV_ARS');
SELECT * FROM PS_APPR_RULE_QTY WHERE APPR_RULE_SET IN ('UN_UNU_PO_APPROVAL_ARS', 'UN_UNU_REQ_APPR_ARS', 'UN_UNU_VCHR_APPRV_ARS');

--UNU_AM_RCVR_NOT_MOVED
--Version 1
--AM Receipts not interfaced
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DISTRIB_SEQ_NUM, A.ACTUAL_COST, A.BUSINESS_UNIT_AM, A.ASSET_ID, 
            A.COST, A.CURRENCY_CD, A.DESCR, TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.PROFILE_ID, A.QUANTITY, A.SERIAL_ID, A.TAG_NUMBER,
            A.CUSTODIAN, A.INV_ITEM_ID, A.FINANCIAL_ASSET_SW, A.RECV_AM_STATUS, A.QTY_MOVED_ASSET, A.PRE_INTFC_ID, A.PRE_INTFC_LINE_NUM
FROM PS_RECV_LN_ASSET A, PS_RECV_LN_SHIP C 
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.RECV_AM_STATUS = 'O' 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.RECEIVER_ID = C.RECEIVER_ID 
    AND A.RECV_LN_NBR = C.RECV_LN_NBR 
    AND A.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR 
    AND C.RECV_SHIP_STATUS = 'R' 
    AND C.MOVE_STAT_AM = 'P' 
ORDER BY 1, 2, 3, 4, 5, 6;

--Version 2
--query now checks for Asset Items
SELECT 'UNU_AM_RCVR_NOT_MOVED', A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DISTRIB_SEQ_NUM, A.ACTUAL_COST,
            A.BUSINESS_UNIT_AM, A.COST, A.CURRENCY_CD, A.DESCR, TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, A.PROFILE_ID, A.QUANTITY, 
            A.SERIAL_ID, A.TAG_NUMBER, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.CATEGORY_ID, C.DESCR254_MIXED, C.DUE_DT, C.INV_ITEM_ID, 
            C.MERCH_AMT_BSE, C.OPRID, C.QTY_LN_ASSET_SUOM, C.QTY_SH_ACCPT_VUOM, C.QTY_SH_NETRCV_VUOM,
            A.RECV_AM_STATUS, X1.XLATLONGNAME AS RECV_AM_STATUS_DESCR, C.RECV_SHIP_STATUS, X2.XLATLONGNAME AS RECV_SHIP_STATUS_DESCR, 
            C.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STAT_AM_DESCR, A.FINANCIAL_ASSET_SW
FROM PS_RECV_LN_ASSET A, PS_RECV_LN_SHIP C, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.RECEIVER_ID = C.RECEIVER_ID
    AND A.RECV_LN_NBR = C.RECV_LN_NBR
    AND A.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_AM_STATUS'
    AND X1.FIELDVALUE = A.RECV_AM_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_SHIP_STATUS'
    AND X2.FIELDVALUE = C.RECV_SHIP_STATUS
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = C.MOVE_STAT_AM
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECV_AM_STATUS NOT IN ('X')
    AND C.RECV_SHIP_STATUS NOT IN ('X')
    AND C.MOVE_STAT_AM = 'P'
    AND SUBSTR(RTRIM(C.INV_ITEM_ID), -1, 1) = 'A'
ORDER BY 1, 2, 3, 4, 5, 6;

--Testing
SELECT * FROM PSXLATITEM WHERE FIELDNAME IN ('RECV_AM_STATUS', 'RECV_SHIP_STATUS', 'MOVE_STAT_AM');
SELECT * FROM PSDBFLDLABL WHERE FIELDNAME IN ('RECV_AM_STATUS', 'RECV_SHIP_STATUS', 'MOVE_STAT_AM');

SELECT RECV_SHIP_STATUS, A.* FROM PS_RECV_LN_SHIP A WHERE BUSINESS_UNIT LIKE '6%' AND MOVE_STAT_AM = 'P';
SELECT RECV_AM_STATUS, A.* FROM PS_RECV_LN_ASSET A WHERE BUSINESS_UNIT LIKE '6%' AND RECEIVER_ID = '0000000621';

--UNU_AM_DEPR_TRANS_REC
--Depr trans with no account ent
SELECT A.BUSINESS_UNIT, A.ASSET_ID, TO_CHAR(A.TRANS_DT,'YYYY-MM-DD') AS TRANS_DT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.DEPTID, A.DEPR
FROM PS_DEPRECIATION A
WHERE A.BUSINESS_UNIT = 'UNUNI'     
    AND A.TRANS_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND SYSDATE
    AND NOT EXISTS (SELECT B.BUSINESS_UNIT FROM PS_DIST_LN B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.ASSET_ID = B.ASSET_ID AND A.DTTM_STAMP = B.DTTM_STAMP)
ORDER BY 1,2;

--UNU_GL_JOURNALS_NOT_IN_AM
--UNU GL Journals not in AM
SELECT B.BUSINESS_UNIT, A.JOURNAL_ID, B.JOURNAL_LINE, B.UNPOST_SEQ, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DATE, 
            A.ACCOUNTING_PERIOD, A.SOURCE, A.JRNL_HDR_STATUS, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, SUM( B.MONETARY_AMOUNT)
FROM PS_JRNL_HEADER A, PS_JRNL_LN B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.JOURNAL_ID = B.JOURNAL_ID
    AND A.JOURNAL_DATE = B.JOURNAL_DATE
    AND A.UNPOST_SEQ = B.UNPOST_SEQ
    AND B.LEDGER = 'USD'
    --AND A.ACCTG_DEF_NAME = 'AMDEFN'
    AND A.SOURCE = 'AM'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.JOURNAL_DATE BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND SYSDATE
    AND ( B.JOURNAL_ID ,  B.JOURNAL_LINE) NOT IN (SELECT  C.JOURNAL_ID, C.JOURNAL_LINE FROM PS_DIST_LN C WHERE C.BUSINESS_UNIT_GL = 'UNUNI' AND C.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND SYSDATE)
GROUP BY B.BUSINESS_UNIT, A.JOURNAL_ID, B.JOURNAL_LINE, B.UNPOST_SEQ, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD'), A.ACCOUNTING_PERIOD, A.SOURCE, A.JRNL_HDR_STATUS, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID
ORDER BY 2, 3, 4;

--Disposed Assets without Retirement Date     
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.DESCR, A.ASSET_STATUS, TO_CHAR(A.ACQUISITION_DT,'YYYY-MM-DD') AS ACQ_DT
FROM PS_ASSET A, PS_RETIREMENT B
WHERE A.BUSINESS_UNIT = 'UNUNI' 
    AND A.ASSET_STATUS = 'D'
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.ASSET_ID = B.ASSET_ID
    AND B.RETIREMENT_DT IS NULL
ORDER BY 1, 2;

--UNU_AM_GL_AMT_DIFF
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JOURNAL_DATE, A.LEDGER, 
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,
            A.MONETARY_AMOUNT, A.FOREIGN_AMOUNT, B.AMOUNT 
FROM PS_JRNL_LN A, PS_DIST_LN B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.JOURNAL_ID = B.JOURNAL_ID 
    AND A.JOURNAL_DATE = B.JOURNAL_DATE 
    AND A.JOURNAL_LINE = B.JOURNAL_LINE 
    AND A.LEDGER = B.LEDGER 
    AND A.LEDGER = 'USD' 
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND B.GL_DISTRIB_STATUS = 'D' 
    AND A.MONETARY_AMOUNT <> B.AMOUNT 
    AND B.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND SYSDATE
ORDER BY 1,2;

--UNU Requestors
--Accounts which are unlocked ONLY
SELECT A.REQUESTOR_ID, A.ACTIVE_FLG, A.REQ_STATUS, A.SHIPTO_SETID, A.LOCATION_SETID, A.LOCATION, A.ORIGIN_PO_SETID, A.ORIGIN, A.DEPTID_SETID, A.CATALOG_SETID, 
            A.CATALOG_ID, A.USE_ASSGN_CAT_ONLY, A.CONSOLIDATE_FLG, A.PRICE_CAN_CHANGE, A.BUSINESS_UNIT_GL, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, 
            A.CHARTFIELD2, A.PROJECT_ID, A.BUSINESS_UNIT_PC, A.ACTIVITY_ID, B.CATALOG_ID
FROM PS_REQUESTOR_TBL A, PS_REQUESTOR_CAT B 
WHERE A.REQUESTOR_ID = B.REQUESTOR_ID (+)
    AND B.SETID (+) = 'UNUNI'
    AND A.REQUESTOR_ID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = A.REQUESTOR_ID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

SELECT * FROM PS_OPR_PO_RQSTR;

--UNU Requestor Items
SELECT REQ.REQUESTOR_ID, REQ.INV_ITEM_ID, M.DESCR, REQ.VENDOR_SETID, REQ.VENDOR_ID, REQ.USECOUNT, REQ.LAST_ORDER_DATE, REQ.VNDR_LOC  
FROM PS_REQUESTOR_ITEMS REQ, PS_MASTER_ITEM_TBL M 
WHERE REQ.SETID = M.SETID
    AND REQ.INV_ITEM_ID = M.INV_ITEM_ID
    AND M.SETID = 'UNUNI'
    AND REQ.REQUESTOR_ID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = REQ.REQUESTOR_ID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
    AND USECOUNT = 0
ORDER BY 1,2;

--Find vouchers which exist in VCHR_RECV_MTCH table but have been marked as DELETED in VOUCHER
--Version 1
SELECT MT.BUSINESS_UNIT, V.VOUCHER_STYLE, V.INVOICE_ID, MT.VOUCHER_ID, V.INVOICE_DT, V.ACCOUNTING_DT, V.VENDOR_ID, MT.VOUCHER_LINE_NUM, 
            MT.BUSINESS_UNIT_RECV, MT.RECEIVER_ID, MT.RECV_LN_NBR, MT.RECV_SHIP_SEQ_NBR, 
            MT.BUSINESS_UNIT_PO, MT.PO_ID, MT.LINE_NBR, MT.SCHED_NBR, MT.CURRENCY_CD, MT.QTY_VCHR, MT.UNIT_PRICE, MT.UNIT_OF_MEASURE, MT.MERCH_AMT_VCHR, 
            MT.MERCH_AMT_RECV, MT.QTY_SH_ACCPT_VUOM, MT.QTY_ENTERED, MT.PROCESS_INSTANCE, MT.QTY_RECV_APPLIED, MT.MERCH_AMT_RECVAPPL, MT.ALGTHM_BEHAVIOR,
            V.MATCH_STATUS_VCHR, X1.XLATLONGNAME AS MATCH_DESCR
FROM PS_VCHR_RECV_MTCH MT, PS_VOUCHER V, PSXLATITEM X1
WHERE V.BUSINESS_UNIT = MT.BUSINESS_UNIT 
    AND V.VOUCHER_ID = MT.VOUCHER_ID 
    AND V.ENTRY_STATUS = 'X' 
    AND V.BUSINESS_UNIT LIKE '6%'
    AND X1.FIELDNAME = 'MATCH_STATUS_VCHR'
    AND X1.FIELDVALUE = V.MATCH_STATUS_VCHR
ORDER BY 1,4,5,6,8,9,10,11,12;

--Check if the people who are part of distribution list of PORC700 have access to reports mentioned below
SELECT * FROM PS_PTRCPRCSLST 
WHERE PRCSNAME IN ('POY4010-', 'POY5001-', 'POY5020-', 'APY1010-', 'APY1090-', 'POROL001') 
AND OPRID IN ('huey-miin.lim', 'sharon.koh', 'angela.lee', 'paul.silfvenius', 'marcus.vleugels', 'michelle.ho', 'benjamin.turkson', 'eliette-nathalie.wierdak', 'hiromi.suzuki', 'bradley.berquist',
                      'eric.lin', 'mariko.shimazu-oberhoff', 'khairul.bariah', 'anna.franzil', 'ben.zhu', 'prakash.prashant', 'jack.noordhuizen')
ORDER BY 1;
--List of people who will receive the RA report notification
SELECT * FROM PS_SCHDLRPTDIST WHERE SCHEDULENAME = 'UNU_RECEIPT_ACCRUAL_PORC700';

--Find vouchers which exist in VCHR_RECV_MTCH table but have no association in VOUCHER_LINE Table
--Version 1
SELECT MT.BUSINESS_UNIT, MT.VOUCHER_ID, MT.VOUCHER_LINE_NUM, 
            VL.BUSINESS_UNIT_RECV AS VL_BU_RECV, VL.RECEIVER_ID AS VL_RECV_ID, VL.RECV_LN_NBR AS VL_RECV_LINE_NBR, VL.RECV_SHIP_SEQ_NBR AS VL_RECV_SHIP_SEQ_NBR,
            MT.BUSINESS_UNIT_RECV AS MT_BU_RECV, MT.RECEIVER_ID AS MT_RECV_ID, MT.RECV_LN_NBR AS MT_RECV_LINE_NBR, MT.RECV_SHIP_SEQ_NBR AS MT_RECV_SHIP_SEQ_NBR, 
            MT.BUSINESS_UNIT_PO, MT.PO_ID, MT.LINE_NBR, MT.SCHED_NBR, MT.CURRENCY_CD, MT.QTY_VCHR, MT.UNIT_PRICE, MT.UNIT_OF_MEASURE, MT.MERCH_AMT_VCHR, 
            MT.MERCH_AMT_RECV, MT.QTY_SH_ACCPT_VUOM, MT.QTY_ENTERED, MT.PROCESS_INSTANCE, MT.QTY_RECV_APPLIED, MT.MERCH_AMT_RECVAPPL, MT.ALGTHM_BEHAVIOR,
            V.ACCOUNTING_DT, V.OPRID_LAST_UPDT, V.APPR_STATUS, V.ENTERED_DT, V.LAST_UPDATE_DT
FROM PS_VCHR_RECV_MTCH MT, PS_VOUCHER_LINE VL, PS_VOUCHER V
WHERE VL.BUSINESS_UNIT = MT.BUSINESS_UNIT
    AND VL.VOUCHER_ID = MT.VOUCHER_ID
    AND VL.VOUCHER_LINE_NUM = MT.VOUCHER_LINE_NUM
    AND VL.BUSINESS_UNIT = V.BUSINESS_UNIT
    AND VL.VOUCHER_ID = V.VOUCHER_ID
    AND VL.BUSINESS_UNIT LIKE '6%'
    AND MT.BUSINESS_UNIT_RECV <> ' '
    AND MT.RECEIVER_ID <> ' '
    AND VL.BUSINESS_UNIT_RECV = ' '
    AND VL.RECEIVER_ID = ' '
    AND MT.PO_ID <> ' '
    AND VL.PO_ID <> ' '
ORDER BY 1,2,3,4,5,6,7,8,9,10,11,12;

--Version 2
SELECT MT.BUSINESS_UNIT, MT.VOUCHER_ID, MT.VOUCHER_LINE_NUM, V.VENDOR_ID, VEN.NAME1, VL.ITM_SETID, VL.INV_ITEM_ID, ITM.DESCR, VL.CATEGORY_ID, 
            CAT.CATEGORY_CD, CAT.DESCR AS CAT_DESCR, 
            VL.BUSINESS_UNIT_RECV AS VL_BU_RECV, VL.RECEIVER_ID AS VL_RECV_ID, VL.RECV_LN_NBR AS VL_RECV_LINE_NBR, VL.RECV_SHIP_SEQ_NBR AS VL_RECV_SHIP_SEQ_NBR,
            MT.BUSINESS_UNIT_RECV AS MT_BU_RECV, MT.RECEIVER_ID AS MT_RECV_ID, MT.RECV_LN_NBR AS MT_RECV_LINE_NBR, MT.RECV_SHIP_SEQ_NBR AS MT_RECV_SHIP_SEQ_NBR, 
            MT.BUSINESS_UNIT_PO, MT.PO_ID, MT.LINE_NBR, MT.SCHED_NBR, MT.CURRENCY_CD, MT.QTY_VCHR, MT.UNIT_PRICE, MT.UNIT_OF_MEASURE, MT.MERCH_AMT_VCHR, 
            MT.MERCH_AMT_RECV, MT.QTY_SH_ACCPT_VUOM, MT.QTY_ENTERED, MT.QTY_RECV_APPLIED, MT.MERCH_AMT_RECVAPPL, MT.ALGTHM_BEHAVIOR,
            V.OPRID, V.OPRID_LAST_UPDT, V.APPR_STATUS, V.ACCOUNTING_DT, V.ENTERED_DT, V.LAST_UPDATE_DT, APPR.ROLEUSER AS APPROVER,
            CAT.RECV_REQ AS CAT_RECV_REQ, P.RECV_REQ AS ITEM_RECV_REQ, VL.AMT_ONLY_FLG, V.MATCH_STATUS_VCHR, MT.PROCESS_INSTANCE
FROM PS_VCHR_RECV_MTCH MT, PS_VOUCHER_LINE VL, PS_VOUCHER V, PS_SET_CNTRL_REC F, PS_MASTER_ITEM_TBL ITM, PS_PURCH_ITEM_ATTR P, PS_ITM_CAT_TBL CAT,
         PS_APPR_INST_LOG APPR, PS_VENDOR VEN
WHERE VL.BUSINESS_UNIT = MT.BUSINESS_UNIT
    AND VL.VOUCHER_ID = MT.VOUCHER_ID
    AND VL.VOUCHER_LINE_NUM = MT.VOUCHER_LINE_NUM
    AND VL.BUSINESS_UNIT = V.BUSINESS_UNIT
    AND VL.VOUCHER_ID = V.VOUCHER_ID
    AND V.VENDOR_SETID = VEN.SETID
    AND V.VENDOR_ID = VEN.VENDOR_ID
    AND VL.BUSINESS_UNIT LIKE '6%'
    AND MT.BUSINESS_UNIT_RECV <> ' '
    AND MT.RECEIVER_ID <> ' '
    AND VL.BUSINESS_UNIT_RECV = ' '
    AND VL.RECEIVER_ID = ' '
    AND MT.PO_ID <> ' '
    AND VL.PO_ID <> ' '
    AND VL.ITM_SETID = ITM.SETID
    AND VL.INV_ITEM_ID = ITM.INV_ITEM_ID
    AND ITM.SETID = 'UNUNI'
    AND ITM.SETID = P.SETID
    AND ITM.INV_ITEM_ID = P.INV_ITEM_ID
    AND ITM.SETID = CAT.SETID
    AND CAT.CATEGORY_ID = ITM.CATEGORY_ID
    AND (CAT.RECV_REQ = 'Y' OR P.RECV_REQ = 'Y')
    AND V.APPR_INSTANCE = APPR.APPR_INSTANCE 
    AND APPR.APPR_INST_STATUS = 'A'
    AND F.SETCNTRLVALUE = VL.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = VL.CATEGORY_ID
    AND CAT.SETID = F.SETID
    AND F.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3;

--UNU_ITEM_CAT_PROFILE_STS
--Version 1
SELECT A.SETID, A.INV_ITEM_ID, TO_CHAR(A.ITM_STATUS_EFFDT,'YYYY-MM-DD') AS ITM_STATUS_EFFDT, A.ITM_STATUS_CURRENT, A.DESCR, A.UNIT_MEASURE_STD, B.ACCOUNT, 
            B.RECV_REQ, D.PROFILE_ID, A.CATEGORY_ID, C.CATEGORY_CD, C.DESCR, C.EFF_STATUS, C.ACCOUNT, C.RECV_REQ, C.PROFILE_ID, A.SERIAL_CONTROL
FROM PS_MASTER_ITEM_TBL A, PS_PURCH_ITEM_ATTR B, PS_ITM_CAT_TBL C, PS_ASSET_ITEM_ATTR D
WHERE (A.SETID = B.SETID
     AND A.INV_ITEM_ID = B.INV_ITEM_ID
     AND A.SETID = C.SETID
     AND C.CATEGORY_ID = A.CATEGORY_ID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_ITM_CAT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.CATEGORY_TYPE = C_ED.CATEGORY_TYPE 
                                                                                                                       AND C.CATEGORY_CD = C_ED.CATEGORY_CD AND C.CATEGORY_ID = C_ED.CATEGORY_ID 
                                                                                                                       AND C_ED.EFFDT <= SYSDATE)
     AND A.SETID = D.SETID
     AND A.INV_ITEM_ID = D.INV_ITEM_ID
     AND A.SETID = 'UNUNI'
     AND C.SETID = 'UNUNI')
ORDER BY 1, 2;

--Version 2
SELECT M.SETID, M.INV_ITEM_ID, M.ITM_STATUS_EFFDT, M.ITM_STATUS_CURRENT, X1.XLATLONGNAME, M.DESCR AS ITM_DESCR, M.UNIT_MEASURE_STD, 
            AIA.PROFILE_ID AS ITM_PROFILE, M.CATEGORY_ID AS ITM_CAT, P.ACCOUNT AS PURCH_ACCOUNT, E.CATEGORY_CD, E.CATEGORY_ID, E.DESCR AS CAT_DESCR, E.EFF_STATUS, 
            E.PROFILE_ID AS CAT_PROFILE, E.ACCOUNT AS CAT_ACCOUNT, 
            E.RECV_REQ AS CAT_RECV_REQ, X2.XLATLONGNAME AS CAT_RECV_REQ_DESCR, P.RECV_REQ AS ITEM_RECV_REQ, X3.XLATLONGNAME AS ITEM_RECV_REQ_DESCR, 
            E.PHYSICAL_NATURE, M.SERIAL_CONTROL
FROM PS_MASTER_ITEM_TBL M, PS_PURCH_ITEM_ATTR P, PS_ITM_CAT_TBL E, PS_ASSET_ITEM_ATTR AIA, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE M.SETID = 'UNUNI'
  AND E.SETID = 'UNUNI'
  AND M.SETID = P.SETID
  AND M.INV_ITEM_ID = P.INV_ITEM_ID
  AND E.SETID = M.SETID
  AND E.CATEGORY_ID = M.CATEGORY_ID
  AND M.SETID = AIA.SETID
  AND M.INV_ITEM_ID = AIA.INV_ITEM_ID
  AND X1.FIELDNAME = 'ITM_STATUS_CURRENT'
  AND X1.FIELDVALUE = M.ITM_STATUS_CURRENT
  AND X2.FIELDNAME = 'RECV_REQ'
  AND X2.FIELDVALUE = E.RECV_REQ
  AND X3.FIELDNAME = 'RECV_REQ'
  AND X3.FIELDVALUE = P.RECV_REQ  
  --AND E.PROFILE_ID LIKE 'HYME%'
  AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                   AND E.CATEGORY_CD = E_ED.CATEGORY_CD 
                                                                                                                   AND E.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Queries for verification
--Apparently user created the Item first and then added an EFFDT row for the Category Code, however, system still maintained association with old category id for that category code
SELECT * FROM PS_MASTER_ITEM_TBL WHERE SETID = 'UNUNI' AND INV_ITEM_ID = '80161911S'
SELECT * FROM PS_MS_ITM_INV_VW WHERE SETID = 'UNUNI'
SELECT * FROM PS_ITM_CAT_TBL F WHERE SETID = 'UNUNI' AND CATEGORY_CD = 'C0109' AND F.EFFDT = (SELECT MAX(EFFDT) FROM PS_ITM_CAT_TBL F1 
                                                      WHERE F.SETID = F1.SETID AND F.CATEGORY_TYPE = F1.CATEGORY_TYPE AND F.CATEGORY_CD = F1.CATEGORY_CD 
                                                      AND F.CATEGORY_ID = F1.CATEGORY_ID AND F1.EFF_STATUS = 'A' AND F.EFFDT <= SYSDATE)

--Paycycle Queries
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'AP_APY2015' ORDER BY RUNDTTM DESC;
SELECT * FROM PS_PYCYCL WHERE PAY_CYCLE LIKE '6%' AND IN_USE_SW = 'Y';
SELECT * FROM PS_PYCYCL WHERE PAY_CYCLE = 'PHL10A';
SELECT * FROM PS_PYCYCL_STAT WHERE PAY_CYCLE LIKE '6%' AND TO_CHAR(ACCOUNTING_DT, 'YYYY') = '2014' ORDER BY 1,2 DESC;
SELECT * FROM PS_PYCYCL_JOB_TBL WHERE PAY_CYCLE LIKE '6%' ORDER BY 1,2 DESC;

SELECT PY.*, X1.XLATLONGNAME AS PAY_RUN_AP_STATUS_DESC 
FROM PS_PYCYCL_JOB_TBL PY, PSXLATITEM X1
WHERE PY.PAY_CYCLE LIKE '6%'
    AND X1.FIELDNAME = 'PAY_RUN_AP_STATUS'
    AND X1.FIELDVALUE = PY.PAY_RUN_AP_STATUS 
ORDER BY 1,2 DESC;

--Monitor Paycycle Statuses for UNU
--Version 1
SELECT PY.PAY_CYCLE, PY.PAY_RUN_AP_STATUS, X1.XLATLONGNAME AS PAY_RUN_AP_STATUS_DESC, PY.OPRID, COUNT(1)
FROM PS_PYCYCL_STAT PY, PSXLATITEM X1 
WHERE PY.PAY_CYCLE LIKE '6%' 
    AND TO_CHAR(PY.ACCOUNTING_DT, 'YYYY') = '2014'
    AND X1.FIELDNAME = 'PAY_RUN_AP_STATUS'
    AND X1.FIELDVALUE = PY.PAY_RUN_AP_STATUS
GROUP BY PAY_CYCLE, PAY_RUN_AP_STATUS, X1.XLATLONGNAME, OPRID
ORDER BY 1,2,3;

--Version 2
SELECT PY.PAY_CYCLE, PY.PAY_RUN_AP_STATUS, X1.XLATLONGNAME AS PAY_RUN_AP_STATUS_DESC, PY.PAY_THRU_DT, PY.PYMNT_DT, PY.OPRID, PY.PAY_RUN_DT, PY.ACCOUNTING_DT, COUNT(1)
FROM PS_PYCYCL_STAT PY, PSXLATITEM X1 
WHERE PY.PAY_CYCLE LIKE '6%' 
    AND TO_CHAR(PY.ACCOUNTING_DT, 'YYYY') IN ('2014', '2015')
    AND X1.FIELDNAME = 'PAY_RUN_AP_STATUS'
    AND X1.FIELDVALUE = PY.PAY_RUN_AP_STATUS
GROUP BY PY.PAY_CYCLE, PY.PAY_RUN_AP_STATUS, X1.XLATLONGNAME, PY.PAY_THRU_DT, PY.PYMNT_DT, PY.OPRID, PY.PAY_RUN_DT, PY.ACCOUNTING_DT
ORDER BY PY.PAY_RUN_DT DESC, PY.PAY_CYCLE;

--Be careful BUSINESS_UNIT_GL was blank for few rows, not sure why 
SELECT * FROM PS_PAYMENT_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '600%' AND PAY_CYCLE = '600UUB' AND PAY_CYCLE_SEQ_NUM = 753;
SELECT * FROM PS_PAYMENT_TBL WHERE IN_PROCESS_FLG = 'Y' AND BUSINESS_UNIT_GL = 'UNUNI';
SELECT * FROM PS_PYCYCL_DATA WHERE PAY_CYCLE LIKE '6%' AND BUSINESS_UNIT_GL = 'UNUNI' AND TO_CHAR(ACCOUNTING_DT, 'YYYY') >= '2014';
SELECT * FROM PS_PYCYCL_STATRPT WHERE PAY_CYCLE LIKE '6%' AND BANK_SETID = 'SHARE' AND BANK_CD LIKE '600%' ORDER BY 1, 2 DESC;

SELECT * FROM PS_PYCYCL_DATA_VW1 WHERE PAY_CYCLE LIKE '6%' AND BANK_SETID = 'SHARE' AND BANK_CD LIKE '600%' ORDER BY 1, 2 DESC;
SELECT * FROM PS_PYCYCL_DATA_VW2 WHERE PAY_CYCLE LIKE '6%' AND BANK_SETID = 'SHARE' AND BANK_CD LIKE '600%' ORDER BY 1, 2 DESC;
SELECT * FROM PS_PYCYCL_DATA_VW4 WHERE PAY_CYCLE LIKE '6%' AND BANK_SETID = 'SHARE' AND BANK_CD LIKE '600%' ORDER BY 1, 2 DESC;

--Paycycle Erros
SELECT * FROM PS_PYCYCL_ERR_VW1;
SELECT * FROM PS_PYCYCL_ERR_VW2;
--Find all Paycycles which have UNU AP BUs
SELECT * FROM PS_PYCYCL_BU WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_FLG = 'Y' AND PAY_CYCLE NOT LIKE '6%'
ORDER BY 1,2;
--Find all Paycycles which have UNU Bank Accounts
SELECT * FROM PS_PYCYCL_BNK WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';

--Non UNU Paycycles which have UNU AP BUs
--Using LISTAGG
SELECT PAY_CYCLE AS "Non UNU Paycycles", LISTAGG(BUSINESS_UNIT, '--') WITHIN GROUP (ORDER BY PAY_CYCLE, BUSINESS_UNIT) AS "UNU AP BUs"
FROM PS_PYCYCL_BU WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_FLG = 'Y' AND PAY_CYCLE NOT LIKE '6%'
GROUP BY PAY_CYCLE
ORDER BY 1,2;

--Using XMLAGG
SELECT PAY_CYCLE AS "Non UNU Paycycles", 
            dbms_lob.substr(RTRIM(XMLAGG(XMLELEMENT(E, BUSINESS_UNIT, '--').EXTRACT('//text()') ORDER BY PAY_CYCLE, BUSINESS_UNIT).GETCLOBVAL(),',')) "UNU AP BUs"
FROM PS_PYCYCL_BU WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_FLG = 'Y' AND PAY_CYCLE NOT LIKE '6%'
GROUP BY PAY_CYCLE
ORDER BY 1,2;

--Number of Non UNU Paycycles which include UNU AP BUs 
SELECT BUSINESS_UNIT, COUNT(1) 
FROM PS_PYCYCL_BU WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_FLG = 'Y' AND PAY_CYCLE NOT LIKE '6%' 
GROUP BY BUSINESS_UNIT
ORDER BY 1,2;

--COL10
SELECT * FROM PS_PYCYCL WHERE PAY_CYCLE LIKE 'COL10%';
SELECT * FROM PS_PYCYCL_SOURCE WHERE PAY_CYCLE LIKE 'COL10%';
SELECT * FROM PS_PYCYCL_BU WHERE PAY_CYCLE LIKE 'COL10%';
SELECT * FROM PS_PYCYCL_BNK WHERE PAY_CYCLE LIKE 'COL10%';
SELECT * FROM PS_PYCYCL_MTHD WHERE PAY_CYCLE LIKE 'COL10%';

--UN_RECEIPT_CLS
--UN_RECPT_CLS
SELECT A.BUSINESS_UNIT AS BU_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.AMT_ONLY_FLG, A.CATEGORY_ID, A.INV_ITEM_ID, A.SERIAL_CONTROL, A.MATCH_LINE_FLG, 
            A.MERCHANDISE_AMT AS RECV_MERCH_AMT, A.MERCHANDISE_AMT_PO, A.DESCR254_MIXED, A.RECEIVE_UOM, A.RECV_LN_MATCH_OPT, A.RECEIPT_DTTM,
            A.QTY_LN_ASSET_SUOM, A.QTY_LN_INV_SUOM, A.QTY_SH_ACCPT, A.QTY_SH_ACCPT_SUOM, A.QTY_SH_ACCPT_VUOM, A.QTY_SH_NETRCV_VUOM, A.QTY_SH_RECVD, 
            A.QTY_SH_RECVD_SUOM, A.QTY_SH_RECVD_VUOM,
            B.BUSINESS_UNIT AS BU_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, B.MATCH_STATUS_LN_PO, B.QTY_PO, B.CURRENCY_CD, B.MERCHANDISE_AMT AS PO_MERCH_AMT, 
            X1.XLATLONGNAME AS CANCEL_STATUS
FROM PS_RECV_LN_SHIP A , PS_PO_LINE_SHIP B , PS_PO_HDR C, PSXLATITEM X1
WHERE A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI')
    AND A.BUSINESS_UNIT_PO = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.LINE_NBR = B.LINE_NBR
    AND A.SCHED_NBR = B.SCHED_NBR
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND A.RECV_SHIP_STATUS = 'R'
    AND B.CANCEL_STATUS IN ('C','X')
    AND X1.FIELDNAME = 'CANCEL_STATUS'
    AND X1.FIELDVALUE = B.CANCEL_STATUS
    --AND TO_CHAR(((A.RECEIPT_DTTM ) + (0)),'YYYY-MM-DD') >= '2013-10-01'
    AND TO_CHAR(((A.RECEIPT_DTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1,2,3,4;

-----------------------
--IF No Receiver ID
--UPDATE PS_RECV_LN_SHIP X SET X.RECV_SHIP_STATUS = 'C' WHERE X.RECV_SHIP_STATUS = 'R' AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_SHIP X 
WHERE X.RECV_SHIP_STATUS = 'R' 
AND EXISTS (SELECT 'X' FROM PS_PO_LINE_SHIP B WHERE X.BUSINESS_UNIT_PO = B.BUSINESS_UNIT AND B.PO_ID = X.PO_ID AND B.LINE_NBR = X.LINE_NBR 
                                                                                AND B.SCHED_NBR = X.SCHED_NBR AND B.CANCEL_STATUS IN ('C','X')) 
AND X.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

--UPDATE PS_RECV_LN_SHIP X SET X.RECV_LN_MATCH_OPT = 'F' WHERE X.RECV_LN_MATCH_OPT = 'P' AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_SHIP X 
WHERE X.RECV_LN_MATCH_OPT = 'P'
AND EXISTS (SELECT 'X' FROM PS_PO_LINE_SHIP C WHERE X.BUSINESS_UNIT_PO = C.BUSINESS_UNIT AND C.PO_ID = X.PO_ID AND C.LINE_NBR = X.LINE_NBR 
                                                                                AND C.SCHED_NBR = X.SCHED_NBR AND C.CANCEL_STATUS IN ('C','X'))
AND X.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

--UPDATE PS_RECV_LN_DISTRIB D SET D.RECV_DS_STATUS = 'C' WHERE D.RECV_DS_STATUS = ' ' AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_DISTRIB D 
WHERE D.RECV_DS_STATUS = ' '
AND EXISTS (SELECT 'X' FROM PS_RECV_LN_SHIP A WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT AND A.RECEIVER_ID = D.RECEIVER_ID AND A.RECV_LN_NBR = D.RECV_LN_NBR 
                                                                                  AND A.RECV_SHIP_SEQ_NBR = D.RECV_SHIP_SEQ_NBR AND A.RECV_SHIP_STATUS IN ('C', 'X')) 
AND D.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

--UPDATE PS_RECV_LN_DISTRIB D SET D.RECV_DS_STATUS = 'C' WHERE D.RECV_DS_STATUS NOT IN ('X', 'C') AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_DISTRIB D 
WHERE D.RECV_DS_STATUS NOT IN ('X', 'C') 
AND EXISTS (SELECT 'X' FROM PS_RECV_LN_SHIP A, PS_RECV_HDR C WHERE A.BUSINESS_UNIT = D.BUSINESS_UNIT AND A.RECEIVER_ID = D.RECEIVER_ID 
                                 AND A.RECV_LN_NBR = D.RECV_LN_NBR AND A.RECV_SHIP_SEQ_NBR = D.RECV_SHIP_SEQ_NBR 
                                 AND A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.RECEIVER_ID = C.RECEIVER_ID AND (C.RECV_STATUS IN ('C', 'X') OR A.RECV_SHIP_STATUS IN ('C', 'X'))) 
AND D.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

--UPDATE PS_RECV_LN_SHIP A SET A.RECV_SHIP_STATUS = 'C' WHERE A.RECV_SHIP_STATUS NOT IN ('C', 'X') AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_SHIP A 
WHERE A.RECV_SHIP_STATUS NOT IN ('C', 'X')
AND (EXISTS (SELECT 'X' FROM PS_RECV_HDR C WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.RECEIVER_ID = C.RECEIVER_ID AND C.RECV_STATUS IN ('C', 'X')) 
 OR NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_DISTRIB B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.RECEIVER_ID = B.RECEIVER_ID AND B.RECV_DS_STATUS NOT IN ('C', 'X') 
                           AND A.RECV_LN_NBR = B.RECV_LN_NBR AND A.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR)) 
 AND A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

--UPDATE PS_RECV_HDR C SET RECV_STATUS = 'C' WHERE C.RECV_STATUS NOT IN ('C', 'X') AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_HDR C 
WHERE C.RECV_STATUS NOT IN ('C', 'X')
AND NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_SHIP A WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.RECEIVER_ID = C.RECEIVER_ID AND A.RECV_SHIP_STATUS NOT IN ('C', 'X')) 
AND C.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI');

----------------------------
--IF Receiver ID is there
--UPDATE PS_RECV_LN_SHIP X SET X.RECV_SHIP_STATUS = 'C' WHERE X.RECEIVER_ID = :2 AND X.BUSINESS_UNIT = :1  AND X.RECV_SHIP_STATUS = 'R'  AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_LN_SHIP X
WHERE X.BUSINESS_UNIT LIKE '6%'
    --AND X.RECEIVER_ID = :2
    AND X.RECV_SHIP_STATUS = 'R'
AND EXISTS (SELECT 'X' FROM PS_PO_LINE_SHIP B WHERE X.BUSINESS_UNIT_PO = B.BUSINESS_UNIT AND B.PO_ID = X.PO_ID AND B.LINE_NBR = X.LINE_NBR 
                                                                                AND B.SCHED_NBR = X.SCHED_NBR AND B.CANCEL_STATUS IN ('C','X'));

--UPDATE PS_RECV_HDR C SET RECV_STATUS = 'C' WHERE C.RECEIVER_ID = :2 AND C.BUSINESS_UNIT = :1 AND C.RECV_STATUS NOT IN ('C', 'X') AND THE EXISTS CLAUSE AS BELOW
SELECT * FROM PS_RECV_HDR C 
WHERE C.BUSINESS_UNIT LIKE '6%'
    --AND C.RECEIVER_ID = :2
    AND C.RECV_STATUS NOT IN ('C', 'X')
    AND NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_SHIP A WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.RECEIVER_ID = C.RECEIVER_ID AND A.RECV_SHIP_STATUS NOT IN ('C', 'X'));

--CF's Prompt Table(s)
SELECT * FROM PS_FS_FLD_PROMPT;

--UNU_REC_ACCRUAL_ENTRY
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, B.RECEIPT_DT, A.DST_ACCT_TYPE, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR,
            A.QTY_DS_ACCPT_SUOM, A.QTY_DS_ACCPT_VUOM, A.QTY_PO, A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM,
            A.MONETARY_AMOUNT, A.GL_DISTRIB_STATUS, A.JOURNAL_ID, A.BUDGET_LINE_STATUS, A.ACCOUNTING_DT, A.BUDGET_DT, BUDGET_HDR_STATUS, 
            A.ACCOUNT, A.DEPTID, A.FUND_CODE, A.OPERATING_UNIT, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY,
            C.CANCEL_STATUS, B.OPRID
FROM PS_RECV_LN_ACCTG A, PS_RECV_HDR B, PS_PO_LINE_SHIP C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.RECEIVER_ID = B.RECEIVER_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT_PO = C.BUSINESS_UNIT (+)
     AND A.PO_ID = C.PO_ID (+)
     AND A.LINE_NBR = C.LINE_NBR (+)
     AND A.SCHED_NBR = C.SCHED_NBR (+)
     AND A.DST_ACCT_TYPE <> 'ENR' -- 'Reserve for Encumbrances'
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     --AND A.ACCOUNTING_DT = TO_DATE(:1,'YYYY-MM-DD')
ORDER BY 1, 2, 3, 4, 5, 7;

SELECT * FROM PS_RECV_LN_ACCTG WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID = '0000001208';

--UNU Buyers
SELECT A.BUYER_ID, B.OPRDEFNDESC, A.ACTIVE_FLG, A.PO_STATUS 
FROM PS_BUYER_TBL A, PSOPRDEFN B, PSUSEREMAIL C
WHERE A.BUYER_ID = B.OPRID
    AND B.OPRID = C.OPRID 
    AND C.EMAILID LIKE '%unu.edu' 
    AND B.ACCTLOCK = 0
ORDER BY 1;

--UNU PO Dispatch batch setup
SELECT * FROM PSPRCSRQST WHERE OPRID = 'CMBATCH' AND PRCSNAME  = 'UNPO005';
SELECT * FROM PSPRCSRQST WHERE RUNCNTLID = 'PO_UNPO005_D_01';
SELECT * FROM PS_RUN_CNTL_PUR WHERE OPRID = 'CMBATCH';
SELECT * FROM PS_RUN_CNTL_PUR WHERE OPRID = 'craig.booth' AND PO_ID = ' ';
SELECT * FROM PS_RUN_CNTL_PUR WHERE OPRID = 'prakash.prashant';

--UNU PO Close batch setup
SELECT * FROM PSPRCSRQST WHERE OPRID = 'prakash.prashant' ORDER BY RQSTDTTM DESC;
--PSJob - PO_REQRQ, PO_POREP
--PRCSNAME - PO_REQRCON, PO_PORECON
SELECT * FROM PSPRCSRQST WHERE PRCSNAME IN ('PO_PORECON', 'PO_REQRQ');
SELECT * FROM PS_RUN_CNTL_PO_AE WHERE OPRID = 'craig.booth';

--Check for PO's which are Pending Cancellation
SELECT BUSINESS_UNIT, DISP_METHOD, PO_STATUS, COUNT(1) 
FROM PS_PO_HDR 
WHERE BUSINESS_UNIT LIKE '6%' 
    AND PO_STATUS = 'PX'
GROUP BY BUSINESS_UNIT, DISP_METHOD, PO_STATUS
ORDER BY 1,2;

--UNPOSTAT SQR Report Query
--Modified version - Still Testing - DOES NOT WORK
SELECT DISTINCT D.BUSINESS_UNIT, D.PO_ID, D.PO_DT, D.PO_STATUS, D.VENDOR_ID, C.LINE_NBR, G.SCHED_NBR, G.DISTRIB_LINE_NUM, C.INV_ITEM_ID, C.CATEGORY_ID, 
            G.MONETARY_AMT_BSE, G.BUSINESS_UNIT_GL,
            G.ACCOUNT, G.OPERATING_UNIT, G.FUND_CODE, G.DEPTID, G.CHARTFIELD2, G.BUSINESS_UNIT_PC, G.PROJECT_ID, G.ACTIVITY_ID, G.QTY_PO, 
            G.REQ_ID, G.REQ_LINE_NBR, G.REQ_SCHED_NBR, G.REQ_DISTRIB_NBR, G.QTY_REQ, 
            E.DUE_DT, D.CURRENCY_CD, E.MERCHANDISE_AMT AS PO_PRICE, E.MERCH_AMT_BSE AS PO_PRICE_BSE, E.QTY_PO, G.BUDGET_LINE_STATUS, H.RECEIVER_ID, H.QTY_SH_RECVD, 
            H.MERCHANDISE_AMT AS RECEIPT_PRICE, H.MERCH_AMT_BSE AS RECEIPT_PRICE_BSE,
            NVL((E.QTY_PO - H.QTY_SH_RECVD), 0) OPEN_QTY, NVL((E.MERCHANDISE_AMT - H.MERCHANDISE_AMT), 0) OPEN_AMT,
            NVL((SELECT SUM(PD.MONETARY_AMT_BSE) FROM PS_DISTRIB_LINE PD, PS_VOUCHER V, PS_PYMNT_VCHR_XREF XC 
                                                                                     WHERE D.BUSINESS_UNIT = PD.BUSINESS_UNIT_PO
                                                                                         AND D.PO_ID = PD.PO_ID
                                                                                         AND PD.PO_ID <> ' '
                                                                                         AND PD.LINE_NBR = G.LINE_NBR
                                                                                         AND PD.SCHED_NBR = G.SCHED_NBR
                                                                                         AND PD.PO_DIST_LINE_NUM = G.DISTRIB_LINE_NUM
                                                                                         AND PD.BUSINESS_UNIT = V.BUSINESS_UNIT
                                                                                         AND PD.VOUCHER_ID = V.VOUCHER_ID
                                                                                         AND XC.BUSINESS_UNIT = V.BUSINESS_UNIT
                                                                                         AND XC.VOUCHER_ID = V.VOUCHER_ID
                                                                                         AND V.ENTRY_STATUS <> 'X'
                                                                                         AND PYMNT_SELCT_STATUS = 'P'), 0) VOUCHERED_AMT_BSE, C.CNTRCT_ID, C.CNTRCT_LINE_NBR, C.DESCR254_MIXED 
FROM PS_PO_HDR D, PS_PO_LINE C, PS_PO_LINE_DISTRIB G, 
        (PS_PO_LINE_SHIP E LEFT OUTER JOIN PS_RECV_LN_SHIP H ON E.BUSINESS_UNIT = H.BUSINESS_UNIT AND E.PO_ID = H.PO_ID 
                                                                                               AND E.LINE_NBR = H.LINE_NBR AND E.SCHED_NBR = H.SCHED_NBR)
WHERE D.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND D.PO_ID = C.PO_ID
    AND C.BUSINESS_UNIT = G.BUSINESS_UNIT
    AND C.PO_ID = G.PO_ID
    AND C.LINE_NBR = G.LINE_NBR
    AND E.BUSINESS_UNIT = G.BUSINESS_UNIT
    AND E.PO_ID = G.PO_ID
    AND E.LINE_NBR = G.LINE_NBR
    AND E.SCHED_NBR = G.SCHED_NBR
    AND (D.PO_STATUS = 'D' OR D.PO_STATUS = 'C')
    AND (D.RECV_STATUS = 'R' OR D.RECV_STATUS = 'N')
    AND D.BUSINESS_UNIT = '600UU'
    AND G.BUDGET_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    AND G.BUDGET_LINE_STATUS IN ('W','V')
    AND G.DISTRIB_LN_STATUS <> 'X'
    --AND (E.QTY_PO - H.QTY_SH_RECVD) <> 0
    --AND D.PO_DT >=  TO_DATE('2013-01-01','YYYY-MM-DD')
    --AND D.PO_DT <= TO_DATE('2013-12-31','YYYY-MM-DD')
ORDER BY D.BUSINESS_UNIT, D.PO_ID,C.LINE_NBR;

-------------------------------------------
--PO Activity Summary Page Queries
-------------------------------------------
--PO Details
SELECT * FROM PS_PO_LN_ORDER_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005764';
SELECT * FROM PS_PO_LN_ORDER_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005677';
--Expanded PO_LN_ORDER_VW
SELECT L.BUSINESS_UNIT, L.PO_ID, L.LINE_NBR, L.CANCEL_STATUS, L.CHANGE_STATUS, L.INV_ITEM_ID, L.DESCR254_MIXED, L.UNIT_OF_MEASURE, L.QTY_TYPE, L.CNTRCT_ID, 
            L.CNTRCT_LINE_NBR, L.AMT_ONLY_FLG, L.RECV_REQ, SUM(S.QTY_PO) AS QTY_ORDERED, SUM(S.MERCHANDISE_AMT) AS AMT_ORDERED, S.CURRENCY_CD 
FROM PS_PO_LINE L, PS_PO_LINE_SHIP S 
WHERE L.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND L.PO_ID = S.PO_ID 
    AND L.LINE_NBR = S.LINE_NBR 
    AND S.CANCEL_STATUS <> 'X'
    AND L.BUSINESS_UNIT = '600UU' 
    AND L.PO_ID = '0000005764'
GROUP BY L.BUSINESS_UNIT, L.PO_ID, L.LINE_NBR, L.CANCEL_STATUS, L.CHANGE_STATUS, L.INV_ITEM_ID, L.DESCR254_MIXED, L.UNIT_OF_MEASURE, L.QTY_TYPE, L.CNTRCT_ID, 
               L.CNTRCT_LINE_NBR, L.AMT_ONLY_FLG, L.RECV_REQ, S.CURRENCY_CD
ORDER BY 1,2;

--Received
SELECT * FROM PS_PO_RECV_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005764';
--Expanded PO_RECV_LN_VW
SELECT BUSINESS_UNIT_PO, PO_ID, LINE_NBR, SCHED_NBR, BUSINESS_UNIT, RECEIVER_ID, RECV_LN_NBR, RECV_SHIP_SEQ_NBR, QTY_SH_ACCPT_VUOM, QTY_SH_RECVD_VUOM, 
            QTY_SH_REJCT_VUOM, RECV_SHIP_STATUS, MERCHANDISE_AMT, CURRENCY_CD
FROM PS_RECV_LN_SHIP
WHERE BUSINESS_UNIT_PO <> ' '
    AND PO_ID <> ' '
    AND RECV_SHIP_STATUS <> 'X'
    AND BUSINESS_UNIT = '600UU' 
    AND PO_ID = '0000005764'
ORDER BY 1,2;

--Get Received/Accepted Quantity and Amount Received
SELECT LINE_NBR, NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED
FROM PS_RECV_LN_SHIP 
WHERE BUSINESS_UNIT_PO = '600UU' 
    AND PO_ID = '0000005764'
    --AND LINE_NBR = 1
    AND RECV_SHIP_STATUS <> 'X'
GROUP BY LINE_NBR
ORDER BY 1;

--Invoiced
SELECT * FROM PS_VCHR_LN_PO_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005764';
--Expanded VCHR_LN_PO_VW
SELECT L.BUSINESS_UNIT_PO, L.PO_ID, L.LINE_NBR, L.SCHED_NBR, L.BUSINESS_UNIT_RECV, L.RECEIVER_ID, L.RECV_LN_NBR, L.RECV_SHIP_SEQ_NBR, L.BUSINESS_UNIT, 
            L.VOUCHER_ID, L.VOUCHER_LINE_NUM, L.VENDOR_ID,
            Round(L.QTY_VCHR, 2)AS QTY_VCHR, L.BASE_CURRENCY, L.MERCH_AMT_BSE, L.MERCHANDISE_AMT, L.TXN_CURRENCY_CD, V.INVOICE_ID, V.INVOICE_DT, L.CURRENCY_CD, 
            POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, POL.QTY_ORDERED, POL.AMT_ORDERED, POL.CURRENCY_CD
FROM PS_VOUCHER_LINE L, PS_VOUCHER V, PS_PO_LN_ORDER_VW POL 
WHERE V.BUSINESS_UNIT = L.BUSINESS_UNIT 
     AND V.VOUCHER_ID = L.VOUCHER_ID
     AND L.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT
     AND L.PO_ID = POL.PO_ID
     AND L.LINE_NBR = POL.LINE_NBR
     AND L.BUSINESS_UNIT_PO <> ' ' 
     AND L.PO_ID <> ' ' 
     AND V.ENTRY_STATUS <> 'X' 
     AND V.VOUCHER_STYLE <> 'THRD' 
     AND (V.MANUAL_CLOSE_DT IS NULL 
     OR EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF X WHERE X.BUSINESS_UNIT = V.BUSINESS_UNIT AND X.VOUCHER_ID = V.VOUCHER_ID AND X.PYMNT_SELCT_STATUS <> 'X'))
     AND L.BUSINESS_UNIT_PO = '600UU'
     AND L.PO_ID = '0000005764'
ORDER BY 1,2,3,4,INVOICE_DT;

--Get Invoiced Amount/Quantity
SELECT LINE_NBR, NVL(ROUND(SUM(QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(AMT_INVOICED), 3), 0) AMT_INVOICED, CURRENCY_CD
FROM PS_VCHR_LN_PO_VW 
WHERE BUSINESS_UNIT = '600UU' 
    AND PO_ID = '0000005764' 
    --AND LINE_NBR = :3
GROUP BY LINE_NBR, CURRENCY_CD
ORDER BY 1;

--Matched
SELECT * FROM PS_PO_MTCH_LN_VW WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000005764'
--Expanded PO_MTCH_LN_VW
SELECT BUSINESS_UNIT, PO_ID, LINE_NBR, SCHED_NBR, BUSINESS_UNIT_AP, VOUCHER_ID, VOUCHER_LINE_NUM, SUM(QTY_VCHR_CNVT) QTY_MATCHED, 
            SUM(MERCH_AMT_CNVT) AS AMT_MATCHED, TXN_CURRENCY_CD, CURRENCY_CD 
FROM PS_PO_LINE_MATCHED 
WHERE BUSINESS_UNIT <> ' '
    AND PO_ID <> ' '
    AND BUSINESS_UNIT = '600UU'
    AND PO_ID = '0000005764'
GROUP BY BUSINESS_UNIT, PO_ID, LINE_NBR, SCHED_NBR, BUSINESS_UNIT_AP, VOUCHER_ID, VOUCHER_LINE_NUM, TXN_CURRENCY_CD, CURRENCY_CD
ORDER BY 1,2;

--Get Amount/Quantity Matched
SELECT LINE_NBR, NVL(ROUND(SUM(QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MERCH_AMT_CNVT), 3), 0) AMT_MATCHED, CURRENCY_CD
FROM PS_PO_LINE_MATCHED 
WHERE BUSINESS_UNIT = '600UU'
    AND PO_ID = '0000005764'
    --AND LINE_NBR = :3
GROUP BY LINE_NBR, CURRENCY_CD
ORDER BY 1;


--Now Outer Join PS_PO_LN_ORDER_VW, PS_VCHR_LN_PO_VW, PS_PO_MTCH_LN_VW, PS_PO_RECV_LN_VW with Anchor on PS_PO_LN_ORDER_VW
--Does not work yet
SELECT DISTINCT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, RECV.SCHED_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.QTY_TYPE, PO.CNTRCT_ID, 
            PO.CNTRCT_LINE_NBR, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, PO.CURRENCY_CD,
            RECV.QTY_SH_ACCPT_VUOM, RECV.QTY_SH_RECVD_VUOM AS RECEIVED_QTY, RECV.QTY_SH_REJCT_VUOM, --RECV.RECV_SHIP_STATUS, 
            RECV.MERCHANDISE_AMT, RECV.CURRENCY_CD,
            --VCHR.BUSINESS_UNIT_RECV, VCHR.RECEIVER_ID, VCHR.RECV_LN_NBR, VCHR.RECV_SHIP_SEQ_NBR, VCHR.BUSINESS_UNIT_AP, VCHR.VOUCHER_ID, VCHR.VOUCHER_LINE_NUM,
            VCHR.QTY_INVOICED, VCHR.AMT_INVOICED, VCHR.TXN_CURRENCY_CD, --V.INVOICE_ID, V.INVOICE_DT, 
            VCHR.CURRENCY_CD, 
            MTCH.QTY_MATCHED, MTCH.MATCHED_AMT, MTCH.TXN_CURRENCY_CD, MTCH.CURRENCY_CD3
FROM (((PS_PO_LN_ORDER_VW PO
           LEFT OUTER JOIN PS_PO_RECV_LN_VW RECV ON RECV.BUSINESS_UNIT = PO.BUSINESS_UNIT AND RECV.PO_ID = PO.PO_ID AND RECV.LINE_NBR = PO.LINE_NBR)
           LEFT OUTER JOIN PS_VCHR_LN_PO_VW VCHR ON VCHR.BUSINESS_UNIT = RECV.BUSINESS_UNIT AND VCHR.PO_ID = RECV.PO_ID AND VCHR.LINE_NBR = RECV.LINE_NBR AND VCHR.SCHED_NBR = RECV.SCHED_NBR)
           LEFT OUTER JOIN PS_PO_MTCH_LN_VW MTCH ON MTCH.BUSINESS_UNIT = VCHR.BUSINESS_UNIT AND MTCH.PO_ID = VCHR.PO_ID AND MTCH.LINE_NBR = VCHR.LINE_NBR AND MTCH.SCHED_NBR = VCHR.SCHED_NBR)           
WHERE PO.BUSINESS_UNIT = '600UU' 
    AND PO.PO_ID = '0000005764'    
ORDER BY 1,2,3,4;

--Version 2 also not working yet
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE AS UOM, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD,
            --RECV
            NVL(ROUND(SUM(RECV.QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(RECV.QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(RECV.MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, --RECV.CURRENCY_CD AS RCPT_CURR_CD
            --VCHR
            --NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED, --VCHR.CURRENCY_CD AS INV_CURR_CD,
            --MTCH
            NVL(ROUND(SUM(MTCH.QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MTCH.MERCH_AMT_CNVT), 3), 0) AMT_MATCHED--, MTCH.CURRENCY_CD AS MATCH_CURR_CD
FROM (((PS_PO_LN_ORDER_VW PO 
           LEFT OUTER JOIN PS_RECV_LN_SHIP RECV ON RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT AND RECV.PO_ID = PO.PO_ID AND RECV.LINE_NBR = PO.LINE_NBR AND RECV.RECV_SHIP_STATUS <> 'X')
--           LEFT OUTER JOIN PS_VCHR_LN_PO_VW VCHR ON VCHR.BUSINESS_UNIT_RECV = RECV.BUSINESS_UNIT AND VCHR.RECEIVER_ID = RECV.RECEIVER_ID 
--           AND VCHR.RECV_LN_NBR = RECV.RECV_LN_NBR AND VCHR.RECV_SHIP_SEQ_NBR = RECV.RECV_SHIP_SEQ_NBR AND VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
--           AND VCHR.PO_ID = PO.PO_ID AND VCHR.LINE_NBR = PO.LINE_NBR AND VCHR.SCHED_NBR = RECV.SCHED_NBR)
           LEFT OUTER JOIN PS_PO_LINE_MATCHED MTCH ON MTCH.BUSINESS_UNIT = PO.BUSINESS_UNIT AND MTCH.PO_ID = PO.PO_ID AND MTCH.LINE_NBR = PO.LINE_NBR
           --AND MTCH.SCHED_NBR = RECV.SCHED_NBR
           --AND MTCH.BUSINESS_UNIT_RECV = RECV.BUSINESS_UNIT AND MTCH.RECEIVER_ID = RECV.RECEIVER_ID AND MTCH.RECV_LN_NBR = RECV.RECV_LN_NBR 
           --AND MTCH.RECV_SHIP_SEQ_NBR = RECV.RECV_SHIP_SEQ_NBR
           ))
           --AND MTCH.BUSINESS_UNIT_AP = VCHR.BUSINESS_UNIT_AP AND MTCH.VOUCHER_ID = VCHR.VOUCHER_ID AND MTCH.VOUCHER_LINE_NUM = VCHR.VOUCHER_LINE_NUM)                                                                  
WHERE PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD--, VCHR.CURRENCY_CD, MTCH.CURRENCY_CD
ORDER BY 1,2,3;

--Version 3
--Union All, works with PO Details and Receipt Information
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
            X.CURRENCY_CD, SUM(X.QTY_RECEIVED) QTY_RECEIVED, SUM(X.QTY_ACCEPTED) QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AMT_RECEIVED
FROM ( 
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED
FROM PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE RECV.RECV_SHIP_STATUS <> 'X'
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD) X
WHERE X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD
ORDER BY 1,2,3;

--Version 4
--Union All, works with PO Details, Receipt and Invoice Information
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
            X.CURRENCY_CD, SUM(X.QTY_RECEIVED) QTY_RECEIVED, SUM(X.QTY_ACCEPTED) QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AMT_RECEIVED,
            SUM(X.QTY_INVOICED) AS QTY_INVOICED, SUM(X.AMT_INVOICED) AS AMT_INVOICED
FROM ( 
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, 0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED
FROM PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, 0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE RECV.RECV_SHIP_STATUS <> 'X'
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, 
            NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED 
FROM PS_VCHR_LN_PO_VW VCHR, PS_PO_LN_ORDER_VW PO
WHERE VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND VCHR.PO_ID = PO.PO_ID 
    AND VCHR.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
) X
WHERE X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD
ORDER BY 1,2,3;

--Version 5
--Union All, works with PO Details, Receipt,Invoice and Voucher Information
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
            X.CURRENCY_CD, SUM(X.QTY_RECEIVED) QTY_RECEIVED, SUM(X.QTY_ACCEPTED) QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AMT_RECEIVED,
            SUM(X.QTY_INVOICED) AS QTY_INVOICED, SUM(X.AMT_INVOICED) AS AMT_INVOICED, SUM(X.QTY_MATCHED) AS QTY_MATCHED, SUM(X.AMT_MATCHED) AMT_MATCHED
FROM ( --PO Details Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, 0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED
FROM PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL --Receipt Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, 
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, 0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE RECV.RECV_SHIP_STATUS <> 'X'
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL --Invoice/Voucher Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, 
            NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED, 0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED
FROM PS_VCHR_LN_PO_VW VCHR, PS_PO_LN_ORDER_VW PO
WHERE VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND VCHR.PO_ID = PO.PO_ID 
    AND VCHR.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL --Matching Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, 0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED,
            NVL(ROUND(SUM(MTCH.QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MTCH.MERCH_AMT_CNVT), 3), 0) AMT_MATCHED
FROM PS_PO_LINE_MATCHED MTCH, PS_PO_LN_ORDER_VW PO
WHERE MTCH.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND MTCH.PO_ID = PO.PO_ID 
    AND MTCH.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD 
) X
WHERE X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD
ORDER BY 1,2,3;

--Version 6
--Union All, Does not work with PO Details, Receipt,Invoice, Voucher Information and their currency code(s)
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, X.CURRENCY_CD, 
            SUM(X.QTY_RECEIVED) AS QTY_RECEIVED, SUM(X.QTY_ACCEPTED) AS QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AS AMT_RECEIVED, X.RCPT_CURR_CD,
            SUM(X.QTY_INVOICED) AS QTY_INVOICED, SUM(X.AMT_INVOICED) AS AMT_INVOICED, X.INV_CURR_CD,
            SUM(X.QTY_MATCHED) AS QTY_MATCHED, SUM(X.AMT_MATCHED) AS AMT_MATCHED, X.MATCH_CURR_CD
FROM ( --PO Details Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD, 
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL --Receipt Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, RECV.CURRENCY_CD AS RCPT_CURR_CD,
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE RECV.RECV_SHIP_STATUS <> 'X'
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, RECV.CURRENCY_CD
UNION ALL --Invoice/Voucher Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED, VCHR.CURRENCY_CD AS INV_CURR_CD, 
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_VCHR_LN_PO_VW VCHR, PS_PO_LN_ORDER_VW PO
WHERE VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND VCHR.PO_ID = PO.PO_ID 
    AND VCHR.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, VCHR.CURRENCY_CD
UNION ALL --Matching Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            NVL(ROUND(SUM(MTCH.QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MTCH.MERCH_AMT_CNVT), 3), 0) AMT_MATCHED, MTCH.CURRENCY_CD AS MATCH_CURR_CD
FROM PS_PO_LINE_MATCHED MTCH, PS_PO_LN_ORDER_VW PO
WHERE MTCH.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND MTCH.PO_ID = PO.PO_ID 
    AND MTCH.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, MTCH.CURRENCY_CD
) X
WHERE X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '    
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD, X.RCPT_CURR_CD, X.INV_CURR_CD, X.MATCH_CURR_CD
ORDER BY 1,2,3;

--Version with Currencies for all stages, returns more than one row if different currencies are involved in the life cycle of the PO
--Testing this version, seems to return accurate results
SELECT T.BUSINESS_UNIT, T.PO_ID, T.LINE_NBR, T.INV_ITEM_ID, T.DESCR254_MIXED, T.UNIT_OF_MEASURE, T.AMT_ONLY_FLG, T.QTY_ORDERED, T.AMT_ORDERED, T.CURRENCY_CD, 
            SUM(T.QTY_RECEIVED) AS QTY_RECEIVED, SUM(T.QTY_ACCEPTED) AS QTY_ACCEPTED, SUM(T.AMT_RECEIVED) AS AMT_RECEIVED, T.RCPT_CURR_CD,
            SUM(T.QTY_INVOICED) AS QTY_INVOICED, SUM(T.AMT_INVOICED) AS AMT_INVOICED, T.INV_CURR_CD,
            SUM(T.QTY_MATCHED) AS QTY_MATCHED, SUM(T.AMT_MATCHED) AS AMT_MATCHED, T.MATCH_CURR_CD
FROM (
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, X.CURRENCY_CD, 
            SUM(X.QTY_RECEIVED) AS QTY_RECEIVED, SUM(X.QTY_ACCEPTED) AS QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AS AMT_RECEIVED, 
            DECODE(X.RCPT_CURR_CD, ' ', X.CURRENCY_CD, X.RCPT_CURR_CD) AS RCPT_CURR_CD,
            SUM(X.QTY_INVOICED) AS QTY_INVOICED, SUM(X.AMT_INVOICED) AS AMT_INVOICED, 
            DECODE(X.INV_CURR_CD, ' ', DECODE(SUM(X.QTY_INVOICED), 0, X.CURRENCY_CD, X.INV_CURR_CD), X.INV_CURR_CD) AS INV_CURR_CD,
            SUM(X.QTY_MATCHED) AS QTY_MATCHED, SUM(X.AMT_MATCHED) AS AMT_MATCHED, 
            DECODE(X.MATCH_CURR_CD, ' ', DECODE(SUM(X.QTY_MATCHED), 0, X.CURRENCY_CD, X.MATCH_CURR_CD), X.MATCH_CURR_CD) MATCH_CURR_CD
FROM ( --PO Details Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT LIKE '6%'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833', '0000006971', '0000006976')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD
UNION ALL --Receipt Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, NVL(RECV.CURRENCY_CD, ' ') AS RCPT_CURR_CD, 
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE PO.BUSINESS_UNIT LIKE '6%'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833', '0000006971', '0000006976')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, RECV.CURRENCY_CD
UNION ALL --Invoice/Voucher Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED, NVL(VCHR.CURRENCY_CD, ' ') AS INV_CURR_CD, 
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_VCHR_LN_PO_VW VCHR, PS_PO_LN_ORDER_VW PO
WHERE VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND VCHR.PO_ID = PO.PO_ID 
    AND VCHR.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT LIKE '6%'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833', '0000006971', '0000006976')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, VCHR.CURRENCY_CD
UNION ALL --Matching Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            NVL(ROUND(SUM(MTCH.QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MTCH.MERCH_AMT_CNVT), 3), 0) AMT_MATCHED, 
            NVL(MTCH.CURRENCY_CD, ' ') AS MATCH_CURR_CD
FROM PS_PO_LINE_MATCHED MTCH, PS_PO_LN_ORDER_VW PO
WHERE MTCH.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND MTCH.PO_ID = PO.PO_ID 
    AND MTCH.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT LIKE '6%'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833', '0000006971', '0000006976')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, MTCH.CURRENCY_CD
) X, PS_PO_HDR HDR, PS_PO_LINE_DISTRIB DIST
WHERE X.BUSINESS_UNIT = HDR.BUSINESS_UNIT
    AND X.PO_ID = HDR.PO_ID 
    AND X.BUSINESS_UNIT = DIST.BUSINESS_UNIT
    AND X.PO_ID = DIST.PO_ID
    AND X.LINE_NBR = DIST.LINE_NBR
    AND X.BUSINESS_UNIT LIKE '6%'
    AND X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '
    AND PO_STATUS NOT IN ('C', 'X', 'PX')
    --AND DIST.OPERATING_UNIT IN ('618', '611')
    AND DIST.BUDGET_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD, X.RCPT_CURR_CD, X.INV_CURR_CD, X.MATCH_CURR_CD) T
GROUP BY T.BUSINESS_UNIT, T.PO_ID, T.LINE_NBR, T.INV_ITEM_ID, T.DESCR254_MIXED, T.UNIT_OF_MEASURE, T.AMT_ONLY_FLG, T.QTY_ORDERED, T.AMT_ORDERED, 
               T.CURRENCY_CD, T.RCPT_CURR_CD, T.INV_CURR_CD, T.MATCH_CURR_CD
ORDER BY 1,2,3;



--Version with No PO Details UNION Clause - does not work correctly 
SELECT T.BUSINESS_UNIT, T.PO_ID, T.LINE_NBR, T.INV_ITEM_ID, T.DESCR254_MIXED, T.UNIT_OF_MEASURE, T.AMT_ONLY_FLG, T.QTY_ORDERED, T.AMT_ORDERED, T.CURRENCY_CD, 
            SUM(T.QTY_RECEIVED) AS QTY_RECEIVED, SUM(T.QTY_ACCEPTED) AS QTY_ACCEPTED, SUM(T.AMT_RECEIVED) AS AMT_RECEIVED, T.RCPT_CURR_CD,
            SUM(T.QTY_INVOICED) AS QTY_INVOICED, SUM(T.AMT_INVOICED) AS AMT_INVOICED, T.INV_CURR_CD,
            SUM(T.QTY_MATCHED) AS QTY_MATCHED, SUM(T.AMT_MATCHED) AS AMT_MATCHED, T.MATCH_CURR_CD
FROM (
SELECT X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, X.CURRENCY_CD, 
            SUM(X.QTY_RECEIVED) AS QTY_RECEIVED, SUM(X.QTY_ACCEPTED) AS QTY_ACCEPTED, SUM(X.AMT_RECEIVED) AS AMT_RECEIVED, 
            DECODE(X.RCPT_CURR_CD, ' ', X.CURRENCY_CD, X.RCPT_CURR_CD) AS RCPT_CURR_CD,
            SUM(X.QTY_INVOICED) AS QTY_INVOICED, SUM(X.AMT_INVOICED) AS AMT_INVOICED, 
            DECODE(X.INV_CURR_CD, ' ', DECODE(SUM(X.QTY_INVOICED), 0, X.CURRENCY_CD, X.INV_CURR_CD), X.INV_CURR_CD) AS INV_CURR_CD,
            SUM(X.QTY_MATCHED) AS QTY_MATCHED, SUM(X.AMT_MATCHED) AS AMT_MATCHED, 
            DECODE(X.MATCH_CURR_CD, ' ', DECODE(SUM(X.QTY_MATCHED), 0, X.CURRENCY_CD, X.MATCH_CURR_CD), X.MATCH_CURR_CD) MATCH_CURR_CD
FROM ( 
--Receipt Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            NVL(ROUND(SUM(QTY_SH_RECVD_VUOM), 3), 0) QTY_RECEIVED, NVL(ROUND(SUM(QTY_SH_NETRCV_VUOM), 3), 0) QTY_ACCEPTED, 
            NVL(ROUND(SUM(MERCHANDISE_AMT), 3), 0) AMT_RECEIVED, NVL(RECV.CURRENCY_CD, ' ') AS RCPT_CURR_CD, 
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_RECV_LN_SHIP RECV, PS_PO_LN_ORDER_VW PO
WHERE RECV.RECV_SHIP_STATUS <> 'X'
    AND PO.BUSINESS_UNIT = '600UU'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
    AND RECV.BUSINESS_UNIT_PO = PO.BUSINESS_UNIT 
    AND RECV.PO_ID = PO.PO_ID 
    AND RECV.LINE_NBR = PO.LINE_NBR 
    AND RECV.RECV_SHIP_STATUS <> 'X'
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, RECV.CURRENCY_CD
UNION ALL --Invoice/Voucher Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            NVL(ROUND(SUM(VCHR.QTY_INVOICED), 3), 0) QTY_INVOICED, NVL(ROUND(SUM(VCHR.AMT_INVOICED), 3), 0) AMT_INVOICED, NVL(VCHR.CURRENCY_CD, ' ') AS INV_CURR_CD, 
            0.0 AS QTY_MATCHED, 0.0 AS AMT_MATCHED, ' ' AS MATCH_CURR_CD
FROM PS_VCHR_LN_PO_VW VCHR, PS_PO_LN_ORDER_VW PO
WHERE VCHR.BUSINESS_UNIT = PO.BUSINESS_UNIT 
    AND VCHR.PO_ID = PO.PO_ID 
    AND VCHR.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, VCHR.CURRENCY_CD
UNION ALL --Matching Clause
SELECT PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, 
            PO.AMT_ORDERED, PO.CURRENCY_CD, 
            0.0 AS QTY_RECEIVED, 0.0 AS QTY_ACCEPTED, 0.0 AS AMT_RECEIVED, ' ' AS RCPT_CURR_CD,
            0.0 AS QTY_INVOICED, 0.0 AS AMT_INVOICED, ' ' AS INV_CURR_CD,
            NVL(ROUND(SUM(MTCH.QTY_VCHR_CNVT), 3), 0) QTY_MATCHED, NVL(ROUND(SUM(MTCH.MERCH_AMT_CNVT), 3), 0) AMT_MATCHED, NVL(MTCH.CURRENCY_CD, ' ') AS MATCH_CURR_CD
FROM PS_PO_LINE_MATCHED MTCH, PS_PO_LN_ORDER_VW PO
WHERE MTCH.BUSINESS_UNIT = PO.BUSINESS_UNIT
    AND MTCH.PO_ID = PO.PO_ID
    AND MTCH.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
GROUP BY PO.BUSINESS_UNIT, PO.PO_ID, PO.LINE_NBR, PO.INV_ITEM_ID, PO.DESCR254_MIXED, PO.UNIT_OF_MEASURE, PO.AMT_ONLY_FLG, PO.QTY_ORDERED, PO.AMT_ORDERED, 
               PO.CURRENCY_CD, MTCH.CURRENCY_CD
) X, PS_PO_LN_ORDER_VW PO
WHERE X.BUSINESS_UNIT = PO.BUSINESS_UNIT
    AND X.PO_ID = PO.PO_ID
    AND X.LINE_NBR = PO.LINE_NBR
    AND PO.BUSINESS_UNIT = '600UU'
    --AND PO.PO_ID IN ('0000005764', '0000005677', '0000006833')
    AND X.BUSINESS_UNIT <> ' '
    AND X.PO_ID <> ' '
GROUP BY X.BUSINESS_UNIT, X.PO_ID, X.LINE_NBR, X.INV_ITEM_ID, X.DESCR254_MIXED, X.UNIT_OF_MEASURE, X.AMT_ONLY_FLG, X.QTY_ORDERED, X.AMT_ORDERED, 
               X.CURRENCY_CD, X.RCPT_CURR_CD, X.INV_CURR_CD, X.MATCH_CURR_CD) T
GROUP BY T.BUSINESS_UNIT, T.PO_ID, T.LINE_NBR, T.INV_ITEM_ID, T.DESCR254_MIXED, T.UNIT_OF_MEASURE, T.AMT_ONLY_FLG, T.QTY_ORDERED, T.AMT_ORDERED, 
               T.CURRENCY_CD, T.RCPT_CURR_CD, T.INV_CURR_CD, T.MATCH_CURR_CD
ORDER BY 1,2,3;

--Monitor PO Closing process
--Get the min and max process instance for today's run (aka every friday)
SELECT MIN(PRCSINSTANCE), MAX(PRCSINSTANCE) 
FROM PSPRCSRQST 
WHERE OPRID = 'prakash.prashant' 
    AND MAINJOBNAME = 'UNUPOCLS' 
    AND TO_CHAR(RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1,2;
--Retrieve CDM information
SELECT * FROM PS_CDM_LIST WHERE PRCSINSTANCE BETWEEN 36878087 AND 36878130;
--Make it dynamic
SELECT CDM.* FROM PS_CDM_LIST CDM INNER JOIN PSPRCSRQST PRCS ON PRCS.PRCSINSTANCE = CDM.PRCSINSTANCE
WHERE PRCS.OPRID = 'prakash.prashant' 
    AND PRCS.MAINJOBNAME = 'UNUPOCLS' 
    AND TO_CHAR(PRCS.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1,2;

--For DISTNODENAME in PS_CDM_LIST, run the below query
SELECT * FROM PS_CDM_DIST_NODE WHERE DISTNODENAME = 'HTTP4';

--Get PDF file information
SELECT * FROM PS_CDM_FILE_LIST WHERE PRCSINSTANCE BETWEEN 36782712 AND 36782754;
--Make it dynamic
SELECT CDML.* FROM PS_CDM_FILE_LIST CDML INNER JOIN PSPRCSRQST PRCS ON PRCS.PRCSINSTANCE = CDML.PRCSINSTANCE
WHERE PRCS.OPRID = 'prakash.prashant' 
    AND PRCS.MAINJOBNAME = 'UNUPOCLS' 
    AND TO_CHAR(PRCS.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1,2;

--Retrieve a direct browser link for PDF outputs of this run
SELECT 'https://finance.partneragencies.org/psreports/UNDPP1FS/' || CONTENTID || '/' || FILENAME AS REPORT_FILENAME
FROM PS_CDM_FILE_LIST A 
WHERE PRCSINSTANCE BETWEEN 36782712 AND 36782754 
    AND CDM_FILE_TYPE = 'PDF'
ORDER BY 1;
--Make it dynamic
SELECT 'https://finance.partneragencies.org/psreports/UNDPP1FS/' || A.CONTENTID || '/' || A.FILENAME AS REPORT_FILENAME
FROM PS_CDM_FILE_LIST A INNER JOIN PSPRCSRQST PRCS ON PRCS.PRCSINSTANCE = A.PRCSINSTANCE
WHERE PRCS.OPRID = 'prakash.prashant' 
    AND PRCS.MAINJOBNAME = 'UNUPOCLS' 
    AND TO_CHAR(PRCS.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
    AND A.CDM_FILE_TYPE = 'PDF'
ORDER BY 1;

--PO_POREP
--Tested this query for 1st run of 31st Dec 2013 using Run Control ID - UNU_PO_CLOSE_31DEC
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    AND PR.PRCSJOBNAME = 'PO_POREP'
    AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR = 10225
    AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    --AND PR.PRCSINSTANCE >= 35894080
    AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_NBR, CAT.MESSAGE_TEXT;
--Make it dynamic
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    AND PR.PRCSJOBNAME = 'PO_POREP'
    AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR = 10225
    AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.MAINJOBNAME = 'UNUPOCLS' 
                                                                                                                                                 AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;

--POPO008 Query
--Experimental Version 1
SELECT A.BUSINESS_UNIT, A.PO_ID, B.PO_DT, B.PO_STATUS, B.BUDGET_HDR_STATUS, C.LINE_NBR, C.CANCEL_STATUS AS LINE_SHIP_CANCEL, D.SCHED_NBR, D.CANCEL_STATUS AS LINE_DST_CANCEL, 
            E.DISTRIB_LINE_NUM, E.DISTRIB_LN_STATUS, E.BUDGET_LINE_STATUS, A.LAST_DTTM_UPDATE
FROM PS_PO_RC_HDR A, PS_PO_HDR B, PS_PO_LINE C, PS_PO_LINE_SHIP D, PS_PO_LINE_DISTRIB E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
    AND D.PO_ID = E.PO_ID
    AND D.LINE_NBR = E.LINE_NBR
    AND D.SCHED_NBR = E.SCHED_NBR
    AND A.LAST_DTTM_UPDATE = (SELECT MAX(A_ED.LAST_DTTM_UPDATE) FROM PS_PO_RC_HDR A_ED WHERE A.BUSINESS_UNIT = A_ED.BUSINESS_UNIT AND A.PO_ID = A_ED.PO_ID
                                                   AND TO_CHAR(A_ED.LAST_DTTM_UPDATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')) 
    AND (B.PO_STATUS = 'C' OR C.CANCEL_STATUS = 'C' OR D.CANCEL_STATUS = 'C' OR E.DISTRIB_LN_STATUS = 'C')
    AND A.BUSINESS_UNIT LIKE '6%'
ORDER BY A.LAST_DTTM_UPDATE DESC, A.BUSINESS_UNIT, A.PO_ID, C.LINE_NBR, D.SCHED_NBR, E.DISTRIB_LINE_NUM;

--Transfer Revenue Budgets across Depts and Fund Code
--Apparently it is done using a GLJE and then posted to Adjusting Period 998 for that fiscal year
SELECT DESCR, A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND ADJUSTING_ENTRY = 'Y' AND OPRID = 'david.white' ORDER BY 3;
SELECT * FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND FISCAL_YEAR = 2010 AND ACCOUNTING_PERIOD = 0;
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = 'YEC3518870' AND CHARTFIELD2 = '10335';
SELECT * FROM PS_KK_BUDGET_HDR WHERE BUSINESS_UNIT = 'UNUNI' AND OPRID = 'david.white';
SELECT DESCR, A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND KK_TRAN_BYPAS_FLAG = 'Y' AND OPRID = 'sharon.koh' AND SOURCE = 'ONL';

--UNU Categories which are active
SELECT A.* FROM PS_ITM_CAT_TBL A 
WHERE A.SETID = 'UNUNI'
    AND A.EFF_STATUS = 'A'
    AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_ITM_CAT_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.CATEGORY_TYPE = A_ED.CATEGORY_TYPE 
                                                                                                                      AND A.CATEGORY_CD = A_ED.CATEGORY_CD AND A.CATEGORY_ID = A_ED.CATEGORY_ID
                                                                                                                      AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Find out the Reqs which are still referencing an inactive category and have not been closed and fully sourced
SELECT * FROM PS_REQ_LN_DISTRIB D
WHERE BUSINESS_UNIT LIKE '6%' 
    AND TO_CHAR(BUDGET_DT, 'YYYY') > '2012'
    AND EXISTS (SELECT 'X' FROM PS_REQ_LINE L WHERE L.BUSINESS_UNIT = D.BUSINESS_UNIT AND L.REQ_ID = D.REQ_ID AND L.LINE_NBR = D.LINE_NBR 
    AND CATEGORY_ID NOT IN (SELECT CATEGORY_ID FROM PS_ITM_CAT_TBL A WHERE A.SETID = 'UNUNI' AND A.EFF_STATUS = 'A'
                                              AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_ITM_CAT_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.CATEGORY_TYPE = A_ED.CATEGORY_TYPE 
                                                                                                                      AND A.CATEGORY_CD = A_ED.CATEGORY_CD AND A.CATEGORY_ID = A_ED.CATEGORY_ID
                                                                                                                      AND A_ED.EFFDT <= SYSDATE)))
   AND EXISTS (SELECT 'X' FROM PS_REQ_HDR H WHERE H.BUSINESS_UNIT = D.BUSINESS_UNIT AND H.REQ_ID = D.REQ_ID AND REQ_STATUS NOT IN ('C', 'X'))
ORDER BY 1,2;

--Vouchers entered under 600UU
SELECT V.OPRID, VL.DESCR, V.ACCOUNTING_DT--, COUNT(1) AS "Count of Vouchers Raised" 
FROM PS_VOUCHER V, PS_VOUCHER_LINE VL 
WHERE V.BUSINESS_UNIT = VL.BUSINESS_UNIT
    AND V.VOUCHER_ID = VL.VOUCHER_ID 
    AND V.BUSINESS_UNIt = '600UU'
    AND V.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    AND ENTRY_STATUS NOT IN ('X', 'T')
--GROUP BY V.OPRID, VL.DESCR, V.ACCOUNTING_DT
ORDER BY 1,3;

--Version 2 using LISTAGG to club Voucher ID, Voucher Line Number and Descr
SELECT  V.ACCOUNTING_DT, V.OPRID, LISTAGG(V.VOUCHER_ID || '-' || VL.VOUCHER_LINE_NUM || '-' || VL.DESCR, '|') WITHIN GROUP (ORDER BY VOUCHER_LINE_NUM) LINE_DESCR 
FROM PS_VOUCHER V, PS_VOUCHER_LINE VL 
WHERE V.BUSINESS_UNIT = VL.BUSINESS_UNIT
    AND V.VOUCHER_ID = VL.VOUCHER_ID 
    AND V.BUSINESS_UNIt = '600UU'
    AND V.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
    AND ENTRY_STATUS NOT IN ('X', 'T')
GROUP BY V.OPRID, V.ACCOUNTING_DT
ORDER BY 1,2;

--Temp Table locking
SELECT * FROM PS_AETEMPTBLMGR;
--Manage Abends
--Load Abends
SELECT DISTINCT PROCESS_INSTANCE, OPRID, RUN_CNTL_ID, AE_APPLID, RUN_DTTM 
FROM PS_AETEMPTBLMGR 
WHERE PROCESS_INSTANCE NOT IN (SELECT PRCSINSTANCE FROM PSPRCSRQST) 
    AND PROCESS_INSTANCE NOT IN (SELECT PROCESS_INSTANCE FROM PS_AERUNCONTROL)
UNION 
SELECT DISTINCT PROCESS_INSTANCE, OPRID, RUN_CNTL_ID, AE_APPLID, RUN_DTTM 
FROM PS_AERUNCONTROL 
WHERE PROCESS_INSTANCE NOT IN (SELECT PRCSINSTANCE FROM PSPRCSRQST) 
ORDER BY PROCESS_INSTANCE;

--UNU KK Account Rollup
--This query uses the KK Account Tree - UNUNI_CC_ACCT (Level 2)
--Version 1
SELECT X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, X.CHARTFIELD2,
            X.TREE_NODE, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
            SUM(X.EXP_AMT) AS EXP_AMT_KK, 
            SUM(X.JAN) JAN_KK, SUM(X.FEB) FEB_KK, SUM(X.MAR) MAR_KK, SUM(X.APR) APR_KK, SUM(X.MAY) MAY_KK, SUM(X.JUN) JUN_KK, 
            SUM(X.JUL) JUL_KK, SUM(X.AUG) AUG_KK, SUM(X.SEP) SEP_KK, SUM(X.OCT) OCT_KK, SUM(X.NOV) NOV_KK, SUM(X.DEC) DEC_KK
FROM
(SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2,
             DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) AS EXP_AMT,
            CASE A.ACCOUNTING_PERIOD WHEN 1 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JAN
          , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS FEB 
          , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAR 
          , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS APR 
          , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAY 
          , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUN 
          , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUL 
          , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS AUG 
          , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS SEP 
          , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS OCT 
          , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS NOV 
          , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS DEC            
FROM PS_LEDGER_KK A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, PSTREENODE E, PSTREELEAF C
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND E.SETID = 'SHARE'
     AND D.SETID = 'SHARE'  
     AND E.TREE_NAME = 'UNUNI_CC_ACCT'
     AND E.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND C.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND C.SETID = E.SETID
     AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
     AND C.TREE_NAME = E.TREE_NAME
     AND C.TREE_BRANCH = E.TREE_BRANCH
     AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
     AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO       
     AND A.BUDGET_PERIOD IN ('2014', '2015')
     AND A.LEDGER LIKE 'DET_UU%'
     AND D.ACCOUNT_TYPE IN ('E')
     --AND A.PROJECT_ID = '00064159'
     AND E.TREE_NODE <> 'ALL_ACCTS'
     --AND A.DEPTID = '11901'
     --AND A.POSTED_BASE_AMT <> 0     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, 
               A.ACCOUNTING_PERIOD, LEDGER) X, PS_PROJECT B, PS_DEPTID_BUGL_VW C
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
     AND X.PROJECT_ID = B.PROJECT_ID (+)
     AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL')
     AND X.DEPTID = C.DEPTID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE)    
GROUP BY X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, X.TREE_NODE, X.ACCOUNT, X.DESCR
ORDER BY X.BUDGET_PERIOD, X.TREE_NODE, X.ACCOUNT;

--Version 2
--Included CoA descriptions
SELECT X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR AS OP_UNIT_DESCR, X.FUND_CODE, FD.DESCR AS FUND_DESCR, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, 
       X.CHARTFIELD2, CF2.DESCR AS DONOR_DESCR, X.ACCOUNT_TYPE, X.TREE_NODE, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
            SUM(X.EXP_AMT) AS EXP_AMT_KK, 
            SUM(X.JAN) JAN_KK, SUM(X.FEB) FEB_KK, SUM(X.MAR) MAR_KK, SUM(X.APR) APR_KK, SUM(X.MAY) MAY_KK, SUM(X.JUN) JUN_KK, 
            SUM(X.JUL) JUL_KK, SUM(X.AUG) AUG_KK, SUM(X.SEP) SEP_KK, SUM(X.OCT) OCT_KK, SUM(X.NOV) NOV_KK, SUM(X.DEC) DEC_KK
FROM
(SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, D.ACCOUNT_TYPE,
        DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) AS EXP_AMT,
        CASE A.ACCOUNTING_PERIOD WHEN 1 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JAN
      , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS FEB 
      , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAR 
      , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS APR 
      , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAY 
      , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUN 
      , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUL 
      , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS AUG 
      , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS SEP 
      , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS OCT 
      , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS NOV 
      , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS DEC            
FROM PS_LEDGER_KK A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, PSTREENODE E, PSTREELEAF C
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND E.SETID = 'SHARE'
     AND D.SETID = 'SHARE'  
     AND E.TREE_NAME = 'UNUNI_CC_ACCT'
     AND E.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND C.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND C.SETID = E.SETID
     AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
     AND C.TREE_NAME = E.TREE_NAME
     AND C.TREE_BRANCH = E.TREE_BRANCH
     AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
     AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO       
     AND A.BUDGET_PERIOD IN ('2014', '2015')
     AND A.LEDGER LIKE 'DET_UU%'
     AND D.ACCOUNT_TYPE IN ('E')
     --AND A.PROJECT_ID = '00064158'
     AND E.TREE_NODE <> 'ALL_ACCTS'
     --AND A.DEPTID = '11901'
     --AND A.POSTED_BASE_AMT <> 0     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, D.ACCOUNT_TYPE, A.ACCOUNTING_PERIOD, LEDGER) X, 
         PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND X.PROJECT_ID = B.PROJECT_ID (+)
    AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
    AND X.DEPTID = C.DEPTID (+)
    AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
    AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
    AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
    AND (CF2.EFFDT IS NULL OR 
           (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 
                                                                                                                                        AND CF2_ED.EFFDT <= SYSDATE)))
    AND X.FUND_CODE = FD.FUND_CODE (+)
    AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
    AND (FD.EFFDT IS NULL OR 
           (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
    AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
    AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
    AND (OP.EFFDT IS NULL OR 
           (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT 
                                                                                                                                AND OP_ED.EFFDT <= SYSDATE)))    
GROUP BY X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, X.ACCOUNT_TYPE, X.TREE_NODE, X.ACCOUNT, X.DESCR
ORDER BY X.BUDGET_PERIOD, X.TREE_NODE, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

--Version 3
--Included Tree Node Description
--Under Testing
SELECT X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR AS OP_UNIT_DESCR, X.FUND_CODE, FD.DESCR AS FUND_DESCR, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, 
       X.CHARTFIELD2, CF2.DESCR AS DONOR_DESCR, X.ACCOUNT_TYPE, X.TREE_NODE, GLA.DESCR AS TREE_NODE_DESCR, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
       SUM(X.EXP_AMT) AS EXP_AMT_KK, 
       SUM(X.JAN) JAN_KK, SUM(X.FEB) FEB_KK, SUM(X.MAR) MAR_KK, SUM(X.APR) APR_KK, SUM(X.MAY) MAY_KK, SUM(X.JUN) JUN_KK, 
       SUM(X.JUL) JUL_KK, SUM(X.AUG) AUG_KK, SUM(X.SEP) SEP_KK, SUM(X.OCT) OCT_KK, SUM(X.NOV) NOV_KK, SUM(X.DEC) DEC_KK
FROM
(SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, D.ACCOUNT_TYPE,
        DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) AS EXP_AMT,
        CASE A.ACCOUNTING_PERIOD WHEN 1 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JAN
      , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS FEB 
      , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAR 
      , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS APR 
      , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAY 
      , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUN 
      , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUL 
      , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS AUG 
      , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS SEP 
      , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS OCT 
      , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS NOV 
      , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS DEC            
FROM PS_LEDGER_KK A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, PSTREENODE E, PSTREELEAF C
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND E.SETID = 'SHARE'
     AND D.SETID = 'SHARE'  
     AND E.TREE_NAME = 'UNUNI_CC_ACCT'
     AND E.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
     AND C.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
     AND C.SETID = E.SETID
     AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
     AND C.TREE_NAME = E.TREE_NAME
     AND C.TREE_BRANCH = E.TREE_BRANCH
     AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
     AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO       
     AND A.BUDGET_PERIOD IN ('2016', '2017')
     AND A.LEDGER LIKE 'DET_UU%'
     AND D.ACCOUNT_TYPE IN ('E')
     --AND A.PROJECT_ID = '00064158'
     AND E.TREE_NODE <> 'ALL_ACCTS'
     --AND A.DEPTID = '11901'
     --AND A.POSTED_BASE_AMT <> 0     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, D.ACCOUNT_TYPE, A.ACCOUNTING_PERIOD, LEDGER) X, 
         PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP, PS_GL_ACCOUNT_TBL GLA
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
  AND X.PROJECT_ID = B.PROJECT_ID (+)
  AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
  AND X.DEPTID = C.DEPTID (+)
  AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
  AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
  AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
  AND (CF2.EFFDT IS NULL OR 
      (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 
                                                                                                                                        AND CF2_ED.EFFDT <= SYSDATE)))
  AND X.FUND_CODE = FD.FUND_CODE (+)
  AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
  AND (FD.EFFDT IS NULL OR 
      (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
  AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
  AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
  AND (OP.EFFDT IS NULL OR 
      (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT 
                                                                                                                                AND OP_ED.EFFDT <= SYSDATE)))
  AND GLA.SETID = 'SHARE'
  AND GLA.ACCOUNT = X.TREE_NODE
  AND GLA.EFFDT = (SELECT MAX(GLA_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL GLA_ED WHERE GLA_ED.SETID = GLA.SETID AND GLA_ED.ACCOUNT = GLA.ACCOUNT AND GLA_ED.EFFDT <= SYSDATE)
GROUP BY X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, X.ACCOUNT_TYPE, X.TREE_NODE, GLA.DESCR, X.ACCOUNT, X.DESCR
ORDER BY X.BUDGET_PERIOD, X.TREE_NODE, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

--Version 4
--based on PS_KK_ACTIVITY_LOG per frequest from Sharon
--Still under testing
SELECT X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR AS OP_UNIT_DESCR, X.FUND_CODE, FD.DESCR AS FUND_DESCR, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, 
       X.CHARTFIELD2, CF2.DESCR AS DONOR_DESCR, X.KK_TRAN_ID, X.KEYLIST, X.ACCOUNT_TYPE, X.TREE_NODE, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
       SUM(X.EXP_AMT) AS EXP_AMT_KK, 
       SUM(X.JAN) JAN_KK, SUM(X.FEB) FEB_KK, SUM(X.MAR) MAR_KK, SUM(X.APR) APR_KK, SUM(X.MAY) MAY_KK, SUM(X.JUN) JUN_KK, 
       SUM(X.JUL) JUL_KK, SUM(X.AUG) AUG_KK, SUM(X.SEP) SEP_KK, SUM(X.OCT) OCT_KK, SUM(X.NOV) NOV_KK, SUM(X.DEC) DEC_KK
FROM
(SELECT A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.KK_TRAN_ID, KKH.KEYLIST, D.ACCOUNT_TYPE,
        DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) AS EXP_AMT,
        CASE A.ACCOUNTING_PERIOD WHEN 1 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS JAN
      , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS FEB 
      , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS MAR 
      , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS APR 
      , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS MAY 
      , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS JUN 
      , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS JUL 
      , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS AUG 
      , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS SEP 
      , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS OCT 
      , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS NOV 
      , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(MONETARY_AMOUNT),0) ELSE 0 END AS DEC            
FROM (PS_KK_ACTIVITY_LOG A LEFT OUTER JOIN PS_KK_SOURCE_HDR KKH ON A.KK_TRAN_ID = KKH.KK_TRAN_ID AND A.KK_TRAN_DT = KKH.KK_TRAN_DT), PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, PSTREENODE E, PSTREELEAF C
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND B4.RECNAME = 'GL_ACCOUNT_TBL'
  AND B4.SETID = D.SETID
  AND A.ACCOUNT = D.ACCOUNT
  AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
  AND E.SETID = 'SHARE'
  AND D.SETID = 'SHARE'  
  AND E.TREE_NAME = 'UNUNI_CC_ACCT'
  AND E.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
  AND C.EFFDT = TO_DATE('2016-01-01','YYYY-MM-DD')
  AND C.SETID = E.SETID
  AND C.SETCNTRLVALUE = E.SETCNTRLVALUE
  AND C.TREE_NAME = E.TREE_NAME
  AND C.TREE_BRANCH = E.TREE_BRANCH
  AND C.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END
  AND D.ACCOUNT BETWEEN C.RANGE_FROM AND C.RANGE_TO       
  AND A.BUDGET_PERIOD IN ('2016', '2017')
  AND A.LEDGER LIKE 'DET_UU%'
  AND D.ACCOUNT_TYPE IN ('E')
  --AND A.PROJECT_ID = '00064158'
  AND E.TREE_NODE <> 'ALL_ACCTS'
  AND A.BALANCING_LINE = 'N'
  --AND A.REFERENCED_BUDGET = 'Y'
  --AND A.DEPTID = '11901'
  --AND A.MONETARY_AMOUNT <> 0     
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, E.TREE_NODE, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.KK_TRAN_ID, KKH.KEYLIST, D.ACCOUNT_TYPE, A.ACCOUNTING_PERIOD, LEDGER) X, 
         PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
  AND X.PROJECT_ID = B.PROJECT_ID (+)
  AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
  AND X.DEPTID = C.DEPTID (+)
  AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
  AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
  AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
  AND (CF2.EFFDT IS NULL OR 
      (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 AND CF2_ED.EFFDT <= SYSDATE)))
  AND X.FUND_CODE = FD.FUND_CODE (+)
  AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
  AND (FD.EFFDT IS NULL OR 
      (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
  AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
  AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
  AND (OP.EFFDT IS NULL OR 
      (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT AND OP_ED.EFFDT <= SYSDATE)))    
GROUP BY X.BUSINESS_UNIT, X.BUDGET_PERIOD, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, X.KK_TRAN_ID, X.KEYLIST, 
         X.ACCOUNT_TYPE, X.TREE_NODE, X.ACCOUNT, X.DESCR
ORDER BY X.BUDGET_PERIOD, X.TREE_NODE, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

--Find POs that have not been dispatched yet
SELECT * FROM PS_PO_HDR HDr WHERE BUSINESS_UNIT LIKE '6%' AND PO_STATUS = 'A'
AND NOT EXISTS (SELECT 'X' FROM PS_PO_DISPATCHED POD WHERE HDR.BUSINESS_UNIT = POD.BUSINESS_UNIT AND HDR.PO_ID = POD.PO_ID);

SELECT BUSINESS_UNIT, BUDGET_HDR_STATUS, COUNT(1) 
FROM PS_PO_HDR HDR 
WHERE HDR.BUSINESS_UNIT LIKE '6%' 
    AND HDR.PO_STATUS = 'A'
    AND NOT EXISTS (SELECT 'X' FROM PS_PO_DISPATCHED POD WHERE HDR.BUSINESS_UNIT = POD.BUSINESS_UNIT AND HDR.PO_ID = POD.PO_ID)
GROUP BY BUSINESS_UNIT, BUDGET_HDR_STATUS
ORDER BY 1,2;

--Requisitions with a blank account code
SELECT * FROM PS_REQ_LN_DISTRIB 
WHERE BUSINESS_UNIT LIKE '6%'
    AND DISTRIB_LN_STATUS NOT IN ('C', 'X') 
    AND ACCOUNT = ' ' 
    AND TO_CHAR(BUDGET_DT, 'YYYY') >= '2013'
ORDER BY 1,2,3,4;

--Find linkage between Award and Project
--Contract and Project Numbers
SELECT * FROM PS_GM_AWD_PROJT_VW WHERE BUSINESS_UNIT_PC = 'UNUNI' ORDER BY 1,3;

--UNU_PO_KK_STATUS_MISMATCH
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID
FROM PS_PO_LINE_SHIP A, PS_PO_LINE_DISTRIB B, PS_PO_HDR C
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.LINE_NBR = B.LINE_NBR
    AND A.SCHED_NBR = B.SCHED_NBR
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PO_ID = C.PO_ID
    AND A.CANCEL_STATUS = 'A'
    AND C.PO_DT > TO_DATE('2012-01-01','YYYY-MM-DD')
    AND B.DISTRIB_LN_STATUS = 'O'
    AND C.PO_STATUS = 'D'
    AND C.BUDGET_HDR_STATUS = 'V'
    AND B.BUDGET_LINE_STATUS = 'N'
ORDER BY 1, 2;

--UNU_PO_FINALIZED_LINES
SELECT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, B.DISTRIB_LINE_NUM, B.CURRENCY_CD, B.MERCHANDISE_AMT, B.MERCH_AMT_BSE, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.PROJECT_ID, B.ACTIVITY_ID, B.CHARTFIELD2, C.PO_DT, C.ACTIVITY_DATE, C.BUDGET_HDR_STATUS, B.BUDGET_LINE_STATUS
FROM PS_PO_LINE_SHIP A, PS_PO_LINE_DISTRIB B, PS_PO_HDR C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.LINE_NBR = B.LINE_NBR
     AND A.SCHED_NBR = B.SCHED_NBR
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND B.KK_CLOSE_FLAG = 'Y'
     AND A.CANCEL_STATUS = 'A'
     AND C.PO_DT > TO_DATE('2011-01-01','YYYY-MM-DD')
     AND B.DISTRIB_LN_STATUS = 'O'
     AND C.PO_STATUS = 'D'
     AND C.ACTIVITY_DATE < TO_DATE(SYSDATE,'YYYY-MM-DD')
     AND C.BUDGET_HDR_STATUS = 'V'
ORDER BY 1, 2, 3, 4;

--UNU_AM_NO_BASE_AMT
--Assets with zero base amount
SELECT A.BUSINESS_UNIT, A.ASSET_ID, B.PROFILE_ID
FROM PS_ASSET_ACQ_DET A, PS_ASSET B
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.TXN_AMOUNT <> 0
    AND A.AMOUNT = 0
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.ASSET_ID = B.ASSET_ID
    AND B.ASSET_STATUS = 'I'
    AND A.CAPITALIZATION_SW = '3'
ORDER BY 1, 2;

--UNU_AM_ASSETS_STUCK
--Assets pending processing
SELECT A.BUSINESS_UNIT, A.ASSET_ID, TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') TIMESTAMP, A.TRANS_DT, A.ACCOUNTING_DT, A.TRANS_TYPE, 
            A.MEM_IN_SERVICE_DT, A.CONVENTION, A.GROUP_ASSET_ID, A.EFFDT, A.TRANSFER_BU, A.TRANSFER_ASSET_ID, A.TRANSFER_BOOK, A.TRANS_IN_OUT, 
            A.CALC_DEPR_STATUS, A.CALC_DIST_STATUS, A.OPRID, A.OPEN_TRANS_ID, TO_CHAR(CAST((A.MIN_DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') MIN_DTTM_STAMP, 
            TO_CHAR(CAST((A.MAX_DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') MAX_DTTM_STAMP, A.PROCESS_INSTANCE, A.REQUEST_ID
FROM PS_OPEN_TRANS A
WHERE A.BUSINESS_UNIT = 'UNUNI'     
     AND (A.CALC_DEPR_STATUS <> 'C' OR A.CALC_DIST_STATUS = 'P')
     AND A.ACCOUNTING_DT > TO_DATE('1901-01-01','YYYY-MM-DD')
     AND A.CALC_DIST_STATUS <> ' '
ORDER BY 1, 2, 5;

--UNU_PO_OPEN_LINES_CLOSED
--Open POs all lines closed
SELECT A.BUSINESS_UNIT, A.PO_ID, A.BUDGET_HDR_STATUS
FROM PS_PO_HDR A
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.PO_STATUS = 'D'
     AND NOT EXISTS (SELECT B.PO_ID FROM PS_PO_LINE B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.PO_ID = B.PO_ID AND B.CANCEL_STATUS = 'A')
ORDER BY 1, 2;

--UNU_2013_YE_REC_ACC_CHECK
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, 
            C.ACCOUNT, C.DEPTID, C.FUND_CODE, C.OPERATING_UNIT, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2, C.MERCH_AMT_BSE, C.BUSINESS_UNIT_PO, C.PO_ID
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_RECV_LN_DISTRIB C
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.RECV_STATUS NOT IN ('X','C')
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.RECEIVER_ID = B.RECEIVER_ID
     AND B.RECV_LN_MATCH_OPT <> 'F'
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.RECEIVER_ID = C.RECEIVER_ID
     AND B.RECV_LN_NBR = C.RECV_LN_NBR
     AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
     AND A.RECEIPT_DT < TO_DATE('2014-01-01','YYYY-MM-DD')
     AND B.RECV_SHIP_STATUS = 'R'
     AND C.MERCH_AMT_BSE <> 0
     AND A.RECEIPT_DT > TO_DATE('2012-12-31','YYYY-MM-DD')
     AND NOT EXISTS (SELECT E.BUSINESS_UNIT FROM PS_RECV_LN_ACCTG E WHERE C.BUSINESS_UNIT = E.BUSINESS_UNIT AND C.RECEIVER_ID = E.RECEIVER_ID 
                                                                          AND C.RECV_LN_NBR = E.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = E.RECV_SHIP_SEQ_NBR 
                                                                          AND C.DISTRIB_LINE_NUM = E.DISTRIB_LINE_NUM 
                                                                          AND E.ACCOUNTING_DT = TO_DATE('2013-12-31','YYYY-MM-DD'))    
ORDER BY 1, 2, 3, 4, 5;

--UNU_CUST_DONOR_XREF
SELECT A.CUST_ID, A.NAME1, A.CUST_STATUS, A.NAMESHORT, B.CHARTFIELD2 AS DONOR, B.EFF_STATUS, B.DESCR, B.DESCRSHORT
FROM PS_CUSTOMER A, PS_CHARTFIELD2_TBL B
WHERE A.SETID = 'UNUNI'
     AND A.CUST_STATUS = 'A'
     AND A.SETID = B.SETID
     AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_CHARTFIELD2_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.CHARTFIELD2 = B_ED.CHARTFIELD2)
     AND A.CUST_ID = B.CHARTFIELD2
ORDER BY 1;

--Check latest queries
SELECT * FROM PSQRYSTATS WHERE OPRID = 'craig.booth'
ORDER BY EXECCOUNT DESC;

SELECT * FROM PSQRYSTATS WHERE OPRID = 'craig.booth'
ORDER BY LASTEXECDTTM DESC;

--8.52 onwards
--PeopleCode is available in plain text to export
SELECT * FROM PSPCMTXT WHERE OBJECTVALUE1 LIKE 'UN%';
SELECT * FROM PSPCMTXT WHERE UPPER(PCTEXT) LIKE '%UN_PO_CHNG_DST%';
SELECT * FROM PSPCMTXT WHERE UPPER(PCTEXT) LIKE '%HEXAWARE%';

--AM Book
SELECT * FROM PS_BU_BOOK_VW2 WHERE BUSINESS_UNIT = 'UNUNI';

--Find Assets with same Tag Number
SELECT A.ASSET_ID, A.DESCR, A.TAG_NUMBER, B.ASSET_ID, B.DESCR, B.TAG_NUMBER
FROM PS_ASSET A, PS_ASSET B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.ASSET_ID <> B.ASSET_ID
    AND A.TAG_NUMBER = B.TAG_NUMBER
    AND A.BUSINESS_UNIT = 'UNUNI'
ORDER BY A.ASSET_ID, A.TAG_NUMBER, B.ASSET_ID, B.TAG_NUMBER;

--Verification Queries
SELECT * FROM PS_ASSET WHERE BUSINESS_UNIT = 'UNUNI' AND TAG_NUMBER = '1339';


--UNU_UN_GM077A
--Still under works
SELECT A.BUSINESS_UNIT, A.CONTRACT_NUM, A.TITLE56, A.DEPTID, F.DESCR AS DEPT_DESCR_A, B.PROJECT_ID, C.DESCR AS PROJ_DESCR, D.ACTIVITY_ID, D.DESCR AS ACT_DESCR, 
            D.ACTUAL_START_DT, D.ACTUAL_FINISH_DT, E.BUSINESS_UNIT_GL, E.BUDGET_PERIOD, PD.BEGIN_DT, PD.END_DT,
            E.OPERATING_UNIT, I.DESCR AS OP_UNIT_DESCR, E.FUND_CODE, E.ACCOUNT, H.DESCR AS ACCT_DESCR, E.CHARTFIELD2, J.DESCRSHORT AS DONOR, 
            SUM(E.FOREIGN_AMOUNT) AS FOREIGN_AMT, SUBSTR(TO_CHAR(E.ACCOUNTING_DT,'YYYY-MM-DD'),1,4) AS EXP_YEAR, E.DEPTID, M.DESCR AS DEPT_DESCR_E
FROM PS_GM_AWARD A, PS_GM_AWD_PROJT_VW B, PS_PROJECT C, PS_PROJ_ACTIVITY D, PS_DEPT_TBL F, PS_GL_ACCOUNT_TBL H, 
         PS_OPER_UNIT_TBL I, PS_CHARTFIELD2_TBL J, PS_SET_CNTRL_REC K, PS_DEPT_TBL M, PS_PC_BUD_DETAIL E, PS_PC_BUD_PLAN L, PS_GM_AWD_FUND_PD PD
WHERE (D.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND D.PROJECT_ID = C.PROJECT_ID
    AND (A.BUSINESS_UNIT = 'UNUNI'
     --AND A.CONTRACT_NUM = '00051498'
     AND A.DEPTID = 'B0115'
     --AND SUBSTR(TO_CHAR(E.ACCOUNTING_DT,'YYYY-MM-DD'),1,4) > '2013'
     AND A.CONTRACT_NUM = B.CONTRACT_NUM
     AND A.CONTRACT_NUM = PD.CONTRACT_NUM
     AND C.PROJECT_ID = PD.PROJECT_ID
     AND E.BUDGET_PERIOD = PD.BUDGET_PERIOD_GM
     AND B.PROJECT_ID = C.PROJECT_ID
     AND C.EFF_STATUS = 'A'
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.PROJECT_ID = D.PROJECT_ID
     AND D.EFF_STATUS = 'A'
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.PROJECT_ID = E.PROJECT_ID
     AND D.ACTIVITY_ID = E.ACTIVITY_ID
     AND K.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND K.SETID = F.SETID
     AND K.RECNAME = 'DEPT_TBL'
     AND F.DEPTID = A.DEPTID
     AND F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_DEPT_TBL F_ED WHERE F.SETID = F_ED.SETID AND F.DEPTID = F_ED.DEPTID AND F_ED.EFFDT <= SYSDATE)
     AND H.ACCOUNT (+)  = E.ACCOUNT
     AND ((H.SETID = 'SHARE'
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.ACCOUNT = H_ED.ACCOUNT AND H_ED.EFFDT <= SYSDATE))
       OR H.SETID IS NULL)
     AND I.OPERATING_UNIT (+) = E.OPERATING_UNIT
     AND ((I.EFFDT = (SELECT MAX(I_ED.EFFDT) FROM PS_OPER_UNIT_TBL I_ED WHERE I.SETID = I_ED.SETID AND I.OPERATING_UNIT = I_ED.OPERATING_UNIT AND I_ED.EFFDT <= SYSDATE)
     AND I.SETID = 'SHARE') 
       OR I.SETID IS NULL)
     AND J.CHARTFIELD2 (+) = E.CHARTFIELD2
     AND ((J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_CHARTFIELD2_TBL J_ED WHERE J.SETID = J_ED.SETID AND J.CHARTFIELD2 = J_ED.CHARTFIELD2 AND J_ED.EFFDT <= SYSDATE)
     AND J.SETID = 'UNUNI')
       OR J.SETID IS NULL)     
     AND E.BUSINESS_UNIT = L.BUSINESS_UNIT
     AND E.PROJECT_ID = L.PROJECT_ID
     AND E.PC_BUDGET_ID = L.PC_BUDGET_ID
     AND L.PC_BUDGET_STATUS = '1'
     AND M.DEPTID = E.DEPTID
     AND M.SETID = F.SETID
     AND M.EFFDT = (SELECT MAX(M_ED.EFFDT) FROM PS_DEPT_TBL M_ED WHERE M.SETID = M_ED.SETID AND M.DEPTID = M_ED.DEPTID AND M_ED.EFFDT <= SYSDATE)))
GROUP BY A.BUSINESS_UNIT, A.CONTRACT_NUM, A.TITLE56, A.DEPTID, F.DESCR, B.PROJECT_ID, C.DESCR, D.ACTIVITY_ID, D.DESCR, D.ACTUAL_START_DT, D.ACTUAL_FINISH_DT, 
               E.BUSINESS_UNIT_GL, E.BUDGET_PERIOD, PD.BEGIN_DT, PD.END_DT,
               E.OPERATING_UNIT, I.DESCR, E.FUND_CODE, E.ACCOUNT, H.DESCR, E.CHARTFIELD2, J.DESCRSHORT, 
               SUBSTR(TO_CHAR(E.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), E.DEPTID, M.DESCR
ORDER BY A.CONTRACT_NUM, SUBSTR(TO_CHAR(E.ACCOUNTING_DT,'YYYY-MM-DD'),1,4), E.ACCOUNT, E.FUND_CODE, E.OPERATING_UNIT;

--Testing/Verification queries
SELECT * FROM PS_PC_BUD_PLAN WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159'
SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159'
SELECT * FROM PS_PROJ_ACTIVITY WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159'
SELECT * FROM PS_GM_AWARD WHERE BUSINESS_UNIT = 'UNUNI' AND CONTRACT_NUM = '00051498'
SELECT * FROM PS_GM_AWD_PROJT_VW WHERE CONTRACT_NUM = '00051498'
SELECT * FROM PS_CHARTFIELD2_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_OPER_UNIT_TBL WHERE SETID = 'SHARE'
SELECT * FROM PS_GM_AWD_FUND_PD WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159'

--Check all those documents which are referencing B0510/51001 & B0660/66001 and have a budget date of 2014 and above
SELECT B.KK_TRAN_ID, B.KK_TRAN_DT, B.KK_SOURCE_TRAN, B.KK_PROCESS_STATUS, B.KK_PROC_INSTANCE, A.REFERENCED_BUDGET, A.BALANCING_LINE,
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.LEDGER_GROUP, A.BUSINESS_UNIT, B.KK_AMOUNT_TYPE, LN.DST_ACCT_TYPE,
            A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID,  
            B.BUSINESS_UNIT, B.JOURNAL_DATE, B.JOURNAL_ID, B.UNPOST_SEQ, LN.JOURNAL_LINE, LN.LEDGER, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.DEPOSIT_ID, B.PAYMENT_SEQ_NUM,
            B.PO_ID, B.REQ_ID, B.VOUCHER_ID, LN.VOUCHER_LINE_NUM, LN.LINE_NBR, LN.SCHED_NBR, LN.DISTRIB_LINE_NUM, LN.ACCTG_LINE_NO, B.INVOICE, LN.LINE_SEQ_NUM, B.KEYLIST
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B, PS_KK_SOURCE_LN LN
WHERE A.KK_TRAN_ID = B.KK_TRAN_ID
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    AND B.KK_TRAN_ID = LN.KK_TRAN_ID
    AND B.KK_TRAN_DT = LN.KK_TRAN_DT
    AND A.KK_TRAN_LN = LN.KK_TRAN_LN
    AND (A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT = 'UNUNI')
    AND (A.BUDGET_PERIOD IN ('2014', '2015') OR A.BUDGET_PERIOD = ' ')
    AND TO_CHAR(A.KK_TRAN_DT, 'YYYY') >= '2014'
    AND (A.DEPTID = 'B0510' OR A.DEPTID = '51001' OR A.DEPTID = 'B0660' OR A.DEPTID = '66001')
ORDER BY 2 DESC;

--FIN0010_GL_ACCOUNTS
--Modified for UNU
--Added columns CONTROL_FLAG and BUDGETARY_ONLY
SELECT A.SETID, A.ACCOUNT, A.DESCR, A.DESCRSHORT, A.ACCOUNT_TYPE, A.STATISTICS_ACCOUNT, A.UNIT_OF_MEASURE, A.CONTROL_FLAG,  A.BUDGETARY_ONLY,
            A.OPEN_ITEM, A.OPEN_ITEM_DESCR, A.OPEN_ITEM_EDIT_REC, A.OPEN_ITEM_EDIT_FLD, A.ACCOUNTING_OWNER, A.BALANCE_FWD_SW, A.VAT_ACCOUNT_FLG, 
            H.CF_ATTRIBUTE, H.CF_ATTRIB_VALUE, I.DESCR60
FROM PS_GL_ACCOUNT_TBL A, PS_ACCT_TYPE_TBL B, PS_CF_ATTRIB_TBL H, PS_CF_ATTRIB_VALUE I
WHERE (A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.ACCOUNT = A_ED.ACCOUNT 
                                                                                                                              AND A_ED.EFFDT <= SYSDATE)
     AND B.ACCOUNT_TYPE = A.ACCOUNT_TYPE
     AND B.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = A.SETID AND D.RECNAME = 'ACCT_TYPE_TBL')
     AND A.SETID = 'SHARE'
     AND A.EFF_STATUS = 'A'
     AND A.STATISTICS_ACCOUNT = 'Y'
     AND A.SETID = H.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_CF_ATTRIB_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CHARTFIELD_VALUE = H_ED.CHARTFIELD_VALUE 
                                                                                                                          AND H_ED.EFFDT <= A.EFFDT)
     AND H.SETID = I.SETID
     AND H.FIELDNAME = I.FIELDNAME
     AND H.CF_ATTRIBUTE = I.CF_ATTRIBUTE
     AND H.CF_ATTRIB_VALUE = I.CF_ATTRIB_VALUE
     AND H.FIELDNAME = 'ACCOUNT'
     AND H.CHARTFIELD_VALUE = A.ACCOUNT)
UNION
SELECT C.SETID, C.ACCOUNT, C.DESCR, C.DESCRSHORT, C.ACCOUNT_TYPE, C.STATISTICS_ACCOUNT, C.UNIT_OF_MEASURE, C.CONTROL_FLAG,  C.BUDGETARY_ONLY, 
            C.OPEN_ITEM, C.OPEN_ITEM_DESCR, C.OPEN_ITEM_EDIT_REC, C.OPEN_ITEM_EDIT_FLD, C.ACCOUNTING_OWNER, C.BALANCE_FWD_SW, C.VAT_ACCOUNT_FLG, 
            J.CF_ATTRIBUTE, J.CF_ATTRIB_VALUE, K.DESCR60
FROM PS_GL_ACCOUNT_TBL C, PS_CF_ATTRIB_TBL J, PS_CF_ATTRIB_VALUE K
WHERE (C.ACCOUNT_TYPE = ' '
     AND C.EFF_STATUS = 'A'
     AND C.SETID = 'SHARE'
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL C_ED WHERE C.SETID = C_ED.SETID AND C.ACCOUNT = C_ED.ACCOUNT 
                                                                                                                             AND C_ED.EFFDT <= SYSDATE)
     AND J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_CF_ATTRIB_TBL J_ED WHERE J.SETID = J_ED.SETID AND J.CHARTFIELD_VALUE = J_ED.CHARTFIELD_VALUE
                                                                                                                        AND J_ED.EFFDT <= SYSDATE)
     AND J.SETID = K.SETID
     AND J.FIELDNAME = K.FIELDNAME
     AND J.CF_ATTRIBUTE = K.CF_ATTRIBUTE
     AND J.CF_ATTRIB_VALUE = K.CF_ATTRIB_VALUE
     AND J.SETID = C.SETID
     AND K.FIELDNAME = 'ACCOUNT'
     AND J.CHARTFIELD_VALUE = C.ACCOUNT)
UNION
SELECT E.SETID, E.ACCOUNT, E.DESCR, E.DESCRSHORT, E.ACCOUNT_TYPE, E.STATISTICS_ACCOUNT, E.UNIT_OF_MEASURE, E.CONTROL_FLAG,  E.BUDGETARY_ONLY, 
            E.OPEN_ITEM, E.OPEN_ITEM_DESCR, E.OPEN_ITEM_EDIT_REC, E.OPEN_ITEM_EDIT_FLD,  E.ACCOUNTING_OWNER, F.BALANCE_FWD_SW, E.VAT_ACCOUNT_FLG, 
            M.CF_ATTRIBUTE, M.CF_ATTRIB_VALUE, M.DESCR60
FROM PS_GL_ACCOUNT_TBL E, PS_ACCT_TYPE_TBL F, PS_CF_ATTRIB_TBL L, PS_CF_ATTRIB_VALUE M
WHERE ( E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT
                                                                                                                              AND E_ED.EFFDT <= SYSDATE)
     AND F.ACCOUNT_TYPE = E.ACCOUNT_TYPE
     AND F.SETID = (SELECT G.SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = E.SETID AND G.RECNAME = 'ACCT_TYPE_TBL')
     AND E.SETID = 'SHARE'
     AND E.EFF_STATUS = 'A'
     AND E.STATISTICS_ACCOUNT = 'N'
     AND L.EFFDT = (SELECT MAX(L_ED.EFFDT) FROM PS_CF_ATTRIB_TBL L_ED WHERE L.SETID = L_ED.SETID AND L.CHARTFIELD_VALUE = L_ED.CHARTFIELD_VALUE
                                                                                                                         AND L_ED.EFFDT <= SYSDATE)
     AND L.SETID = M.SETID
     AND L.FIELDNAME = M.FIELDNAME
     AND L.CF_ATTRIBUTE = M.CF_ATTRIBUTE
     AND L.CF_ATTRIB_VALUE = M.CF_ATTRIB_VALUE
     AND L.SETID = E.SETID
     AND L.FIELDNAME = 'ACCOUNT'
     AND L.CHARTFIELD_VALUE = E.ACCOUNT)
UNION
SELECT N.SETID, N.ACCOUNT, N.DESCR, N.DESCRSHORT, N.ACCOUNT_TYPE, N.STATISTICS_ACCOUNT, N.UNIT_OF_MEASURE, N.CONTROL_FLAG,  N.BUDGETARY_ONLY, 
            N.OPEN_ITEM, N.OPEN_ITEM_DESCR, 
            N.OPEN_ITEM_EDIT_REC, N.OPEN_ITEM_EDIT_FLD, N.ACCOUNTING_OWNER, N.BALANCE_FWD_SW, N.VAT_ACCOUNT_FLG, ' ', ' ', ' '
FROM PS_GL_ACCOUNT_TBL N, PS_ACCT_TYPE_TBL O
WHERE (N.EFFDT = (SELECT MAX(N_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL N_ED WHERE N.SETID = N_ED.SETID AND N.ACCOUNT = N_ED.ACCOUNT 
                                                                                                                              AND N_ED.EFFDT <= SYSDATE)
     AND N.ACCOUNT_TYPE = O.ACCOUNT_TYPE
     AND N.SETID = 'SHARE'
     AND O.SETID = (SELECT P.SETID FROM PS_SET_CNTRL_REC P WHERE P.RECNAME = 'ACCT_TYPE_TBL' AND P.SETCNTRLVALUE = N.SETID)
     AND N.EFF_STATUS = 'A'
     AND N.STATISTICS_ACCOUNT = 'Y')
UNION
SELECT Q.SETID, Q.ACCOUNT, Q.DESCR, Q.DESCRSHORT, Q.ACCOUNT_TYPE, Q.STATISTICS_ACCOUNT, Q.UNIT_OF_MEASURE, Q.CONTROL_FLAG,  Q.BUDGETARY_ONLY, 
            Q.OPEN_ITEM, Q.OPEN_ITEM_DESCR, 
            Q.OPEN_ITEM_EDIT_REC, Q.OPEN_ITEM_EDIT_FLD, Q.ACCOUNTING_OWNER, Q.BALANCE_FWD_SW, Q.VAT_ACCOUNT_FLG, ' ', ' ', ' '
FROM PS_GL_ACCOUNT_TBL Q
WHERE (Q.EFFDT = (SELECT MAX(Q_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL Q_ED WHERE Q.SETID = Q_ED.SETID AND Q.ACCOUNT = Q_ED.ACCOUNT
                                                                                                                               AND Q_ED.EFFDT <= SYSDATE)
     AND Q.ACCOUNT_TYPE = ' '
     AND Q.EFF_STATUS = 'A'
     AND Q.SETID = 'SHARE')
UNION
SELECT R.SETID, R.ACCOUNT, R.DESCR, R.DESCRSHORT, R.ACCOUNT_TYPE, R.STATISTICS_ACCOUNT, R.UNIT_OF_MEASURE, R.CONTROL_FLAG,  R.BUDGETARY_ONLY, 
            R.OPEN_ITEM, R.OPEN_ITEM_DESCR, 
            R.OPEN_ITEM_EDIT_REC, R.OPEN_ITEM_EDIT_FLD, R.ACCOUNTING_OWNER, S.BALANCE_FWD_SW, R.VAT_ACCOUNT_FLG, ' ', ' ', ' '
FROM PS_GL_ACCOUNT_TBL R, PS_ACCT_TYPE_TBL S
WHERE (R.EFFDT = (SELECT MAX(R_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL R_ED WHERE R.SETID = R_ED.SETID AND R.ACCOUNT = R_ED.ACCOUNT 
                                                                                                                              AND R_ED.EFFDT <= SYSDATE)
     AND R.SETID = S.SETID
     AND R.SETID = 'SHARE'
     AND S.SETID = (SELECT T.SETID FROM PS_SET_CNTRL_REC T WHERE T.SETCNTRLVALUE = R.SETID AND T.RECNAME = 'ACCT_TYPE_TBL')
     AND S.ACCOUNT_TYPE = R.ACCOUNT_TYPE
     AND R.STATISTICS_ACCOUNT = 'N'
     AND R.EFF_STATUS = 'A')
UNION
SELECT U.SETID, U.ACCOUNT, U.DESCR, U.DESCRSHORT, U.ACCOUNT_TYPE, U.STATISTICS_ACCOUNT, U.UNIT_OF_MEASURE, U.CONTROL_FLAG,  U.BUDGETARY_ONLY, 
            U.OPEN_ITEM, U.OPEN_ITEM_DESCR, 
            U.OPEN_ITEM_EDIT_REC, U.OPEN_ITEM_EDIT_FLD, U.ACCOUNTING_OWNER, U.BALANCE_FWD_SW, U.VAT_ACCOUNT_FLG, ' ', ' ', ' '
FROM PS_GL_ACCOUNT_TBL U
WHERE (U.EFFDT = (SELECT MAX(U_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL U_ED WHERE U.SETID = U_ED.SETID AND U.ACCOUNT = U_ED.ACCOUNT 
                                                                                                                              AND U_ED.EFFDT <= SYSDATE)
     AND U.SETID = 'SHARE'
     AND U.EFF_STATUS = 'A')
ORDER BY 1, 2;

--UNU_KK_TRANSACTION_DETAILS
--Matches my output of query modelled on GLS8005
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, 
            A.BUDGET_PERIOD, C.KK_SOURCE_TRAN, C.BUSINESS_UNIT, C.REQ_ID, C.PO_ID, C.VOUCHER_ID, C.ITEM, C.DEPOSIT_BU, C.DEPOSIT_ID, 
            C.JOURNAL_DATE, C.JOURNAL_ID, C.INVOICE, C.RECEIVER_ID, C.EMPLID, C.SHEET_ID, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.REFERENCED_BUDGET, A.BALANCING_LINE, 
            A.SEQNBR, A.RVRSL_FLG, A.CLOSED_VALUE, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.MONETARY_AMOUNT
FROM PS_KK_ACTIVITY_LOG A, PS_LED_GRP_LED_TBL B, PS_KK_SOURCE_HDR C
WHERE ((A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT = 'UNUNI')
     AND A.LEDGER_GROUP = B.LEDGER_GROUP
     AND A.LEDGER = B.LEDGER
     --AND B.LEDGER_GROUP = 'PAR_UU'
     AND A.KK_TRAN_ID = C.KK_TRAN_ID
     AND A.KK_TRAN_DT = C.KK_TRAN_DT
     --AND B.LEDGER_TYPE_KK = :3
     --AND A.OPERATING_UNIT LIKE :4
     --AND A.FUND_CODE LIKE :5
     --AND A.DEPTID = '11001'
     AND A.PROJECT_ID = '00064153'
     --AND A.CHARTFIELD2 LIKE :8
     AND (A.BUDGET_PERIOD IN ('2014', '2015') OR A.BUDGET_PERIOD = ' ')
     AND B.SETID = 'SHARE')
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30;

--Compare the Item IDs across PO & Receipt
SELECT PO_ID, LINE_NBR, INV_ITEM_ID, INV_ITEM_ID_PO, INV_ITEM_ID_RECV 
FROM PS_AP_VCHR_LN_SUM 
WHERE BUSINESS_UNIT_PO LIKE '6%' 
    --AND PO_ID = '0000001945'
    AND INV_ITEM_ID <> ' '
    AND ((INV_ITEM_ID <> INV_ITEM_ID_PO) OR (INV_ITEM_ID <> INV_ITEM_ID_RECV) OR (INV_ITEM_ID_PO <> INV_ITEM_ID_RECV))

--Find Receipt Delay Days for UNU PO BUs
SELECT BUSINESS_UNIT_PO, RECEIPT_DELAY_DAYS, COUNT(1) 
FROM PS_VCHR_MTCH_DETLS 
WHERE BUSINESS_UNIT_PO LIKE '6%'
GROUP BY BUSINESS_UNIT_PO, RECEIPT_DELAY_DAYS
ORDER BY 1;

SELECT * FROM PSPRCSRQST WHERE RUNCNTLID LIKE '%622UU0000000035%'
SELECT * FROM PS_RECV_LN_SHIP WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000035'

--Check to see if Receipts eligible for interfacing to AM have MOVED or not
SELECT BUSINESS_UNIT, MOVE_STAT_AM, COUNT(1)
FROM PS_RECV_LN_SHIP 
WHERE BUSINESS_UNIT LIKE '6%'
AND MOVE_STAT_AM <> 'N'
GROUP BY BUSINESS_UNIT, MOVE_STAT_AM
ORDER BY 1,2,3;

--Report on Pending Receipts
SELECT * FROM PS_RECV_LN_SHIP WHERE BUSINESS_UNIT LIKE '6%' AND MOVE_STAT_AM = 'P'

--GL Analysis Type(s)
SELECT * FROM PS_PC_GL_AN_GRP_VW WHERE SETID = 'SHARE' ORDER BY 1,2;
SELECT LN.* FROM PS_JRNL_LN LN WHERE BUSINESS_UNIT = 'UNUNI' AND ANALYSIS_TYPE = 'REV'
AND EXISTS (SELECT 'X' FROM PS_JRNL_HEADER HDR WHERE HDR.BUSINESS_UNIT = LN.BUSINESS_UNIT AND HDR.JOURNAL_ID = LN.JOURNAL_ID 
                                                                                    AND HDR.JOURNAL_DATE = LN.JOURNAL_DATE AND HDR.UNPOST_SEQ = LN.UNPOST_SEQ
                                                                                    AND SOURCE = 'ONL')

SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000001987';
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000001987';

SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID = '0000001798' AND BUSINESS_UNIT_AM = 'UNUNI';
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT_AM = 'UNUNI' AND INV_ITEM_ID = '83111500S';
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '615UU' AND RECEIVER_ID IN ('0000000365', '0000000366');
SELECT * FROM PS_REQ_COMMENTS WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001931';

SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT LIKE '6%' AND PROJECT_ID = '00064170';
SELECT * FROM PS_CNTRCT_DSTRB WHERE BUSINESS_UNIT LIKE '6%' AND PROJECT_ID = '00064170';
SELECT * FROM PS_CNTRCT_DSTRB WHERE BUSINESS_UNIT LIKE '6%' AND PROJECT_ID = '00064160';
SELECT * FROM PS_CNTRCT_DSTRB WHERE BUSINESS_UNIT LIKE '6%' AND OPERATING_UNIT = '617';

--Find all those Requisitions whose Distrib still shows Am related information but based on the Item selected at the line level these should be there
SELECT BUSINESS_UNIT_AM, PROFILE_ID, A.* FROM PS_REQ_LN_DISTRIB A WHERE BUSINESS_UNIT = '600UU' AND REQ_ID = '0000001931'

SELECT LINE.BUSINESS_UNIT, LINE.REQ_ID, LINE.LINE_NBR, REQD.SCHED_NBR, REQD.DISTRIB_LINE_NUM, LINE.INV_ITEM_ID, AIA.PROFILE_ID AS ITM_PROFILE_ID, LINE.DESCR254_MIXED, 
            LINE.SOURCE_DATE, LINE.CATEGORY_ID, CAT.CATEGORY_CD, CAT.PROFILE_ID AS CAT_PROFILE, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID 
FROM PS_REQ_LN_DISTRIB REQD, PS_REQ_LINE LINE, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC F, PS_MASTER_ITEM_TBL ITM, 
         PS_PURCH_ITEM_ATTR ITAT, PS_ASSET_ITEM_ATTR AIA
WHERE REQD.BUSINESS_UNIT = LINE.BUSINESS_UNIT
    AND REQD.REQ_ID = LINE.REQ_ID
    AND REQD.LINE_NBR = LINE.LINE_NBR    
    AND LINE.ITM_SETID = ITM.SETID
    AND LINE.INV_ITEM_ID = ITM.INV_ITEM_ID
    AND ITM.SETID = ITAT.SETID
    AND ITM.INV_ITEM_ID = ITAT.INV_ITEM_ID
    AND ITM.SETID = AIA.SETID
    AND ITM.INV_ITEM_ID = AIA.INV_ITEM_ID
    AND F.SETCNTRLVALUE = LINE.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = LINE.CATEGORY_ID
    AND CAT.SETID = F.SETID
    AND F.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND REQD.BUSINESS_UNIT = '600UU'
    --AND REQD.REQ_ID = '0000001931'
    AND REQD.BUSINESS_UNIT LIKE '6%'
    AND ((AIA.PROFILE_ID <> REQD.PROFILE_ID)) --OR (CAT.PROFILE_ID <> REQD.PROFILE_ID))
ORDER BY 1,2,3,4,5;

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0005296850'

--UNU_ASSETS_NEEDING_ACTN_REQ
--Asset IDs needg actn with Req
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.ASSET_STATUS, B.CAPITALIZATION_SW, B.AMOUNT, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_STATUS, 
            B.BUSINESS_UNIT_PO, B.PO_ID, D.REQ_ID, D.REQ_LINE_NBR, E.REQUESTOR_ID, E.OPRID_ENTERED_BY
FROM PS_ASSET A, PS_ASSET_ACQ_DET B, PS_RECV_LN_SHIP C, PS_PO_LINE_DISTRIB D, PS_REQ_HDR E
WHERE A.BUSINESS_UNIT = 'UNUNI' 
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.ASSET_ID = B.ASSET_ID
     AND (A.ASSET_STATUS = 'A' OR B.CAPITALIZATION_SW NOT IN ('2','3'))
     AND A.ASSET_STATUS NOT IN ('D','T')
     AND B.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT
     AND C.RECEIVER_ID = B.RECEIVER_ID
     AND C.RECV_LN_NBR = B.RECV_LN_NBR
     AND C.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR
     AND B.BUSINESS_UNIT_PO = D.BUSINESS_UNIT
     AND D.PO_ID = B.PO_ID
     AND D.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND D.REQ_ID = E.REQ_ID
     AND D.LINE_NBR = B.PO_LINE_NBR
     AND D.SCHED_NBR = B.SCHED_NBR
     AND D.DISTRIB_LINE_NUM = B.PO_DIST_LINE_NUM
ORDER BY 1, 2;

--Disposed Assets without Retirement Date     
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.DESCR, A.ASSET_STATUS, A.ACQUISITION_DT
FROM PS_ASSET A, PS_RETIREMENT B
WHERE A.BUSINESS_UNIT = 'UNUNI' 
    AND A.ASSET_STATUS = 'D'
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.ASSET_ID = B.ASSET_ID
    AND B.RETIREMENT_DT IS NULL
ORDER BY 1, 2;

--UNU_AM_AUDIT_ERRONEOUS
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.TAG_NUMBER, A.DESCR, A.ASSET_STATUS, A.ACQUISITION_DT, A.PROFILE_ID, A.SERIAL_ID, B.QUANTITY, B.COST
FROM PS_ASSET A, PS_COST_BAL_VW B
WHERE A.BUSINESS_UNIT = 'UNUNI' 
    AND A.ASSET_STATUS = 'E'
    AND A.BUSINESS_UNIT =  B.BUSINESS_UNIT(+)
    AND A.ASSET_ID =  B.ASSET_ID(+)
ORDER BY 1,2;

--UNU_GL_JOURNALS_NOT_IN_AM
--UNU GL Journals not in AM
SELECT B.BUSINESS_UNIT, A.JOURNAL_ID, B.JOURNAL_LINE, B.UNPOST_SEQ, A.JOURNAL_DATE, 
            A.ACCOUNTING_PERIOD, A.SOURCE, A.JRNL_HDR_STATUS, B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, SUM( B.MONETARY_AMOUNT)
FROM PS_JRNL_HEADER A, PS_JRNL_LN B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.JOURNAL_ID = B.JOURNAL_ID
    AND A.JOURNAL_DATE = B.JOURNAL_DATE
    AND A.UNPOST_SEQ = B.UNPOST_SEQ
    AND B.LEDGER = 'USD'
    AND A.ACCTG_DEF_NAME = 'AMDEFN'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND A.JOURNAL_DATE BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND sysdate
    AND (B.JOURNAL_ID ,  B.JOURNAL_LINE) 
           NOT IN (SELECT  C.JOURNAL_ID, C.JOURNAL_LINE FROM PS_DIST_LN C WHERE C.BUSINESS_UNIT_GL = 'UNUNI' 
           AND C.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND sysdate)
GROUP BY B.BUSINESS_UNIT, A.JOURNAL_ID, B.JOURNAL_LINE, B.UNPOST_SEQ, A.JOURNAL_DATE, A.ACCOUNTING_PERIOD, A.SOURCE, A.JRNL_HDR_STATUS, B.ACCOUNT, 
               B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID
ORDER BY 2, 3, 4;

--UNU_AM_RCVR_NOT_MOVED
--AM Receipts not interfaced
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DISTRIB_SEQ_NUM, A.ACTUAL_COST, A.BUSINESS_UNIT_AM, 
            A.COST, A.CURRENCY_CD, A.DESCR, TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, A.PROFILE_ID, A.QUANTITY, 
            A.SERIAL_ID, A.TAG_NUMBER, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.CATEGORY_ID, C.DESCR254_MIXED, C.DUE_DT, C.INV_ITEM_ID, 
            C.MERCH_AMT_BSE, C.OPRID, C.QTY_LN_ASSET_SUOM, C.QTY_SH_ACCPT_VUOM, C.QTY_SH_NETRCV_VUOM
FROM PS_RECV_LN_ASSET A, PS_RECV_LN_SHIP C
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.RECEIVER_ID = C.RECEIVER_ID
    AND A.RECV_LN_NBR = C.RECV_LN_NBR
    AND A.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECV_AM_STATUS = 'O'
    AND C.RECV_SHIP_STATUS = 'R'
    AND C.MOVE_STAT_AM = 'P'
ORDER BY 1, 2, 3, 4, 5, 6;

SELECT MOVE_STAT_AM, RECV_SHIP_STATUS, A.* FROM PS_RECV_LN_SHIP A WHERE BUSINESS_UNIT LIKE '6%' AND MOVE_STAT_AM = 'P';
SELECT RECV_AM_STATUS, A.* FROM PS_RECV_LN_ASSET A WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000052';
SELECT RECV_AM_STATUS, A.* FROM PS_RECV_LN_ASSET A WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000042';

--Exchange Rate load
SELECT * FROM PS_UN_UNORE_REQ;
SELECT * FROM PS_UN_INTFC_PATH WHERE PROJECT_ID = 'UN_UNOREEXC_RT';

--UN PO Currency Exchange Issues
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_PO_CURREX';
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_POKK_AE';
SELECT * FROM PSPRCSRQST WHERE MAINJOBNAME = 'UFSN2160';
SELECT * FROM PSMENUITEM WHERE PNLGRPNAME = 'UN_POKK_RUN_COMP';
SELECT * FROM PSSQLTEXTDEFN WHERE SQLTEXT LIKE '%21020%';
--POs with Account 21020
SELECT * FROM PS_PO_LINE_DISTRIB WHERE ACCOUNT = '21020' AND BUSINESS_UNIT LIKE '6%';
SELECT BUSINESS_UNIT, COUNT(1) FROM PS_PO_LINE_DISTRIB WHERE ACCOUNT = '21020' GROUP BY BUSINESS_UNIT ORDER BY 1;
SELECT * FROM PS_PO_LINE_DISTRIB WHERE ACCOUNT = '21020' ORDER BY 1;

SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, B.INV_ITEM_ID, A.PO_STATUS, A.BUDGET_HDR_STATUS, A.BUDGET_CHECK, A.PO_DT, 
            B.CNTRCT_SETID, B.CNTRCT_ID, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, A.MATCH_STATUS_PO, 
            A.PO_POST_STATUS, A.ACCOUNTING_DT, D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_Amt, A.CURRENCY_CD, D.MERCHANDISE_AMT AS PO_Foreign_Amt, A.VENDOR_ID, 
            C.DUE_DT, B.DESCR254_MIXED, C.SHIPTO_ID, D.REQ_ID, D.REQ_LINE_NBR, D.REQ_SCHED_NBR, D.REQ_DISTRIB_NBR, 
            D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE 
            --G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_ENC, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, G.FOREIGN_CURRENCY, 
            --G.LEDGER_GROUP, G.PC_DISTRIB_STATUS, X.EXCPTN_TYPE
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, 
    ((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT AND D.PO_ID = E.PO_ID) 
       LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT AND E.KK_TRAN_ID = F.KK_TRAN_ID AND D.LINE_NBR = F.LINE_NBR 
                                                               AND D.SCHED_NBR = F.SCHED_NBR AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM) 
       --LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID AND F.KK_TRAN_DT = G.KK_TRAN_DT AND F.KK_TRAN_LN = G.KK_TRAN_LN)
       --LEFT OUTER JOIN PS_KK_EXCPTN_TBL X ON E.KK_TRAN_ID = X.KK_TRAN_ID AND E.KK_TRAN_DT = X.KK_TRAN_DT AND F.KK_TRAN_LN = X.KK_TRAN_LN)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    AND D.ACCOUNT = '21020'
ORDER BY 1,2,3,5,6;

--Vouchers with Account 21020
SELECT * FROM PS_DISTRIB_LINE WHERE ACCOUNT = '21020' AND BUSINESS_UNIT LIKE '6%';
SELECT BUSINESS_UNIT, COUNT(1) FROM PS_DISTRIB_LINE WHERE ACCOUNT = '21020' GROUP BY BUSINESS_UNIT ORDER BY 1;
SELECT * FROM PS_DISTRIB_LINE WHERE ACCOUNT = '21020' ORDER BY 1;
--Find Journals with Account 51040
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '51040' ORDER BY JOURNAL_DATE;
SELECT * FROM PS_PO_HDR WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000002018';
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000002018';
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '606UU' AND PO_ID = '0000001487';
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0070767597';
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0053898575';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0070767597';
SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND BUDGET_DT IS NULL;
SELECT * FROM PS_REQ_LN_DISTRIB WHERE BUSINESS_UNIT LIKE '6%' AND DISTRIB_LN_STATUS = 'C' AND KK_CLOSE_FLAG <> 'Y';
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT LIKE '6%' AND DISTRIB_LN_STATUS = 'C' AND KK_CLOSE_FLAG <> 'Y';
--Find POs which are either cancelled or closed, have a budget error and the exception is "No Budget Exists"
--UN_POKK_AE selection criteria
SELECT PH.BUSINESS_UNIT, PH.PO_ID, SL.LINE_NBR, SL.SCHED_NBR, SL.DISTRIB_LINE_NUM 
FROM PS_PO_HDR PH, PS_KK_SOURCE_HDR SH, PS_KK_SOURCE_LN SL, PS_KK_EXCPTN_TBL KE 
WHERE SH.BUSINESS_UNIT = PH.BUSINESS_UNIT
    AND SH.PO_ID = PH.PO_ID    
    AND SH.KK_TRAN_ID = SL.KK_TRAN_ID 
    AND KE.KK_TRAN_ID = SL.KK_TRAN_ID 
    AND KE.KK_TRAN_LN = SL.KK_TRAN_LN
    --AND PH.BUSINESS_UNIT LIKE '6%'
    AND PH.PO_STATUS IN ('X', 'C')
    AND PH.BUDGET_HDR_STATUS = 'E'
    AND SH.KK_SOURCE_TRAN = 'PO_POENC' 
    AND KE.EXCPTN_TYPE = 'E2'
ORDER BY 1,2,3,4,5;
--UN_PO_CURREX selection criteria
--SQL01
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID 
FROM PS_PO_LINE_DISTRIB A, PS_PO_HDR B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID 
    AND B.PO_STATUS <> 'X' 
    AND A.CURRENCY_CD <> 'USD' 
    AND (A.RATE_MULT = 1 AND A.RATE_DIV = 1) 
    AND A.MERCHANDISE_AMT = A.MERCH_AMT_BSE 
    AND A.MERCHANDISE_AMT <> 0 
    AND A.DISTRIB_LN_STATUS <> 'X' 
    AND (A.RATE_MULT <> B.RATE_MULT OR A.RATE_DIV <> B.RATE_DIV)
ORDER BY 1,2;
--SQL02
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DST_ACCT_TYPE, A.DISTRIB_LINE_NUM 
FROM PS_PO_LINE_DISTRIB A, PS_PO_HDR B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID 
    AND B.PO_STATUS <> 'X' 
    AND A.CURRENCY_CD <> 'USD' 
    AND (A.RATE_MULT = 1 AND A.RATE_DIV = 1) 
    AND A.MERCHANDISE_AMT = A.MERCH_AMT_BSE 
    AND A.MERCHANDISE_AMT <> 0 
    AND A.DISTRIB_LN_STATUS <> 'X' 
    AND (B.RATE_MULT <> 1 OR B.RATE_DIV <> 1)
ORDER BY 1,2,3,4,5,6;
--SQL03
SELECT DISTINCT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DST_ACCT_TYPE, A.DISTRIB_LINE_NUM 
FROM PS_PO_LINE_DISTRIB A, PS_PO_HDR B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID 
    AND B.PO_STATUS <> 'X' 
    AND A.CURRENCY_CD <> 'USD' 
    AND (A.RATE_MULT <> 1 OR A.RATE_DIV <> 1 ) 
    AND A.MERCHANDISE_AMT = A.MERCH_AMT_BSE 
    AND A.MERCHANDISE_AMT <> 0 
    AND A.DISTRIB_LN_STATUS <> 'X' 
    --AND CONCAT(a.business_unit, a.po_id ) <> 'UNV100000003164'
ORDER BY 1,2,3,4,5,6;

--Find Processes/PSJobs triggered by UNU Atlas IDs as of today
SELECT OPRID, PRCSNAME, PRCSJOBNAME, MAINJOBNAME, PRCSINSTANCE, JOBINSTANCE, MAINJOBINSTANCE, RUNSTATUS, 
            (SELECT XLATLONGNAME FROM PSXLATITEM C WHERE  C.FIELDNAME = 'RUNSTATUS' AND C.FIELDVALUE = PSPRCSRQST.RUNSTATUS)  RUNDESCR, 
            TO_CHAR(BEGINDTTM ,'DD-MON HH24:MI:SS') AS BEGINTM, 
            TO_CHAR(ENDDTTM,'DD-MON HH24:MI:SS') AS ENDTM, TO_CHAR(TO_DATE('00:00:00','HH24:MI:SS') + (ENDDTTM-BEGINDTTM),'HH24:MI:SS') AS HR_MIN
FROM PSPRCSRQST
WHERE TO_CHAR(RUNDTTM,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
           --TO_CHAR(RUNDTTM,'YYYY-MM-DD') BETWEEN TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD') AND TO_CHAR(SYSDATE, 'YYYY-MM-DD')
           --TO_CHAR(RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND (OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PSPRCSRQST.OPRID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu')
    AND OPRID <> 'prakash.prashant')
ORDER BY PRCSINSTANCE DESC;

SELECT N.NAVIGATION, ' ' AS PRCSJOBNAME, PRCS.PRCSNAME, PRCS.PRCSTYPE, PRCS.DESCR, PORTAL_DESC
FROM (
SELECT SYS_CONNECT_BY_PATH(A.PORTAL_LABEL ,'->') NAVIGATION, '/EMPLOYEE/ERP/C/' || PORTAL_URI_SEG1 || '.' || PORTAL_URI_SEG2 || '.' || PORTAL_URI_SEG3 URL, 
            PORTAL_URI_SEG2 AS PORTAL_PNLGRPNAME, PORTAL_DESC , PORTAL_URLTEXT
FROM (
SELECT DISTINCT A.PORTAL_NAME, A.PORTAL_LABEL, A.PORTAL_OBJNAME, A.PORTAL_PRNTOBJNAME, A.DESCR254 AS PORTAL_DESC, A.PORTAL_URI_SEG1, A.PORTAL_URI_SEG2, 
            A.PORTAL_URI_SEG3, A.PORTAL_REFTYPE, PORTAL_URLTEXT
FROM PSPRSMDEFN A WHERE PORTAL_NAME = 'EMPLOYEE' AND PORTAL_OBJNAME <> PORTAL_PRNTOBJNAME) 
A START WITH A.PORTAL_PRNTOBJNAME = 'PORTAL_ROOT_OBJECT' 
CONNECT BY PRIOR A.PORTAL_OBJNAME = A.PORTAL_PRNTOBJNAME) N, PS_PRCSDEFNPNL PR, PS_PRCSDEFN PRCS 
WHERE PORTAL_PNLGRPNAME = PR.PNLGRPNAME
    AND PRCS.PRCSNAME = PR.PRCSNAME
    AND PRCS.PRCSTYPE = PR.PRCSTYPE
    --AND PRCS.PRCSNAME IN ('APY2100-', 'APY2101-', 'PVY2000-', 'PORC700', 'APS8001-', 'APS8001J')
    --AND UPPER(NAVIGATION) LIKE UPPER('%PeopleTools%')
    AND UPPER(N.NAVIGATION) NOT LIKE '%PORTAL%OBJECTS%'
UNION ALL
SELECT N.NAVIGATION, PR.PRCSJOBNAME, PRCS.PRCSNAME, PRCS.PRCSTYPE, PRCS.DESCR, PORTAL_DESC
FROM (
SELECT SYS_CONNECT_BY_PATH(A.PORTAL_LABEL ,'->') NAVIGATION, '/EMPLOYEE/ERP/C/' || PORTAL_URI_SEG1 || '.' || PORTAL_URI_SEG2 || '.' || PORTAL_URI_SEG3 URL, 
            PORTAL_URI_SEG2 AS PORTAL_PNLGRPNAME, PORTAL_DESC , PORTAL_URLTEXT
FROM (
SELECT DISTINCT A.PORTAL_NAME, A.PORTAL_LABEL, A.PORTAL_OBJNAME, A.PORTAL_PRNTOBJNAME, A.DESCR254 AS PORTAL_DESC, A.PORTAL_URI_SEG1, A.PORTAL_URI_SEG2, 
            A.PORTAL_URI_SEG3, A.PORTAL_REFTYPE, PORTAL_URLTEXT
FROM PSPRSMDEFN A WHERE PORTAL_NAME = 'EMPLOYEE' AND PORTAL_OBJNAME <> PORTAL_PRNTOBJNAME) A 
START WITH A.PORTAL_PRNTOBJNAME = 'PORTAL_ROOT_OBJECT' CONNECT BY PRIOR A.PORTAL_OBJNAME = A.PORTAL_PRNTOBJNAME) N, 
PS_PRCSJOBPNL PR, PS_PRCSDEFN PRCS, PS_PRCSJOBITEM PRJ
WHERE PORTAL_PNLGRPNAME = PR.PNLGRPNAME    
    AND PR.PRCSJOBNAME = PRJ.PRCSJOBNAME
    AND PRCS.PRCSNAME = PRJ.PRCSNAME
    AND PRCS.PRCSTYPE = PRJ.PRCSTYPE    
    --AND PRCS.PRCSNAME IN ('APY2100-', 'APY2101-', 'PVY2000-', 'PORC700', 'APS8001-', 'APS8001J')
    --AND UPPER(NAVIGATION) LIKE UPPER('%PeopleTools%')
    AND UPPER(N.NAVIGATION) NOT LIKE '%PORTAL%OBJECTS%'
ORDER BY 1,2,3,4,5;

--GLS8012 - Journal Line/Accounting Entry Reconciliation Report
--Get Accounting Entry Definition Details
SELECT DISTINCT JRNLGEN.ACCTG_DEF_NAME, JRNLGEN.SYSTEM_SOURCE, JRNLGEN.RECNAME_UPDATE, JRNLGEN.FIELDNAME_MON_AMT
--let $ACCTG_MON_AMT = 'SUM(A.' || RTRIM(JRNLGEN.FIELDNAME_MON_AMT,' ') || ')'
FROM PS_JRNLGEN_DEFN   JRNLGEN
WHERE JRNLGEN.SETID = 'SHARE'
    AND JRNLGEN.ACCTG_DEF_NAME = 'APDEFN'
ORDER BY 1,2,3;

--Get Ledger Definition
SELECT LD.LEDGER, LD.DESCR, LD2.RECNAME_JRNL_LN, LD2.RECNAME_JRNL_HDR, LD2.FIELDNAME_MON_AMT, LD2.RECNAME
--let $JRNL_MON_AMT = 'SUM(JRNL.' || RTRIM(LD2.FIELDNAME_MON_AMT,' ') || ')'
FROM PS_LED_DEFN_TBL LD, PS_LED_TMPLT_TBL LD2
WHERE LD.LEDGER_TEMPLATE = LD2.LEDGER_TEMPLATE
    AND LD.SETID = 'SHARE'
    AND LD.LEDGER = 'USD'
ORDER BY 1,2;

--Get Period End Date
SELECT CAL.CALENDAR_ID, CAL.FISCAL_YEAR, CAL.ACCOUNTING_PERIOD, CAL.BEGIN_DT, CAL.END_DT
FROM PS_CAL_DETP_TBL CAL
WHERE CAL.SETID = 'SHARE'
  AND CAL.CALENDAR_ID = (SELECT G.CALENDAR_ID FROM PS_BU_LED_GRP_TBL G, PS_BU_LED_TBL C WHERE G.BUSINESS_UNIT = C.BUSINESS_UNIT 
                                                                                                                                                          AND G.LEDGER_GROUP = C.LEDGER_GROUP 
                                                                                                                                                          AND C.BUSINESS_UNIT = 'UNUNI' AND C.LEDGER = 'USD')
  AND (BEGIN_DT <= SYSDATE AND END_DT >= SYSDATE)
ORDER BY 1,2,3;

--Journal Information
SELECT JRNL.ACCOUNT, JRNL.OPERATING_UNIT, JRNL.FUND_CODE, SUM(JRNL.MONETARY_AMOUNT) AS JRNL_MON_AMT
FROM PS_JRNL_HEADER HDR, PS_JRNL_LN JRNL
WHERE HDR.BUSINESS_UNIT = 'UNUNI' 
     and HDR.FISCAL_YEAR = '2013'
     and (HDR.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
     AND HDR.SYSTEM_SOURCE = 'GAP'
     AND JRNL.BUSINESS_UNIT = HDR.BUSINESS_UNIT 
     AND JRNL.JOURNAL_ID = HDR.JOURNAL_ID 
     AND JRNL.JOURNAL_DATE = HDR.JOURNAL_DATE 
     AND JRNL.UNPOST_SEQ = HDR.UNPOST_SEQ 
     AND JRNL.LEDGER = 'USD'
GROUP BY JRNL.ACCOUNT, JRNL.OPERATING_UNIT, JRNL.FUND_CODE
ORDER BY JRNL.ACCOUNT, JRNL.OPERATING_UNIT, JRNL.FUND_CODE;

--Accounting Line Information
SELECT A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, SUM(A.MONETARY_AMOUNT) AS ACCTG_MON_AMT
FROM PS_VCHR_ACCTG_LINE A 
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
    --AND A.JOURNAL_ID = $journal_id
    --AND A.JOURNAL_DATE = $journal_date
    AND A.FISCAL_YEAR = '2013'
    AND A.LEDGER = 'USD'
    AND A.ACCOUNTING_PERIOD BETWEEN 1 AND 12
GROUP BY A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE
ORDER BY A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE;

--Get-Ledger-Descr
SELECT LDSDTAL.LEDGER_TYPE, LDSDTAL.LEDGER, MLANG.DESCR, LDSDTA2L.RECNAME, LDSDTA2L.RECNAME_JRNL_HDR, LDSDTA2L.RECNAME_JRNL_LN, LDSDTA2L.RECNAME_CLOSE_LOG,
            LDSDTA2L.RECNAME_ACCOUNT, LDSDTA2L.FIELDNAME_TOTAL_NT, LDSDTA2L.FIELDNAME_TOTAL_DR, LDSDTA2L.FIELDNAME_TOTAL_CR, LDSDTA2L.FIELDNAME_ACCOUNT
FROM  PS_LED_DEFN_TBL LDSDTAL, PS_LED_DEFN_LANG MLANG, PS_LED_TMPLT_TBL LDSDTA2L
WHERE LDSDTAL.LEDGER_TEMPLATE = LDSDTA2L.LEDGER_TEMPLATE
    AND LDSDTAL.SETID = MLANG.SETID
    AND LDSDTAL.LEDGER = MLANG.LEDGER 
    AND LDSDTAL.SETID  = 'SHARE'
    AND LDSDTAL.LEDGER = 'USD'
    AND MLANG.LANGUAGE_CD = 'ENG'    
UNION
SELECT LDSDTAU.LEDGER_TYPE, LDSDTAU.LEDGER, LDSDTAU.DESCR, LDSDTA2U.RECNAME, LDSDTA2U.RECNAME_JRNL_HDR, LDSDTA2U.RECNAME_JRNL_LN, 
            LDSDTA2U.RECNAME_CLOSE_LOG, LDSDTA2U.RECNAME_ACCOUNT, LDSDTA2U.FIELDNAME_TOTAL_NT, 
            LDSDTA2U.FIELDNAME_TOTAL_DR, LDSDTA2U.FIELDNAME_TOTAL_CR, LDSDTA2U.FIELDNAME_ACCOUNT
FROM  PS_LED_DEFN_TBL LDSDTAU, PS_LED_TMPLT_TBL LDSDTA2U
WHERE LDSDTAU.LEDGER_TEMPLATE = LDSDTA2U.LEDGER_TEMPLATE
    AND LDSDTAU.SETID  = 'SHARE'
    AND LDSDTAU.LEDGER = 'USD'
    AND NOT EXISTS (SELECT 'X' FROM PS_LED_DEFN_LANG MLANGU WHERE MLANGU.LANGUAGE_CD = 'ENG' AND LDSDTAU.SETID = MLANGU.SETID 
                                                                                                         AND LDSDTAU.LEDGER = MLANGU.LEDGER)
ORDER BY 1,2,3,4;

--Get-Ledger-Descr
SELECT LDSDTA.LEDGER_TYPE, LDSDTA.LEDGER, LDSDTA.DESCR, LDSDTA2.RECNAME, LDSDTA2.RECNAME_JRNL_HDR, LDSDTA2.RECNAME_JRNL_LN, LDSDTA2.RECNAME_CLOSE_LOG, 
            LDSDTA2.RECNAME_ACCOUNT, LDSDTA2.FIELDNAME_TOTAL_NT, LDSDTA2.FIELDNAME_TOTAL_DR, LDSDTA2.FIELDNAME_TOTAL_CR, LDSDTA2.FIELDNAME_ACCOUNT
FROM  PS_LED_DEFN_TBL LDSDTA, PS_LED_TMPLT_TBL LDSDTA2
WHERE LDSDTA.LEDGER_TEMPLATE = LDSDTA2.LEDGER_TEMPLATE
    AND LDSDTA.SETID  = 'SHARE'
    --AND LDSDTA.LEDGER = 'USD'
ORDER BY 1,2,3,4;

--UNFPA's Budget Ledger
SELECT * FROM PS_LEDGER_BUDG WHERE FISCAL_YEAR > '2013';
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNFPA' AND LEDGER = 'STD_FP_BUD' AND TO_CHAR(JOURNAL_DATE, 'YYYY') > '2013';
SELECT * FROM PS_LEDGER_KK WHERE LEDGER = 'KKE_DP_BUD' AND FISCAL_YEAR > '2011';

--AM details for IPSAS Adjustment Period
SELECT * FROM PS_LEDGER WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNTING_PERIOD = '100' AND ACCOUNT = '33003'
ORDER BY 1,2,3,5,6,8,9;

--T&E Customization for Employee Profile Component
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'UN_EX_UNBNK';
SELECT * FROM PS_UN_EX_BKACCT WHERE OPERATING_UNIT LIKE '6%';

SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, A.BUDGET_HDR_STATUS, PO_DT, B.LINE_NBR, B.SCHED_NBR, B.DISTRIB_LINE_NUM, B.BUDGET_LINE_STATUS, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, A.HOLD_STATUS, 
            A.ACCOUNTING_DT, B.MERCH_AMT_BSE, B.DISTRIB_LN_STATUS, B.BUDGET_DT
FROM PS_PO_HDR A, PS_PO_LINE_DISTRIB B
WHERE A.BUSINESS_UNIT LIKE '6%'     
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND A.PO_STATUS NOT IN ('I','O','PA')
    AND B.BUDGET_DT > TO_DATE('2008-12-31','YYYY-MM-DD')
    AND (B.BUDGET_LINE_STATUS IN ('E','N') AND A.BUDGET_HDR_STATUS <> 'V')
    AND B.DISTRIB_LN_STATUS IN ('C','X')
ORDER BY 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15;

SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000006899'
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0068982172'
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0068982172'
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0068982172' AND LEDGER_GROUP = 'DET_UU'
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0068982172' AND LEDGER_GROUP = 'DET_UU'
SELECT KK_CLOSE_FLAG, KK_PROCESS_PRIOR, KK_CLOSE_PRIOR, A.* FROM PS_PO_LINE_DISTRIB A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000006899'
SELECT KK_PROCESS_PRIOR, KK_CLOSE_PRIOR, A.* FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT_PO = '600UU' AND PO_ID = '0000006899'

--AMDP2100
--Process-BU-Books
SELECT BU_BOOK_TBL.BUSINESS_UNIT, BU_BOOK_TBL.BOOK, BU_BOOK_TBL.CAL_DEPR_PD, BU_BOOK_TBL.ACCT_ENT_TMPL_ID, BOOK_DEFN_TBL.DESCR, BU_BOOK_TBL.CURRENCY_CD,
            BU_BOOK_TBL.NEG_DEPR_SW
 FROM  PS_BU_BOOK_TBL BU_BOOK_TBL, PS_BOOK_DEFN_TBL BOOK_DEFN_TBL
WHERE BU_BOOK_TBL.BOOK = BOOK_DEFN_TBL.BOOK
  AND BU_BOOK_TBL.BUSINESS_UNIT = 'UNUNI'
  AND BU_BOOK_TBL.BOOK = 'REPORTING'
  AND BOOK_DEFN_TBL.SETID = 'SHARE'
ORDER BY BU_BOOK_TBL.BOOK;

SELECT * FROM PS_DEPR_RPT WHERE BUSINESS_UNIT = 'UNUNI';
--let #detail_cost_balance   = #depr_cost
--let #detail_cur_depr       = &DEPR.DEPR + &DEPR.DEPR_PDP
--let #detail_YTD_Depr       = &DEPR.DEPR_YTD
--let #detail_LTD_Depr       = &DEPR.DEPR_LTD
--let #Detail_Nvb_Depr       = #depr_cost - &DEPR.DEPR_LTD

SELECT DEPR.BUSINESS_UNIT, DEPR.BOOK, DEPR.CATEGORY, DEPR.COST_TYPE, DEPR.ASSET_ID, DEPR.CURRENCY_CD, ASSET.DESCR, 
            DEPR.OPERATING_UNIT, DEPR.FUND_CODE, DEPR.DEPTID, DEPR.PROJECT_ID, DEPR.CHARTFIELD2, 
            DEPR.ACCOUNT_AD, DEPR.ACCOUNT_FA, DEPR.LOCATION, DEPR.COST, DEPR.DEPR, DEPR.DEPR_PDP, DEPR.DEPR_YTD, DEPR.DEPR_LTD, 
            NVL((DEPR.DEPR + DEPR.DEPR_PDP), 0) "Current DEPR", NVL((DEPR.COST - DEPR.DEPR_LTD), 0) "Net Book Value",
            DEPR.ACTIVITY_SW, DEPR.RETIRE_SW, DEPR.GRP_COST, DEPR.GROUP_ASSET_FLAG,
            DEPR.ACCUM_DEPR_ADD, DEPR.ACCUM_DEPR_TRF, DEPR.ACCUM_DEPR_RCT, DEPR.ACCUM_DEPR_REI, DEPR.ACCUM_DEPR_RET, DEPR.COST_ADD, DEPR.COST_ADJ, 
            DEPR.COST_TRF, DEPR.COST_RCT, DEPR.COST_REI, DEPR.COST_RET, DEPR.CF_SEQNO
FROM PS_DEPR_RPT DEPR, PS_ASSET ASSET
WHERE DEPR.BUSINESS_UNIT = 'UNUNI'
     AND DEPR.BOOK = 'REPORTING'
     AND DEPR.FISCAL_YEAR = '2013'
     AND DEPR.ACCOUNTING_PERIOD = '12'     
     AND DEPR.BUSINESS_UNIT = ASSET.BUSINESS_UNIT
     AND DEPR.ASSET_ID = ASSET.ASSET_ID
     --AND (DEPR.COST <> 0 OR DEPR.DEPR_LTD <> 0 or DEPR.DEPR <> 0)
     --AND DEPR.GROUP_ASSET_FLAG <> 'M'
ORDER BY DEPR.BUSINESS_UNIT, DEPR.BOOK, DEPR.ASSET_ID;

SELECT * FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNUNI';
SELECT * FROM PSQRYRECORD WHERE RECNAME = 'DIST_LN'

SELECT * FROM user_tab_columns WHERE table_name = 'PS_DEPR_RPT'
SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'DEPR_RPT'
SELECT * FROM PSDBFLDLABL

--UNU_AM_DEPR_CHECK
--All regular DPR booked?
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FUND_CODE, A.CHARTFIELD1, A.CHARTFIELD2, A.PROJECT_ID, A.DEPTID, A.DEPR
FROM (PS_DEPR_RPT A LEFT OUTER JOIN  PS_DIST_LN B ON A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.ASSET_ID = B.ASSET_ID AND A.BOOK = B.BOOK 
                                                                                   AND A.FISCAL_YEAR = TO_CHAR( B.ACCOUNTING_DT,'YYYY') AND A.ACCOUNTING_PERIOD = TO_CHAR( B.ACCOUNTING_DT,'MM') 
                                                                                   AND B.TRANS_TYPE = 'DPR')
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND A.DEPR > 0
     AND B.JOURNAL_ID IS NULL
     --AND A.ACCOUNTING_PERIOD <= :2
ORDER BY 1, 2, 3, 4;

SELECT * FROM PS_CATEGORY_TBL A WHERE SETID = 'SHARE'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_CATEGORY_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.CATEGORY = A_ED.CATEGORY AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

--UNU_AM_DISTRIB_INFO
--Version 1
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, 'AM', A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, SUM(A.AMOUNT) AS AM_AMOUNT
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')
     AND E.ACCOUNT = A.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL' 
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, 'AM', A.FISCAL_YEAR, A.ACCOUNTING_PERIOD
ORDER BY A.ACCOUNT, A.ACCOUNTING_PERIOD;

--Version 2
SELECT X.BUSINESS_UNIT_GL, X.ACCOUNT, X.DESCR, 'AM', X.FISCAL_YEAR, SUM(X.AM_AMOUNT) AS AM_AMOUNT,
            SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, E.DESCR, 'AM', A.FISCAL_YEAR, SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.AMOUNT) ELSE 0 END AS JAN
          , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.AMOUNT) ELSE 0 END AS FEB 
          , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.AMOUNT) ELSE 0 END AS MAR 
          , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.AMOUNT) ELSE 0 END AS APR 
          , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.AMOUNT) ELSE 0 END AS MAY 
          , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.AMOUNT) ELSE 0 END AS JUN 
          , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.AMOUNT) ELSE 0 END AS JUL 
          , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.AMOUNT) ELSE 0 END AS AUG 
          , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.AMOUNT) ELSE 0 END AS SEP 
          , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.AMOUNT) ELSE 0 END AS OCT 
          , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.AMOUNT) ELSE 0 END AS NOV 
          , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.AMOUNT) ELSE 0 END AS DEC
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     --AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')
     AND E.ACCOUNT = A.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL' 
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, 'AM', A.FISCAL_YEAR, A.ACCOUNTING_PERIOD) X
GROUP BY X.BUSINESS_UNIT_GL, X.ACCOUNT, X.DESCR, 'AM', X.FISCAL_YEAR
ORDER BY X.ACCOUNT;

--Version 3
SELECT X.BUSINESS_UNIT_GL, X.ACCOUNT, X.DESCR, X.DISTRIBUTION_TYPE, X.TRANS_TYPE, X.CATEGORY, X.FISCAL_YEAR, SUM(X.AM_AMOUNT) AS AM_AMOUNT,
            SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, E.DESCR, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, 
            SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.AMOUNT) ELSE 0 END AS JAN
          , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.AMOUNT) ELSE 0 END AS FEB 
          , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.AMOUNT) ELSE 0 END AS MAR 
          , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.AMOUNT) ELSE 0 END AS APR 
          , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.AMOUNT) ELSE 0 END AS MAY 
          , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.AMOUNT) ELSE 0 END AS JUN 
          , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.AMOUNT) ELSE 0 END AS JUL 
          , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.AMOUNT) ELSE 0 END AS AUG 
          , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.AMOUNT) ELSE 0 END AS SEP 
          , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.AMOUNT) ELSE 0 END AS OCT 
          , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.AMOUNT) ELSE 0 END AS NOV 
          , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.AMOUNT) ELSE 0 END AS DEC
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F, PSXLATITEM X1
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')
     AND E.ACCOUNT = A.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL'
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD) X
GROUP BY X.BUSINESS_UNIT_GL, X.ACCOUNT, X.DESCR, X.DISTRIBUTION_TYPE, X.TRANS_TYPE, X.CATEGORY, X.FISCAL_YEAR
ORDER BY X.ACCOUNT;

--Version 4
--Without Account, Account Descr and Trans type
SELECT X.BUSINESS_UNIT_GL, X.DISTRIBUTION_TYPE, X.CATEGORY, X.FISCAL_YEAR, SUM(X.AM_AMOUNT) AS AM_AMOUNT,
            SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, E.DESCR, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, 
            SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.AMOUNT) ELSE 0 END AS JAN
          , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.AMOUNT) ELSE 0 END AS FEB 
          , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.AMOUNT) ELSE 0 END AS MAR 
          , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.AMOUNT) ELSE 0 END AS APR 
          , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.AMOUNT) ELSE 0 END AS MAY 
          , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.AMOUNT) ELSE 0 END AS JUN 
          , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.AMOUNT) ELSE 0 END AS JUL 
          , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.AMOUNT) ELSE 0 END AS AUG 
          , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.AMOUNT) ELSE 0 END AS SEP 
          , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.AMOUNT) ELSE 0 END AS OCT 
          , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.AMOUNT) ELSE 0 END AS NOV 
          , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.AMOUNT) ELSE 0 END AS DEC
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F, PSXLATITEM X1
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')
     AND E.ACCOUNT = A.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL'
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD) X
GROUP BY X.BUSINESS_UNIT_GL, X.DISTRIBUTION_TYPE, X.CATEGORY, X.FISCAL_YEAR
ORDER BY X.DISTRIBUTION_TYPE, X.CATEGORY;

--Version 5
--Hardcoded the Trans Type values
SELECT X.BUSINESS_UNIT_GL, X.CATEGORY, X.FISCAL_YEAR, 
            SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.PERIOD_YTD) AS "Open Carrying Amount",
            SUM(X.ADD_YTD) AS "Historical Cost/Fair Value", SUM(X.DPR_YTD) AS "Depreciation", SUM(X.PDP_YTD) AS "PDP_YTD", SUM(X.DPR_YTD + X.PDP_YTD) AS "Accum Depr YTD",
            SUM(X.RET_YTD) AS "Disposals", SUM(X.AM_AMOUNT) AS CLOSING_BAL
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, E.DESCR, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, 
            SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE WHEN ACCOUNTING_PERIOD = 0 THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_0
          , CASE WHEN ACCOUNTING_PERIOD > 0 THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_YTD   
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_YTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_YTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS RET_YTD
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL E, PS_SET_CNTRL_REC F, PSXLATITEM X1
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')
     AND E.ACCOUNT = A.ACCOUNT 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL E_ED WHERE E.SETID = E_ED.SETID AND E.ACCOUNT = E_ED.ACCOUNT AND E_ED.EFFDT <= SYSDATE) 
     AND E.SETID = F.SETID 
     AND F.RECNAME = 'GL_ACCOUNT_TBL'
     AND F.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, DESCR, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD) X
GROUP BY X.BUSINESS_UNIT_GL, X.CATEGORY, X.FISCAL_YEAR
ORDER BY X.CATEGORY;

--Version 6
--Added Asset Category Description
--Added transaction types based on AM Accounting Entry Templates for UNU 
SELECT X.BUSINESS_UNIT_GL, X.CATEGORY, X.DESCR AS "Category Description", X.FISCAL_YEAR, 
            SUM(X.ADD_YTD) AS "Historical Cost/Fair Value", SUM(X.DPR_YTD + X.PDP_YTD) AS "Accum Depr/IMP", SUM(X.PERIOD_YTD) AS "Open Carrying Amount",  
            SUM(X.PDP_YTD) AS "Prior Period Depr", SUM(X.RET_YTD) AS "Disposals", 
            SUM(X.DPR_YTD) AS "Depreciation", SUM(X.DPR_YTD + X.RET_YTD) AS "Total Movements/Year", 
            SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.AM_AMOUNT) AS "Closing Balance"
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, A.CATEGORY, CAT.DESCR, 
            A.FISCAL_YEAR, SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE WHEN ACCOUNTING_PERIOD = 0 THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_0
          , CASE WHEN ACCOUNTING_PERIOD > 0 THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_YTD   
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_YTD
          , CASE WHEN (A.TRANS_TYPE = 'ADJ' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS ADJ_YTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_YTD
          , CASE WHEN (A.TRANS_TYPE = 'LPY' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS LPY_YTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RCT' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS RCT_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS RET_YTD
          , CASE WHEN (A.TRANS_TYPE = 'TRF' AND ACCOUNTING_PERIOD > 0) THEN SUM(A.AMOUNT) ELSE 0 END AS TRF_YTD
FROM PS_DIST_LN A, PS_CATEGORY_TBL CAT, PS_SET_CNTRL_REC G, PSXLATITEM X1
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.FISCAL_YEAR = '2013'
     AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')     
     AND A.CATEGORY = CAT.CATEGORY
     AND CAT.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_CATEGORY_TBL A_ED WHERE CAT.SETID = A_ED.SETID AND CAT.CATEGORY = A_ED.CATEGORY AND A_ED.EFFDT <= SYSDATE)
     AND G.SETID = CAT.SETID
     AND G.RECNAME = 'CATEGORY_TBL'
     AND G.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, CAT.DESCR, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD) X
GROUP BY X.BUSINESS_UNIT_GL, X.CATEGORY, X.DESCR, X.FISCAL_YEAR
ORDER BY X.BUSINESS_UNIT_GL, X.FISCAL_YEAR, X.DESCR;

--Experimental Version 1
--8thOCT2014
--UNU_AM_DISTRIB_INFO
--Modelled on EU_2054 report, removed Fiscal Year from column list to show a single line for each account
--Try and avoid date hardcoding
SELECT X.BUSINESS_UNIT_GL, X.ACCOUNT, X.ACCT_DESCR AS "Account Description", X.CATEGORY, X.CAT_DESCR AS "Category Description", --X.FISCAL_YEAR, 
            SUM(X.PERIOD_0 - X.PERIOD_YTD) AS "Beginning of Period",
            SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.PERIOD_YTD) AS "Open Carrying Amount",
            SUM(X.ADD_YTD) AS "Historical Cost/Fair Value", SUM(ADJ_YTD) AS "Adjustments", 
            SUM(X.DPR_YTD) AS "Depreciation", SUM(X.DPR_YTD + X.PDP_YTD) AS "Accum Depr/IMP",
            SUM(X.PDP_YTD) AS "Prior Period Depr", SUM(X.RET_YTD) AS "Disposals", 
            SUM(X.DPR_YTD + X.RET_YTD) AS "Total Movements/Year", SUM(X.AM_AMOUNT) AS "Closing Balance"
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, D.DESCR AS ACCT_DESCR, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, 
            A.CATEGORY, CAT.DESCR AS CAT_DESCR, 
            A.FISCAL_YEAR, SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE WHEN (A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_0
          , CASE WHEN (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_YTD  
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_LTD
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_YTD
          , CASE WHEN (A.TRANS_TYPE = 'ADJ' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS ADJ_LTD
          , CASE WHEN (A.TRANS_TYPE = 'ADJ' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS ADJ_YTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_LTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_YTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_LTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                          THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RCT' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS RCT_LTD
          , CASE WHEN (A.TRANS_TYPE = 'RCT' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS RCT_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS RET_LTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS RET_YTD
          , CASE WHEN (A.TRANS_TYPE = 'TRF' AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS TRF_LTD
          , CASE WHEN (A.TRANS_TYPE = 'TRF' AND (A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS TRF_YTD
FROM PS_DIST_LN A, PS_CATEGORY_TBL CAT, PS_SET_CNTRL_REC G, PSXLATITEM X1, PS_GL_ACCOUNT_TBL D, PS_ASSET AM
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     --AND A.FISCAL_YEAR = '2014'
     AND A.BOOK = 'REPORTING'
     AND A.DISTRIBUTION_TYPE = 'FA'
     AND A.BUSINESS_UNIT = AM.BUSINESS_UNIT
     AND A.ASSET_ID = AM.ASSET_ID
     AND AM.ACQUISITION_CD <> 'L' --exclude LEASED Assets
     AND D.SETID = (SELECT S.SETID FROM PS_SET_CNTRL_REC S WHERE S.RECNAME = 'GL_ACCOUNT_TBL' AND S.SETCNTRLVALUE = A.BUSINESS_UNIT_GL)
     AND A.ACCOUNT = D.ACCOUNT
     AND A.ACCOUNT <> '15100'
     --AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')     
     AND A.CATEGORY = CAT.CATEGORY
     AND CAT.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_CATEGORY_TBL A_ED WHERE CAT.SETID = A_ED.SETID AND CAT.CATEGORY = A_ED.CATEGORY AND A_ED.EFFDT <= SYSDATE)
     AND G.SETID = CAT.SETID
     AND G.RECNAME = 'CATEGORY_TBL'
     AND G.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, D.DESCR, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, CAT.DESCR, A.FISCAL_YEAR, A.ACCOUNTING_DT) X
GROUP BY X.BUSINESS_UNIT_GL, X.ACCOUNT, X.ACCT_DESCR, X.CATEGORY, X.CAT_DESCR--, X.FISCAL_YEAR
ORDER BY X.BUSINESS_UNIT_GL, X.ACCOUNT;--, X.FISCAL_YEAR

--Experimental Version 2
--9thOCT2014
--TO_DATE(:1,'YYYY/MM/DD') NVARCHAR2
--:1 is DATE TO
--:2 is DATE FROM
SELECT X.BUSINESS_UNIT_GL, X.ACCOUNT, X.ACCT_DESCR AS "Account Description", X.CATEGORY, X.CAT_DESCR AS "Category Description", --X.FISCAL_YEAR, 
            SUM(X.PERIOD_0 - X.PERIOD_YTD) AS "Beginning of Period",
            SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.PERIOD_YTD) AS "Open Carrying Amount",
            SUM(X.ADD_YTD) AS "Historical Cost/Fair Value", SUM(ADJ_YTD) AS "Adjustments", 
            SUM(X.DPR_YTD) AS "Depreciation", SUM(X.DPR_YTD + X.PDP_YTD) AS "Accum Depr/IMP",
            SUM(X.PDP_YTD) AS "Prior Period Depr", SUM(X.RET_YTD) AS "Disposals", 
            SUM(X.DPR_YTD + X.RET_YTD) AS "Total Movements/Year", SUM(X.AM_AMOUNT) AS "Closing Balance"
FROM (
SELECT A.BUSINESS_UNIT_GL, A.ACCOUNT, D.DESCR AS ACCT_DESCR, (A.DISTRIBUTION_TYPE || '-' || X1.XLATLONGNAME) AS DISTRIBUTION_TYPE, A.TRANS_TYPE, 
            A.CATEGORY, CAT.DESCR AS CAT_DESCR, 
            A.FISCAL_YEAR, SUM(A.AMOUNT) AS AM_AMOUNT
          , CASE WHEN (A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_0
          , CASE WHEN (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS PERIOD_YTD  
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_LTD
          , CASE WHEN (A.TRANS_TYPE = 'ADD' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS ADD_YTD
          , CASE WHEN (A.TRANS_TYPE = 'ADJ' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS ADJ_LTD
          , CASE WHEN (A.TRANS_TYPE = 'ADJ' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS ADJ_YTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_LTD
          , CASE WHEN (A.TRANS_TYPE = 'DPR' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS DPR_YTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_LTD
          , CASE WHEN (A.TRANS_TYPE = 'PDP' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                          THEN SUM(A.AMOUNT) ELSE 0 END AS PDP_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RCT' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS RCT_LTD
          , CASE WHEN (A.TRANS_TYPE = 'RCT' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS RCT_YTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS RET_LTD
          , CASE WHEN (A.TRANS_TYPE = 'RET' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS RET_YTD
          , CASE WHEN (A.TRANS_TYPE = 'TRF' AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD')) THEN SUM(A.AMOUNT) ELSE 0 END AS TRF_LTD
          , CASE WHEN (A.TRANS_TYPE = 'TRF' AND (A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY/MM/DD') AND A.ACCOUNTING_DT <= TO_DATE(:1,'YYYY/MM/DD'))) 
                                                                                                                           THEN SUM(A.AMOUNT) ELSE 0 END AS TRF_YTD
FROM PS_DIST_LN A, PS_CATEGORY_TBL CAT, PS_SET_CNTRL_REC G, PSXLATITEM X1, PS_GL_ACCOUNT_TBL D, PS_ASSET AM
WHERE A.BUSINESS_UNIT_GL = 'UNUNI'
     --AND A.FISCAL_YEAR = '2014'
     AND A.BOOK = 'REPORTING'
     AND A.DISTRIBUTION_TYPE = 'FA'
     AND A.BUSINESS_UNIT = AM.BUSINESS_UNIT
     AND A.ASSET_ID = AM.ASSET_ID
     AND AM.ACQUISITION_CD <> 'L' --exclude LEASED Assets
     AND D.SETID = (SELECT S.SETID FROM PS_SET_CNTRL_REC S WHERE S.RECNAME = 'GL_ACCOUNT_TBL' AND S.SETCNTRLVALUE = A.BUSINESS_UNIT_GL)
     AND A.ACCOUNT = D.ACCOUNT
     AND A.ACCOUNT <> '15100'
     --AND (A.ACCOUNT LIKE '181%' OR A.ACCOUNT LIKE '186%')     
     AND A.CATEGORY = CAT.CATEGORY
     AND CAT.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_CATEGORY_TBL A_ED WHERE CAT.SETID = A_ED.SETID AND CAT.CATEGORY = A_ED.CATEGORY AND A_ED.EFFDT <= SYSDATE)
     AND G.SETID = CAT.SETID
     AND G.RECNAME = 'CATEGORY_TBL'
     AND G.SETCNTRLVALUE = A.BUSINESS_UNIT
     --XLAT X1
     AND X1.FIELDNAME = 'DISTRIBUTION_TYPE'
     AND X1.FIELDVALUE = A.DISTRIBUTION_TYPE
GROUP BY A.BUSINESS_UNIT_GL, A.ACCOUNT, D.DESCR, A.DISTRIBUTION_TYPE, X1.XLATLONGNAME, A.TRANS_TYPE, A.CATEGORY, CAT.DESCR, A.FISCAL_YEAR, A.ACCOUNTING_DT) X
GROUP BY X.BUSINESS_UNIT_GL, X.ACCOUNT, X.ACCT_DESCR, X.CATEGORY, X.CAT_DESCR--, X.FISCAL_YEAR
ORDER BY X.BUSINESS_UNIT_GL, X.ACCOUNT;--, X.FISCAL_YEAR

--Testing queries
SELECT * FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNDP1' AND DISTRIBUTION_TYPE = 'FA' AND TRANS_TYPE = 'DPR';
--No DPR for Fixed Assets, check UNDP1
SELECT TRANS_TYPE, COUNT(1) FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNDP1' AND DISTRIBUTION_TYPE = 'FA' GROUP BY TRANS_TYPE ORDER BY 1;
--No DPR for Fixed Assets, check UNUNI
SELECT TRANS_TYPE, COUNT(1) FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNUNI' AND DISTRIBUTION_TYPE = 'FA' GROUP BY TRANS_TYPE ORDER BY 1;

SELECT DISTRIBUTION_TYPE, TRANS_TYPE, COUNT(1) 
FROM PS_DIST_LN 
WHERE BUSINESS_UNIT = 'UNUNI'
    AND TRANS_TYPE = 'DPR' 
GROUP BY DISTRIBUTION_TYPE, TRANS_TYPE 
ORDER BY 1,2;

--Use PIVOT function of Oracle
--Without XML
--Selected Categories
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, CATEGORY, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (CATEGORY) IN ('ITC', 'FURN', 'HYME', 'MTRVH'));

--Selected Categories
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (CATEGORY) IN ('ITC', 'FURN', 'HYME', 'MTRVH'))
ORDER BY 1,2,3;

--All Categories
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (CATEGORY) IN ('COINT', 'COTAN', 'HYME', 'INT1', 'INT0', 'INT2', 'AVEQP', 'BLDG', 'CLEA', 'ELEC', 'FPACM', 'FPAIT', 'FURN', 'HVYMC', 'INT', 'ITC', 'LAND', 'LIMP', 'MTRVH', 
                                                                 'NONCP', 'OFMAC', 'SCIMP', 'SECOM', 'SECVH', 'INT3', 'INT4', 'INT5', 'NOCAP', 'SAFTY', 'OFCE1'))
ORDER BY 1,2,3;

--All Categories with Description
--Does not work
--Identifier is too long
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (CATEGORY) IN ('COINT' AS "Construction of Intangibles", 'COTAN' AS "Construction of Tangibleassets", 'HYME' AS "Heavy Machinery and other equipm", 
                                                                  'INT1' AS "Internally Developed Software", 'INT0' AS "Software acquired", 'INT2' AS "Trade Marks", 'AVEQP' AS "Audio Visual Equipment", 
                                                                  'BLDG' AS "Building", 'CLEA' AS "Capital Lease", 'ELEC' AS "Electrical Equip and Computers", 'FPACM' AS "UNFPA Communication Equipments", 
                                                                  'FPAIT' AS "UNFPA IT Equipments", 'FURN' AS "Furnitures and Fixtures", 'HVYMC' AS "Heavy Machinery and Generators", 'INT' AS "Intangibles", 
                                                                  'ITC' AS "Communications and IT Equipmnt", 'LAND' AS "Land", 'LIMP' AS "Lease Hold Improvements", 'MTRVH' AS "Vehicles", 
                                                                  'NONCP' AS "Non Capitalized", 'OFMAC' AS "Office Machinery", 'SCIMP' AS "Security Improvements", 'SECOM' AS "Security Communication Eqpment", 
                                                                  'SECVH' AS "Secuirty Vehicle", 'INT3' AS "Patents Rights", 'INT4' AS "Copy Rights", 'INT5' AS "License and Others", 'NOCAP' AS "Non Capitalized", 
                                                                  'SAFTY' AS "Security and Safety Equipment", 'OFCE1' AS "Office Equipment"))
ORDER BY 1,2,3;

--From TRANS_TYPE POV
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (TRANS_TYPE) IN ('ADD', 'DPR', 'PDP', 'RET'))
ORDER BY 1,2,3;

--All Transaction Types
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (TRANS_TYPE) IN ('ADD', 'ADJ', 'BKS', 'BUD', 'DPR', 'INF', 'LPB', 'LPY', 'PDP', 'RAD', 'RCT', 'REI', 'RES', 'RET', 'RRC', 'SUS', 'TRF'))
ORDER BY 1,2,3;

--All Transaction Types
--With Description
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (TRANS_TYPE) IN ('ADD' AS "Asset Addition", 'ADJ' AS "Asset Cost Adjustment", 'BKS' AS "Book Adjustment", 'BUD' AS "Budgeted Depreciation", 'DPR' AS "Depreciation", 
                                                                     'INF' AS "Inflation Adjustment", 'LPB' AS "Budgeted Lease Payments", 'LPY' AS "Lease Payment", 'PDP' AS "Prior Period Depreciation", 
                                                                     'RAD' AS "Manual Reserve Adjustment", 'RCT' AS "Asset Recategorization", 'REI' AS "Asset Reinstatement", 'RES' AS "Resume Depreciation", 
                                                                     'RET' AS "Asset Retirement", 'RRC' AS "Retro rate change for grp ast", 'SUS' AS "Suspend Depreciation", 'TRF' AS "Asset Transfer"))
ORDER BY 1,2,3;


--Transaction Types based on Accounting Entry Templates for UNU
--ADD, ADJ, DPR, LPY, PDP, RCT, RET, TRF
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, FISCAL_YEAR, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT (SUM(AMOUNT) FOR (TRANS_TYPE) IN ('ADD' AS "Asset Addition", 'ADJ' AS "Asset Cost Adjustment", 'DPR' AS "Depreciation", 'LPY' AS "Lease Payment", 
                                                                     'PDP' AS "Prior Period Depreciation", 'RCT' AS "Asset Recategorization", 'RET' AS "Asset Retirement", 
                                                                     --'SUS' AS "Suspend Depreciation", 
                                                                     'TRF' AS "Asset Transfer"))
ORDER BY 1,2,3;

--With XML
SELECT * FROM
(SELECT BUSINESS_UNIT_GL, CATEGORY, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT XML (SUM(AMOUNT) FOR (CATEGORY) IN (SELECT DISTINCT CATEGORY FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013'));

SELECT * FROM
(SELECT BUSINESS_UNIT_GL, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT XML (SUM(AMOUNT) FOR (CATEGORY, TRANS_TYPE) IN (SELECT DISTINCT CATEGORY, TRANS_TYPE FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013'));

SELECT BUSINESS_UNIT_GL, EXTRACT(CATEGORY_TRANS_TYPE_XML, '/PivotSet/item/column') AS AMOUNT_ELEMENTS FROM
(SELECT BUSINESS_UNIT_GL, CATEGORY, TRANS_TYPE, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT XML (SUM(AMOUNT) FOR (CATEGORY, TRANS_TYPE) IN (SELECT DISTINCT CATEGORY, TRANS_TYPE FROM PS_DIST_LN WHERE BUSINESS_UNIT = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013'));

SELECT * FROM
(SELECT BUSINESS_UNIT_GL, CATEGORY, AMOUNT FROM PS_DIST_LN WHERE BUSINESS_UNIT_GL = 'UNUNI' AND (ACCOUNT LIKE '181%' OR ACCOUNT LIKE '186%') AND FISCAL_YEAR = '2013')
PIVOT XML (SUM(AMOUNT) FOR (CATEGORY) 
IN (SELECT CATEGORY FROM PS_CATEGORY_TBL A WHERE SETID = 'SHARE'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_CATEGORY_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.CATEGORY = A_ED.CATEGORY AND A_ED.EFFDT <= SYSDATE)));

--Testing PIVOT with GL
SELECT * FROM
(SELECT FISCAL_YEAR, OPERATING_UNIT, FUND_CODE, DEPTID, PROJECT_ID, CHARTFIELD2, ACCOUNT, ACCOUNTING_PERIOD, POSTED_BASE_AMT 
FROM PS_LEDGER
WHERE BUSINESS_UNIT = 'UNUNI'
    AND LEDGER = 'USD'
    AND (ACCOUNTING_PERIOD BETWEEN 1 AND 12)
    AND FISCAL_YEAR IN ('2013', '2014')
    --AND PROJECT_ID = '00064159'
    AND EXISTS (SELECT 'X' FROM PS_GL_ACCOUNT_TBL WHERE SETID = 'SHARE' AND PS_GL_ACCOUNT_TBL.ACCOUNT = PS_LEDGER.ACCOUNT AND ACCOUNT_TYPE IN ('E', 'R')))
PIVOT (SUM(POSTED_BASE_AMT) FOR (ACCOUNTING_PERIOD) 
IN (1 AS "JAN", 2 AS "FEB", 3 AS "MAR", 4 AS "APR", 5 AS "MAY", 6 AS "JUN", 7 AS "JUL", 8 AS "AUG", 9 AS "SEP", 10 AS "OCT", 11 AS "NOV", 12 AS "DEC"))
ORDER BY FISCAL_YEAR, OPERATING_UNIT, FUND_CODE, DEPTID, PROJECT_ID, CHARTFIELD2, ACCOUNT;

SELECT B.FIELDNUM, A.FIELDNAME, B.RECNAME, C.LONGNAME, A.FIELDTYPE, A.FORMAT, A.LENGTH, A.DECIMALPOS, C.FIELDNAME, C.LABEL_ID 
FROM PSDBFIELD A, PSRECFIELD B, PSDBFLDLABL C 
WHERE A.FIELDNAME = B.FIELDNAME 
     AND B.FIELDNAME = C.FIELDNAME 
     AND C.DEFAULT_LABEL = 1
     AND B.RECNAME = 'DEPR_RPT'
     --AND B.RECNAME = :1
ORDER BY 1, 2;

SELECT H.BUSINESS_UNIT, H.PO_ID, H.PO_STATUS, H.VENDOR_ID, H.BUDGET_HDR_STATUS, C.LONGNAME
FROM PS_PO_HDR H, PSDBFIELD A, PSRECFIELDDB B, PSDBFLDLABL C
WHERE A.FIELDNAME = B.FIELDNAME
     AND B.FIELDNAME = C.FIELDNAME
     AND C.DEFAULT_LABEL = 1
     AND B.RECNAME = 'PO_HDR'
     AND B.FIELDNAME IN ('BUSINESS_UNIT', 'PO_ID', 'PO_STATUS', 'BUDGET_HDR_STATUS', 'VENDOR_ID')
    AND H.BUSINESS_UNIT = '600UU'
    AND H.PO_ID = '0000007039'
ORDER BY 1,2, B.FIELDNUM;

SELECT * FROM PSDBFIELD WHERE FIELDNAME IN ('BUSINESS_UNIT', 'PO_ID', 'PO_STATUS', 'BUDGET_HDR_STATUS', 'VENDOR_ID');
SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'PO_HDR' AND FIELDNAME IN ('BUSINESS_UNIT', 'PO_ID', 'PO_STATUS', 'BUDGET_HDR_STATUS', 'VENDOR_ID');
SELECT * FROM PSDBFLDLABL WHERE FIELDNAME IN ('BUSINESS_UNIT', 'PO_ID', 'PO_STATUS', 'BUDGET_HDR_STATUS', 'VENDOR_ID') AND DEFAULT_LABEL = 1;

--PS Statutory Reports
--Reporting Tables
SELECT * FROM PS_RPTG_BALANCE;
SELECT * FROM PS_RPTG_DETAIL_TBL;
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_STATUTORY_INFORMATION';
SELECT DISTINCT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'MANAGE_STATUTORY_INFORMATION';
SELECT * FROM PSROLECLASS WHERE CLASSID = 'UN_ALLPAGES';

--UN_KK_FUND_SETTINGS_UNU
--KK Fund information for UNU
SELECT * FROM PS_FUND_TBL A WHERE SETID = 'UNUNI'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
AND EFF_STATUS = 'A'

SELECT * FROM PS_FUND_TBL A WHERE SETID = 'UNFPA'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
AND EFF_STATUS = 'A'

SELECT * FROM PS_KK_FILTER A1 
WHERE SETID = 'UNUNI'
    AND A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
    AND LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
ORDER BY 1,2;

SELECT * FROM PS_KK_FILTER A1 
WHERE A1.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE A1.SETID1 = A_ED.SETID1 AND A1.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
    AND LEDGER_GROUP IN ('ALT_FPA', 'AX1_FPA')
ORDER BY 1,2;

SELECT * FROM PS_KK_CF_VALUE B1
WHERE SETID = 'UNUNI' 
     AND LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
   AND B1.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B1.SETID1 = B_ED.SETID1 AND B1.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;  

SELECT * FROM PS_KK_CF_VALUE B1
WHERE LEDGER_GROUP IN ('ALT_FPA', 'AX1_FPA')
   AND B1.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B1.SETID1 = B_ED.SETID1 AND B1.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

SELECT * FROM PS_KK_KEY_CF B1 WHERE LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
AND B1.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE B1.SETID1 = B_ED.SETID1 AND B1.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
ORDER BY 4;

SELECT SETID1, LEDGER_GROUP, SUBTYPE, LISTAGG(CHARTFIELD, '-') WITHIN GROUP (ORDER BY SUBTYPE) CHARTFIELD
FROM PS_KK_KEY_CF B1
WHERE LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
    AND B1.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE B1.SETID1 = B_ED.SETID1 
                                                                                               AND B1.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
GROUP BY SETID1, LEDGER_GROUP, SUBTYPE
ORDER BY 2,3;

--Version 1
SELECT A.FUND_CODE, A.DESCR AS "Fund Description", C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, 
            LISTAGG(KCF.CHARTFIELD, '-') WITHIN GROUP (ORDER BY C.SUBTYPE) AS "ControlChartfields", 
            DECODE(B.LEDGER_GROUP, 'AX1_UU','Cash', 'ALT_UU','Allocation') AS "ControlMethod"
FROM (PS_FUND_TBL A LEFT OUTER JOIN  PS_KK_CF_VALUE B ON A.FUND_CODE BETWEEN B.RANGE_FROM AND B.RANGE_TO AND B.SETID1 = 'SHARE' 
                                                                                          --AND B.CNTRL_OPTN = '0' 
                                                                                          AND B.LEDGER_GROUP IN ('ALT_UU','AX1_UU')), 
           PS_KK_FILTER C, PS_KK_KEY_CF KCF
WHERE (A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
     AND A.SETID = 'UNUNI'
     AND A.EFF_STATUS = 'A'
     AND A.FUND_CODE BETWEEN C.RANGE_FROM AND C.RANGE_TO
     AND B.SETID1 = C.SETID1
     AND B.SETID1 = KCF.SETID1
     AND B.LEDGER_GROUP = C.LEDGER_GROUP
     AND B.LEDGER_GROUP = KCF.LEDGER_GROUP
     AND KCF.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE KCF.SETID1 = B_ED.SETID1 
                                                     AND KCF.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
     AND C.SUBTYPE = KCF.SUBTYPE
     AND B.EFFDT = KCF.EFFDT
     AND B.EFFDT = C.EFFDT)
GROUP BY A.FUND_CODE, A.DESCR, C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, B.LEDGER_GROUP
ORDER BY 1;

--Version 2
--Include all fund codes irrespective of KK setup
--Removed the Control check Option
SELECT DISTINCT A.FUND_CODE, A.DESCR AS "Fund Description", C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, 
            LISTAGG(KCF.CHARTFIELD, '-') WITHIN GROUP (ORDER BY B.LEDGER_GROUP, C.SUBTYPE) AS "ControlChartfields", 
            DECODE(B.LEDGER_GROUP, 'AX1_UU','Cash', 'ALT_UU','Allocation') AS "ControlMethod"
FROM (((PS_FUND_TBL A LEFT OUTER JOIN  PS_KK_CF_VALUE B ON A.FUND_CODE BETWEEN B.RANGE_FROM AND B.RANGE_TO AND B.SETID1 = 'SHARE' --AND B.CNTRL_OPTN = '0' 
             AND B.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU'))
             LEFT OUTER JOIN PS_KK_FILTER C ON A.FUND_CODE BETWEEN C.RANGE_FROM AND C.RANGE_TO AND C.SETID1 = 'SHARE' AND C.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
             AND B.SETID1 = C.SETID1 AND B.LEDGER_GROUP = C.LEDGER_GROUP AND B.EFFDT = C.EFFDT) 
             LEFT OUTER JOIN PS_KK_KEY_CF KCF ON KCF.SETID1 = 'SHARE' AND KCF.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU') AND C.SETID1 = KCF.SETID1
             AND C.LEDGER_GROUP = KCF.LEDGER_GROUP AND C.SUBTYPE = KCF.SUBTYPE AND C.EFFDT = KCF.EFFDT)
WHERE (A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
     AND A.SETID = 'UNUNI'
     AND A.EFF_STATUS = 'A')
     AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B.SETID1 = B_ED.SETID1 AND B.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
              OR B.EFFDT IS NULL)
     AND (C.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE C.SETID1 = A_ED.SETID1 AND C.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
              OR C.EFFDT IS NULL)
     AND (KCF.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE KCF.SETID1 = B_ED.SETID1 AND KCF.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
            OR KCF.EFFDT IS NULL)
GROUP BY A.FUND_CODE, A.DESCR, C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, B.LEDGER_GROUP
ORDER BY 1;

--Version 3
--Include Tree Information and report whether the Chartfield is required or not
SELECT DISTINCT A.FUND_CODE, A.DESCR AS "Fund Description", C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, 
            LISTAGG(KCF.CHARTFIELD, '-') WITHIN GROUP (ORDER BY B.LEDGER_GROUP, C.SUBTYPE) AS "ControlChartfields", 
            DECODE(B.LEDGER_GROUP, 'AX1_UU','Cash', 'ALT_UU','Allocation') AS "ControlMethod", 
            LISTAGG(KCF.TREE_NAME || ' - ' || KCF.TREE_LEVEL || ' - ' || KCF.VALUE_REQUIRED ,' > ') 
            WITHIN GROUP (ORDER BY B.LEDGER_GROUP, C.SUBTYPE, KCF.CHARTFIELD) AS "TreeName/Level/Value"            
FROM (((PS_FUND_TBL A LEFT OUTER JOIN  PS_KK_CF_VALUE B ON A.FUND_CODE BETWEEN B.RANGE_FROM AND B.RANGE_TO AND B.SETID1 = 'SHARE' --AND B.CNTRL_OPTN = '0' 
             AND B.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU'))
             LEFT OUTER JOIN PS_KK_FILTER C ON A.FUND_CODE BETWEEN C.RANGE_FROM AND C.RANGE_TO AND C.SETID1 = 'SHARE' AND C.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
             AND B.SETID1 = C.SETID1 AND B.LEDGER_GROUP = C.LEDGER_GROUP AND B.EFFDT = C.EFFDT) 
             LEFT OUTER JOIN PS_KK_KEY_CF KCF ON KCF.SETID1 = 'SHARE' AND KCF.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU') AND C.SETID1 = KCF.SETID1
             AND C.LEDGER_GROUP = KCF.LEDGER_GROUP AND C.SUBTYPE = KCF.SUBTYPE AND C.EFFDT = KCF.EFFDT)
WHERE (A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
     AND A.SETID = 'UNUNI'
     AND A.EFF_STATUS = 'A')
     AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B.SETID1 = B_ED.SETID1 AND B.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
              OR B.EFFDT IS NULL)
     AND (C.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE C.SETID1 = A_ED.SETID1 AND C.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
              OR C.EFFDT IS NULL)
     AND (KCF.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE KCF.SETID1 = B_ED.SETID1 AND KCF.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
            OR KCF.EFFDT IS NULL)
GROUP BY A.FUND_CODE, A.DESCR, C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, B.LEDGER_GROUP
ORDER BY 1;

--Version 4
--Take into consideration blank and NULL tree values
SELECT DISTINCT A.FUND_CODE, A.DESCR AS "Fund Description", C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, 
            LISTAGG(KCF.CHARTFIELD, '-') WITHIN GROUP (ORDER BY B.LEDGER_GROUP, C.SUBTYPE) AS "ControlChartfields", 
            DECODE(B.LEDGER_GROUP, 'AX1_UU','Cash', 'ALT_UU','Allocation') AS "ControlMethod", 
            LISTAGG(NVL(DECODE(KCF.TREE_NAME, ' ', '', KCF.TREE_NAME), 'NO_TREE') || ' - ' || NVL(DECODE(KCF.TREE_LEVEL, ' ', '', KCF.TREE_LEVEL), 'NO_TREE_LVL') 
            || ' - ' || NVL(DECODE(KCF.VALUE_REQUIRED, ' ', '', KCF.VALUE_REQUIRED), 'NO_VALUE'),' > ') 
            WITHIN GROUP (ORDER BY B.LEDGER_GROUP, C.SUBTYPE, KCF.CHARTFIELD) AS "TreeName/Level/Value"
FROM (((PS_FUND_TBL A LEFT OUTER JOIN  PS_KK_CF_VALUE B ON A.FUND_CODE BETWEEN B.RANGE_FROM AND B.RANGE_TO AND B.SETID1 = 'SHARE' --AND B.CNTRL_OPTN = '0' 
             AND B.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU'))
             LEFT OUTER JOIN PS_KK_FILTER C ON A.FUND_CODE BETWEEN C.RANGE_FROM AND C.RANGE_TO AND C.SETID1 = 'SHARE' AND C.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU')
             AND B.SETID1 = C.SETID1 AND B.LEDGER_GROUP = C.LEDGER_GROUP AND B.EFFDT = C.EFFDT) 
             LEFT OUTER JOIN PS_KK_KEY_CF KCF ON KCF.SETID1 = 'SHARE' AND KCF.LEDGER_GROUP IN ('ALT_UU', 'AX1_UU') AND C.SETID1 = KCF.SETID1
             AND C.LEDGER_GROUP = KCF.LEDGER_GROUP AND C.SUBTYPE = KCF.SUBTYPE AND C.EFFDT = KCF.EFFDT)
WHERE (A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_FUND_TBL A_ED WHERE A.SETID = A_ED.SETID AND A.FUND_CODE = A_ED.FUND_CODE AND A_ED.EFFDT <= SYSDATE)
     AND A.SETID = 'UNUNI'
     AND A.EFF_STATUS = 'A')
     AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_CF_VALUE B_ED WHERE B.SETID1 = B_ED.SETID1 AND B.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
              OR B.EFFDT IS NULL)
     AND (C.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_KK_FILTER A_ED WHERE C.SETID1 = A_ED.SETID1 AND C.LEDGER_GROUP = A_ED.LEDGER_GROUP AND A_ED.EFFDT <= SYSDATE)
              OR C.EFFDT IS NULL)
     AND (KCF.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_KK_KEY_CF B_ED WHERE KCF.SETID1 = B_ED.SETID1 AND KCF.LEDGER_GROUP = B_ED.LEDGER_GROUP AND B_ED.EFFDT <= SYSDATE)
            OR KCF.EFFDT IS NULL)
GROUP BY A.FUND_CODE, A.DESCR, C.RANGE_FROM, C.RANGE_TO, C.SUBTYPE, B.LEDGER_GROUP
ORDER BY 1;

--Vouchers with no PAYMENT entries as they have not been selected in Paycycle
--Version 1 
SELECT * FROM PS_VCHR_ACCTG_LINE A WHERE A.BUSINESS_UNIT LIKE '6%' AND A.APPL_JRNL_ID = 'ACCRUAL' AND A.POSTING_PROCESS = 'ACCR' AND A.GL_DISTRIB_STATUS = 'D'
AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF X WHERE A.BUSINESS_UNIT = X.BUSINESS_UNIT AND A.VOUCHER_ID = X.VOUCHER_ID AND X.PYMNT_SELCT_STATUS = 'N')
AND EXISTS (SELECT 'X' FROM PS_VCHR_ACCTG_LINE B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.VOUCHER_ID = B.VOUCHER_ID AND A.UNPOST_SEQ = B.UNPOST_SEQ
AND (B.APPL_JRNL_ID <> 'PAYMENT'))
AND A.DST_ACCT_TYPE = 'DST'
AND A.FISCAL_YEAR <= '2013'
--AND A.VOUCHER_ID = '00025379'

--Version 2
SELECT DISTINCT A.BUSINESS_UNIT, A.VOUCHER_ID, A.ACCOUNTING_DT, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.JOURNAL_DATE
FROM PS_VCHR_ACCTG_LINE A WHERE A.BUSINESS_UNIT LIKE '6%' AND A.APPL_JRNL_ID = 'ACCRUAL' AND A.POSTING_PROCESS = 'ACCR' AND A.GL_DISTRIB_STATUS = 'D'
AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF X WHERE A.BUSINESS_UNIT = X.BUSINESS_UNIT AND A.VOUCHER_ID = X.VOUCHER_ID AND X.PYMNT_SELCT_STATUS = 'N')
AND EXISTS (SELECT 'X' FROM PS_VCHR_ACCTG_LINE B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.VOUCHER_ID = B.VOUCHER_ID AND A.UNPOST_SEQ = B.UNPOST_SEQ
AND (B.APPL_JRNL_ID <> 'PAYMENT'))
AND A.DST_ACCT_TYPE = 'DST'
AND A.FISCAL_YEAR <= '2013'
ORDER BY 1,2,3;

--ARGUS User Preferences Issue
--Apparently happening because of flawed PeopleCode logic
SELECT * FROM PS_LOCATION_TBL WHERE SETID = 'UNUNI' AND COUNTRY = 'JPN' AND LOCATION LIKE '600%' 
ORDER BY 1,2;

SELECT * FROM PS_LOCATION_TBL WHERE SETID = 'UNUNI' AND COUNTRY = 'JPN' AND LOCATION LIKE '6%' 
ORDER BY 1,2;

SELECT * FROM PS_SHIPTO_TBL WHERE SETID = 'UNDP1'
SELECT * FROM PS_SHIPTO_TBL WHERE SETID = 'UNUNI'
SELECT * FROM PS_LOCATION_TBL WHERE SETID = 'UNDP1' AND LOCATION LIKE 'IND%'
SELECT * FROM PSOPTIONS

-----------------------------------------------------
--Combination Edits
-----------------------------------------------------
--Retrieve combo data table name
SELECT RECNAME_COMBO_DATA 
FROM PS_LED_TMPLT_TBL A, PS_LED_GRP_TBL B 
WHERE A.LEDGER_TEMPLATE = B.LEDGER_TEMPLATE 
     AND B.LEDGER_GROUP = 'ACTUALS' 
     AND B.SETID = 'SHARE'
ORDER BY 1;

SELECT * FROM PS_COMBO_EDIT_TMPL;
SELECT * FROM PS_COMBO_CF_DEFN WHERE SETID = 'UNUNI';
--Field with FIELD_SEQUENCE 1 for that Combination Defintion is the Anchor ChartField
SELECT * FROM PS_COMBO_FLDS_TBL WHERE SETID = 'UNUNI';
--COMBO RULE
--COMBO_RULE_TBL
--1-COMBO_CF_TBL
--1-COMBO_CF2_REQ
--2--COMBO_VAL_TBL
--2--COMBO_CF2_TBL
--3---COMBO_VAL2_TBL
SELECT * FROM PS_COMBO_RULE_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_CF2_REQ WHERE SETID = 'UNUNI' ORDER BY 1,2,3;
SELECT * FROM PS_COMBO_VAL_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_VAL2_TBL WHERE SETID = 'UNUNI';

--Version 1
--This fails to return correct results as the LISTAGG columns repeat rows
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,
            LISTAGG(B.SEQUENCE_NBR_6 || ' - ' || B.CHARTFIELD || ' - ' || B.HOW_FIELD_SPECIFY || ' - ' || B.TREE_NAME_SETID || ' - ' || B.TREE_NAME || ' - ' || B.TREE_LEVEL, '; ')
            WITHIN GROUP (ORDER BY B.SEQUENCE_NBR_6) AS "Seq/CF/Tree/Level",
            LISTAGG(C.FIELD_SEQUENCE || ' - ' || C.COMBO_CHARTFIELD || ' - ' || C.REQUIRED_FLAG, '; ') 
            WITHIN GROUP (ORDER BY C.FIELD_SEQUENCE, C.COMBO_CHARTFIELD) AS "Non-Anchor CF"--,
            --LISTAGG(D.SEQUENCE_NBR_6 || ' - ' || D.SELECT_VALUE, '; ') WITHIN GROUP (ORDER BY D.SEQUENCE_NBR_6, D.SELECT_VALUE) AS "Anchor CFs"
FROM PS_COMBO_RULE_TBL A, PS_COMBO_CF_TBL B, PS_COMBO_CF2_REQ C--, PS_COMBO_VAL_TBL D
WHERE A.SETID = B.SETID
    AND A.COMBINATION = B.COMBINATION
    AND A.SETID = C.SETID
    AND A.COMBINATION = C.COMBINATION    
--    AND A.SETID = D.SETID
--    AND A.COMBINATION = D.COMBINATION
--    AND B.SEQUENCE_NBR_6 = D.SEQUENCE_NBR_6
    AND A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

--Version 2
--Try to use UNIQUE
--Does not work
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,
            (SELECT LISTAGG(BX.COMBINATION || ' - ' || BX.SEQUENCE_NBR_6 || ' - ' || BX.CHARTFIELD || ' - ' || BX.HOW_FIELD_SPECIFY || ' - ' || BX.TREE_NAME || ' - ' || BX.TREE_LEVEL, '; ')
            WITHIN GROUP (ORDER BY BX.SEQUENCE_NBR_6) AS "Seq/CF/Tree/Level" 
            FROM (SELECT UNIQUE B1.COMBINATION, B1.SEQUENCE_NBR_6, B1.CHARTFIELD, B1.HOW_FIELD_SPECIFY, B1.TREE_NAME_SETID, B1.TREE_NAME, B1.TREE_LEVEL 
            FROM PS_COMBO_CF_TBL B1 WHERE B1.SETID = 'UNUNI') BX GROUP BY BX.COMBINATION) AS "Seq/CF/Tree/Level",
            LISTAGG(C.FIELD_SEQUENCE || ' - ' || C.COMBO_CHARTFIELD || ' - ' || C.REQUIRED_FLAG, '; ') 
            WITHIN GROUP (ORDER BY C.FIELD_SEQUENCE, C.COMBO_CHARTFIELD) AS "Non-Anchor CF"
FROM PS_COMBO_RULE_TBL A, PS_COMBO_CF2_REQ C
WHERE A.SETID = C.SETID
    AND A.COMBINATION = C.COMBINATION
    AND A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

--Version 3
--Seems to work partly
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,
            (SELECT LISTAGG(BX.SEQUENCE_NBR_6 || ' - ' || BX.CHARTFIELD || ' - ' || BX.HOW_FIELD_SPECIFY || ' - ' || BX.TREE_NAME || ' - ' || BX.TREE_LEVEL, '; ')
             WITHIN GROUP (ORDER BY BX.SEQUENCE_NBR_6) AS "Seq/CF/Tree/Level" FROM PS_COMBO_CF_TBL BX 
             WHERE BX.SETID = A.SETID AND BX.COMBINATION = A.COMBINATION) AS "Seq/CF/Tree/Level",
            (SELECT LISTAGG(CX.FIELD_SEQUENCE || ' - ' || CX.COMBO_CHARTFIELD || ' - ' || CX.REQUIRED_FLAG, '; ') 
             WITHIN GROUP (ORDER BY CX.FIELD_SEQUENCE, CX.COMBO_CHARTFIELD) AS "Non-Anchor CF" FROM PS_COMBO_CF2_REQ CX
             WHERE CX.SETID = A.SETID AND CX.COMBINATION = A.COMBINATION) AS "Non-Anchor CF",
            (SELECT LISTAGG(DX.SEQUENCE_NBR_6 || ' - ' || DX.SELECT_VALUE, '; ') WITHIN GROUP (ORDER BY DX.SEQUENCE_NBR_6, DX.SELECT_VALUE) AS "Anchor CFs" 
             FROM PS_COMBO_VAL_TBL DX WHERE DX.SETID = A.SETID AND DX.COMBINATION = A.COMBINATION) AS "Anchor CFs"
FROM PS_COMBO_RULE_TBL A
WHERE A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

--Version 4, WORKS
--Added PS_COMBO_CF2_TBL
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,            
            (SELECT LISTAGG(CX.FIELD_SEQUENCE || ' - ' || CX.COMBO_CHARTFIELD || ' - ' || CX.REQUIRED_FLAG, '; ') 
             WITHIN GROUP (ORDER BY CX.FIELD_SEQUENCE, CX.COMBO_CHARTFIELD) AS "Non-Anchor CF Option" FROM PS_COMBO_CF2_REQ CX
             WHERE CX.SETID = A.SETID AND CX.COMBINATION = A.COMBINATION) AS "Non-Anchor CF Option",
            (SELECT LISTAGG(BX.SEQUENCE_NBR_6 || ' - ' || BX.CHARTFIELD || ' - ' || BX.HOW_FIELD_SPECIFY || ' - ' || BX.TREE_NAME || ' - ' || BX.TREE_LEVEL, '; ')
             WITHIN GROUP (ORDER BY BX.SEQUENCE_NBR_6) AS "CF Combinations" FROM PS_COMBO_CF_TBL BX 
             WHERE BX.SETID = A.SETID AND BX.COMBINATION = A.COMBINATION) AS "CF Combinations", 
            (SELECT LISTAGG(DX.SEQUENCE_NBR_6 || ' - ' || DX.SELECT_VALUE, '; ') WITHIN GROUP (ORDER BY DX.SEQUENCE_NBR_6, DX.SELECT_VALUE) AS "Anchor CFs" 
             FROM PS_COMBO_VAL_TBL DX WHERE DX.SETID = A.SETID AND DX.COMBINATION = A.COMBINATION) AS "Anchor CFs",
            (SELECT LISTAGG(EX.SEQUENCE_NBR_6 || ' - ' || EX.COMBO_CHARTFIELD || ' - ' || EX.HOW_FIELD_SPECIFY || ' - ' || EX.TREE_NAME_SETID || ' - ' || EX.TREE_NAME || ' - ' || 
                                       EX.TREE_LEVEL, '; ') WITHIN GROUP (ORDER BY EX.SEQUENCE_NBR_6, EX.COMBO_CHARTFIELD) AS "Non-Anchor CFs" FROM PS_COMBO_CF2_TBL EX 
             WHERE EX.SETID = A.SETID AND EX.COMBINATION = A.COMBINATION) AS "Non-Anchor CFs"
FROM PS_COMBO_RULE_TBL A
WHERE A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

--Version 5, WORKS
--Added PS_COMBO_VAL2_TBL
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,            
            (SELECT LISTAGG(CX.FIELD_SEQUENCE || ' - ' || CX.COMBO_CHARTFIELD || ' - ' || CX.REQUIRED_FLAG, '; ') 
             WITHIN GROUP (ORDER BY CX.FIELD_SEQUENCE, CX.COMBO_CHARTFIELD) AS "Non-Anchor CF Option" FROM PS_COMBO_CF2_REQ CX
             WHERE CX.SETID = A.SETID AND CX.COMBINATION = A.COMBINATION) AS "Non-Anchor CF Option",
            (SELECT LISTAGG(BX.SEQUENCE_NBR_6 || ' - ' || BX.CHARTFIELD || ' - ' || BX.HOW_FIELD_SPECIFY || ' - ' || BX.TREE_NAME || ' - ' || BX.TREE_LEVEL, '; ')
             WITHIN GROUP (ORDER BY BX.SEQUENCE_NBR_6) AS "Anchor CF Tree" FROM PS_COMBO_CF_TBL BX 
             WHERE BX.SETID = A.SETID AND BX.COMBINATION = A.COMBINATION) AS "Anchor CF Tree", 
            (SELECT LISTAGG(DX.SEQUENCE_NBR_6 || ' - ' || DX.SELECT_VALUE, '; ') WITHIN GROUP (ORDER BY DX.SEQUENCE_NBR_6, DX.SELECT_VALUE) AS "Anchor CFs VAL/TREE" 
             FROM PS_COMBO_VAL_TBL DX WHERE DX.SETID = A.SETID AND DX.COMBINATION = A.COMBINATION) AS "Anchor CFs VAL/TREE",
            (SELECT LISTAGG(EX.SEQUENCE_NBR_6 || ' - ' || EX.COMBO_CHARTFIELD || ' - ' || EX.HOW_FIELD_SPECIFY || ' - ' || EX.TREE_NAME_SETID || ' - ' || EX.TREE_NAME || ' - ' || 
                                       EX.TREE_LEVEL, '; ') WITHIN GROUP (ORDER BY EX.SEQUENCE_NBR_6, EX.COMBO_CHARTFIELD) AS "Non-Anchor CFs" FROM PS_COMBO_CF2_TBL EX 
             WHERE EX.SETID = A.SETID AND EX.COMBINATION = A.COMBINATION) AS "Non-Anchor CFs Tree",
            (SELECT LISTAGG(FX.SEQUENCE_NBR_6 || ' - ' || FX.COMBO_CHARTFIELD || ' - ' || FX.SELECT_VALUE, '; ') 
             WITHIN GROUP (ORDER BY FX.SEQUENCE_NBR_6, FX.COMBO_CHARTFIELD, FX.SELECT_VALUE) AS "Non-Anchor CFs VAL/TREE"
             FROM PS_COMBO_VAL2_TBL FX WHERE FX.SETID = A.SETID AND FX.COMBINATION = A.COMBINATION) AS "Non-Anchor CFs VAL/TREE"
FROM PS_COMBO_RULE_TBL A
WHERE A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

--Version 6
--Add XLAT for BX.HOW_FIELD_SPECIFY, EX.HOW_FIELD_SPECIFY
SELECT A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO,            
            (SELECT LISTAGG(CX.FIELD_SEQUENCE || ' - ' || CX.COMBO_CHARTFIELD || ' - ' || CX.REQUIRED_FLAG, '; ') 
             WITHIN GROUP (ORDER BY CX.FIELD_SEQUENCE, CX.COMBO_CHARTFIELD) AS "Non-Anchor CF Option" FROM PS_COMBO_CF2_REQ CX
             WHERE CX.SETID = A.SETID AND CX.COMBINATION = A.COMBINATION) AS "Non-Anchor CF Option",
            (SELECT LISTAGG(BX.SEQUENCE_NBR_6 || ' - ' || BX.CHARTFIELD || ' - ' || BX.HOW_FIELD_SPECIFY || '-' || X1.XLATLONGNAME || ' - ' || BX.TREE_NAME || ' - ' || 
             BX.TREE_LEVEL, '; ') WITHIN GROUP (ORDER BY BX.SEQUENCE_NBR_6) AS "Anchor CF Tree" FROM PS_COMBO_CF_TBL BX, PSXLATITEM X1  
             WHERE X1.FIELDNAME = 'HOW_FIELD_SPECIFY' AND X1.FIELDVALUE = BX.HOW_FIELD_SPECIFY AND BX.SETID = A.SETID AND BX.COMBINATION = A.COMBINATION) 
             AS "Anchor CF Tree", 
            (SELECT LISTAGG(DX.SEQUENCE_NBR_6 || ' - ' || DX.SELECT_VALUE, '; ') WITHIN GROUP (ORDER BY DX.SEQUENCE_NBR_6, DX.SELECT_VALUE) AS "Anchor CFs VAL/TREE" 
             FROM PS_COMBO_VAL_TBL DX WHERE DX.SETID = A.SETID AND DX.COMBINATION = A.COMBINATION) AS "Anchor CFs VAL/TREE",
            (SELECT LISTAGG(EX.SEQUENCE_NBR_6 || ' - ' || EX.COMBO_CHARTFIELD || ' - ' || EX.HOW_FIELD_SPECIFY || '-' || X1.XLATLONGNAME || ' - ' || EX.TREE_NAME_SETID 
             || ' - ' || EX.TREE_NAME || ' - ' || EX.TREE_LEVEL, '; ') WITHIN GROUP (ORDER BY EX.SEQUENCE_NBR_6, EX.COMBO_CHARTFIELD) AS "Non-Anchor CFs" 
             FROM PS_COMBO_CF2_TBL EX, PSXLATITEM X1 WHERE X1.FIELDNAME = 'HOW_FIELD_SPECIFY' AND X1.FIELDVALUE = EX.HOW_FIELD_SPECIFY AND EX.SETID = A.SETID 
             AND EX.COMBINATION = A.COMBINATION) AS "Non-Anchor CFs Tree",
            (SELECT LISTAGG(FX.SEQUENCE_NBR_6 || ' - ' || FX.COMBO_CHARTFIELD || ' - ' || FX.SELECT_VALUE, '; ') 
             WITHIN GROUP (ORDER BY FX.SEQUENCE_NBR_6, FX.COMBO_CHARTFIELD, FX.SELECT_VALUE) AS "Non-Anchor CFs VAL/TREE"
             FROM PS_COMBO_VAL2_TBL FX WHERE FX.SETID = A.SETID AND FX.COMBINATION = A.COMBINATION) AS "Non-Anchor CFs VAL/TREE"
FROM PS_COMBO_RULE_TBL A
WHERE A.SETID = 'UNUNI'
GROUP BY A.SETID, A.COMBINATION, A.DESCR, A.COMBO_DEFN_NAME, A.VALID_CODE, A.EFFDT_FROM, A.EFFDT_OPEN, A.EFFDT_TO
ORDER BY 1,2;

SELECT * FROM PS_COMBO_GROUP_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_GRRUL_TBL WHERE SETID = 'UNUNI';

SELECT A.SETID, A.PROCESS_GROUP, A.DESCR, A.VALID_CODE, A.USER_DEFINED, A.COMBO_EDIT_OPTION, X1.XLATLONGNAME, 
            A.COMBO_DIRECTION, A.ANCHOR_ONLY, A.COMBO_DEFN_NAME, A.INCREMENT_FLG, A.GL_EXPLODE, A.DESCRLONG 
FROM PS_COMBO_GROUP_TBL A, PSXLATITEM X1 
WHERE SETID = 'UNUNI'
     AND X1.FIELDNAME = 'COMBO_EDIT_OPTION'
     AND X1.FIELDVALUE = A.COMBO_EDIT_OPTION
ORDER BY 1,2,3,4,5;

SELECT * FROM PS_COMBO_CF_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_CF2_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_DATA_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_DATA_BUDG WHERE SETID = 'UNUNI';
SELECT * FROM PS_COMBO_FLDS_VW2 WHERE SETID = 'UNDP1';

SELECT A.SETID, A.COMBINATION, A.SEQUENCE_NBR_6, A.CHARTFIELD, A.HOW_FIELD_SPECIFY, X1.XLATLONGNAME, A.TREE_NAME_SETID, A.TREE_NAME, A.TREE_LEVEL
FROM PS_COMBO_CF_TBL A, PSXLATITEM X1 
WHERE SETID = 'UNUNI'
     AND X1.FIELDNAME = 'HOW_FIELD_SPECIFY'
     AND X1.FIELDVALUE = A.HOW_FIELD_SPECIFY
ORDER BY 1,2,3,4,5;

SELECT A.SETID, A.COMBINATION, A.SEQUENCE_NBR_6, A.COMBO_CHARTFIELD, A.HOW_FIELD_SPECIFY, X1.XLATLONGNAME, A.TREE_NAME_SETID, A.TREE_NAME, A.TREE_LEVEL
FROM PS_COMBO_CF2_TBL A, PSXLATITEM X1 
WHERE SETID = 'UNUNI'
     AND X1.FIELDNAME = 'HOW_FIELD_SPECIFY'
     AND X1.FIELDVALUE = A.HOW_FIELD_SPECIFY
ORDER BY 1,2,3,4,5;

--Summer Tree Prompt if TREE_LEVEL is specified COMBO_CF_TBL.TREE_LEVEL
SELECT * FROM PS_TREE_ND_LEV_VW A 
WHERE TREE_NAME_SETID = 'UNUNI'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TREE_ND_LEV_VW A_ED WHERE A.TREE_NAME_SETID = A_ED.TREE_NAME_SETID AND A.TREE_NAME = A_ED.TREE_NAME 
                                                                   AND A.TREE_LEVEL = A_ED.TREE_LEVEL AND A.TREE_NODE = A_ED.TREE_NODE AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,4;

--FOR WINTER/SPRING TREES, USE THIS PROMPT if TREE_LEVEL is specified COMBO_CF_TBL.TREE_LEVEL
--For WINTER & SPRING Tree Node with level
SELECT * FROM PS_SPWIN_ND_LEV_VW A
WHERE TREE_NAME_SETID = 'UNUNI'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TREE_ND_LEV_VW A_ED WHERE A.TREE_NAME_SETID = A_ED.TREE_NAME_SETID AND A.TREE_NAME = A_ED.TREE_NAME 
                                                                   AND A.TREE_LEVEL = A_ED.TREE_LEVEL AND A.TREE_NODE = A_ED.TREE_NODE AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,4;

--Summer Tree, NO TREE LEVEL
--Tree Node prompt table for 'summer' trees
SELECT * FROM PS_TREE_NODE_VW A
WHERE TREE_NAME_SETID = 'UNUNI'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TREE_ND_LEV_VW A_ED WHERE A.TREE_NAME_SETID = A_ED.TREE_NAME_SETID AND A.TREE_NAME = A_ED.TREE_NAME 
                                                                   AND TREE_NODE = A_ED.TREE_NODE AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,4;

--WINTER & SPRING Trees, NO TREE LEVEL
--Tree Node prompt table for winter and spring trees.
SELECT * FROM PS_SPWIN_TRND_VW A
WHERE TREE_NAME_SETID = 'UNUNI'
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TREE_ND_LEV_VW A_ED WHERE A.TREE_NAME_SETID = A_ED.TREE_NAME_SETID AND A.TREE_NAME = A_ED.TREE_NAME 
                                                                   AND TREE_NODE = A_ED.TREE_NODE AND A_ED.EFFDT <= SYSDATE)
ORDER BY 1,2,3,4;

SELECT A.SETCNTRLVALUE, A.CHARTFIELD, A.TREE_NAME, A.EFFDT_TREE, A.EFF_STATUS 
FROM PS_COMBO_TREECF_VW A 
WHERE A.SETCNTRLVALUE = 'UNUNI' 
    AND A.CHARTFIELD = 'ACCOUNT'
    AND A.EFF_STATUS <> 'I' 
    AND A.EFFDT_TREE = (SELECT MAX(B.EFFDT_TREE) FROM PS_COMBO_TREECF_VW B WHERE B.SETCNTRLVALUE = A.SETCNTRLVALUE AND B.CHARTFIELD = A.CHARTFIELD 
                                                                                                                                       AND B.TREE_NAME=A.TREE_NAME 
                                                                                                                                       AND B.EFFDT_TREE <= SYSDATE)
UNION 
SELECT A.SETCNTRLVALUE, A.CHARTFIELD, A.TREE_NAME, A.EFFDT_TREE, A.EFF_STATUS 
FROM PS_COMBO_TRCF2_VW A --WINTER/SPRING TREES 
WHERE A.EFF_STATUS <> 'I' 
    AND A.EFFDT_TREE = (SELECT MAX(B.EFFDT_TREE) FROM PS_COMBO_TRCF2_VW B WHERE B.SETCNTRLVALUE = A.SETCNTRLVALUE AND B.CHARTFIELD = A.CHARTFIELD 
                                                                                                                       AND B.TREE_NAME = A.TREE_NAME AND B.EFFDT_TREE <= SYSDATE)

SELECT * FROM PS_COMBO_TREECF_VW WHERE SETCNTRLVALUE = 'UNUNI' AND TREE_NAME LIKE 'UNU%';

--Combination CF Definition VW
--COMBO_CFDEFN_VW
--SELECT * FROM PS_COMBO_CFDEFN_VW
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, B.COMBINATION, C.COMBO_DEFN_NAME, D.FIELD_SEQUENCE, D.CHARTFIELD, 'N', F.LENGTH 
FROM PS_BU_LED_COMB_TBL A, PS_COMBO_GRRUL_TBL B, PS_COMBO_RULE_TBL C, PS_COMBO_FLDS_TBL D, PS_SET_CNTRL_REC X, PSDBFIELD F 
WHERE A.PROCESS_GROUP = B.PROCESS_GROUP 
    AND B.SETID = X.SETID 
    AND X.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND X.RECNAME = 'COMBO_RULE_TBL' 
    AND B.SETID = C.SETID 
    AND B.COMBINATION= C.COMBINATION 
    AND C.SETID = D.SETID 
    AND C.COMBO_DEFN_NAME = D.COMBO_DEFN_NAME 
    AND D.FIELD_SEQUENCE = 1
    AND F.FIELDNAME = D.CHARTFIELD
ORDER BY A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, B.COMBINATION, C.COMBO_DEFN_NAME, D.FIELD_SEQUENCE, D.CHARTFIELD;

--Combination CF Definition Vw
--COMBO_CFDEFN_V2
--SELECT * FROM PS_COMBO_CFDEFN_V2
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, B.COMBINATION, C.COMBO_DEFN_NAME, D.FIELD_SEQUENCE, D.CHARTFIELD, E.REQUIRED_FLAG, F.LENGTH 
FROM PS_BU_LED_COMB_TBL A, PS_COMBO_GRRUL_TBL B, PS_COMBO_RULE_TBL C, PS_COMBO_FLDS_TBL D, PS_COMBO_CF2_REQ E, PS_SET_CNTRL_REC X , PSDBFIELD F 
WHERE A.PROCESS_GROUP = B.PROCESS_GROUP 
    AND B.SETID = X.SETID 
    AND X.SETCNTRLVALUE = A.BUSINESS_UNIT 
    AND X.RECNAME = 'COMBO_RULE_TBL' 
    AND B. SETID = C.SETID 
    AND B.COMBINATION= C.COMBINATION 
    AND C.SETID = D.SETID 
    AND C.COMBO_DEFN_NAME = D.COMBO_DEFN_NAME 
    AND B.SETID = E.SETID 
    AND B.COMBINATION = E.COMBINATION 
    AND D.FIELD_SEQUENCE = E.FIELD_SEQUENCE 
    AND F.FIELDNAME = D.CHARTFIELD
ORDER BY A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, B.COMBINATION, C.COMBO_DEFN_NAME, D.FIELD_SEQUENCE, D.CHARTFIELD;

--BU Ledger & COMBO View
--BU_LED_COMB_VW
--SELECT * FROM PS_BU_LED_COMB_VW
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, C.COMBINATION 
FROM PS_BU_LED_COMB_TBL A, PS_COMBO_GROUP_TBL B, PS_COMBO_GRRUL_TBL C, PS_SET_CNTRL_REC X 
WHERE A.PROCESS_GROUP = B.PROCESS_GROUP 
    AND B.PROCESS_GROUP = C.PROCESS_GROUP 
    AND C.SETID = B.SETID 
    AND B.SETID = X.SETID 
    AND X.RECNAME = 'COMBO_RULE_TBL' 
    AND X.SETCNTRLVALUE = A.BUSINESS_UNIT
ORDER BY 1,2,3,4,5;

--CF Combos for Ledger VWG
--BU_LED_COMB_VWG
--SELECT * FROM PS_BU_LED_COMB_VWG
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, B.SETID, B.PROCESS_GROUP, B.ANCHOR_ONLY, B.USER_DEFINED, B.COMBO_EDIT_OPTION, B.COMBO_DIRECTION 
FROM PS_BU_LED_COMB_TBL A, PS_COMBO_GROUP_TBL B, PS_SET_CNTRL_REC X 
WHERE A.PROCESS_GROUP = B.PROCESS_GROUP 
    AND B.SETID = X.SETID 
    AND X.RECNAME = 'COMBO_RULE_TBL' 
    AND X.SETCNTRLVALUE = A.BUSINESS_UNIT
ORDER BY 1,2,3;

SELECT A.FIELD_SEQUENCE, A.CHARTFIELD, A.RECNAME, D.AFFILIATE_TYPE, D.ORIG_CF_NAME, E.LONGNAME 
FROM PS_LED_GRP_FLD_TBL A, PSDBFIELD C, PS_FS_CF_TEMPLATE D, PSDBFLDLABL_VW E 
WHERE A.SETID = 'SHARE' 
    AND A.LEDGER_GROUP = 'ACTUALS' 
    --AND A.CHARTFIELD NOT IN %Bind(FS_CEDT_WRK_AET.FIELDLIST, NOQUOTES) 
    AND A.CHARTFIELD = C.FIELDNAME 
    AND C.FLDNOTUSED = 0 
    AND EXISTS (SELECT 'X' FROM PSRECFIELDDB B WHERE B.FIELDNAME = A.CHARTFIELD AND B.RECNAME = 'JRNL_LN') 
    AND C.FIELDNAME = D.FIELDNAME 
    AND A.CHARTFIELD = E.FIELDNAME 
ORDER BY A.FIELD_SEQUENCE;

SELECT * FROM PS_LED_GRP_FLD_TBL WHERE SETID = 'SHARE' AND LEDGER_GROUP = 'ACTUALS';
--All CFs Table
SELECT * FROM PS_FS_CF_TEMPLATE;

--Prompt Tables for CFs and other Fields
SELECT * FROM PS_FS_FLD_PRMPT_VW;
SELECT * FROM PS_FS_FLD_PROMPT;
--get SETID for Prompt Tables
SELECT *
FROM PS_SET_CNTRL_REC 
WHERE SETCNTRLVALUE = 'UNUNI' 
    AND RECNAME = 'OPER_UNIT_TBL'
ORDER BY 1,2;

SELECT * FROM PS_FS_CE_CFS_TAO;

--Combo Selector tables for UNU
--This is based on the length of the ChartField(s) in question
--Fund Code
SELECT * FROM PS_COMBO_SEL_05 WHERE SETID = 'UNUNI' ORDER BY 1,2,3,4,5,6,7,8;
--Operating Unit
SELECT * FROM PS_COMBO_SEL_08 WHERE SETID = 'UNUNI' ORDER BY 1,2,3,4,5,6,7,8;
--Account, DeptID & Donor(CHARTFIELD2)
SELECT * FROM PS_COMBO_SEL_10 WHERE SETID = 'UNUNI' ORDER BY 1,2,3,4,5,6,7,8;
--Project ID
SELECT * FROM PS_COMBO_SEL_15 WHERE SETID = 'UNUNI' ORDER BY 1,2,3,4,5,6,7,8;

--Query on Combo Selector tables for UNU
--Work in Progress, difficult to interpret, though results match
--Anchored on Table 10 as that contains the Account
--Need to figure out how to transpose columns from Table 10 as that contains more than one ChartField. Rest are fine as they only have info for one ChartField 
SELECT A10.TREE_EFFDT, A10.PROCESS_GROUP, A10.COMBINATION, A10.SEQUENCE_NBR_6, A10.CHARTFIELD, A10.RANGE_FROM_10, A10.RANGE_TO_10,
            A05.CHARTFIELD, A05.RANGE_FROM_05, A05.RANGE_TO_05, 
            A08.CHARTFIELD, A08.RANGE_FROM_08, A08.RANGE_TO_08,            
            A15.CHARTFIELD, A15.RANGE_FROM_15, A15.RANGE_TO_15
FROM (((PS_COMBO_SEL_10 A10 LEFT OUTER JOIN PS_COMBO_SEL_05 A05 ON A10.SETID = A05.SETID AND A10.PROCESS_GROUP = A05.PROCESS_GROUP 
                                                                            AND A10.COMBINATION = A05.COMBINATION AND A10.SEQUENCE_NBR_6 = A05.SEQUENCE_NBR_6) 
                                             LEFT OUTER JOIN PS_COMBO_SEL_08 A08 ON A10.SETID = A08.SETID AND A10.PROCESS_GROUP = A08.PROCESS_GROUP 
                                                                       AND A10.COMBINATION = A08.COMBINATION AND A10.SEQUENCE_NBR_6 = A08.SEQUENCE_NBR_6)  
                                             LEFT OUTER JOIN PS_COMBO_SEL_15 A15 ON A10.SETID = A15.SETID AND A10.PROCESS_GROUP = A15.PROCESS_GROUP 
                                                                       AND A10.COMBINATION = A15.COMBINATION AND A10.SEQUENCE_NBR_6 = A15.SEQUENCE_NBR_6)
WHERE A10.SETID = 'UNUNI'
  --AND A10.CHARTFIELD LIKE 'ACCOUNT%'
  --AND A10.RANGE_FROM_10 LIKE '14%'
ORDER BY 1,2,3,4,5,6,7,8;

-------------------------
--Match Rules
-------------------------
--MTCH_RULE_LEVEL
--LS = AP_VCHR_LN_SUM
--HS = AP_VCHR_HDR_SUM
--LD = AP_VCHR_LN_DET
SELECT * FROM PS_AP_MTCH_RULES;
SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'AP_MTCH_130';
SELECT * FROM PS_AP_RULE_SCOPE;
SELECT * FROM PS_AP_MTCH_WB_FLD;

--Version 1
--Does not work well
SELECT A.MATCH_RULE_ID, A.DESCR50, A.MTCH_RULE_TYPE, A.MTCH_RULE_LEVEL,
            CASE A.MTCH_RULE_LEVEL
            WHEN 'LS' THEN 'AP_VCHR_LN_SUM'
            WHEN 'HS' THEN 'AP_VCHR_HDR_SUM'
            WHEN 'LD' THEN 'AP_VCHR_LN_DET'
            ELSE 'UNKNOWN'
            END AS RULE_REC,
            A.MESSAGE_SET_NBR, A.MESSAGE_NBR, A.SQLID, A.DESCR254, A.OVERRIDE_FLAG, 
            A.WORKFLOW_FLG, A.SEND_EMAIL, A.DAYS_NOTIFY, A.USER_SOURCE, A.ROLENAME, A.SQLID_WHERE, A.ASSTN_SQLID, A.QRYNAME, A.AP_LABEL_NAME, A.SHOW_LABEL, 
            A.DM_CATEGORY, A.TOLERANCE_LEVEL, A.AP_TOL_TYPE, dbms_lob.substr(C.SQLTEXT) AS SQLTEXT,
            LISTAGG(B.ASSTN_NAME, ' > ') WITHIN GROUP (ORDER BY B.MATCH_RULE_ID, B.ASSTN_NAME) AS "Rule-Association",
            --LISTAGG(D.MATCH_OBJECT || ' - ' || D.FIELDNAME, ' > ') WITHIN GROUP (ORDER BY D.MATCH_RULE_ID, D.MATCH_OBJECT, D.FIELDNAME) AS "Workbench-Properties"
            LISTAGG(D.MATCH_OBJECT || ' - ' || D.FIELDNAME, ' > ') WITHIN GROUP (ORDER BY D.MATCH_RULE_ID, D.MATCH_OBJECT, D.FIELDNAME) AS "Workbench-Properties"
FROM PS_AP_MTCH_RULES A, PS_AP_RULE_SCOPE B, PSSQLTEXTDEFN C, PS_AP_MTCH_WB_FLD D
WHERE A.MATCH_RULE_ID = B.MATCH_RULE_ID (+)
    AND A.MATCH_RULE_ID = D.MATCH_RULE_ID (+)    
    AND A.SQLID_WHERE = C.SQLID (+)
GROUP BY A.MATCH_RULE_ID, A.DESCR50, A.MTCH_RULE_TYPE, A.MTCH_RULE_LEVEL, A.MESSAGE_SET_NBR, A.MESSAGE_NBR, A.SQLID, A.DESCR254, A.OVERRIDE_FLAG, 
               A.WORKFLOW_FLG, A.SEND_EMAIL, A.DAYS_NOTIFY, A.USER_SOURCE, A.ROLENAME, A.SQLID_WHERE, A.ASSTN_SQLID, A.QRYNAME, A.AP_LABEL_NAME, A.SHOW_LABEL, 
               A.DM_CATEGORY, A.TOLERANCE_LEVEL, A.AP_TOL_TYPE, dbms_lob.substr(C.SQLTEXT), B.MATCH_RULE_ID, D.MATCH_RULE_ID
ORDER BY 1;

--Version 2
--Seems to work
SELECT A.MATCH_RULE_ID, A.DESCR50, A.MTCH_RULE_TYPE, A.MTCH_RULE_LEVEL,
            CASE A.MTCH_RULE_LEVEL
            WHEN 'LS' THEN 'AP_VCHR_LN_SUM'
            WHEN 'HS' THEN 'AP_VCHR_HDR_SUM'
            WHEN 'LD' THEN 'AP_VCHR_LN_DET'
            ELSE 'UNKNOWN'
            END AS RULE_REC,
            A.MESSAGE_SET_NBR, A.MESSAGE_NBR, A.SQLID, A.OVERRIDE_FLAG, 
            A.WORKFLOW_FLG, A.SEND_EMAIL, A.DAYS_NOTIFY, A.USER_SOURCE, A.ROLENAME, A.SQLID_WHERE, A.ASSTN_SQLID, A.QRYNAME, A.AP_LABEL_NAME, A.SHOW_LABEL, 
            A.DM_CATEGORY, A.TOLERANCE_LEVEL, A.AP_TOL_TYPE, dbms_lob.substr(C.SQLTEXT) AS SQLTEXT,
            LISTAGG(B.ASSTN_NAME, ' > ') WITHIN GROUP (ORDER BY A.MATCH_RULE_ID) AS "Rule-Association",
            (SELECT LISTAGG(A1.MATCH_OBJECT || ' - ' || A1.FIELDNAME, ' > ') WITHIN GROUP (ORDER BY A1.MATCH_RULE_ID) AS "Workbench" FROM PS_AP_MTCH_WB_FLD A1
              WHERE A1.MATCH_RULE_ID = A.MATCH_RULE_ID) AS "Workbench-Properties", A.DESCR254
FROM ((PS_AP_MTCH_RULES A LEFT OUTER JOIN PS_AP_RULE_SCOPE B ON A.MATCH_RULE_ID = B.MATCH_RULE_ID)
                                             LEFT OUTER JOIN PSSQLTEXTDEFN C ON A.SQLID_WHERE = C.SQLID)
--WHERE A.MATCH_RULE_ID = '130'
GROUP BY A.MATCH_RULE_ID, A.DESCR50, A.MTCH_RULE_TYPE, A.MTCH_RULE_LEVEL, A.MESSAGE_SET_NBR, A.MESSAGE_NBR, A.SQLID, A.OVERRIDE_FLAG, 
               A.WORKFLOW_FLG, A.SEND_EMAIL, A.DAYS_NOTIFY, A.USER_SOURCE, A.ROLENAME, A.SQLID_WHERE, A.ASSTN_SQLID, A.QRYNAME, A.AP_LABEL_NAME, A.SHOW_LABEL, 
               A.DM_CATEGORY, A.TOLERANCE_LEVEL, A.AP_TOL_TYPE, dbms_lob.substr(C.SQLTEXT), A.DESCR254
ORDER BY 1;

SELECT * FROM PS_AP_MTCH_RULECFG WHERE MATCH_CNTRL_ID = 'UN_RL_TOL';
SELECT * FROM PS_AP_MTCH_RULES;
SELECT * FROM PS_AP_RULE_SCOPE WHERE ASSTN_NAME = 'VPR'

SELECT S.*, C.* 
FROM PS_AP_RULE_SCOPE S, PS_AP_MTCH_RULECFG C
WHERE C.SETID = 'SHARE'
AND C.MATCH_CNTRL_ID = 'UN_RL_TOL'
AND C.MATCH_RULE_ID = S.MATCH_RULE_ID
AND S.ASSTN_NAME = 'VPR'
AND C.MTCH_RULE_LEVEL = 'LS'
ORDER BY 1;

SELECT * FROM PS_AP_MTCH_RULES
WHERE MATCH_RULE_ID IN (SELECT S.MATCH_RULE_ID FROM PS_AP_RULE_SCOPE S, PS_AP_MTCH_RULECFG C WHERE C.SETID = 'SHARE' AND C.MATCH_CNTRL_ID = 'UN_RL_TOL' 
                                          AND C.MATCH_RULE_ID = S.MATCH_RULE_ID AND S.ASSTN_NAME = 'VPR' AND C.MTCH_RULE_LEVEL = 'LS')
ORDER BY 1;

--614UU RXL/RXG Issue for March 2014
SELECT BUDGET_DT, A.* FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00017522';
--UNUNI    00076955    862
SELECT BUDGET_DT, A.* FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00017156';
--UNUNI    00076955    822PHD
SELECT BUDGET_DT, A.* FROM PS_PO_LINE_DISTRIB A WHERE BUSINESS_UNIT = '614UU' AND PO_ID = '0000006225';
--UNUNI    00076955    862
--UNUNI    00076955    822PHD
SELECT A.* FROM PS_RECV_LN_DISTRIB A WHERE BUSINESS_UNIT = '614UU' AND RECEIVER_ID = '0000000318';
SELECT BUDGET_DT, A.* FROM PS_REQ_LN_DISTRIB A WHERE BUSINESS_UNIT = '614UU' AND REQ_ID = '0000002454';
SELECT * FROM PS_PC_BUD_DETAIL WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00076955' AND BUDGET_PERIOD = 5;

-----------------------------------------------------
--Check KK Exceptions for UNU since inception
-----------------------------------------------------
SELECT TO_CHAR(KK_TRAN_DT, 'YYYY') AS KK_YEAR, BUSINESS_UNIT, KK_SOURCE_TRAN, KK_PROCESS_STATUS, COUNT(1) "Count of Rows"
FROM PS_KK_SOURCE_HDR
WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI' OR BUSINESS_UNIT_PC = 'UNUNI')
     AND KK_PROCESS_STATUS NOT IN ('V', 'W')
GROUP BY TO_CHAR(KK_TRAN_DT, 'YYYY'), BUSINESS_UNIT, KK_SOURCE_TRAN, KK_PROCESS_STATUS
ORDER BY TO_CHAR(KK_TRAN_DT, 'YYYY') DESC, BUSINESS_UNIT, KK_SOURCE_TRAN, KK_PROCESS_STATUS;

--Reqs with KK Exceptions
--Also added PO information. Change KK transaction date to filter
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.REQ_DT, B.REQ_STATUS, B.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS,  
            PO.BUSINESS_UNIT AS PO_BU, PO.PO_ID, PO.DISTRIB_LN_STATUS, E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP,
            A.ACCOUNT, A.OPERATING_UNIT, E.DEPTID AS BUD_DEPT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,  
            A.CURRENCY_CD, A.MONETARY_AMOUNT, A.MONETARY_AMT_BSE, A.CURRENCY_CD_BASE,
            B.REQUESTOR_ID, B.OPRID_ENTERED_BY, B.OPRID_MODIFIED_BY, B.OPRID_APPROVED_BY,
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, E.PROCESS_INSTANCE,
            A.QTY_OPEN, A.AMT_OPEN, A.AMT_OPEN_BSE, A.QTY_OPEN_STD, A.KK_CLOSE_FLAG
FROM PS_REQ_HDR B, (((((PS_REQ_LN_DISTRIB A LEFT OUTER JOIN PS_KK_SOURCE_HDR C ON A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.REQ_ID = C.REQ_ID) 
                                   LEFT OUTER JOIN PS_KK_SOURCE_LN D ON C.KK_TRAN_DT = D.KK_TRAN_DT AND C.KK_TRAN_ID = D.KK_TRAN_ID AND A.LINE_NBR = D.LINE_NBR 
                                                                                           AND A.SCHED_NBR = D.SCHED_NBR AND A.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM)
                                   LEFT OUTER JOIN PS_KK_EXCPTN_TBL E ON D.KK_TRAN_ID = E.KK_TRAN_ID AND D.KK_TRAN_DT = E.KK_TRAN_DT AND D.KK_TRAN_LN = E.KK_TRAN_LN)
                                   LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EXCPTN_TYPE' AND X1.FIELDVALUE = E.EXCPTN_TYPE)
                                   LEFT OUTER JOIN PS_PO_LINE_DISTRIB PO ON PO.BUSINESS_UNIT_REQ = A.BUSINESS_UNIT AND PO.REQ_ID = A.REQ_ID AND PO.REQ_LINE_NBR = A.LINE_NBR
                                                                              AND PO.REQ_SCHED_NBR = A.SCHED_NBR AND PO.REQ_DISTRIB_NBR = A.DISTRIB_LINE_NUM)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND A.BUSINESS_UNIT LIKE '6%'     
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     --AND B.REQ_STATUS NOT IN ('C', 'X')
     AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY 1,2,3,4,5,6;

--PO Budget Exceptions
--Based on PS_DISTRIB_LINE - PO_POENC
--Modified it based on PS delivered view KK_XCP_PO1_VW2
SELECT A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.PO_STATUS, B.RECV_STATUS, B.PO_DT, A.DST_ACCT_TYPE, B.BUDGET_HDR_STATUS,
            B.MATCH_STATUS_PO, A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP, B.VENDOR_ID, B.PO_REF, 
            B.OPRID_ENTERED_BY, B.OPRID_APPROVED_BY, B.OPRID_MODIFIED_BY, 
            A.QTY_PO_STD_EXP, A.CURRENCY_CD, A.MONETARY_AMOUNT, A.MONETARY_AMT_BSE, A.CURRENCY_CD_BASE,
            A.ACCOUNT, A.OPERATING_UNIT, E.DEPTID AS BUD_DEPT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.PROJECT_ID, A.ACTIVITY_ID,
            C.KK_TRAN_ID, C.KK_TRAN_DT, C.KK_SOURCE_TRAN, C.KK_PROCESS_STATUS,
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, E.PROCESS_INSTANCE,
            A.BUSINESS_UNIT_REQ AS BU_REQ, A.REQ_ID, A.REQ_LINE_NBR, A.REQ_SCHED_NBR, A.REQ_DISTRIB_NBR, 
            A.KK_CLOSE_FLAG, A.KK_PROCESS_PRIOR, A.KK_CLOSE_PRIOR           
FROM PS_PO_HDR B, ((((PS_PO_LINE_DISTRIB A LEFT OUTER JOIN PS_KK_SOURCE_HDR C ON A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.PO_ID = C.PO_ID)
                                LEFT OUTER JOIN PS_KK_SOURCE_LN D ON C.KK_TRAN_ID = D.KK_TRAN_ID AND C.KK_TRAN_DT = D.KK_TRAN_DT AND A.LINE_NBR = D.LINE_NBR 
                                                                                         AND A.SCHED_NBR = D.SCHED_NBR AND A.DST_ACCT_TYPE = D.DST_ACCT_TYPE 
                                                                                         AND A.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM)
                                LEFT OUTER JOIN PS_KK_EXCPTN_TBL E ON D.KK_TRAN_ID = E.KK_TRAN_ID AND D.KK_TRAN_DT = E.KK_TRAN_DT AND D.KK_TRAN_LN = E.KK_TRAN_LN) 
                                LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EXCPTN_TYPE' AND X1.FIELDVALUE = E.EXCPTN_TYPE)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.BUDGET_LINE_STATUS IN ('E','N')
     --AND B.PO_STATUS NOT IN ('C', 'X')
     --AND A.DST_ACCT_TYPE <> 'RAC'
     --AND E.LEDGER_GROUP <> 'CHD_UU'
     AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY A.BUSINESS_UNIT, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, B.PO_DT;

--Vouchers with KK Exceptions
--Based on PS_DISTRIB_LINE - AP_VOUCHER
--Modified it based on PS delivered view KK_XCP_AP1_VW2
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, B.VENDOR_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, B.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS, 
            E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP, A.FOREIGN_AMOUNT, A.TXN_CURRENCY_CD, A.MERCHANDISE_AMT, A.MERCH_AMT_BSE, A.ACCOUNTING_DT, 
            B.CLOSE_STATUS, B.ENTRY_STATUS, A.BUDGET_DT, A.QTY_VCHR, A.MONETARY_AMOUNT, A.CURRENCY_CD, A.MONETARY_AMT_BSE, A.BASE_CURRENCY, 
            B.MATCH_STATUS_VCHR, A.LEDGER, B.APPR_STATUS, B.APPR_INSTANCE, B.OPRID, B.OPRID_LAST_UPDT, APPR.ROLEUSER AS OPRID_APPROVED_BY,
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            C.KK_TRAN_ID, C.KK_TRAN_DT, C.KK_SOURCE_TRAN, C.KK_PROCESS_STATUS, 
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, E.PROCESS_INSTANCE,
            A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, 
            A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, B.INVOICE_ID, B.INVOICE_DT,
            A.KK_PROCESS_PRIOR, A.KK_CLOSE_PRIOR
FROM PS_VOUCHER B, ((((PS_DISTRIB_LINE A LEFT OUTER JOIN PS_KK_SOURCE_HDR C ON A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.VOUCHER_ID = C.VOUCHER_ID)
                                   LEFT OUTER JOIN PS_KK_SOURCE_LN D ON C.KK_TRAN_ID = D.KK_TRAN_ID AND C.KK_TRAN_DT = D.KK_TRAN_DT 
                                                                                            AND A.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM AND A.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM)
                                   LEFT OUTER JOIN PS_KK_EXCPTN_TBL E ON D.KK_TRAN_ID = E.KK_TRAN_ID AND D.KK_TRAN_DT = E.KK_TRAN_DT AND D.KK_TRAN_LN = E.KK_TRAN_LN)
                                   LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EXCPTN_TYPE' AND X1.FIELDVALUE = E.EXCPTN_TYPE), PS_APPR_INST_LOG APPR
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND (A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT_GL = 'UNUNI')
     AND A.BUDGET_LINE_STATUS IN ('E', 'N')
     AND B.APPR_INSTANCE = APPR.APPR_INSTANCE 
     AND APPR.APPR_INST_STATUS = 'A'
     --AND B.ENTRY_STATUS NOT IN ('X','T')
     --AND B.CLOSE_STATUS <> 'C'
     AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE;

--Testing Vouchers with KK Exceptions
--Based on VCHR_ACCTG_LINE - AP_ACCT_LN
--Modified it based on PS delivered view KK_XCP_AP2_VW2
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, X1.XLATLONGNAME, 
            E.LEDGER_GROUP, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, A.MERCHANDISE_AMT, A.MERCH_AMT_BSE, A.ACCOUNTING_DT, 
            B.MATCH_STATUS_VCHR, A.APPL_JRNL_ID, A.PYMNT_CNT, A.UNPOST_SEQ, A.DST_ACCT_TYPE, A.LEDGER, A.CF_BAL_LINE_NUM,        
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            C.KK_TRAN_ID, C.KK_TRAN_DT, C.KK_SOURCE_TRAN, C.KK_PROCESS_STATUS, 
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, E.PROCESS_INSTANCE
FROM PS_VOUCHER B, ((((PS_VCHR_ACCTG_LINE A LEFT OUTER JOIN PS_KK_SOURCE_HDR C ON A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.VOUCHER_ID = C.VOUCHER_ID
                                                                            AND A.APPL_JRNL_ID = C.APPL_JRNL_ID AND A.PYMNT_CNT = C.PYMNT_CNT)
                                   LEFT OUTER JOIN PS_KK_SOURCE_LN D ON C.KK_TRAN_ID = D.KK_TRAN_ID AND C.KK_TRAN_DT = D.KK_TRAN_DT 
                                                                                            AND A.VOUCHER_LINE_NUM = D.VOUCHER_LINE_NUM AND A.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
                                                                                            AND A.UNPOST_SEQ = D.UNPOST_SEQ AND A.DST_ACCT_TYPE = D.DST_ACCT_TYPE 
                                                                                            AND A.CF_BAL_LINE_NUM = D.CF_BAL_LINE_NUM AND A.LEDGER = D.LEDGER)
                                   LEFT OUTER JOIN PS_KK_EXCPTN_TBL E ON D.KK_TRAN_ID = E.KK_TRAN_ID AND D.KK_TRAN_DT = E.KK_TRAN_DT AND D.KK_TRAN_LN = E.KK_TRAN_LN)
                                   LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EXCPTN_TYPE' AND X1.FIELDVALUE = E.EXCPTN_TYPE)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND (A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT_GL = 'UNUNI')
     AND A.BUDGET_LINE_STATUS IN ('E', 'N')
     --AND B.ENTRY_STATUS NOT IN ('X','T')
     --AND B.CLOSE_STATUS <> 'C'
     --AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY 1,2,3,4,7;

--GL Journals with Budget Exceptions
--Based on PS_JRNL_LN - GL_JOURNAL
--Modified it based on PS delivered view KK_XCP_GL1_VW2
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, B.JRNL_HDR_STATUS, B.JRNL_EDIT_ERR_STAT, B.JRNL_PROCESS_REQST, 
            BUSINESS_UNIT_IU, B.FISCAL_YEAR, B.ACCOUNTING_PERIOD, B.LEDGER_GROUP, B.LEDGER, A.LEDGER, B.OPRID, B.SOURCE,
            B.BUDGET_HDR_STATUS, A.JOURNAL_LINE, A.BUDGET_LINE_STATUS, E.EXCPTN_TYPE, X1.XLATLONGNAME, E.LEDGER_GROUP, LINE_DESCR, 
            A.BUDGET_DT, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.MONETARY_AMOUNT, A.CURRENCY_CD, 
            A.ACCOUNT, A.OPERATING_UNIT, A.DEPTID, A.FUND_CODE, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
            A.AFFILIATE, A.AFFILIATE_INTRA2, A.AFFILIATE_INTRA1, A.ANALYSIS_TYPE, A.JRNL_LN_REF,
            C.KK_TRAN_ID, C.KK_TRAN_DT, C.KK_SOURCE_TRAN, C.KK_PROCESS_STATUS, 
            E.ACCOUNT, E.DEPTID, E.OPERATING_UNIT, E.FUND_CODE, E.CHARTFIELD2, E.PROJECT_ID, E.ACTIVITY_ID, E.BUDGET_PERIOD, 
            E.AFFILIATE, E.AFFILIATE_INTRA2, E.AFFILIATE_INTRA1, E.PROCESS_INSTANCE, DESCR254
FROM PS_JRNL_HEADER B, ((((PS_JRNL_LN A LEFT OUTER JOIN PS_KK_SOURCE_HDR C ON A.BUSINESS_UNIT = C.BUSINESS_UNIT AND A.JOURNAL_ID = C.JOURNAL_ID 
                                                                                                                             AND A.JOURNAL_DATE = C.JOURNAL_DATE AND A.UNPOST_SEQ = C.UNPOST_SEQ)
                                   LEFT OUTER JOIN PS_KK_SOURCE_LN D ON C.KK_TRAN_ID = D.KK_TRAN_ID AND C.KK_TRAN_DT = D.KK_TRAN_DT
                                                                                            AND A.JOURNAL_LINE = D.JOURNAL_LINE AND A.LEDGER = D.LEDGER)
                                   LEFT OUTER JOIN PS_KK_EXCPTN_TBL E ON D.KK_TRAN_ID = E.KK_TRAN_ID AND D.KK_TRAN_DT = E.KK_TRAN_DT AND D.KK_TRAN_LN = E.KK_TRAN_LN)
                                   LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EXCPTN_TYPE' AND X1.FIELDVALUE = E.EXCPTN_TYPE)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE 
     AND A.UNPOST_SEQ = B.UNPOST_SEQ
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUDGET_LINE_STATUS IN ('E', 'N')
     AND TO_CHAR(C.KK_TRAN_DT, 'YYYY') >= '2014'
     AND B.FISCAL_YEAR >= '2013'
     --AND A.JOURNAL_ID = '0005320912'
ORDER BY A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, A.JOURNAL_LINE;


-------------------------------------------
--KK Budget Definition using LISTAGG
-------------------------------------------
--Version 1
--Does not work for Control ChartFields because of limitations of LISTAGG function to concatenate
SELECT K.SETID1, K.LEDGER_GROUP, K.EFFDT, K.EFF_STATUS, K.CNTRL_OPTN, K.BUDGET_STATUS, K.DESCR, 
            K.BUDG_TYPE, X1.XLATLONGNAME, K.ASSOC_EXP_BD, K.PARENT_BUDGET, K.CHILD_EXCEED, K.CONTROL_CHARTFIELD, K.ALL_VALUES, 
            K.FILTER_CHARTFIELD, K.TREE_NAME, K.TREE_LEVEL, K.ENABLE_FS, K.KK_REV_TRACK_LG, K.SUBTYPE, K.EXPIRE_CHARTFIELD,
            (SELECT LISTAGG(C.SUBTYPE || ' - ' || C.SETID || ' - ' || C.RANGE_FROM || ' - ' || C.RANGE_TO, '; ') 
             WITHIN GROUP (ORDER BY C.SUBTYPE, C.RANGE_FROM, C.RANGE_TO) AS "Ruleset_RANGE"
             FROM PS_KK_FILTER C WHERE C.SETID1 = K.SETID1 AND C.LEDGER_GROUP = K.LEDGER_GROUP AND C.EFFDT = K.EFFDT) AS "Ruleset_RANGE",
            (SELECT LISTAGG(KCF.SUBTYPE || ' - ' || KCF.CHARTFIELD || ' - ' || NVL(DECODE(KCF.TREE_NAME, ' ', '', KCF.TREE_NAME), 'NO_TREE') || ' - ' || 
             NVL(DECODE(KCF.TREE_LEVEL, ' ', '', KCF.TREE_LEVEL), 'NO_TREE_LVL') || ' - ' || NVL(DECODE(KCF.VALUE_REQUIRED, ' ', '', KCF.VALUE_REQUIRED), 'NO_VALUE'),'; ') 
             WITHIN GROUP (ORDER BY KCF.SUBTYPE, KCF.CHARTFIELD) AS "Keys and Translations" 
             FROM PS_KK_KEY_CF KCF WHERE KCF.SETID1 = K.SETID1 AND KCF.LEDGER_GROUP = K.LEDGER_GROUP AND KCF.EFFDT = K.EFFDT) AS "Keys and Translations"--,
            --(SELECT LISTAGG(B.SETID || ' - ' || B.RANGE_FROM || ' - ' || B.RANGE_TO), '; ') 
             --WITHIN GROUP (ORDER BY B.SETID, B.RANGE_FROM, B.RANGE_TO) AS "Control CFs" 
             --FROM PS_KK_CF_VALUE B WHERE B.SETID1 = K.SETID1 AND B.LEDGER_GROUP = K.LEDGER_GROUP AND B.EFFDT = K.EFFDT) AS "Control CFs"
FROM PS_KK_BUDGET_TYPE K, PSXLATITEM X1
WHERE X1.FIELDNAME = 'BUDG_TYPE'
    AND X1.FIELDVALUE = K.BUDG_TYPE     
    AND K.SETID1 = 'SHARE'
    AND K.LEDGER_GROUP LIKE '%UU'
    AND K.EFFDT = (SELECT MAX(K_ED.EFFDT) FROM PS_KK_BUDGET_TYPE K_ED WHERE K.SETID1 = K_ED.SETID1 AND K.LEDGER_GROUP = K_ED.LEDGER_GROUP 
                                                                                                                           AND K_ED.EFFDT <= SYSDATE)    
ORDER BY 1,2;

--Version 2
--Cant get CAST to work. Only added COLLECT
SELECT K.SETID1, K.LEDGER_GROUP, K.EFFDT, K.EFF_STATUS, K.CNTRL_OPTN, K.BUDGET_STATUS, K.DESCR, 
            K.BUDG_TYPE, X1.XLATLONGNAME, K.ASSOC_EXP_BD, K.PARENT_BUDGET, K.CHILD_EXCEED, K.CONTROL_CHARTFIELD, K.ALL_VALUES, 
            K.FILTER_CHARTFIELD, K.TREE_NAME, K.TREE_LEVEL, K.ENABLE_FS, K.KK_REV_TRACK_LG, K.SUBTYPE, K.EXPIRE_CHARTFIELD,
            (SELECT LISTAGG(C.SUBTYPE || ' - ' || C.SETID || ' - ' || C.RANGE_FROM || ' - ' || C.RANGE_TO, '; ') 
             WITHIN GROUP (ORDER BY C.SUBTYPE, C.RANGE_FROM, C.RANGE_TO) AS "Ruleset_RANGE"
             FROM PS_KK_FILTER C WHERE C.SETID1 = K.SETID1 AND C.LEDGER_GROUP = K.LEDGER_GROUP AND C.EFFDT = K.EFFDT) AS "Ruleset_RANGE",
            (SELECT LISTAGG(KCF.SUBTYPE || ' - ' || KCF.CHARTFIELD || ' - ' || NVL(DECODE(KCF.TREE_NAME, ' ', '', KCF.TREE_NAME), 'NO_TREE') || ' - ' || 
             NVL(DECODE(KCF.TREE_LEVEL, ' ', '', KCF.TREE_LEVEL), 'NO_TREE_LVL') || ' - ' || NVL(DECODE(KCF.VALUE_REQUIRED, ' ', '', KCF.VALUE_REQUIRED), 'NO_VALUE'),'; ') 
             WITHIN GROUP (ORDER BY KCF.SUBTYPE, KCF.CHARTFIELD) AS "Keys and Translations" 
             FROM PS_KK_KEY_CF KCF WHERE KCF.SETID1 = K.SETID1 AND KCF.LEDGER_GROUP = K.LEDGER_GROUP AND KCF.EFFDT = K.EFFDT) AS "Keys and Translations",
            (SELECT COLLECT(B.SETID || ' - ' || B.RANGE_FROM || ' - ' || B.RANGE_TO ORDER BY B.SETID, B.RANGE_FROM, B.RANGE_TO) AS "RANGE"             
             FROM PS_KK_CF_VALUE B WHERE B.SETID1 = K.SETID1 AND B.LEDGER_GROUP = K.LEDGER_GROUP AND B.EFFDT = K.EFFDT) AS "Control CFs"
FROM PS_KK_BUDGET_TYPE K, PSXLATITEM X1
WHERE X1.FIELDNAME = 'BUDG_TYPE'
    AND X1.FIELDVALUE = K.BUDG_TYPE
    AND K.SETID1 = 'SHARE'
    AND K.LEDGER_GROUP LIKE '%UU'
    AND K.EFFDT = (SELECT MAX(K_ED.EFFDT) FROM PS_KK_BUDGET_TYPE K_ED WHERE K.SETID1 = K_ED.SETID1 AND K.LEDGER_GROUP = K_ED.LEDGER_GROUP 
                                                                                                                           AND K_ED.EFFDT <= SYSDATE)    
ORDER BY 1,2;

--Version 3
--Replaced LISTAGG/COLLEST with XMLAGG
--Currently testing it
SELECT K.SETID1, K.LEDGER_GROUP, K.EFFDT, K.EFF_STATUS, K.CNTRL_OPTN, K.BUDGET_STATUS, K.DESCR, 
            K.BUDG_TYPE, X1.XLATLONGNAME, K.ASSOC_EXP_BD, K.PARENT_BUDGET, K.CHILD_EXCEED, K.CONTROL_CHARTFIELD, K.ALL_VALUES, 
            K.FILTER_CHARTFIELD, K.TREE_NAME, K.TREE_LEVEL, K.ENABLE_FS, K.KK_REV_TRACK_LG, K.SUBTYPE, K.EXPIRE_CHARTFIELD,
            (SELECT LISTAGG(C.SUBTYPE || ' - ' || C.SETID || ' - ' || C.RANGE_FROM || ' - ' || C.RANGE_TO, '; ') 
             WITHIN GROUP (ORDER BY C.SUBTYPE, C.RANGE_FROM, C.RANGE_TO) AS "Ruleset_RANGE"
             FROM PS_KK_FILTER C WHERE C.SETID1 = K.SETID1 AND C.LEDGER_GROUP = K.LEDGER_GROUP AND C.EFFDT = K.EFFDT) AS "Ruleset_RANGE",
            (SELECT LISTAGG(KCF.SUBTYPE || ' - ' || KCF.CHARTFIELD || ' - ' || NVL(DECODE(KCF.TREE_NAME, ' ', '', KCF.TREE_NAME), 'NO_TREE') || ' - ' || 
             NVL(DECODE(KCF.TREE_LEVEL, ' ', '', KCF.TREE_LEVEL), 'NO_TREE_LVL') || ' - ' || NVL(DECODE(KCF.VALUE_REQUIRED, ' ', '', KCF.VALUE_REQUIRED), 'NO_VALUE'),'; ') 
             WITHIN GROUP (ORDER BY KCF.SUBTYPE, KCF.CHARTFIELD) AS "Keys and Translations" 
             FROM PS_KK_KEY_CF KCF WHERE KCF.SETID1 = K.SETID1 AND KCF.LEDGER_GROUP = K.LEDGER_GROUP AND KCF.EFFDT = K.EFFDT) AS "Keys and Translations",
            (SELECT RTRIM(XMLAGG(XMLELEMENT(E, B.SETID || ' - ' || B.RANGE_FROM || ' - ' || B.RANGE_TO, ';  ').EXTRACT('//text()') 
             ORDER BY B.SETID, B.RANGE_FROM, B.RANGE_TO).GETCLOBVAL(),',') AS "RANGE"             
             FROM PS_KK_CF_VALUE B WHERE B.SETID1 = K.SETID1 AND B.LEDGER_GROUP = K.LEDGER_GROUP AND B.EFFDT = K.EFFDT) AS "Control CFs"
FROM PS_KK_BUDGET_TYPE K, PSXLATITEM X1
WHERE X1.FIELDNAME = 'BUDG_TYPE'
    AND X1.FIELDVALUE = K.BUDG_TYPE
    AND K.SETID1 = 'SHARE'
    AND K.LEDGER_GROUP LIKE '%UU'
    AND K.EFFDT = (SELECT MAX(K_ED.EFFDT) FROM PS_KK_BUDGET_TYPE K_ED WHERE K.SETID1 = K_ED.SETID1 AND K.LEDGER_GROUP = K_ED.LEDGER_GROUP 
                                                                                                                           AND K_ED.EFFDT <= SYSDATE)    
ORDER BY 1,2;

--Retrieve the number of keys in any record
SELECT COUNT(*) FROM PSRECFIELD WHERE RECNAME = 'KK_SOURCE_LN' AND ROUND(USEEDIT/2,0)*2 <> USEEDIT;

--Retrieve the key fieldnames in any record (without a subrecord listing the keyfields)
SELECT FIELDNAME FROM PSRECFIELD WHERE RECNAME = 'KK_ACTIVITY_LOG' AND ROUND(USEEDIT/2,0)*2 <> USEEDIT ORDER BY FIELDNUM;

--PS Keys and Indexes
SELECT * FROM PSKEYDEFN WHERE RECNAME = 'PSOPRDEFN';
SELECT * FROM PSINDEXDEFN WHERE RECNAME = 'PSOPRDEFN';

--Find Records which do not have a TABLESPACE
SELECT R.RECNAME
FROM PSRECDEFN R, USER_TABLES T
WHERE T.TABLE_NAME = DECODE(R.SQLTABLENAME,' ','PS_'||R.RECNAME,R.SQLTABLENAME)
    AND R.RECTYPE IN(0,7)
    AND T.TABLESPACE_NAME IS NULL;
    
SELECT C.RECNAME, LTRIM(TO_CHAR(RANK() OVER (PARTITION BY C.RECNAME ORDER BY C.FIELDNUM)-1,'9')) INDEXID, C.SUBRECNAME, 
            LTRIM(TO_CHAR(RANK() OVER (PARTITION BY C.RECNAME, C.SUBRECNAME ORDER BY C.FIELDNUM)-1,'9')) SUBINDEXID, C.FIELDNAME, C.FIELDNUM
FROM (SELECT R.RECNAME, F.FIELDNAME, F.USEEDIT, F.FIELDNUM, R.RECNAME AS SUBRECNAME FROM PSRECDEFN R, PSRECFIELD F WHERE R.RECNAME = F.RECNAME AND R.RECTYPE IN(0, 1, 6, 7)) C
WHERE MOD(USEEDIT/16,2) = 1
AND C.RECNAME = 'PSOPRDEFN';

--IAS B0750 Issue
--Get the list of Voucher
SELECT JOURNAL_ID, A.* FROM PS_VCHR_ACCTG_LINE A
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
AND JOURNAL_ID IN (SELECT JOURNAL_ID FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND SOURCE = 'AP' AND JRNL_HDR_STATUS = 'E')
ORDER BY BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ;

SELECT DISTINCT JOURNAL_ID FROM PS_VCHR_ACCTG_LINE A
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
AND JOURNAL_ID IN (SELECT JOURNAL_ID FROM PS_JRNL_HEADER WHERE BUSINESS_UNIT = 'UNUNI' AND SOURCE = 'AP' AND JRNL_HDR_STATUS = 'E')
ORDER BY 1;

--Check Ledger entries
SELECT * FROM PS_LEDGER WHERE BUSINESS_UNIT = 'UNUNI' AND DEPTID = 'B0750' ORDER BY 1,2,3;

SELECT * FROM PS_VCHR_ACCTG_LINE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND JOURNAL_ID = 'AP05257729' ORDER BY 1,2,3;
--Find all the Journals which have DeptID B0750
SELECT JOURNAL_ID, A.* FROM PS_VCHR_ACCTG_LINE A WHERE BUSINESS_UNIT_GL = 'UNUNI' AND DEPTID = 'B0750' ORDER BY BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ;

SELECT DISTINCT JOURNAL_ID FROM PS_VCHR_ACCTG_LINE A WHERE BUSINESS_UNIT_GL = 'UNUNI' AND DEPTID = 'B0750' ORDER BY 1;
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID FROM PS_VCHR_ACCTG_LINE A WHERE BUSINESS_UNIT_GL = 'UNUNI' AND DEPTID = 'B0750' ORDER BY 1;
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID FROM PS_DISTRIB_LINE A WHERE BUSINESS_UNIT_GL = 'UNUNI' AND DEPTID = 'B0750' ORDER BY 1;

SELECT * FROM PS_KK_SOURCE_TRAN;

--UNU_UNMATCH_RECEIPTS
--Unmatched receipts
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECEIPT_DT, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, 
            C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2, 
            C.MERCH_AMT_BSE, B.RECV_LN_MATCH_OPT, C.PO_ID
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_RECV_LN_DISTRIB C, PS_PO_HDR D
WHERE A.BUSINESS_UNIT LIKE '6%'
     AND A.RECV_STATUS NOT IN ('X','C')
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.RECEIVER_ID = B.RECEIVER_ID
     AND B.RECV_LN_MATCH_OPT <> 'F'
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.RECEIVER_ID = C.RECEIVER_ID
     AND B.RECV_LN_NBR = C.RECV_LN_NBR
     AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
     AND A.RECEIPT_DT < TO_DATE(SYSDATE,'YYYY-MM-DD')
     AND B.RECV_SHIP_STATUS = 'R'
     --AND C.MERCH_AMT_BSE <> 0
     AND C.BUSINESS_UNIT_PO = D.BUSINESS_UNIT
     AND D.PO_ID = C.PO_ID
     AND D.PO_STATUS <> 'C'
ORDER BY 1, 2, 4, 5, 6;

--Find Old and Orphaned Application Engine instance(s) in the Process Scheduler tables, which result in new processes remaining in Queued or Run Status = Error
--Run Status: 4 = Hold, 5 = Queued, 6 = Initiated, 7 = Processing
SELECT * FROM PSPRCSQUE WHERE PRCSTYPE = 'Application Engine' AND RUNSTATUS IN (4, 5, 6, 7) ORDER BY RQSTDTTM;
SELECT * FROM PSPRCSRQST WHERE PRCSTYPE = 'Application Engine' AND RUNSTATUS IN (4, 5, 6, 7) ORDER BY RQSTDTTM;

--Receipt Delivery Report POY5035-
--Stage 1
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, 
            B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, A.BILL_OF_LADING, A.RECV_STATUS,
            D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_RECV_LN_DISTRIB C, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , PSXLATITEM X1, PSXLATITEM X2,
         PSXLATITEM X3
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM;

--LISTAGG workaround
--select rtrim(xmlagg(xmlelement(e,id,',').extract('//text()') order by id).GetClobVal(),',') from (select level as id from dual connect by level < 1050);

--UNU Receipt Details with PO Comments (All Levels)
--Version 1
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, A.MATCH_STATUS_RECV, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, 
            B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, A.BILL_OF_LADING, A.RECV_STATUS,
            D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE,
            --LISTAGG fails for string length above 4000 characters
            --LISTAGG(POC.COMMENT_TYPE || ' - ' || COM.COMMENTS_2000, ';  ') WITHIN GROUP (ORDER BY COM.COMMENT_ID, COM.RANDOM_CMMT_NBR, COM.OPRID) "Comments"
            RTRIM(XMLAGG(XMLELEMENT(E, POC.COMMENT_TYPE || ' - ' || COM.COMMENTS_2000, ';  ').EXTRACT('//text()') 
            ORDER BY COM.COMMENT_ID, COM.RANDOM_CMMT_NBR, COM.OPRID).GETCLOBVAL(),',') "Comments"
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_RECV_LN_DISTRIB C, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F, PS_PO_COMMENTS POC, 
          PS_COMMENTS_TBL COM
WHERE A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)  
    AND B.BUSINESS_UNIT_PO = POC.BUSINESS_UNIT (+)
    AND B.PO_ID = POC.PO_ID (+)
    AND POC.OPRID = COM.OPRID (+)
    AND POC.RANDOM_CMMT_NBR = COM.RANDOM_CMMT_NBR (+)
    AND POC.COMMENT_ID = COM.COMMENT_ID (+)        
    AND POC.STATUS (+) = 'A'
GROUP BY A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, A.MATCH_STATUS_RECV, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, 
               B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
               B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
               A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID,
               C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, A.BILL_OF_LADING, A.RECV_STATUS,
               D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM;

--Version 2
--Added PSXLATITEM Table
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, 
            B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, A.BILL_OF_LADING, A.RECV_STATUS,
            D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE,
            --LISTAGG fails for string length above 4000 characters
            --LISTAGG(POC.COMMENT_TYPE || ' - ' || COM.COMMENTS_2000, ';  ') WITHIN GROUP (ORDER BY COM.COMMENT_ID, COM.RANDOM_CMMT_NBR, COM.OPRID) "Comments"
            RTRIM(XMLAGG(XMLELEMENT(E, POC.COMMENT_TYPE || ' - ' || COM.COMMENTS_2000, ';  ').EXTRACT('//text()') 
            ORDER BY COM.COMMENT_ID, COM.RANDOM_CMMT_NBR, COM.OPRID).GETCLOBVAL(),',') "Comments"
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_RECV_LN_DISTRIB C, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F, PS_PO_COMMENTS POC, 
          PS_COMMENTS_TBL COM,  PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')  
    AND B.BUSINESS_UNIT_PO = POC.BUSINESS_UNIT (+)
    AND B.PO_ID = POC.PO_ID (+)
    AND POC.OPRID = COM.OPRID (+)
    AND POC.RANDOM_CMMT_NBR = COM.RANDOM_CMMT_NBR (+)
    AND POC.COMMENT_ID = COM.COMMENT_ID (+)        
    AND POC.STATUS (+) = 'A'
GROUP BY A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME, A.MATCH_STATUS_RECV, X2.XLATLONGNAME, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, 
               C.DISTRIB_LINE_NUM, A.RECEIPT_DT, B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, 
               B.INV_ITEM_ID, C.LOCATION, B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
               A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME, C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, 
               B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, A.BILL_OF_LADING, A.RECV_STATUS, 
               D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM;

--Version 3
--Try to add AP/AM interface ables and PS_RECV_LN_ASSET table
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM,
            B.BUSINESS_UNIT_PO, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIn.OPEN_TRANS_ID,
            FIN.PROCESS_INSTANCE,
            D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, 
         (((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Version 4
--Added PS_PO_HDR
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, A.SETID, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIn.OPEN_TRANS_ID,
            FIN.PROCESS_INSTANCE,
            D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, 
         ((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                   AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                   AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Version 5
--Added PS_PO_LINE
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_DESC, POL.CATEGORY_ID, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, POL.RELEASE_NBR, 
            POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIn.OPEN_TRANS_ID,
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, 
         (((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Version 6
--Added Category Information
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, B.CATEGORY_ID, CAT.CATEGORY_CD, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, 
            POL.RELEASE_NBR, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIn.OPEN_TRANS_ID,
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC,
         (((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Version 7
--Added PS_DISTRIB_LINE
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, A.OPRID,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, B.CATEGORY_ID, CAT.CATEGORY_CD, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, 
            POL.RELEASE_NBR, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID,
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR,
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC,
         ((((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID AND G.RECV_LN_NBR = C.RECV_LN_NBR 
                                                        AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR AND G.DISTRIB_LINE_NUM = C.DISTRIB_LINE_NUM 
                                                        --AND G.BUSINESS_UNIT_PO = C.BUSINESS_UNIT_PO AND G.PO_ID = C.PO_ID AND G.LINE_NBR = C.LINE_NBR AND G.SCHED_NBR = C.SCHED_NBR 
                                                        --AND G.PO_DIST_LINE_NUM = C.PO_DIST_LINE_NUM
                                                        )
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Version 8
--Added PS_VOUCHER
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, A.OPRID,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, B.CATEGORY_ID, CAT.CATEGORY_CD, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, 
            POL.RELEASE_NBR, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID,
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR, VC.INVOICE_ID,
            VC.APPR_STATUS, VC.APPR_INSTANCE, VC.OPRID, VC.OPRID_LAST_UPDT, VC.MATCH_STATUS_VCHR,
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC,
         (((((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID AND G.RECV_LN_NBR = C.RECV_LN_NBR 
                                                        AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR AND G.DISTRIB_LINE_NUM = C.DISTRIB_LINE_NUM 
                                                        --AND G.BUSINESS_UNIT_PO = C.BUSINESS_UNIT_PO AND G.PO_ID = C.PO_ID AND G.LINE_NBR = C.LINE_NBR AND G.SCHED_NBR = C.SCHED_NBR 
                                                        --AND G.PO_DIST_LINE_NUM = C.PO_DIST_LINE_NUM
                                                        )
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= B.DUE_DT)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Verification Queries
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000068';
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000067';
SELECT * FROM PS_RECV_LN_DISTRIB WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000067';
SELECT * FROM PS_RECV_LN_ASSET WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000062';
SELECT * FROM PS_INTFC_PRE_AM WHERE PRE_INTFC_ID = '19611' AND BUSINESS_UNIT_AM = 'UNUNI';
SELECT * FROM PS_INTFC_FIN WHERE INTFC_ID = '11004289' AND BUSINESS_UNIT = 'UNUNI';
SELECT * FROM PS_INTFC_PHY_A WHERE INTFC_ID = '11004289' AND BUSINESS_UNIT = 'UNUNI';

SELECT A.BUSINESS_UNIT, A.RECEIVER_ID 
FROM PS_RECV_HDR A 
WHERE A.BUSINESS_UNIT LIKE '6%' 
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    AND EXISTS (SELECT 'X' FROM PS_RECV_LN_SHIP B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.RECEIVER_ID = B.RECEIVER_ID AND B.RECV_SHIP_STATUS NOT IN ('X','C'))
ORDER BY 1,2;

--PPs Receipt Delivery
--Experimental Version 1
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, A.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, A.OPRID,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, B.CATEGORY_ID, CAT.CATEGORY_CD, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, 
            POL.RELEASE_NBR, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU_FIN, FIN.ASSET_ID, FIN.DTTM_STAMP AS FIN_DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            PHYA.BUSINESS_UNIT AS AM_BU_PHYA, PHYA.ASSET_ID AS PHYA_ASSET, PHYA.ACQUISITION_DT, PHYA.DESCR AS ASSET_DESCR,
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR, VC.INVOICE_ID, VC.TXN_CURRENCY_CD AS VCHR_TXN_CURR_CD, 
            VC.GROSS_AMT, VC.GROSS_AMT_BSE, VC.APPR_STATUS, VC.APPR_INSTANCE, VC.OPRID AS VCHR_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT, 
            VC.MATCH_STATUS_VCHR, VC.MATCH_OVERRIDE, VC.MATCHED_DT,
            G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY, 
            VC.RATE_MULT AS VCHR_HDR_RATE_MULT, VC.RATE_DIV AS VCHR_HDR_RATE_DIV, G.RATE_MULT AS VCHR_DIST_RATE_MULT, G.RATE_DIV AS VCHR_DIST_RATE_DIV, 
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC,
         ((((((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON C.BUSINESS_UNIT_PO = POD.BUSINESS_UNIT AND C.PO_ID = POD.PO_ID AND C.LINE_NBR = POD.LINE_NBR AND C.SCHED_NBR = POD.SCHED_NBR
                                                                                 AND C.PO_DIST_LINE_NUM = POD.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((C.BUSINESS_UNIT IS NOT NULL OR C.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID AND G.RECV_LN_NBR = C.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = C.DISTRIB_LINE_NUM))
                  OR ((C.BUSINESS_UNIT IS NULL OR C.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION 
                                                                                                                        --AND G_ED.EFFDT <= B.DUE_DT
                                                                                                                        AND G_ED.EFFDT <= SYSDATE)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--PPs Receipt Delivery
--Experimental Version 2
--Enhanced the query by bringing in additional columns
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECEIPT_DT, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM, A.OPRID,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.DELIVERED_DT, B.QTY_SH_REJCT_VUOM, B.QTY_SH_ACCPT_VUOM, B.QTY_SH_RECVD_VUOM, C.QTY_PO, A.BILL_OF_LADING,
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POH.ACCOUNTING_DT AS PO_ACCT_DT, POD.BUDGET_DT AS PO_BUD_DT, POL.CANCEL_STATUS AS POL_CANCEL_STATUS, 
            POD.DISTRIB_LN_STATUS, POD.KK_CLOSE_FLAG, POD.KK_PROCESS_PRIOR, POD.KK_CLOSE_PRIOR, POD.QTY_PO AS POD_QTY_PO, POD.MERCH_AMT_BSE AS PO_USD_AMT, 
            POC.DISTRIB_MTHD_FLG, POC.MATCH_STATUS_LN_PO, POC.PRICE_PO AS PO_LS_PRICE, POC.PRICE_PO_BSE AS PO_LS_PRICE_BSE, POC.QTY_PO AS PO_LS_QTY, 
            POC.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, POC.CURRENCY_CD AS PO_LS_M_AMT_CURR, POC.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, POC.FREIGHT_TERMS, 
            POC.MATCH_LINE_OPT, POD.MERCHANDISE_AMT AS PO_FOREIGN_AMT, POD.CURRENCY_CD, POH.CURRENCY_CD AS PO_HDR_CURR, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, B.CATEGORY_ID, CAT.CATEGORY_CD, POL.CNTRCT_SETID, POL.CNTRCT_ID, POL.CNTRCT_LINE_NBR, 
            POL.RELEASE_NBR, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, B.INV_ITEM_ID, C.LOCATION, 
            B.DESCR254_MIXED, D.DESCR, B.RECEIPT_UM, B.REJECT_REASON, B.REJECT_ACTION, C.DELIVERED_TO, A.SHIPTO_ID, C.DELIVERED_FLG, 
            A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,            
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU_FIN, FIN.ASSET_ID, FIN.DTTM_STAMP AS FIN_DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            PHYA.BUSINESS_UNIT AS AM_BU_PHYA, PHYA.ASSET_ID AS PHYA_ASSET, PHYA.ACQUISITION_DT, PHYA.DESCR AS ASSET_DESCR,
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR, VC.INVOICE_ID, VC.TXN_CURRENCY_CD AS VCHR_TXN_CURR_CD, 
            VC.GROSS_AMT, VC.GROSS_AMT_BSE, VC.APPR_STATUS, VC.APPR_INSTANCE, VC.OPRID AS VCHR_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT, 
            VC.MATCH_STATUS_VCHR, VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.VOUCHER_STYLE, VC.CLOSE_STATUS, VC.ENTRY_STATUS,
            G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY, 
            VC.RATE_MULT AS VCHR_HDR_RATE_MULT, VC.RATE_DIV AS VCHR_HDR_RATE_DIV, G.RATE_MULT AS VCHR_DIST_RATE_MULT, G.RATE_DIV AS VCHR_DIST_RATE_DIV, G.ACCOUNT "VCHR_ACCOUNT",
            FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_LOCATION_TBL D, PS_VENDOR E, PS_SET_CNTRL_GROUP F , 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC,
         (((((((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PS_PO_LINE_SHIP POC ON C.BUSINESS_UNIT_PO = POC.BUSINESS_UNIT AND C.PO_ID = POC.PO_ID AND C.LINE_NBR = POC.LINE_NBR AND C.SCHED_NBR = POC.SCHED_NBR)
          LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON C.BUSINESS_UNIT_PO = POD.BUSINESS_UNIT AND C.PO_ID = POD.PO_ID AND C.LINE_NBR = POD.LINE_NBR AND C.SCHED_NBR = POD.SCHED_NBR
                                                                                 AND C.PO_DIST_LINE_NUM = POD.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((C.BUSINESS_UNIT IS NOT NULL OR C.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID AND G.RECV_LN_NBR = C.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = C.DISTRIB_LINE_NUM))
                  OR ((C.BUSINESS_UNIT IS NULL OR C.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    --AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND A.BUSINESS_UNIT = F.SETCNTRLVALUE
    AND F.REC_GROUP_ID = 'FS_26'
    AND D.SETID = F.SETID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND C.LOCATION = D.LOCATION
    AND D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION 
                                                                                                                        --AND G_ED.EFFDT <= B.DUE_DT
                                                                                                                        AND G_ED.EFFDT <= SYSDATE)
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM    
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2015-01-01','YYYY-MM-DD') AND TO_DATE('2015-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Receipt Delivery Report
--Experimental Version 3
SELECT A.BUSINESS_UNIT "Receipt BU", A.RECEIVER_ID "Receipt #", TO_CHAR(A.RECEIPT_DT,'YYYY-MM-DD') "Received Date", A.RECV_STATUS, X1.XLATLONGNAME "Receipt Status", A.MATCH_STATUS_RECV, X2.XLATLONGNAME "Match Status",
       B.RECV_LN_NBR "Receipt Line #", B.RECV_SHIP_SEQ_NBR "Receiver Shipping Seq #", C.DISTRIB_LINE_NUM "Distrib Line #", RLA.DISTRIB_SEQ_NUM "Distrib Seq #", A.OPRID "Receipt HDR User ID",
       C.QTY_DS_ACCPT_VUOM "Distributed Qty in Vendor UOM", TO_CHAR(B.DUE_DT,'YYYY-MM-DD') "Due Date", TO_CHAR(C.DELIVERED_DT,'YYYY-MM-DD') "Delivered Date", 
       B.QTY_SH_REJCT_VUOM "Reject Quantity in Vendor UOM", B.QTY_SH_ACCPT_VUOM "Accept Quantity in Vendor UOM", B.QTY_SH_RECVD_VUOM "Receipt Quantity in Vendor UOM", C.QTY_PO "PO Qty on Recv Ln Distrib", 
       A.BILL_OF_LADING "Bill of Lading", B.BUSINESS_UNIT_PO "PO BU", POH.PO_STATUS, X4.XLATLONGNAME "PO Status", B.PO_ID "Purchase Order", B.LINE_NBR "PO Line #", B.SCHED_NBR "PO Sched #", 
       C.PO_DIST_LINE_NUM "PO Distrib Line #", 
       TO_CHAR(POH.PO_DT,'YYYY-MM-DD') "PO Date", TO_CHAR(POH.ACCOUNTING_DT,'YYYY-MM-DD') "PO Accounting Date", TO_CHAR(POD.BUDGET_DT,'YYYY-MM-DD') "PO Budget Date", TO_CHAR(POH.ACTIVITY_DATE,'YYYY-MM-DD') "PO Last Activity",
       POL.CANCEL_STATUS "PO Line Cancel Status", POD.DISTRIB_LN_STATUS "PO Distrib Line Status", POD.KK_CLOSE_FLAG "PO KK Close Flag", POD.KK_PROCESS_PRIOR "PO Process Prior Document", 
       POD.KK_CLOSE_PRIOR "PO Close Prior Transaction", POD.QTY_PO "PO Qty Distrib", POD.MERCH_AMT_BSE "PO Dist Base Merchandise Amt", POC.DISTRIB_MTHD_FLG "Distribute by", POC.MATCH_STATUS_LN_PO "Match Status PO Line", 
       POC.PRICE_PO "PO Price Line Ship", POC.PRICE_PO_BSE "Price Base Line Ship", POC.QTY_PO "PO Qty Line Ship", POC.MERCHANDISE_AMT "Merchandise Amt Line Ship", POC.CURRENCY_CD "Curr Cd Line Ship", 
       POC.MERCH_AMT_BSE "Base Merchandise Amt Line Ship", POC.FREIGHT_TERMS "Freight Terms Code", POC.MATCH_LINE_OPT "Match Line Option", POD.MERCHANDISE_AMT "Merchandise Amt PO Distrib", POD.CURRENCY_CD "Curr Cd PO Distrib", 
       POH.CURRENCY_CD "PO HDR Currency", POL.RECV_REQ, X5.XLATLONGNAME "Receiving Required PO", B.CATEGORY_ID "Category ID", CAT.CATEGORY_CD "Category Code", CAT.ACCOUNT "Category Account",
       B.INV_ITEM_ID "Item ID", ITM.DESCR "Item Descr", P.ACCOUNT "Item Account", POL.CNTRCT_SETID "Contract SetID", POL.CNTRCT_ID "Contract ID", POL.CNTRCT_LINE_NBR "Contract Line #", 
       POL.RELEASE_NBR "Release #", POL.AMT_ONLY_FLG "Amt Only", A.VENDOR_ID  "Vendor ID", E.NAME1 "Vendor Name", C.REQ_ID "Requisition #", C.LOCATION "Location", D.DESCR "Location Description",
       B.DESCR254_MIXED "More Info", B.RECEIPT_UM "Vndr UOM", B.REJECT_REASON "Reject Reason Code", B.REJECT_ACTION "Action On Rejection", C.DELIVERED_TO "Delivered To", A.SHIPTO_ID "Ship To Location", 
       C.DELIVERED_FLG "Delivered Flag", A.INTFC_ASSET "Process AM", C.BUSINESS_UNIT_AM "BU AM", C.PROFILE_ID "AM Profile ID", B.MOVE_STAT_AM, X3.XLATLONGNAME "AM Move Status", RLA.ACTUAL_COST "Unit Cost", 
       RLA.COST "Total Cost", RLA.CUSTODIAN "Custodian", RLA.DESCR "RLA Description", TO_CHAR(CAST((RLA.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "RLA Date/Time Stamp", 
       RLA.FINANCIAL_ASSET_SW "Capitalized Asset", RLA.LOCATION "RLA Location", 
       RLA.MODEL "Model", RLA.SERIAL_ID "Serial ID", RLA.TAG_NUMBER "Tag Number", RLA.PRE_INTFC_ID "Pre-Interface ID", RLA.PRE_INTFC_LINE_NUM "Pre-Interface Line #", RLA.PRICE_PO_BSE "RLA PO Price Base", 
       RLA.RECV_AM_STATUS "RECV AM Intfc Status", PRE.INTFC_ID "Interface ID", PRE.INTFC_LINE_NUM "Interface Line #", PRE.LOAD_STATUS "PRE Load Status", TO_CHAR(PRE.TRANS_DT,'YYYY-MM-DD') "Transaction Date", 
       TO_CHAR(PRE.ACCOUNTING_DT,'YYYY-MM-DD') "AM Intfc Accounting Date", PRE.TXN_COST "Transaction Cost", PRE.TXN_CURRENCY_CD "Transaction Currency", 
       FIN.BUSINESS_UNIT "AM BU FIN", FIN.ASSET_ID "Asset ID FIN", TO_CHAR(CAST((FIN.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "FIN Date/Time Stamp", 
       FIN.INTFC_TYPE "Trans Load Type", FIN.INTFC_STATUS "Interface Status", FIN.LOAD_STATUS "Load Status", TO_CHAR(FIN.IN_SERVICE_DT,'YYYY-MM-DD') "In Service Date", FIN.OPEN_TRANS_ID "Open Transaction ID", 
       PHYA.BUSINESS_UNIT "AM BU PHYA", PHYA.ASSET_ID "Asset ID PHYA", TO_CHAR(PHYA.ACQUISITION_DT,'YYYY-MM-DD') "Acquisition Date", PHYA.DESCR "Asset Descr PHYA",
       G.BUSINESS_UNIT "AP BU", G.VOUCHER_ID "Voucher ID", G.VOUCHER_LINE_NUM "Voucher Line #", G.DISTRIB_LINE_NUM "Voucher Distrib #", G.QTY_VCHR "Quantity VCHR", VC.INVOICE_ID "Invoice ID", 
       VC.TXN_CURRENCY_CD "Voucher Transact Curr", VC.GROSS_AMT "Gross Invoice Amount", VC.GROSS_AMT_BSE "Base Gross Amount", 
       VC.APPR_STATUS "Approval Status", VC.APPR_INSTANCE "Approval Instance", VC.OPRID "Voucher User ID", TO_CHAR(VC.ENTERED_DT,'YYYY-MM-DD') "Voucher Entered on", 
       TO_CHAR(VC.LAST_UPDATE_DT,'YYYY-MM-DD') "Voucher Last Updated", VC.OPRID_LAST_UPDT "Voucher Last User to Update", 
       VC.MATCH_STATUS_VCHR "Voucher Match Status", VC.MATCH_OVERRIDE "Match Override", TO_CHAR(VC.MATCHED_DT,'YYYY-MM-DD') "Voucher Matched Date", 
       VC.VOUCHER_STYLE "Voucher Style", VC.CLOSE_STATUS "Close Status", VC.ENTRY_STATUS "Entry Status",
       G.FOREIGN_AMOUNT "Voucher Dist Foreign Amt", G.TXN_CURRENCY_CD "Voucher Dist Foreign Curr Cd", G.MONETARY_AMOUNT "Voucher Dist Base Amt", G.QTY_VCHR "Voucher Dist Qty", 
       VC.RATE_MULT "Voucher HDR Rate Mult", VC.RATE_DIV "Voucher HDR Rate Div", G.RATE_MULT "Voucher Distrib Rate Mult", G.RATE_DIV "Voucher Distrib Rate Div", G.ACCOUNT "VCHR_ACCOUNT",
       FIN.PROCESS_INSTANCE, D.BUILDING, D.FLOOR, D.ATTN_TO, D.ADDRESS1, D.ADDRESS2, D.ADDRESS3, D.ADDRESS4, D.CITY, D.STATE, D.POSTAL, D.PHONE
FROM ((PS_RECV_HDR A LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'RECV_STATUS' AND X1.FIELDVALUE = A.RECV_STATUS)
       LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'MATCH_STATUS_RECV' AND X2.FIELDVALUE = A.MATCH_STATUS_RECV), 
       ((((PS_RECV_LN_SHIP B LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'MOVE_STAT_AM' AND X3.FIELDVALUE = B.MOVE_STAT_AM)
        LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
        LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
        LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID), PS_VENDOR E,
       ((((((((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                             AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                             AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM) 
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PS_PO_LINE_SHIP POC ON C.BUSINESS_UNIT_PO = POC.BUSINESS_UNIT AND C.PO_ID = POC.PO_ID AND C.LINE_NBR = POC.LINE_NBR AND C.SCHED_NBR = POC.SCHED_NBR)
          LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON C.BUSINESS_UNIT_PO = POD.BUSINESS_UNIT AND C.PO_ID = POD.PO_ID AND C.LINE_NBR = POD.LINE_NBR AND C.SCHED_NBR = POD.SCHED_NBR
                                                AND C.PO_DIST_LINE_NUM = POD.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((C.BUSINESS_UNIT IS NOT NULL OR C.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = C.BUSINESS_UNIT AND G.RECEIVER_ID = C.RECEIVER_ID AND G.RECV_LN_NBR = C.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = C.DISTRIB_LINE_NUM))
                  OR ((C.BUSINESS_UNIT IS NULL OR C.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND POD.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND POD.PO_ID = G.PO_ID AND POD.LINE_NBR = G.LINE_NBR AND POD.SCHED_NBR = G.SCHED_NBR 
                AND POD.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
          LEFT OUTER JOIN PS_LOCATION_TBL D ON C.LOCATION = D.LOCATION)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    --AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND (D.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = A.BUSINESS_UNIT AND F.RECNAME = 'LOCATION_TBL') 
      OR D.SETID IS NULL)
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                        AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    --AND C.QTY_DS_ACCPT_VUOM > 0
    AND (D.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE D.SETID = G_ED.SETID AND D.LOCATION = G_ED.LOCATION --AND G_ED.EFFDT <= B.DUE_DT
                                                                      AND G_ED.EFFDT <= SYSDATE)
      OR D.EFFDT IS NULL)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2015-01-01','YYYY-MM-DD') AND TO_DATE('2015-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--UNU Vendors and Customers
--Based on PS_CUSTOMER
SELECT SETID, CUST_ID, CUST_STATUS, NAME1, NAMESHORT, VENDOR_SETID, VENDOR_ID, SPNSR_TYPE 
FROM PS_CUSTOMER 
WHERE SETID = 'UNUNI' 
    AND VENDOR_ID <> ' '
ORDER BY 1,2;

--Based on PS_VENDOR
SELECT SETID, VENDOR_ID, VENDOR_NAME_SHORT, NAME1, VENDOR_STATUS, CUST_SETID, CUST_ID, AR_NUM
FROM PS_VENDOR 
WHERE SETID = 'UNUNI' 
    AND CUST_ID <> ' '
ORDER BY 1,2;

--UNU_VENDOR_APPROVER
SELECT DISTINCT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.NAME1, A.NAME2, A.VENDOR_STATUS, A.VENDOR_CLASS, A.AR_NUM, A.CUST_SETID, A.CUST_ID,
            TO_CHAR(CAST((A.CREATED_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS CREATED_DTTM, A.CREATED_BY_USER, 
            TO_CHAR(CAST((A.LAST_MODIFIED_DATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_MODIFIED_DATE, A.ENTERED_BY, 
            A.LAST_ACTIVITY_DT, L.ROLEUSER
FROM PS_VENDOR A, PS_UN_VENDOR_WL K, PS_APPR_INST_LOG L
WHERE A.SETID = 'UNUNI'     
     --AND A.VENDOR_ID BETWEEN '0000005935' AND '0000005935'
     --AND A.CREATED_BY_USER LIKE :2
     --AND A.VENDOR_STATUS LIKE :3
     AND A.SETID = K.SETID (+)
     AND A.VENDOR_ID = K.VENDOR_ID (+)
     AND K.BUSPROCNAME = L.BUSPROCNAME (+)
     AND K.APPR_INSTANCE = L.APPR_INSTANCE (+)
     AND (L.APPR_INST_STATUS = 'A' OR L.APPR_INST_STATUS IS NULL)
     --AND TO_CHAR(A.CREATED_DTTM, 'YYYY') > '2013'
     --AND A.CREATED_BY_USER = L.ROLEUSER
ORDER BY 1, 2 DESC;

--UNU Vendor Self Approval
SELECT DISTINCT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.NAME1, A.NAME2, A.VENDOR_STATUS, A.VENDOR_CLASS, A.AR_NUM, A.CUST_SETID, A.CUST_ID,
            TO_CHAR(CAST((A.CREATED_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS CREATED_DTTM, A.CREATED_BY_USER, 
            TO_CHAR(CAST((A.LAST_MODIFIED_DATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_MODIFIED_DATE, A.ENTERED_BY, 
            A.LAST_ACTIVITY_DT, L.ROLEUSER
FROM PS_VENDOR A, PS_UN_VENDOR_WL K, PS_APPR_INST_LOG L
WHERE A.SETID = 'UNUNI'
     --AND A.VENDOR_ID BETWEEN '0000005935' AND '0000005935'
     --AND A.CREATED_BY_USER LIKE :2
     --AND A.VENDOR_STATUS LIKE :3
     AND A.SETID = K.SETID (+)
     AND A.VENDOR_ID = K.VENDOR_ID (+)
     AND K.BUSPROCNAME = L.BUSPROCNAME (+)
     AND K.APPR_INSTANCE = L.APPR_INSTANCE (+)
     AND (L.APPR_INST_STATUS = 'A' OR L.APPR_INST_STATUS IS NULL)
     --AND TO_CHAR(A.CREATED_DTTM, 'YYYY') > '2013'
     AND A.CREATED_BY_USER = L.ROLEUSER
ORDER BY 1, 2 DESC;

--PPs PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, B.INV_ITEM_ID, ITM.DESCR, 
            B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, B.CNTRCT_SETID, B.CNTRCT_ID, B.CNTRCT_LINE_NBR, B.RELEASE_NBR,
            A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO,
            A.PO_DT, A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR,            
            D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO,
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD, C.DUE_DT, C.SHIPTO_ID, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID,
            NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.PROJECT_ID, D.ACTIVITY_ID, D.CHARTFIELD2,
            RH.BUSINESS_UNIT AS RECV_BU, RH.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, 
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM, RH.RECEIPT_DT, 
            RLA.DISTRIB_SEQ_NUM, RH.OPRID,
            RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR,
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR,
            RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, RLD.QTY_PO,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR, VC.INVOICE_ID,
            A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, PS_VENDOR E, PS_MASTER_ITEM_TBL ITM, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC, 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3,
         ((((((((((((((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID 
                                                             AND REQD.LINE_NBR = D.REQ_LINE_NBR AND REQD.SCHED_NBR = D.REQ_SCHED_NBR 
                                                             AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
         LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                    AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                    AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                   AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
         LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
         LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                                   AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND B.ITM_SETID = ITM.SETID
    AND B.INV_ITEM_ID = ITM.INV_ITEM_ID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS' 
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Version 2
--Added additional fields from PS_VOUCHER
--PPs PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, B.INV_ITEM_ID, ITM.DESCR, 
            B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, B.CNTRCT_SETID, B.CNTRCT_ID, B.CNTRCT_LINE_NBR, B.RELEASE_NBR,
            A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO,
            A.PO_DT, A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR,            
            D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO,
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD, C.DUE_DT, C.SHIPTO_ID, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID,
            NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            D.ACCOUNT, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.PROJECT_ID, D.ACTIVITY_ID, D.CHARTFIELD2,
            RH.BUSINESS_UNIT AS RECV_BU, RH.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, 
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM, RH.RECEIPT_DT, 
            RLA.DISTRIB_SEQ_NUM, RH.OPRID,
            RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR,
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR,
            RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, RLD.QTY_PO,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR,
            VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT,
            A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE B, PS_PO_LINE_SHIP C, PS_VENDOR E, PS_MASTER_ITEM_TBL ITM, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC, 
         PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3,
         (((((((((((((((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID 
                                                             AND REQD.LINE_NBR = D.REQ_LINE_NBR AND REQD.SCHED_NBR = D.REQ_SCHED_NBR 
                                                             AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
         LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                    AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                    AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                   AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
         LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
         LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                                   AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND B.ITM_SETID = ITM.SETID
    AND B.INV_ITEM_ID = ITM.INV_ITEM_ID
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS' 
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Version 3
--Added fields based on discussion with Jack
--Include PO rows which do not have an Item
--Include Requisition CF's
--Include CO name for Reqs
--Include Voucher line description
--Reaarange fields
--Added Vendor Class
--Testing PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, 
            B.INV_ITEM_ID, ITM.DESCR, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, B.CNTRCT_SETID, B.CNTRCT_ID, B.CNTRCT_LINE_NBR, B.RELEASE_NBR,
            A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO,
            A.PO_DT, A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR,            
            D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO,
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD, C.DUE_DT, C.SHIPTO_ID,
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID, REQH.OPRID_APPROVED_BY AS REQ_APPR, 
            REQH.APPROVAL_DT AS REQ_APPR_DT,
            REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, REQH.ENTERED_DT AS REQ_ENTERED_DT,
            NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, 
            REQD.ACTIVITY_ID AS REQ_ACT, REQD.CHARTFIELD2 AS REQ_DONOR,
            RH.BUSINESS_UNIT AS RECV_BU, RH.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, 
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM, RH.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, 
            RH.OPRID, RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, 
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR,
            RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, RLD.QTY_PO,
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, VL.VNDR_LOC,
            VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT,
            G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR,
            VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT,
            A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
         ((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
         (((((((((((((((((PS_PO_LINE_DISTRIB D 
         LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR AND REQD.SCHED_NBR = D.REQ_SCHED_NBR 
                                               AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
         LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
         LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                    AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                    AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                     AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
         LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
         LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                                   AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
         LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                       AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                       AND E_ED.EFFDT <= SYSDATE)
         OR CAT.EFFDT IS NULL)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS' 
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    --XLAT X10
    AND X10.FIELDNAME = 'VENDOR_CLASS'
    AND X10.FIELDVALUE = E.VENDOR_CLASS
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')    
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Version 5
--Added Payment Information
--Does not seem to return correct results for Payment...Tested PO 600UU/7043...Receipt ID 1781/1851/1915
--Testing PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, B.INV_ITEM_ID, ITM.DESCR, 
       B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
       B.CATEGORY_ID, CAT.CATEGORY_CD, B.CNTRCT_SETID, B.CNTRCT_ID, B.CNTRCT_LINE_NBR, B.RELEASE_NBR,
       A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO,
       A.PO_DT, A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR,            
       D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO,
       D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD, C.DUE_DT, C.SHIPTO_ID,
       D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, D.CHARTFIELD2 AS PO_DONOR, 
       D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID, REQH.OPRID_APPROVED_BY AS REQ_APPR, REQH.APPROVAL_DT AS REQ_APPR_DT,
       REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, REQH.ENTERED_DT AS REQ_ENTERED_DT,
       NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
       REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, REQD.ACTIVITY_ID AS REQ_ACT, 
       REQD.CHARTFIELD2 AS REQ_DONOR,
       RH.BUSINESS_UNIT AS RECV_BU, RH.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, 
       RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM, RH.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, RH.OPRID,
       RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR,
       RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, RLD.QTY_PO,
       RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
       RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
       PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
       FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
       G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, VL.VNDR_LOC,
       VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT,
       G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR,
       VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT,
       XREF.PYMNT_ID, XREF.PYMNT_HOLD, XREF.PYMNT_SELCT_STATUS, X11.XLATLONGNAME AS PYMNT_SELCT_STS, XREF.PAID_AMT, XREF.PYMNT_GROSS_AMT, 
       XREF.BANK_SETID, XREF.BANK_CD, XREF.BANK_ACCT_KEY, PYMNT.PYMNT_ID, PYMNT.PYMNT_ID_REF, PYMNT.PAY_CYCLE, 
       PYMNT.PYMNT_STATUS, X12.XLATLONGNAME AS PYMNT_STS_DESCR, PYMNT.POST_STATUS_AP, X13.XLATLONGNAME AS PYMNT_POST_STS, 
       PYMNT.RECON_STATUS, PYMNT.CANCEL_POST_STATUS, X14.XLATLONGNAME AS PYMNT_CANCEL_STS,
       PYMNT.PYMNT_DT, PYMNT.CREATION_DT, PYMNT.OPRID AS PYMNT_CREATOR, PYMNT.PYMNT_METHOD, PYMNT.BRANCH_NAME, 
       A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
     ((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                    LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
     (((((((((((((((((((((((PS_PO_LINE_DISTRIB D 
         LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR AND REQD.SCHED_NBR = D.REQ_SCHED_NBR 
                                               AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
         LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
         LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                    AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                    AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                     AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
         LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
         LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                                   AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
         LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
         LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON VC.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND VC.VOUCHER_ID = XREF.VOUCHER_ID)
         LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X11.FIELDVALUE = XREF.PYMNT_SELCT_STATUS)
         LEFT OUTER JOIN PS_PAYMENT_TBL PYMNT ON XREF.BANK_SETID = PYMNT.BANK_SETID AND XREF.BANK_CD= PYMNT.BANK_CD AND XREF.BANK_ACCT_KEY = PYMNT.BANK_ACCT_KEY AND XREF.PYMNT_ID = PYMNT.PYMNT_ID)
         LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'PYMNT_STATUS' AND X12.FIELDVALUE = PYMNT.PYMNT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'POST_STATUS_AP' AND X13.FIELDVALUE = PYMNT.POST_STATUS_AP)
         LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'CANCEL_POST_STATUS' AND X14.FIELDVALUE = PYMNT.CANCEL_POST_STATUS)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                       AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                       AND E_ED.EFFDT <= SYSDATE)
         OR CAT.EFFDT IS NULL)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS' 
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    --XLAT X10
    AND X10.FIELDNAME = 'VENDOR_CLASS'
    AND X10.FIELDVALUE = E.VENDOR_CLASS
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Version 6
--Changed the Join Clause for DISTRIB_LINE table. It will now also join with RECV_LN_DISTRIB
--Added IS NULL clauses, but need to test
--Testing PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, B.INV_ITEM_ID, ITM.DESCR, 
       B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
       B.CATEGORY_ID, CAT.CATEGORY_CD, B.CNTRCT_SETID, B.CNTRCT_ID, B.CNTRCT_LINE_NBR, B.RELEASE_NBR,
       A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO,
       A.PO_DT, A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR,            
       D.QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO,
       D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD, C.DUE_DT, C.SHIPTO_ID,
       D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, D.CHARTFIELD2 AS PO_DONOR, 
       D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID, REQH.OPRID_APPROVED_BY AS REQ_APPR, REQH.APPROVAL_DT AS REQ_APPR_DT,
       REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, REQH.ENTERED_DT AS REQ_ENTERED_DT,
       NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
       REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, REQD.ACTIVITY_ID AS REQ_ACT, 
       REQD.CHARTFIELD2 AS REQ_DONOR,
       RH.BUSINESS_UNIT AS RECV_BU, RH.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, 
       RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM, RH.RECEIPT_DT, RLA.DISTRIB_SEQ_NUM, RH.OPRID,
       RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR,
       RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, RLD.QTY_PO,
       RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
       RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
       PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
       FIN.BUSINESS_UNIT AS AM_BU, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
       G.BUSINESS_UNIT AS AP_BU, G.VOUCHER_ID, VC.ENTRY_STATUS, X15.XLATLONGNAME AS VCHR_ENTRY_STATUS, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, VL.VNDR_LOC,
       VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT,
       G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY,
       G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR,
       VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT,
       XREF.PYMNT_ID, XREF.PYMNT_HOLD, XREF.PYMNT_SELCT_STATUS, X11.XLATLONGNAME AS PYMNT_SELCT_STS, XREF.PAID_AMT, XREF.PYMNT_GROSS_AMT, 
       XREF.BANK_SETID, XREF.BANK_CD, XREF.BANK_ACCT_KEY, PYMNT.PYMNT_ID, PYMNT.PYMNT_ID_REF, PYMNT.PAY_CYCLE, 
       PYMNT.PYMNT_STATUS, X12.XLATLONGNAME AS PYMNT_STS_DESCR, PYMNT.POST_STATUS_AP, X13.XLATLONGNAME AS PYMNT_POST_STS, 
       PYMNT.RECON_STATUS, PYMNT.CANCEL_POST_STATUS, X14.XLATLONGNAME AS PYMNT_CANCEL_STS,
       PYMNT.PYMNT_DT, PYMNT.CREATION_DT, PYMNT.OPRID AS PYMNT_CREATOR, PYMNT.PYMNT_METHOD, PYMNT.BRANCH_NAME, 
       A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
     ((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                    LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
     ((((((((((((((((((((((((PS_PO_LINE_DISTRIB D 
         LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR AND REQD.SCHED_NBR = D.REQ_SCHED_NBR 
                                               AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
         LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
         LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                    AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                    AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
         LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                     AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
         LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
         LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
         LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                         AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM 
                         --AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT OR G.BUSINESS_UNIT_RECV IS NULL)
                         AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT OR RLD.BUSINESS_UNIT IS NULL)
                         --AND (G.RECEIVER_ID = RLD.RECEIVER_ID OR G.RECEIVER_ID IS NULL)
                         AND (G.RECEIVER_ID = RLD.RECEIVER_ID OR RLD.RECEIVER_ID IS NULL)
                         --AND (G.RECV_LN_NBR = RLD.RECV_LN_NBR OR G.RECV_LN_NBR IS NULL) 
                         AND (G.RECV_LN_NBR = RLD.RECV_LN_NBR OR RLD.RECV_LN_NBR IS NULL) 
                         --AND (G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR OR G.RECV_SHIP_SEQ_NBR IS NULL) 
                         AND (G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR OR RLD.RECV_SHIP_SEQ_NBR IS NULL)
                         --AND (G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM OR G.RECV_DIST_LINE_NUM IS NULL)
                         AND (G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM OR RLD.DISTRIB_LINE_NUM IS NULL)
                         )
         LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
         LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
         LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON VC.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND VC.VOUCHER_ID = XREF.VOUCHER_ID)
         LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X11.FIELDVALUE = XREF.PYMNT_SELCT_STATUS)
         LEFT OUTER JOIN PS_PAYMENT_TBL PYMNT ON XREF.BANK_SETID = PYMNT.BANK_SETID AND XREF.BANK_CD= PYMNT.BANK_CD AND XREF.BANK_ACCT_KEY = PYMNT.BANK_ACCT_KEY AND XREF.PYMNT_ID = PYMNT.PYMNT_ID)
         LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'PYMNT_STATUS' AND X12.FIELDVALUE = PYMNT.PYMNT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'POST_STATUS_AP' AND X13.FIELDVALUE = PYMNT.POST_STATUS_AP)
         LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'CANCEL_POST_STATUS' AND X14.FIELDVALUE = PYMNT.CANCEL_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'ENTRY_STATUS' AND X15.FIELDVALUE = VC.ENTRY_STATUS)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                       AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                       AND E_ED.EFFDT <= SYSDATE)
         OR CAT.EFFDT IS NULL)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS' 
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    --XLAT X10
    AND X10.FIELDNAME = 'VENDOR_CLASS'
    AND X10.FIELDVALUE = E.VENDOR_CLASS
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Experimental Version 1
--Included PS_RECV_VCHR_MTCH
--Need to test...so far so good
--Added Category and Item Account Code
--Included PO Budget Header Status to identify why POs are still in Approved state
--Added INTFC_PHY_A
--Testing PO Register
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, 
            B.INV_ITEM_ID, ITM.DESCR, P.ACCOUNT AS ITM_ACCT, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.BUDGET_HDR_STATUS, A.BUDGET_CHECK, B.UNIT_OF_MEASURE,
            B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, CAT.ACCOUNT AS CAT_ACCT, B.CNTRCT_SETID, B.CNTRCT_ID, 
            B.CNTRCT_LINE_NBR, B.RELEASE_NBR, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO, A.PO_DT, 
            A.ACCOUNTING_DT, D.BUDGET_DT, B.CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, D.KK_CLOSE_PRIOR, D.QTY_PO, 
            D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO, C.PRICE_PO AS PO_LS_PRICE, C.PRICE_PO_BSE AS PO_LS_PRICE_BSE, C.QTY_PO AS PO_LS_QTY, 
            C.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, C.CURRENCY_CD AS PO_LS_M_AMT_CURR, C.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, C.FREIGHT_TERMS, C.MATCH_LINE_OPT, 
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD AS PO_HDR_CURR, C.DUE_DT, C.SHIPTO_ID, 
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM, REQD.PROFILE_ID, REQH.OPRID_APPROVED_BY AS REQ_APPR, 
            REQH.APPROVAL_DT AS REQ_APPR_DT, REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, REQH.ENTERED_DT AS REQ_ENTERED_DT,
            NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, 
            REQD.ACTIVITY_ID AS REQ_ACT, REQD.CHARTFIELD2 AS REQ_DONOR,
            RLD.BUSINESS_UNIT AS RECV_BU, RLD.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, G.RECEIVER_ID AS VCHR_RECV_ID,
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM AS RECV_DIST_LINE_NUM, RH.RECEIPT_DT, 
            RLA.DISTRIB_SEQ_NUM, RH.OPRID, RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM, RLD.PROFILE_ID, RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, 
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR, RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, 
            RLD.QTY_PO, RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER,
            RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU_FIN, FIN.ASSET_ID, FIN.DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            PHYA.BUSINESS_UNIT AS AM_BU_PHYA, PHYA.ASSET_ID AS PHYA_ASSET, PHYA.ACQUISITION_DT, PHYA.DESCR AS ASSET_DESCR, 
            G.BUSINESS_UNIT AS DIST_AP_BU, G.VOUCHER_ID AS DIST_VCHR_ID, VC.APPR_STATUS, X16.XLATLONGNAME AS VCHR_APPR_STS,
            RVP.BUSINESS_UNIT_AP AS RVP_AP_BU, RVP.VOUCHER_ID AS RVP_VCHR_ID, RVP.VOUCHER_LINE_NUM AS RVP_VCHR_LINE_NUM, 
            RVP.RECEIVER_ID AS RVP_RECV_ID, RVP.RECV_LN_NBR AS RVP_RECV_LN_NBR,
            VC.ENTRY_STATUS, X15.XLATLONGNAME AS VCHR_ENTRY_STATUS, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, VL.VNDR_LOC,
            VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT, G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, 
            G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY, G.QTY_VCHR, VC.INVOICE_ID, 
            VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR, VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, VC.LAST_UPDATE_DT, 
            VC.OPRID_LAST_UPDT, XREF.PYMNT_ID, XREF.PYMNT_HOLD, XREF.PYMNT_SELCT_STATUS, X11.XLATLONGNAME AS PYMNT_SELCT_STS, XREF.PAID_AMT, XREF.PYMNT_GROSS_AMT, 
            XREF.BANK_SETID, XREF.BANK_CD, XREF.BANK_ACCT_KEY, PYMNT.PYMNT_ID, PYMNT.PYMNT_ID_REF, PYMNT.PAY_CYCLE, PYMNT.PYMNT_STATUS, X12.XLATLONGNAME AS PYMNT_STS_DESCR, 
            PYMNT.POST_STATUS_AP, X13.XLATLONGNAME AS PYMNT_POST_STS, 
            PYMNT.RECON_STATUS, PYMNT.CANCEL_POST_STATUS, X14.XLATLONGNAME AS PYMNT_CANCEL_STS,
            PYMNT.PYMNT_DT, PYMNT.CREATION_DT, PYMNT.OPRID AS PYMNT_CREATOR, PYMNT.PYMNT_METHOD, PYMNT.BRANCH_NAME, 
            A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
         (((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
          (((((((((((((((((((((((((((PS_PO_LINE_DISTRIB D 
          LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR 
                                                                           AND REQD.SCHED_NBR = D.REQ_SCHED_NBR AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
          LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
          LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                                               AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                        AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR 
                                                                        AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                         AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
          LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((RLD.BUSINESS_UNIT IS NOT NULL OR RLD.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND G.RECEIVER_ID = RLD.RECEIVER_ID AND G.RECV_LN_NBR = RLD.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM))
                  OR ((RLD.BUSINESS_UNIT IS NULL OR RLD.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
                         --G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                         --AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
                         --AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT OR RLD.BUSINESS_UNIT IS NULL)
                         --AND (G.RECEIVER_ID = RLD.RECEIVER_ID OR RLD.RECEIVER_ID IS NULL)
                         --AND (G.RECV_LN_NBR = RLD.RECV_LN_NBR OR RLD.RECV_LN_NBR IS NULL)
                         --AND (G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR OR RLD.RECV_SHIP_SEQ_NBR IS NULL)
                         --AND (G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM OR RLD.DISTRIB_LINE_NUM IS NULL)
                         )
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
          LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_VCHR_MTCH RVP ON RVP.BUSINESS_UNIT = RLD.BUSINESS_UNIT AND RVP.RECEIVER_ID = RLD.RECEIVER_ID AND RVP.RECV_LN_NBR = RLD.RECV_LN_NBR 
                         AND RVP.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR 
                         AND (RVP.BUSINESS_UNIT_AP = VC.BUSINESS_UNIT OR VC.BUSINESS_UNIT IS NULL) AND (RVP.VOUCHER_ID = VC.VOUCHER_ID OR VC.VOUCHER_ID IS NULL) 
                         AND (RVP.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM OR VL.VOUCHER_LINE_NUM IS NULL)
                         AND RVP.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RVP.PO_ID = D.PO_ID AND RVP.LINE_NBR = D.LINE_NBR AND RVP.SCHED_NBR = D.SCHED_NBR
                         )
          LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON (VC.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND VC.VOUCHER_ID = XREF.VOUCHER_ID)
                                              OR (RVP.BUSINESS_UNIT_AP = XREF.BUSINESS_UNIT AND RVP.VOUCHER_ID = XREF.VOUCHER_ID))
          LEFT OUTER JOIN PS_PAYMENT_TBL PYMNT ON XREF.BANK_SETID = PYMNT.BANK_SETID AND XREF.BANK_CD= PYMNT.BANK_CD AND XREF.BANK_ACCT_KEY = PYMNT.BANK_ACCT_KEY 
                                                                         AND XREF.PYMNT_ID = PYMNT.PYMNT_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
          LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
          LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
          LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
          LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
          LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X11.FIELDVALUE = XREF.PYMNT_SELCT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'PYMNT_STATUS' AND X12.FIELDVALUE = PYMNT.PYMNT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'POST_STATUS_AP' AND X13.FIELDVALUE = PYMNT.POST_STATUS_AP)
          LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'CANCEL_POST_STATUS' AND X14.FIELDVALUE = PYMNT.CANCEL_POST_STATUS)
          LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'ENTRY_STATUS' AND X15.FIELDVALUE = VC.ENTRY_STATUS)
          LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'APPR_STATUS' AND X16.FIELDVALUE = VC.APPR_STATUS)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.VENDOR_SETID = E.SETID
  AND A.VENDOR_ID = E.VENDOR_ID
  AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
  --XLAT X1
  AND X1.FIELDNAME = 'PO_STATUS'
  AND X1.FIELDVALUE = A.PO_STATUS
  --XLAT X2
  AND X2.FIELDNAME = 'RECV_REQ'
  AND X2.FIELDVALUE = B.RECV_REQ
  --XLAT X3
  AND X3.FIELDNAME = 'MATCH_STATUS_PO'
  AND X3.FIELDVALUE = A.MATCH_STATUS_PO
  --XLAT X10
  AND X10.FIELDNAME = 'VENDOR_CLASS'
  AND X10.FIELDVALUE = E.VENDOR_CLASS
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Experimental Version 2
--Changed column labels to improve readibility
--Removed amount columns from PYMNT_VCHR_XREF Table
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, P.ACCOUNT AS ITM_ACCT, B.LINE_NBR AS PO_LINE_NBR, C.SCHED_NBR AS PO_SCHED_NBR, D.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM, 
            A.BUDGET_HDR_STATUS, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, CAT.ACCOUNT AS CAT_ACCT, B.CNTRCT_SETID, B.CNTRCT_ID, 
            B.CNTRCT_LINE_NBR, B.RELEASE_NBR, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO, A.PO_DT, 
            A.ACCOUNTING_DT AS PO_ACCT_DT, D.BUDGET_DT AS PO_BUD_DT, B.CANCEL_STATUS AS POL_CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, 
            D.KK_CLOSE_PRIOR, D.QTY_PO AS POD_QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO, C.PRICE_PO AS PO_LS_PRICE, 
            C.PRICE_PO_BSE AS PO_LS_PRICE_BSE, C.QTY_PO AS PO_LS_QTY, C.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, C.CURRENCY_CD AS PO_LS_M_AMT_CURR, 
            C.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, C.FREIGHT_TERMS, C.MATCH_LINE_OPT, 
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD AS PO_HDR_CURR, C.DUE_DT, C.SHIPTO_ID, 
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM AS REQ_BU_AM, REQD.PROFILE_ID AS REQ_PROFILE_ID, 
            REQH.OPRID_APPROVED_BY AS REQ_APPR, REQH.APPROVAL_DT AS REQ_APPR_DT, REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, REQH.ENTERED_DT AS REQ_ENTERED_DT,
            NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, 
            REQD.ACTIVITY_ID AS REQ_ACT, REQD.CHARTFIELD2 AS REQ_DONOR,
            RLD.BUSINESS_UNIT AS RECV_BU, RLD.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, G.RECEIVER_ID AS VCHR_RECV_ID,
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM AS RECV_DIST_LINE_NUM, RH.RECEIPT_DT, 
            RLA.DISTRIB_SEQ_NUM, RH.OPRID AS RECV_OPRID, RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM AS RLD_BU_AM, RLD.PROFILE_ID AS RLD_PROFILE_ID, 
            RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, 
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR, RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, 
            RLD.QTY_PO, RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR AS RLA_DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, 
            RLA.TAG_NUMBER, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS AS PRE_AM_LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU_FIN, FIN.ASSET_ID, FIN.DTTM_STAMP AS FIN_DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            --PHYA.BUSINESS_UNIT AS AM_BU_PHYA, PHYA.ASSET_ID AS PHYA_ASSET, 
            PHYA.ACQUISITION_DT, PHYA.DESCR AS ASSET_DESCR, G.BUSINESS_UNIT AS DIST_AP_BU, G.VOUCHER_ID AS DIST_VCHR_ID, VC.APPR_STATUS, X16.XLATLONGNAME AS VCHR_APPR_STS,
            RVP.BUSINESS_UNIT_AP AS RVP_AP_BU, RVP.VOUCHER_ID AS RVP_VCHR_ID, RVP.VOUCHER_LINE_NUM AS RVP_VCHR_LINE_NUM, RVP.RECEIVER_ID AS RVP_RECV_ID, 
            RVP.RECV_LN_NBR AS RVP_RECV_LN_NBR, VC.ENTRY_STATUS, X15.XLATLONGNAME AS VCHR_ENTRY_STATUS, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, 
            VL.VNDR_LOC, VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT, 
            G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY, 
            G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR, VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, 
            VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT, XREF.PYMNT_ID, XREF.PYMNT_HOLD, XREF.PYMNT_SELCT_STATUS, X11.XLATLONGNAME AS PYMNT_SELCT_STS, 
            --XREF.PAID_AMT, XREF.PYMNT_GROSS_AMT, 
            XREF.GROSS_AMT_BSE AS XREF_GROSS_AMT_BSE, XREF.PAID_AMT_BSE AS XREF_PAID_AMT_BSE,
            XREF.BANK_SETID, XREF.BANK_CD, XREF.BANK_ACCT_KEY, PYMNT.PYMNT_ID, PYMNT.PYMNT_ID_REF, PYMNT.PAY_CYCLE, 
            PYMNT.PYMNT_STATUS, X12.XLATLONGNAME AS PYMNT_STS_DESCR, 
            PYMNT.POST_STATUS_AP, X13.XLATLONGNAME AS PYMNT_POST_STS, PYMNT.RECON_STATUS, PYMNT.CANCEL_POST_STATUS, X14.XLATLONGNAME AS PYMNT_CANCEL_STS,
            PYMNT.PYMNT_DT, PYMNT.CREATION_DT, PYMNT.OPRID AS PYMNT_CREATOR, PYMNT.PYMNT_METHOD, PYMNT.BRANCH_NAME, 
            PYMNT.PYMNT_AMT AS PYMNT_PAID_AMT, PYMNT.CURRENCY_PYMNT, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
         (((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
          (((((((((((((((((((((((((((PS_PO_LINE_DISTRIB D 
          LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR 
                                                                           AND REQD.SCHED_NBR = D.REQ_SCHED_NBR AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
          LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
          LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                                               AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                        AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR 
                                                                        AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                         AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
          LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((RLD.BUSINESS_UNIT IS NOT NULL OR RLD.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND G.RECEIVER_ID = RLD.RECEIVER_ID AND G.RECV_LN_NBR = RLD.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM))
                  OR ((RLD.BUSINESS_UNIT IS NULL OR RLD.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
                         --G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                         --AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
                         --AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT OR RLD.BUSINESS_UNIT IS NULL)
                         --AND (G.RECEIVER_ID = RLD.RECEIVER_ID OR RLD.RECEIVER_ID IS NULL)
                         --AND (G.RECV_LN_NBR = RLD.RECV_LN_NBR OR RLD.RECV_LN_NBR IS NULL)
                         --AND (G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR OR RLD.RECV_SHIP_SEQ_NBR IS NULL)
                         --AND (G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM OR RLD.DISTRIB_LINE_NUM IS NULL)
                         )
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
          LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_VCHR_MTCH RVP ON RVP.BUSINESS_UNIT = RLD.BUSINESS_UNIT AND RVP.RECEIVER_ID = RLD.RECEIVER_ID AND RVP.RECV_LN_NBR = RLD.RECV_LN_NBR 
                         AND RVP.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR 
                         AND (RVP.BUSINESS_UNIT_AP = VC.BUSINESS_UNIT OR VC.BUSINESS_UNIT IS NULL) AND (RVP.VOUCHER_ID = VC.VOUCHER_ID OR VC.VOUCHER_ID IS NULL) 
                         AND (RVP.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM OR VL.VOUCHER_LINE_NUM IS NULL)
                         AND RVP.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RVP.PO_ID = D.PO_ID AND RVP.LINE_NBR = D.LINE_NBR AND RVP.SCHED_NBR = D.SCHED_NBR
                         )
          LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON (VC.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND VC.VOUCHER_ID = XREF.VOUCHER_ID)
                                              OR (RVP.BUSINESS_UNIT_AP = XREF.BUSINESS_UNIT AND RVP.VOUCHER_ID = XREF.VOUCHER_ID))
          LEFT OUTER JOIN PS_PAYMENT_TBL PYMNT ON XREF.BANK_SETID = PYMNT.BANK_SETID AND XREF.BANK_CD= PYMNT.BANK_CD AND XREF.BANK_ACCT_KEY = PYMNT.BANK_ACCT_KEY 
                                                                         AND XREF.PYMNT_ID = PYMNT.PYMNT_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
          LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
          LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
          LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
          LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
          LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X11.FIELDVALUE = XREF.PYMNT_SELCT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'PYMNT_STATUS' AND X12.FIELDVALUE = PYMNT.PYMNT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'POST_STATUS_AP' AND X13.FIELDVALUE = PYMNT.POST_STATUS_AP)
          LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'CANCEL_POST_STATUS' AND X14.FIELDVALUE = PYMNT.CANCEL_POST_STATUS)
          LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'ENTRY_STATUS' AND X15.FIELDVALUE = VC.ENTRY_STATUS)
          LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'APPR_STATUS' AND X16.FIELDVALUE = VC.APPR_STATUS)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.VENDOR_SETID = E.SETID
  AND A.VENDOR_ID = E.VENDOR_ID
  AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
  --XLAT X1
  AND X1.FIELDNAME = 'PO_STATUS'
  AND X1.FIELDVALUE = A.PO_STATUS
  --XLAT X2
  AND X2.FIELDNAME = 'RECV_REQ'
  AND X2.FIELDVALUE = B.RECV_REQ
  --XLAT X3
  AND X3.FIELDNAME = 'MATCH_STATUS_PO'
  AND X3.FIELDVALUE = A.MATCH_STATUS_PO
  --XLAT X10
  AND X10.FIELDNAME = 'VENDOR_CLASS'
  AND X10.FIELDVALUE = E.VENDOR_CLASS
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM; 

--Experimental Version 3
--Added REQUESTOR_ID from REQ_HDR 
--Added Exchange Rates for Req, PO, Receipt, Voucher and XREF
--Added DIST_PROCESSED_FLG for PO & REQ
--Added A.ACTIVITY_DATE,- 29th May 2015
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, P.ACCOUNT AS ITM_ACCT, B.LINE_NBR AS PO_LINE_NBR, C.SCHED_NBR AS PO_SCHED_NBR, D.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM, 
            A.BUDGET_HDR_STATUS, D.BUDGET_LINE_STATUS, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, CAT.ACCOUNT AS CAT_ACCT, B.CNTRCT_SETID, B.CNTRCT_ID, 
            B.CNTRCT_LINE_NBR, B.RELEASE_NBR, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO, A.PO_DT, A.ACTIVITY_DATE,
            A.ACCOUNTING_DT AS PO_ACCT_DT, D.BUDGET_DT AS PO_BUD_DT, B.CANCEL_STATUS AS POL_CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, 
            D.KK_CLOSE_PRIOR, D.QTY_PO AS POD_QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO, C.PRICE_PO AS PO_LS_PRICE, 
            C.PRICE_PO_BSE AS PO_LS_PRICE_BSE, C.QTY_PO AS PO_LS_QTY, C.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, C.CURRENCY_CD AS PO_LS_M_AMT_CURR, 
            C.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, C.FREIGHT_TERMS, C.MATCH_LINE_OPT, 
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD AS PO_HDR_CURR, 
            --NVL(ROUND((A.RATE_MULT/A.RATE_DIV), 7), 0) AS PO_HDR_RATE, NVL(ROUND((D.RATE_MULT/D.RATE_DIV), 7), 0) AS PO_DIST_RATE, 
            A.RATE_MULT AS PO_HDR_RATE_MULT, A.RATE_DIV AS PO_HDR_RATE_DIV, D.RATE_MULT AS PO_DIST_RATE_MULT, D.RATE_DIV AS PO_DIST_RATE_DIV, 
            C.DUE_DT, C.SHIPTO_ID, 
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, D.DIST_PROCESSED_FLG AS PO_DIST_PRCS_FLG, D.PC_DISTRIB_STATUS AS PO_PC_DIST_STS,
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM AS REQ_BU_AM, REQD.PROFILE_ID AS REQ_PROFILE_ID, 
            REQH.REQUESTOR_ID AS REQ_REQUESTOR, REQH.OPRID_APPROVED_BY AS REQ_APPR, REQH.APPROVAL_DT AS REQ_APPR_DT, REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            REQH.ENTERED_DT AS REQ_ENTERED_DT, NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, 
            REQD.ACTIVITY_ID AS REQ_ACT, REQD.CHARTFIELD2 AS REQ_DONOR, REQD.DIST_PROCESSED_FLG AS REQ_DIST_PRCS_FLG, REQD.PC_DISTRIB_STATUS AS REQ_PC_DIST_STS,
            --NVL(ROUND((REQH.RATE_MULT/REQH.RATE_DIV), 7), 0) AS REQ_HDR_RATE, NVL(ROUND((REQD.RATE_MULT/REQD.RATE_DIV), 7), 0) AS REQ_DIST_RATE,
            REQH.RATE_MULT AS REQ_HDR_RATE_MULT, REQH.RATE_DIV AS REQ_HDR_RATE_DIV, REQD.RATE_MULT AS REQ_DIST_RATE_MULT, REQD.RATE_DIV AS REQ_DIST_RATE_DIV,
            RLD.BUSINESS_UNIT AS RECV_BU, RLD.RECEIVER_ID, RH.RECV_STATUS, X4.XLATLONGNAME AS RECV_STATUS_DESC, G.RECEIVER_ID AS VCHR_RECV_ID,
            RH.MATCH_STATUS_RECV, X5.XLATLONGNAME AS MTCH_STATUS_RECV, RLD.RECV_LN_NBR, RLD.RECV_SHIP_SEQ_NBR, RLD.DISTRIB_LINE_NUM AS RECV_DIST_LINE_NUM, RH.RECEIPT_DT, 
            RLA.DISTRIB_SEQ_NUM, RH.OPRID AS RECV_OPRID, RH.INTFC_ASSET, RLD.BUSINESS_UNIT_AM AS RLD_BU_AM, RLD.PROFILE_ID AS RLD_PROFILE_ID, 
            RLS.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_DESCR, 
            RLS.MOVE_STAT_AM, X7.XLATLONGNAME AS MOVE_STATUS_DESCR, RLD.QTY_DS_ACCPT_VUOM, RLS.QTY_SH_REJCT_VUOM, RLS.QTY_SH_ACCPT_VUOM, RLS.QTY_SH_RECVD_VUOM, 
            RLD.QTY_PO, RLA.ACTUAL_COST, RLA.COST, --NVL(ROUND((RLD.RATE_MULT/RLD.RATE_DIV), 7), 0) AS RECV_DIST_RATE,
            RLD.RATE_MULT AS RECV_DIST_RATE_MULT, RLD.RATE_DIV AS RECV_DIST_RATE_DIV,
            RLA.CUSTODIAN, RLA.DESCR AS RLA_DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.LOCATION, RLA.MODEL, RLA.SERIAL_ID, 
            RLA.TAG_NUMBER, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, RLA.PRICE_PO_BSE, RLA.RECV_AM_STATUS, X8.XLATLONGNAME AS RECV_AM_STS,
            PRE.INTFC_ID, PRE.INTFC_LINE_NUM, PRE.LOAD_STATUS AS PRE_AM_LOAD_STATUS, PRE.TRANS_DT, PRE.ACCOUNTING_DT, PRE.TXN_COST, PRE.TXN_CURRENCY_CD,
            FIN.BUSINESS_UNIT AS AM_BU_FIN, FIN.ASSET_ID, FIN.DTTM_STAMP AS FIN_DTTM_STAMP, FIN.INTFC_TYPE, FIN.INTFC_STATUS, FIN.LOAD_STATUS, FIN.IN_SERVICE_DT, FIN.OPEN_TRANS_ID, 
            PHYA.BUSINESS_UNIT AS AM_BU_PHYA, PHYA.ASSET_ID AS PHYA_ASSET, 
            PHYA.ACQUISITION_DT, PHYA.DESCR AS ASSET_DESCR, 
            G.BUSINESS_UNIT AS DIST_AP_BU, G.VOUCHER_ID AS DIST_VCHR_ID, VC.APPR_STATUS, X16.XLATLONGNAME AS VCHR_APPR_STS,
            RVP.BUSINESS_UNIT_AP AS RVP_AP_BU, RVP.VOUCHER_ID AS RVP_VCHR_ID, RVP.VOUCHER_LINE_NUM AS RVP_VCHR_LINE_NUM, RVP.RECEIVER_ID AS RVP_RECV_ID, 
            RVP.RECV_LN_NBR AS RVP_RECV_LN_NBR, VC.ENTRY_STATUS, X15.XLATLONGNAME AS VCHR_ENTRY_STATUS, G.VOUCHER_LINE_NUM, G.DISTRIB_LINE_NUM, VL.DESCR AS VCHR_LINE_DESCR, 
            VL.VNDR_LOC, VL.MERCHANDISE_AMT AS VL_MERCH_AMT, VL.TXN_CURRENCY_CD AS VL_TXN_CURR, VL.MERCH_AMT_BSE AS VL_BASE_AMT, 
            --NVL(ROUND((VC.RATE_MULT/VC.RATE_DIV), 7), 0) AS VCHR_HDR_RATE, NVL(ROUND((G.RATE_MULT/G.RATE_DIV), 7), 0) AS VCHR_DIST_RATE,
            VC.RATE_MULT AS VCHR_HDR_RATE_MULT, VC.RATE_DIV AS VCHR_HDR_RATE_DIV, G.RATE_MULT AS VCHR_DIST_RATE_MULT, G.RATE_DIV AS VCHR_DIST_RATE_DIV, 
            G.FOREIGN_AMOUNT AS VCHR_DIST_FOREIGN_AMT, G.TXN_CURRENCY_CD AS VCHR_DIST_TXN_CURR, G.MONETARY_AMOUNT AS VCHR_DIST_BASE_AMT, G.QTY_VCHR AS VCHR_DIST_QTY, 
            G.QTY_VCHR, VC.INVOICE_ID, VC.MATCH_STATUS_VCHR, X9.XLATLONGNAME AS MATCH_STS_VCHR, VC.MATCH_OVERRIDE, VC.MATCHED_DT, VC.OPRID AS AP_OPRID, VC.ENTERED_DT, 
            VC.LAST_UPDATE_DT, VC.OPRID_LAST_UPDT, XREF.PYMNT_ID, XREF.PYMNT_HOLD, XREF.PYMNT_SELCT_STATUS, X11.XLATLONGNAME AS PYMNT_SELCT_STS, 
            --XREF.PAID_AMT, XREF.PYMNT_GROSS_AMT, 
            XREF.GROSS_AMT_BSE AS XREF_GROSS_AMT_BSE, XREF.PAID_AMT_BSE AS XREF_PAID_AMT_BSE,
            --NVL(ROUND((XREF.RATE_MULT/XREF.RATE_DIV), 7), 0) AS XREF_XCHNG_RATE, 
            --NVL(ROUND((XREF.PYMNT_RATE_MULT/XREF.PYMNT_RATE_DIV), 7), 0) AS PYMNT_XCHNG_RATE, NVL(ROUND((XREF.BNK_RATE_MULT/XREF.BNK_RATE_DIV), 7), 0) AS BNK_XCHNG_RATE,
            XREF.RATE_MULT, XREF.RATE_DIV, XREF.PYMNT_RATE_MULT, XREF.PYMNT_RATE_DIV, XREF.BNK_RATE_MULT, XREF.BNK_RATE_DIV, 
            XREF.BANK_SETID, XREF.BANK_CD, XREF.BANK_ACCT_KEY, PYMNT.PYMNT_ID, PYMNT.PYMNT_ID_REF, PYMNT.PAY_CYCLE, 
            PYMNT.PYMNT_STATUS, X12.XLATLONGNAME AS PYMNT_STS_DESCR, 
            PYMNT.POST_STATUS_AP, X13.XLATLONGNAME AS PYMNT_POST_STS, PYMNT.RECON_STATUS, PYMNT.CANCEL_POST_STATUS, X14.XLATLONGNAME AS PYMNT_CANCEL_STS,
            PYMNT.PYMNT_DT, PYMNT.CREATION_DT, PYMNT.OPRID AS PYMNT_CREATOR, PYMNT.PYMNT_METHOD, PYMNT.BRANCH_NAME, 
            PYMNT.PYMNT_AMT AS PYMNT_PAID_AMT, PYMNT.CURRENCY_PYMNT, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID, B.DESCR254_MIXED, A.PO_REF
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
         (((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID),
          (((((((((((((((((((((((((((PS_PO_LINE_DISTRIB D 
          LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR 
                                                                           AND REQD.SCHED_NBR = D.REQ_SCHED_NBR AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
          LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)         
          LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR 
                                                               AND RLD.SCHED_NBR = D.SCHED_NBR AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON RLD.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                        AND RLD.RECV_LN_NBR = RLA.RECV_LN_NBR AND RLD.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR 
                                                                        AND RLD.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_LN_SHIP RLS ON RLD.BUSINESS_UNIT = RLS.BUSINESS_UNIT AND RLD.RECEIVER_ID = RLS.RECEIVER_ID AND RLD.RECV_LN_NBR = RLS.RECV_LN_NBR
                                         AND RLD.RECV_SHIP_SEQ_NBR = RLS.RECV_SHIP_SEQ_NBR)
          LEFT OUTER JOIN PS_RECV_HDR RH ON RLD.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RLD.RECEIVER_ID = RH.RECEIVER_ID)
          LEFT OUTER JOIN PS_INTFC_PRE_AM PRE ON RLA.PRE_INTFC_ID = PRE.PRE_INTFC_ID AND RLA.PRE_INTFC_LINE_NUM = PRE.PRE_INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_FIN FIN ON PRE.INTFC_ID = FIN.INTFC_ID AND PRE.INTFC_LINE_NUM = FIN.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_INTFC_PHY_A PHYA ON PRE.INTFC_ID = PHYA.INTFC_ID AND PRE.INTFC_LINE_NUM = PHYA.INTFC_LINE_NUM)
          LEFT OUTER JOIN PS_DISTRIB_LINE G ON (((RLD.BUSINESS_UNIT IS NOT NULL OR RLD.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
                AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND G.RECEIVER_ID = RLD.RECEIVER_ID AND G.RECV_LN_NBR = RLD.RECV_LN_NBR 
                 AND G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR AND G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM))
                  OR ((RLD.BUSINESS_UNIT IS NULL OR RLD.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM))
                         --G.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND G.PO_ID = D.PO_ID AND G.LINE_NBR = D.LINE_NBR AND G.SCHED_NBR = D.SCHED_NBR 
                         --AND G.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
                         --AND (G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT OR RLD.BUSINESS_UNIT IS NULL)
                         --AND (G.RECEIVER_ID = RLD.RECEIVER_ID OR RLD.RECEIVER_ID IS NULL)
                         --AND (G.RECV_LN_NBR = RLD.RECV_LN_NBR OR RLD.RECV_LN_NBR IS NULL)
                         --AND (G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR OR RLD.RECV_SHIP_SEQ_NBR IS NULL)
                         --AND (G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM OR RLD.DISTRIB_LINE_NUM IS NULL)
                         )
          LEFT OUTER JOIN PS_VOUCHER VC ON G.BUSINESS_UNIT = VC.BUSINESS_UNIT AND G.VOUCHER_ID = VC.VOUCHER_ID)
          LEFT OUTER JOIN PS_VOUCHER_LINE VL ON VC.BUSINESS_UNIT = VL.BUSINESS_UNIT AND VC.VOUCHER_ID = VL.VOUCHER_ID AND G.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM)
          LEFT OUTER JOIN PS_RECV_VCHR_MTCH RVP ON RVP.BUSINESS_UNIT = RLD.BUSINESS_UNIT AND RVP.RECEIVER_ID = RLD.RECEIVER_ID AND RVP.RECV_LN_NBR = RLD.RECV_LN_NBR 
                         AND RVP.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR 
                         AND (RVP.BUSINESS_UNIT_AP = VC.BUSINESS_UNIT OR VC.BUSINESS_UNIT IS NULL) AND (RVP.VOUCHER_ID = VC.VOUCHER_ID OR VC.VOUCHER_ID IS NULL) 
                         AND (RVP.VOUCHER_LINE_NUM = VL.VOUCHER_LINE_NUM OR VL.VOUCHER_LINE_NUM IS NULL)
                         AND RVP.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RVP.PO_ID = D.PO_ID AND RVP.LINE_NBR = D.LINE_NBR AND RVP.SCHED_NBR = D.SCHED_NBR
                         )
          LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON (VC.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND VC.VOUCHER_ID = XREF.VOUCHER_ID)
                                              OR (RVP.BUSINESS_UNIT_AP = XREF.BUSINESS_UNIT AND RVP.VOUCHER_ID = XREF.VOUCHER_ID))
          LEFT OUTER JOIN PS_PAYMENT_TBL PYMNT ON XREF.BANK_SETID = PYMNT.BANK_SETID AND XREF.BANK_CD= PYMNT.BANK_CD AND XREF.BANK_ACCT_KEY = PYMNT.BANK_ACCT_KEY 
                                                                         AND XREF.PYMNT_ID = PYMNT.PYMNT_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'RECV_STATUS' AND X4.FIELDVALUE = RH.RECV_STATUS)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MATCH_STATUS_RECV' AND X5.FIELDVALUE = RH.MATCH_STATUS_RECV)
          LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'RECV_SHIP_STATUS' AND X6.FIELDVALUE = RLS.RECV_SHIP_STATUS)
          LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'MOVE_STAT_AM' AND X7.FIELDVALUE = RLS.MOVE_STAT_AM)
          LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'RECV_AM_STATUS' AND X8.FIELDVALUE = RLA.RECV_AM_STATUS)
          LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'MATCH_STATUS_VCHR' AND X9.FIELDVALUE = VC.MATCH_STATUS_VCHR)
          LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X11.FIELDVALUE = XREF.PYMNT_SELCT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'PYMNT_STATUS' AND X12.FIELDVALUE = PYMNT.PYMNT_STATUS)
          LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'POST_STATUS_AP' AND X13.FIELDVALUE = PYMNT.POST_STATUS_AP)
          LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'CANCEL_POST_STATUS' AND X14.FIELDVALUE = PYMNT.CANCEL_POST_STATUS)
          LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'ENTRY_STATUS' AND X15.FIELDVALUE = VC.ENTRY_STATUS)
          LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'APPR_STATUS' AND X16.FIELDVALUE = VC.APPR_STATUS)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.VENDOR_SETID = E.SETID
  AND A.VENDOR_ID = E.VENDOR_ID
  AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
  --XLAT X1
  AND X1.FIELDNAME = 'PO_STATUS'
  AND X1.FIELDVALUE = A.PO_STATUS
  --XLAT X2
  AND X2.FIELDNAME = 'RECV_REQ'
  AND X2.FIELDVALUE = B.RECV_REQ
  --XLAT X3
  AND X3.FIELDNAME = 'MATCH_STATUS_PO'
  AND X3.FIELDVALUE = A.MATCH_STATUS_PO
  --XLAT X10
  AND X10.FIELDNAME = 'VENDOR_CLASS'
  AND X10.FIELDVALUE = E.VENDOR_CLASS
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, RLA.PRE_INTFC_ID, RLA.PRE_INTFC_LINE_NUM, PRE.INTFC_ID, PRE.INTFC_LINE_NUM;

--Testing Queries
SELECT RLD.RECEIVER_ID, G.VOUCHER_ID, D.*
FROM ((PS_PO_LINE_DISTRIB D
       LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR AND RLD.SCHED_NBR = D.SCHED_NBR 
                                             AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM)
       LEFT OUTER JOIN PS_DISTRIB_LINE G ON ((G.BUSINESS_UNIT_RECV IS NULL AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR 
                                          AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM)
       OR (RLD.BUSINESS_UNIT IS NOT NULL
           AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
           AND G.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND G.RECEIVER_ID = RLD.RECEIVER_ID AND G.RECV_LN_NBR = RLD.RECV_LN_NBR AND G.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR
           AND G.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM))
           )
WHERE D.BUSINESS_UNIT = '614UU' 
  AND D.PO_ID = '0000006232'
  --AND G.VOUCHER_ID = '00017160'
ORDER BY 1,2;

--Version 1 - Test
SELECT RLD.RECEIVER_ID, G.VOUCHER_ID AS G_VCHR_ID, GR.VOUCHER_ID AS GR_VCHR_ID, D.*
FROM PS_PO_LINE_DISTRIB D
  JOIN PS_PO_LINE_DISTRIB DV ON DV.BUSINESS_UNIT = D.BUSINESS_UNIT AND DV.PO_ID = D.PO_ID AND DV.LINE_NBR = D.LINE_NBR AND DV.SCHED_NBR = D.SCHED_NBR 
                                             AND DV.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
  JOIN PS_PO_LINE_DISTRIB DVR ON DVR.BUSINESS_UNIT = D.BUSINESS_UNIT AND DVR.PO_ID = D.PO_ID AND DVR.LINE_NBR = D.LINE_NBR AND DVR.SCHED_NBR = D.SCHED_NBR 
                                               AND DVR.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
  LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = D.BUSINESS_UNIT AND RLD.PO_ID = D.PO_ID AND RLD.LINE_NBR = D.LINE_NBR AND RLD.SCHED_NBR = D.SCHED_NBR 
                                                                  AND RLD.PO_DIST_LINE_NUM = D.DISTRIB_LINE_NUM
  LEFT OUTER JOIN PS_DISTRIB_LINE G ON G.BUSINESS_UNIT_RECV IS NULL AND DV.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND DV.PO_ID = G.PO_ID AND DV.LINE_NBR = G.LINE_NBR 
                                                        AND DV.SCHED_NBR = G.SCHED_NBR AND DV.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
  LEFT OUTER JOIN PS_DISTRIB_LINE GR ON DVR.BUSINESS_UNIT = GR.BUSINESS_UNIT_PO AND DVR.PO_ID = GR.PO_ID AND DVR.LINE_NBR = GR.LINE_NBR AND DVR.SCHED_NBR = GR.SCHED_NBR 
  AND DVR.DISTRIB_LINE_NUM = GR.PO_DIST_LINE_NUM AND GR.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND GR.RECEIVER_ID = RLD.RECEIVER_ID AND GR.RECV_LN_NBR = RLD.RECV_LN_NBR 
  AND GR.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR AND GR.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM
WHERE D.BUSINESS_UNIT = '614UU'
    AND D.PO_ID = '0000006232'
    --AND (G.VOUCHER_ID = '00017160' OR GR.VOUCHER_ID = '00017160')
ORDER BY 1,2;

--Version 2 - Test
SELECT RLD.RECEIVER_ID, G.VOUCHER_ID AS G_VCHR_ID, GR.VOUCHER_ID AS GR_VCHR_ID, D.*
FROM PS_PO_LINE_DISTRIB D
  JOIN PS_PO_LINE_DISTRIB DV ON DV.BUSINESS_UNIT = D.BUSINESS_UNIT AND DV.PO_ID = D.PO_ID AND DV.LINE_NBR = D.LINE_NBR AND DV.SCHED_NBR = D.SCHED_NBR 
                                             AND DV.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
  JOIN PS_PO_LINE_DISTRIB DVR ON DVR.BUSINESS_UNIT = D.BUSINESS_UNIT AND DVR.PO_ID = D.PO_ID AND DVR.LINE_NBR = D.LINE_NBR AND DVR.SCHED_NBR = D.SCHED_NBR 
                                               AND DVR.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM
  LEFT OUTER JOIN PS_DISTRIB_LINE G ON (G.BUSINESS_UNIT_RECV IS NULL OR G.BUSINESS_UNIT_RECV = ' ') AND D.BUSINESS_UNIT = G.BUSINESS_UNIT_PO AND D.PO_ID = G.PO_ID AND D.LINE_NBR = G.LINE_NBR 
                                                        AND D.SCHED_NBR = G.SCHED_NBR AND D.DISTRIB_LINE_NUM = G.PO_DIST_LINE_NUM
  LEFT OUTER JOIN PS_RECV_LN_DISTRIB RLD ON RLD.BUSINESS_UNIT_PO = DV.BUSINESS_UNIT AND RLD.PO_ID = DV.PO_ID AND RLD.LINE_NBR = DV.LINE_NBR AND RLD.SCHED_NBR = DV.SCHED_NBR 
                                                                  AND RLD.PO_DIST_LINE_NUM = DV.DISTRIB_LINE_NUM
  LEFT OUTER JOIN PS_DISTRIB_LINE GR ON DVR.BUSINESS_UNIT = GR.BUSINESS_UNIT_PO AND DVR.PO_ID = GR.PO_ID AND DVR.LINE_NBR = GR.LINE_NBR AND DVR.SCHED_NBR = GR.SCHED_NBR 
  AND DVR.DISTRIB_LINE_NUM = GR.PO_DIST_LINE_NUM AND GR.BUSINESS_UNIT_RECV = RLD.BUSINESS_UNIT AND GR.RECEIVER_ID = RLD.RECEIVER_ID AND GR.RECV_LN_NBR = RLD.RECV_LN_NBR 
  AND GR.RECV_SHIP_SEQ_NBR = RLD.RECV_SHIP_SEQ_NBR AND GR.RECV_DIST_LINE_NUM = RLD.DISTRIB_LINE_NUM
WHERE D.BUSINESS_UNIT = '614UU'
    AND D.PO_ID = '0000006232'
    --AND (G.VOUCHER_ID = '00017160' OR GR.VOUCHER_ID = '00017160')
ORDER BY 1,2;

--AM Depreciation Process Log
SELECT HDR.PRCSNAME, HDR.PROCESS_INSTANCE, HDR.ERROR_CNT, LINE.SEQNO, LINE.BUSINESS_UNIT, LINE.ASSET_ID, LINE.BOOK, LINE.DTTM_STAMP, LINE.TRANS_TYPE, LINE.TRANS_IN_OUT,
            LINE.ACCOUNTING_DT, LINE.CONVENTION, LINE.MESSAGE_SET_NBR, LINE.MESSAGE_NBR, LINE.PARM_1, LINE.PARM_2, LINE.PARM_3, MSG.MESSAGE_TEXT
FROM PS_AM_ERR_LOG_HDR HDR, (PS_AM_ERR_LOG_LINE LINE
          LEFT OUTER JOIN PSMSGCATDEFN MSG ON MSG.MESSAGE_SET_NBR = LINE.MESSAGE_SET_NBR AND MSG.MESSAGE_NBR = LINE.MESSAGE_NBR) 
WHERE HDR.PRCSNAME = LINE.PRCSNAME
    AND HDR.PROCESS_INSTANCE = LINE.PROCESS_INSTANCE
    AND LINE.BUSINESS_UNIT = 'UNUNI'
ORDER BY HDR.PROCESS_INSTANCE DESC;

--UN_AP_VCHRS_PENDING_PAYMENT
--Version 1
--Altered WHERE Clause to exclude D.PYMNT_GROSS_AMT check
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.VOUCHER_ID_RELATED, A.INVOICE_ID, A.ACCOUNTING_DT, A.OPRID, A.APPR_STATUS, A.BUDGET_HDR_STATUS, 
            A.BUDGET_MISC_STATUS, A.MATCH_STATUS_VCHR, DECODE(A.POST_VOUCHER,'N','No','Yes'), A.POST_STATUS_AP, A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, 
            A.BASE_CURRENCY, D.PYMNT_CNT, D.BANK_SETID, D.BANK_CD, D.BANK_ACCT_KEY, D.PYMNT_METHOD, D.REMIT_VENDOR, B.NAME1, D.VNDR_LOC, D.BANK_ACCT_SEQ_NBR, 
            D.REMIT_ADDR_SEQ_NUM, D.PYMNT_HOLD, D.PYMNT_HOLD_REASON, D.VNDR_PYMNT_HLD_FLG, D.PYMNT_HANDLING_CD, D.PYMNT_GROSS_AMT, D.CURRENCY_PYMNT, D.GROSS_AMT_BSE, 
            D.BASE_CURRENCY, D.PYMNT_SEPARATE, D.SCHEDULED_PAY_DT, D.PYMNT_SELCT_STATUS, D.PAY_CYCLE, D.POST_STATUS_AP
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF D, PS_VENDOR B
WHERE (A.ENTRY_STATUS <> 'X'
     AND A.CLOSE_STATUS = 'O'
     AND A.VOUCHER_STYLE NOT IN ('TMPL','JRNL')
     AND A.APPR_STATUS = 'A'
     AND A.BUDGET_HDR_STATUS = 'V'
     AND A.BUDGET_MISC_STATUS = 'V'
     AND A.MATCH_STATUS_VCHR IN ('M','N')
     AND A.BUSINESS_UNIT LIKE '6%'
     --AND A.ACCOUNTING_DT >= TO_DATE(:2,'YYYY-MM-DD')
     --AND A.ACCOUNTING_DT <= TO_DATE(:3,'YYYY-MM-DD')
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.VOUCHER_ID = D.VOUCHER_ID
     AND D.PYMNT_SELCT_STATUS NOT IN ('P','X','S')
     AND D.BANK_SETID = 'SHARE'
     --AND D.BANK_CD LIKE '6%'
     --AND D.BANK_ACCT_KEY LIKE :6
     --AND D.PYMNT_GROSS_AMT <> 0
     AND B.SETID = D.REMIT_SETID
     AND B.VENDOR_ID = D.REMIT_VENDOR
     AND D.PYMNT_ACTION NOT IN ('P'))
ORDER BY 1, 2, 6, 18;

--Accounting Distribution for Contract Line(s)
--Check the COMBO_VALID_FLG for all three tables depending upon your setup
SELECT DST.CONTRACT_NUM, DST.CONTRACT_LINE_NUM, DST.EFFDT, DST.DST_SEQ_NUM, DST.BUSINESS_UNIT_GL, DST.BUSINESS_UNIT_TO, DST.CA_PERCENTAGE, DST.AMOUNT, DST.CURRENCY_CD, 
            DST.DST_ID, DST.ACCOUNT AS DST_ACCT, DST.DEPTID AS DST_DEPTID, DST.OPERATING_UNIT AS DST_OP_UNIT, DST.FUND_CODE AS DST_FUND_CODE, 
            DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, 
            DST.CHARTFIELD2 AS DST_DONOR, DST.PROJECT_ID AS DST_PROJECT_ID, DST.COMBO_VALID_FLG, X1.XLATLONGNAME AS DST_COMBO_FLG,
            UAR.DST_ID AS UAR_DST_ID, UAR.ACCOUNT AS UAR_ACCT, UAR.DEPTID AS UAR_DEPTID, UAR.OPERATING_UNIT AS UAR_OP_UNIT, UAR.FUND_CODE AS UAR_FUND_CODE, 
            UAR.AFFILIATE, UAR.AFFILIATE_INTRA1, UAR.AFFILIATE_INTRA2, 
            UAR.CHARTFIELD2 AS UAR_DONOR, UAR.PROJECT_ID AS UAR_PROJECT_ID, UAR.COMBO_VALID_FLG AS UAR_COMBO_FLG, X2.XLATLONGNAME AS UAR_COMBO_FLAG, 
            DFR.DST_ID AS DFR_DST_ID, DFR.ACCOUNT AS DFR_ACCT, DFR.DEPTID AS DFR_DEPTID, DFR.OPERATING_UNIT AS DFR_OP_UNIT, DFR.FUND_CODE AS DFR_FUND_CODE, 
            DFR.AFFILIATE, DFR.AFFILIATE_INTRA1, DFR.AFFILIATE_INTRA2, 
            DFR.CHARTFIELD2 AS DFR_DONOR, DFR.PROJECT_ID AS DFR_PROJECT_ID, DFR.COMBO_VALID_FLG AS DFR_COMBO_FLG
FROM  PSXLATITEM X1, PSXLATITEM X2, ((PS_CA_DETAIL_DST DST
           LEFT OUTER JOIN PS_CA_DETAIL_UAR UAR ON DST.CONTRACT_NUM = UAR.CONTRACT_NUM AND DST.CONTRACT_LINE_NUM = UAR.CONTRACT_LINE_NUM
                                                                         AND DST.EFFDT = UAR.EFFDT AND DST.DST_SEQ_NUM = UAR.DST_SEQ_NUM)
           LEFT OUTER JOIN PS_CA_DETAIL_DFR DFR ON DST.CONTRACT_NUM = DFR.CONTRACT_NUM AND DST.CONTRACT_LINE_NUM = DFR.CONTRACT_LINE_NUM
                                                                         AND DST.EFFDT = DFR.EFFDT AND DST.DST_SEQ_NUM = DFR.DST_SEQ_NUM)
WHERE DST.BUSINESS_UNIT_GL = 'UNUNI' 
    AND DST.CONTRACT_NUM = '00077787'
    --XLAT X1
    AND X1.FIELDNAME = 'COMBO_VALID_FLG'
    AND X1.FIELDVALUE = DST.COMBO_VALID_FLG
    --XLAT X2
    AND X2.FIELDNAME = 'COMBO_VALID_FLG'
    AND X2.FIELDVALUE = UAR.COMBO_VALID_FLG
ORDER BY 1,2;

--Accounts Receivable
--Correct Posting Errors
SELECT * FROM PS_GROUP_TYPE_TBL;
SELECT * FROM PS_AR_ERROR_TBL;
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 6035;
SELECT * FROM PS_ORIGIN_TBL;

--Groups which have not been posted
SELECT A.GROUP_BU, A.GROUP_TYPE, TO_CHAR(A.ENTRY_DT, 'YYYY') AS ENTRY_YEAR, COUNT(1) 
FROM PS_GROUP_CONTROL A
WHERE A.POST_STATUS = 'E'
    AND A.GROUP_BU LIKE '6%'
GROUP BY GROUP_BU, GROUP_TYPE, TO_CHAR(A.ENTRY_DT, 'YYYY')
ORDER BY A.GROUP_BU, A.GROUP_TYPE;

--Payments
SELECT * FROM PS_GRP_PYMT_COR_VW WHERE DEPOSIT_BU LIKE '6%';
--Expanded and Modified GRP_PYMT_COR_VW
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, 
            A.ASSN_OPRID, A.ENTRY_DT, A.POST_STATUS, A.POST_DT, B.ENTRY_TYPE, B.DST_BAL_ITEM, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT
FROM PS_GROUP_CONTROL A, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM) 
WHERE A.GROUP_TYPE = 'P' 
    AND A.POST_STATUS = 'E' 
    AND A.GROUP_BU=B.GROUP_BU 
    AND A.GROUP_ID=B.GROUP_ID 
    AND (B.AR_ERROR_CD <> ' ' OR B.POSTED_FLAG <> 'Y')
    AND A.DEPOSIT_BU LIKE '6%'
ORDER BY 1,2;

--External Items
SELECT * FROM PS_GRP_EENT_EXT_VW;
--Expanded and Modified GRP_EENT_EXT_VW
SELECT A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, A.ASSN_OPRID, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT,
            B.DST_BAL_ITEM, A.ORIGIN_ID, A.ENTRY_DT, A.POST_DT
FROM PS_GROUP_CONTROL A, PS_ORIGIN_TBL C, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
WHERE A.GROUP_TYPE <> 'P' 
    AND A.GROUP_TYPE <> 'D' 
    AND A.GROUP_TYPE <> 'M' 
    AND A.GROUP_TYPE <> 'T' 
    AND A.GROUP_TYPE <> 'U' 
    AND A.GROUP_TYPE <> 'F' 
    AND A.POST_STATUS = 'E' 
    AND B.POSTED_FLAG <> 'Y' 
    AND A.GROUP_BU = B.GROUP_BU 
    AND A.GROUP_ID = B.GROUP_ID 
    AND A.ORIGIN_ID = C.ORIGIN_ID 
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME = 'ORIGIN_TBL') 
    AND C.EFFDT = (SELECT MAX(EFFDT) FROM PS_ORIGIN_TBL WHERE SETID = C.SETID AND ORIGIN_ID = C.ORIGIN_ID AND EFFDT <= SYSDATE AND EFF_STATUS = 'A') 
    AND C.ORIGIN_METHOD = 'E'
    AND A.GROUP_BU LIKE '6%'
ORDER BY 1,2;

--Online and External Items
--ORIGIN_METHOD has been commented to include both Online and External Items
SELECT A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, A.ASSN_OPRID, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT,
            B.DST_BAL_ITEM, A.GROUP_TYPE, A.ENTRY_DT, A.POST_DT, A.ORIGIN_ID, C.DESCR AS ORIGIN_DESCR, C.ORIGIN_METHOD
FROM PS_GROUP_CONTROL A, PS_ORIGIN_TBL C, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
WHERE A.GROUP_TYPE <> 'P' 
    AND A.GROUP_TYPE <> 'D' 
    AND A.GROUP_TYPE <> 'M' 
    AND A.GROUP_TYPE <> 'T' 
    AND A.GROUP_TYPE <> 'U' 
    AND A.GROUP_TYPE <> 'F' 
    AND A.POST_STATUS = 'E' 
    AND B.POSTED_FLAG <> 'Y' 
    AND A.GROUP_BU = B.GROUP_BU 
    AND A.GROUP_ID = B.GROUP_ID 
    AND A.ORIGIN_ID = C.ORIGIN_ID 
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME = 'ORIGIN_TBL') 
    AND C.EFFDT = (SELECT MAX(EFFDT) FROM PS_ORIGIN_TBL WHERE SETID = C.SETID AND ORIGIN_ID = C.ORIGIN_ID AND EFFDT <= SYSDATE AND EFF_STATUS = 'A') 
    --AND C.ORIGIN_METHOD = 'E'
    AND A.GROUP_BU LIKE '6%'
ORDER BY A.GROUP_BU, A.GROUP_ID, A.ENTRY_DT DESC, A.POST_DT DESC;

--UN_AP_PENDING_VOUCHERS     
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.INVOICE_DT, A.VENDOR_SETID, A.VENDOR_ID, B.NAME1, 
            A.OPRID, A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE,  A.DUE_DT
FROM (PS_VOUCHER A LEFT OUTER JOIN PS_VENDOR B ON B.SETID = A.VENDOR_SETID AND B.VENDOR_ID = A.VENDOR_ID)
WHERE A.APPR_STATUS = 'P'
    AND A.CLOSE_STATUS <> 'C'
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.ENTRY_STATUS <> 'X'
ORDER BY A.BUSINESS_UNIT, A.VOUCHER_ID, A.DUE_DT;

--UN_AP_DTL_PENDING_VCHR
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.ACCOUNTING_DT, A.GROSS_AMT, A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE, A.APPR_STATUS, A.BUDGET_HDR_STATUS, A.MATCH_ACTION, 
            A.MATCH_STATUS_VCHR, A.POST_STATUS_AP, B.PYMNT_SELCT_STATUS, B.PAID_AMT, B.PYMNT_METHOD, A.OPRID
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.VOUCHER_ID = B.VOUCHER_ID
     AND A.APPR_STATUS IN ('D','P')
     AND A.ENTRY_STATUS <> 'X'
     AND A.BUSINESS_UNIT LIKE '6%'
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE(:2,'YYYY-MM-DD') AND TO_DATE(:3,'YYYY-MM-DD')
     AND A.CLOSE_STATUS = 'O'
     AND A.VOUCHER_STYLE <> 'TMPL'
ORDER BY 1;

--Scheduled Payment Inquiry
SELECT * FROM PS_AP_SCHD_INQ_VW 
WHERE BUSINESS_UNIT LIKE '6%'
    AND SCHEDULED_PAY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY 1,2;

--Expanded and Modified PS_AP_SCHD_INQ_VW
SELECT V.BUSINESS_UNIT, V.VOUCHER_ID, V.VOUCHER_STYLE, V.APPR_STATUS, X1.XLATLONGNAME AS APPR_STS, A.PYMNT_CNT, A.PYMNT_ID, A.PYMNT_TYPE, A.PAID_AMT, A.PYMNT_GROSS_AMT, 
            A.DUE_DT, A.DSCNT_PAY_AMT, A.DSCNT_DUE_DT, A.SCHEDULED_PAY_DT, A.CURRENCY_PYMNT, A.TXN_CURRENCY_CD, A.PYMNT_SELCT_STATUS, X2.XLATLONGNAME AS PYMNT_SELECT_STS, 
            V.VENDOR_SETID, V.VENDOR_ID, VEN.VENDOR_NAME_SHORT, VEN.NAME1, A.REMIT_SETID, A.REMIT_VENDOR, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, B.BANK_ACCOUNT_NUM, 
            B.DESCR AS BANK_DESCR, B.BRANCH_NAME,
            A.PYMNT_METHOD, A.PYMNT_MESSAGE, A.PYMNT_HOLD, A.PYMNT_HOLD_REASON, A.PYMNT_HOLD_WTHD, A.PYMNT_SEPARATE, A.PYMNT_HANDLING_CD, A.POST_STATUS_AP, A.LC_ID, 
            A.WTHD_PYMNT_CNT, A.POST_STATUS_WTHD, A.PYMNT_GROUP_CD, A.NET_SELCT_STATUS, A.NET_TXN_STATUS, A.NET_REF_ID, A.DFT_SIGHT_CD, A.DFT_MAT_DT, A.DFT_SCHED_MAT_DT, 
            V.INVOICE_ID, A.IPAC_PYMNT_FLG, VEN.OFAC_STATUS 
FROM PS_VOUCHER V, PS_PYMNT_VCHR_XREF A, PS_BANK_ACCT_DEFN B, PS_VENDOR VEN, PSXLATITEM X1, PSXLATITEM X2
WHERE A.BUSINESS_UNIT = V.BUSINESS_UNIT 
    AND A.VOUCHER_ID = V.VOUCHER_ID 
    AND B.SETID = A.BANK_SETID 
    AND B.BANK_CD = A.BANK_CD 
    AND B.BANK_CD_CPTY = A.BANK_CD 
    AND B.BANK_ACCT_KEY = A.BANK_ACCT_KEY 
    AND VEN.SETID = V.VENDOR_SETID 
    AND VEN.VENDOR_ID = V.VENDOR_ID 
    AND V.VOUCHER_STYLE NOT IN ('TMPL','SGLP') 
    AND (V.PROCESS_MAN_CLOSE = 'N' OR V.CLOSE_STATUS <> 'C') 
    AND V.ENTRY_STATUS <> 'X' 
    AND A.PYMNT_SELCT_STATUS NOT IN ('P','X','S') 
    AND (A.NET_SELCT_STATUS <> 'S' OR A.NET_TXN_STATUS <> 'N')
    AND EXISTS (SELECT 'X' FROM PS_BUS_UNIT_TBL_FS WHERE BUSINESS_UNIT = V.BUSINESS_UNIT)
    AND V.BUSINESS_UNIT LIKE '6%'
    AND A.SCHEDULED_PAY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --XLAT X1
    AND X1.FIELDNAME = 'APPR_STATUS'
    AND X1.FIELDVALUE = V.APPR_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'PYMNT_SELCT_STATUS'
    AND X2.FIELDVALUE = A.PYMNT_SELCT_STATUS
ORDER BY 1,2;

--Scheduled Payments on Hold by Vendor
--Header Level
SELECT * FROM PS_VNDR_PYINQ_VW2H WHERE SETID = 'UNUNI';
--Expanded and Modified PS_VNDR_PYINQ_VW2H
SELECT C.SETID, C.VENDOR_ID, C.VENDOR_NAME_SHORT, C.AR_NUM, '0', C.NAME1 
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_VENDOR C 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.VOUCHER_ID = B.VOUCHER_ID 
    AND A.VENDOR_SETID = C.SETID 
    AND A.VENDOR_ID = C.VENDOR_ID 
    AND A.VOUCHER_STYLE <> 'TMPL' 
    AND A.ENTRY_STATUS <> 'X' 
    AND (B.PYMNT_HOLD = 'Y' OR B.PYMNT_HOLD_WTHD = 'Y' OR A.APPR_STATUS IN ('P', 'D')) 
    AND A.CLOSE_STATUS <> 'C'
ORDER BY 1,2;

--Detail Level
SELECT * FROM PS_VNDR_PYINQ_VW2D 
WHERE SETID = 'UNUNI'
    AND SCHEDULED_PAY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY 1,2;

--Vendor Current Balances
SELECT * FROM PS_AP_REG_VCHR_VW WHERE BUSINESS_UNIT LIKE '6%'
ORDER BY 2;

--Trying to understand RXL/RXG transactions and its impact on KK
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '611UU' AND PO_ID LIKE '%3780';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0072451177';

SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '611UU' AND VOUCHER_ID = '00010378';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID IN ('0072942709', '0072638789');

SELECT * FROM PS_PAYMENT_TBL WHERE PYMNT_ID_REF = '5020013416';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT LIKE '6%' AND PYMNT_ID = '0000014552';

SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT LIKE '6%' AND PYMNT_ID = '0000014538';
SELECT * FROM PS_PAYMENT_TBL WHERE PYMNT_ID_REF = '5020013402';

--How to find the "Amount to Receive" and "Quantity to Receive" for any given PO
SELECT AMT_ORDERED, QTY_ORDERED, A.* FROM PS_PO_LN_ORDER_VW A WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000007060' AND LINE_NBR = 1;
SELECT SUM(MERCHANDISE_AMT) AS AMT_ACCEPTED, SUM(QTY_SH_ACCPT_VUOM) AS QTY_ACCEPTED
FROM PS_RECV_LN_SHIP_FS 
WHERE BUSINESS_UNIT_PO = '600UU' AND PO_ID = '0000007142' AND LINE_NBR = 1 AND RECV_SHIP_STATUS <> 'X';

--Verification Queries
SELECT * FROM PS_PO_LINE WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000007060' AND LINE_NBR = 1;
SELECT SUM(QTY_PO) AS QTY_PO, SUM(MERCHANDISE_AMT) AS MERCHANDISE_AMT, SUM(MERCH_AMT_BSE) AS BASE_AMT 
FROM PS_PO_LINE_SHIP WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000007060' AND LINE_NBR = 1;
SELECT SUM(AMT_MATCHED) AS AMT_MATCHED, SUM(QTY_MATCHED) AS QTY_MATCHED 
FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000007060' AND LINE_NBR = 1;

--Outer Join b/w PO_LINE_SHIP and RECV_LN_SHIP
SELECT POLS.BUSINESS_UNIT AS PO_BU, POLS.PO_ID, POLS.LINE_NBR, POLS.SCHED_NBR, POLS.CANCEL_STATUS, POLS.CURRENCY_CD, POLS.MERCHANDISE_AMT, POLS.MERCH_AMT_BSE, 
            POLS.MATCH_STATUS_LN_PO, MATCH_LINE_OPT, 
            RELS.BUSINESS_UNIT AS RECV_BU, RELS.RECEIVER_ID, RELS.RECV_LN_NBR, RELS.RECV_SHIP_SEQ_NBR, RELS.RECV_SHIP_STATUS, RELS.AMT_ONLY_FLG, 
            RELS.MERCH_AMT_BSE, RELS.MERCH_AMT_PO_BSE, RELS.MERCHANDISE_AMT, RELS.MERCHANDISE_AMT_PO, RELS.QTY_SH_ACCPT_VUOM
FROM (PS_PO_LINE_SHIP POLS LEFT OUTER JOIN PS_RECV_LN_SHIP RELS ON POLS.BUSINESS_UNIT = RELS.BUSINESS_UNIT_PO AND POLS.PO_ID = RELS.PO_ID AND POLS.LINE_NBR = RELS.LINE_NBR 
                                                                                                           AND POLS.SCHED_NBR = RELS.SCHED_NBR AND RELS.RECV_SHIP_STATUS <> 'X') 
WHERE POLS.BUSINESS_UNIT = '600UU' 
    AND POLS.PO_ID = '0000007060'
ORDER BY 1,2,3,4;

--Aggregate
SELECT POLS.BUSINESS_UNIT AS PO_BU, POLS.PO_ID, POLS.CURRENCY_CD, SUM(POLS.MERCHANDISE_AMT) AS PO_MERCH_AMT, SUM(POLS.MERCH_AMT_BSE) AS PO_MERCH_AMT_BSE,
            RELS.BUSINESS_UNIT AS RECV_BU, RELS.RECEIVER_ID, SUM(RELS.MERCH_AMT_BSE) AS RELS_MERCH_AMT_BSE, SUM(RELS.MERCH_AMT_PO_BSE) AS RELS_MERCH_AMT_PO_BSE, 
            SUM(RELS.MERCHANDISE_AMT) AS RELS_MERCHANDISE_AMT, SUM(RELS.MERCHANDISE_AMT_PO) AS RELS_MERCHANDISE_AMT_PO, 
            SUM(RELS.QTY_SH_ACCPT_VUOM) AS QTY_ACCEPTED
FROM (PS_PO_LINE_SHIP POLS LEFT OUTER JOIN PS_RECV_LN_SHIP RELS ON POLS.BUSINESS_UNIT = RELS.BUSINESS_UNIT_PO AND POLS.PO_ID = RELS.PO_ID AND POLS.LINE_NBR = RELS.LINE_NBR 
                                                                                                           AND POLS.SCHED_NBR = RELS.SCHED_NBR AND RELS.RECV_SHIP_STATUS <> 'X') 
WHERE POLS.BUSINESS_UNIT = '600UU' 
    AND POLS.PO_ID = '0000007060'
GROUP BY POLS.BUSINESS_UNIT, POLS.PO_ID, POLS.CURRENCY_CD, RELS.BUSINESS_UNIT, RELS.RECEIVER_ID 
ORDER BY 1,2,3,4;

--How to identify PO Amount/Encumbrance changes in KK
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND PO_ID = '0000007181';
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0076192435';
--Additional Key in KK Trans Log table to capture number of times the PO was budget checked, depending upon what was changed
SELECT * FROM PS_KK_TRANS_LOG WHERE KK_TRAN_ID = '0076192435';

--Identify the Proposal/Project linkage
--Field SUB_PROP_NBR is the PROJECT_ID
--Verify Grants Security - Setup FSCM > Security > Grants Security
SELECT * FROM PS_GM_PROP_PROJ WHERE BUSINESS_UNIT = 'UNUNI' AND PROPOSAL_ID LIKE '%8072%';
SELECT * FROM PS_GM_SEC_DEPT_OPR WHERE TREE_NAME = 'UNUNI_DEPT_TREE' ORDER BY 1;

SELECT PROPOSAL_FLG, EMPLID, A.* FROM PS_GM_PROPOSAL A WHERE BUSINESS_UNIT = 'UNUNI' AND PROPOSAL_ID LIKE '%8072%';
SELECT * FROM PS_GM_PROP_PROJ WHERE BUSINESS_UNIT = 'UNUNI' AND PROPOSAL_ID LIKE '%8072%';
SELECT * FROM PSOPRDEFN WHERE EMPLID = '781943';
SELECT PROF_ROLE_TYPE, A.* FROM PS_GM_PROP_PROF A WHERE BUSINESS_UNIT = 'UNUNI' AND PROPOSAL_ID LIKE '%8072%';

SELECT * FROM PSTREENODE WHERE TREE_NAME = 'UNUNI_DEPT_TREE';
SELECT * FROM PSTREELEAF WHERE TREE_NAME = 'UNUNI_DEPT_TREE';

--Inactive OPRIDs who have triggered processes/jobs since 1st Jan 2014
SELECT PRCS.PRCSINSTANCE, PRCS.JOBINSTANCE, PRCS.MAINJOBINSTANCE, PRCS.PRCSJOBSEQ, PRCS.PRCSJOBNAME, PRCS.PRCSTYPE, PRCS.PRCSNAME, PRCS.PRCSITEMLEVEL, PRCS.MAINJOBNAME, 
            PRCS.MAINJOBSEQ, SERVERNAMERQST, PRCS.SERVERNAMERUN, PRCS.RUNDTTM, PRCS.RECURNAME, PRCS.OPRID AS PRCS_OPRID, PRCS.RUNSTATUS, PRCS.BEGINDTTM, PRCS.ENDDTTM, 
            PRCS.RUNCNTLID, OPR.OPRID, OPR.OPRDEFNDESC, OPR.ACCTLOCK
FROM PSPRCSRQST PRCS, PSOPRDEFN OPR
WHERE OPR.OPRID = PRCS.OPRID 
     AND OPR.ACCTLOCK = 1 
    AND TO_CHAR(((PRCS.RUNDTTM ) + (0)),'YYYY-MM-DD') >= '2014-01-01' 
    AND TO_CHAR(((PRCS.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1 DESC;

--Inactive OPRIDs who have triggered processes/jobs as of today
SELECT PRCS.PRCSINSTANCE, PRCS.JOBINSTANCE, PRCS.MAINJOBINSTANCE, PRCS.PRCSJOBSEQ, PRCS.PRCSJOBNAME, PRCS.PRCSTYPE, PRCS.PRCSNAME, PRCS.PRCSITEMLEVEL, PRCS.MAINJOBNAME, 
            PRCS.MAINJOBSEQ, SERVERNAMERQST, PRCS.SERVERNAMERUN, PRCS.RUNDTTM, PRCS.RECURNAME, PRCS.OPRID AS PRCS_OPRID, PRCS.RUNSTATUS, PRCS.BEGINDTTM, PRCS.ENDDTTM, 
            PRCS.RUNCNTLID, OPR.OPRID, OPR.OPRDEFNDESC, OPR.ACCTLOCK
FROM PSPRCSRQST PRCS, PSOPRDEFN OPR
WHERE OPR.OPRID = PRCS.OPRID
     AND OPR.ACCTLOCK = 1 
    AND TO_CHAR(PRCS.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 1 DESC;

--Experimental Version 1
--Find all those requisitions where the distrib line account does not match either the account at Item or Item Category level
--Req Line CURR_STATUS should be the same as Req Header REQ_STATUS
--Added Vendor Information; check all those Reqs which have Amount ONLY lines with Vendor ID specified. This will not work for UNU as the Catalog does not have Item/Vendor price
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, P.ACCOUNT AS ITM_ACCT,  
            CAT.ACCOUNT AS CAT_ACCT, D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR  
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          ((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)  
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Experimental Version 2
--Added Voucher details. Based on how PS Review Requisition Page works
--This query shows REQ/PO/VCHR XREF. Online OOB page shows REQ/PO XREF and REQ/VCHR XREF
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, P.ACCOUNT AS ITM_ACCT,  
            CAT.ACCOUNT AS CAT_ACCT, D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          (((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR)
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Experimental Version 3
--Display Receipt Information as well
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, P.ACCOUNT AS ITM_ACCT,  
            CAT.ACCOUNT AS CAT_ACCT, D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR, 
            RL.BUSINESS_UNIT AS RECV_BU, RL.RECEIVER_ID, RL.RECV_LN_NBR, RL.QTY_SH_RECVD_VUOM, RL.QTY_SH_ACCPT_VUOM, RL.QTY_SH_REJCT_VUOM, RL.RECEIPT_UM,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          ((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_RECV_LN_SHIP RL ON POD.PO_ID = RL.PO_ID AND POD.LINE_NBR = RL.LINE_NBR AND POD.SCHED_NBR = RL.SCHED_NBR AND POD.BUSINESS_UNIT = RL.BUSINESS_UNIT_PO)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR
                                      AND VL.BUSINESS_UNIT_RECV = RL.BUSINESS_UNIT AND VL.RECEIVER_ID = RL.RECEIVER_ID AND VL.RECV_LN_NBR = RL.RECV_LN_NBR 
                                      AND VL.RECV_SHIP_SEQ_NBR = RL.RECV_SHIP_SEQ_NBR)
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Experimental Version 4
--Additional Receipt/Voucher fields added
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, P.ACCOUNT AS ITM_ACCT,  
            CAT.ACCOUNT AS CAT_ACCT, D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR, 
            RL.BUSINESS_UNIT AS RECV_BU, RL.RECEIVER_ID, RH.RECV_STATUS, RL.RECV_LN_NBR, RL.RECV_SHIP_SEQ_NBR, 
            RL.QTY_SH_RECVD_VUOM, RL.QTY_SH_ACCPT_VUOM, RL.QTY_SH_REJCT_VUOM, RL.RECEIPT_UM,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VC.VENDOR_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR,
            VC.VOUCHER_STYLE, VC.CLOSE_STATUS, VC.ENTRY_STATUS, VC.POST_STATUS_AP, VC.MATCH_STATUS_VCHR, VC.APPR_STATUS, VC.INVOICE_ID, VC.INVOICE_DT, VC.ACCOUNTING_DT
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          ((((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_RECV_LN_SHIP RL ON POD.PO_ID = RL.PO_ID AND POD.LINE_NBR = RL.LINE_NBR AND POD.SCHED_NBR = RL.SCHED_NBR AND POD.BUSINESS_UNIT = RL.BUSINESS_UNIT_PO)
            LEFT OUTER JOIN PS_RECV_HDR RH ON RL.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RL.RECEIVER_ID = RH.RECEIVER_ID)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR
                                      AND VL.BUSINESS_UNIT_RECV = RL.BUSINESS_UNIT AND VL.RECEIVER_ID = RL.RECEIVER_ID AND VL.RECV_LN_NBR = RL.RECV_LN_NBR 
                                      AND VL.RECV_SHIP_SEQ_NBR = RL.RECV_SHIP_SEQ_NBR)
            LEFT OUTER JOIN PS_VOUCHER VC ON VL.BUSINESS_UNIT = VC.BUSINESS_UNIT AND VL.VOUCHER_ID = VC.VOUCHER_ID) 
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Experimental Version 5
--Added fields to keep track of receiving required check at all levels
--While retrieving Voucher Information, need to make sure that the query returns rows which do not require a receipt, but have been vouchered
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, P.RECV_REQ AS ITM_RECV_REQ, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, 
            CAT.CATEGORY_CD, CAT.RECV_REQ AS CAT_RECV_REQ, P.ACCOUNT AS ITM_ACCT, CAT.ACCOUNT AS CAT_ACCT, 
            D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.DIST_PROCESSED_FLG AS REQ_DIST_PRCS_FLG, D.PC_DISTRIB_STATUS AS REQ_PC_DIST_STS,
            D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN, D.BUDGET_DT AS REQ_BUD_DT,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR, POD.DIST_PROCESSED_FLG AS PO_DIST_PRCS_FLG, POD.PC_DISTRIB_STATUS AS PO_PC_DIST_STS, POL.RECV_REQ AS PO_RECV_REQ, 
            POD.BUDGET_DT AS PO_BUD_DT, RL.BUSINESS_UNIT AS RECV_BU, RL.RECEIVER_ID, RH.RECV_STATUS, RL.RECV_LN_NBR, RL.RECV_SHIP_SEQ_NBR, 
            RL.QTY_SH_RECVD_VUOM, RL.QTY_SH_ACCPT_VUOM, RL.QTY_SH_REJCT_VUOM, RL.RECEIPT_UM,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VC.VENDOR_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR,
            VC.VOUCHER_STYLE, VC.CLOSE_STATUS, VC.ENTRY_STATUS, VC.POST_STATUS_AP, VC.MATCH_STATUS_VCHR, VC.APPR_STATUS, VC.INVOICE_ID, VC.INVOICE_DT, VC.ACCOUNTING_DT
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          (((((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_PO_LINE POL ON POH.BUSINESS_UNIT = POL.BUSINESS_UNIT AND POH.PO_ID = POL.PO_ID AND POD.LINE_NBR = POL.LINE_NBR)
            LEFT OUTER JOIN PS_RECV_LN_SHIP RL ON POD.PO_ID = RL.PO_ID AND POD.LINE_NBR = RL.LINE_NBR AND POD.SCHED_NBR = RL.SCHED_NBR AND POD.BUSINESS_UNIT = RL.BUSINESS_UNIT_PO)
            LEFT OUTER JOIN PS_RECV_HDR RH ON RL.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RL.RECEIVER_ID = RH.RECEIVER_ID)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON (((RL.BUSINESS_UNIT IS NOT NULL OR RL.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                                                                       AND POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR 
                                                                       AND POD.SCHED_NBR = VL.SCHED_NBR 
                                                                       AND (VL.BUSINESS_UNIT_RECV = RL.BUSINESS_UNIT AND VL.RECEIVER_ID = RL.RECEIVER_ID AND VL.RECV_LN_NBR = RL.RECV_LN_NBR 
                                                                       AND VL.RECV_SHIP_SEQ_NBR = RL.RECV_SHIP_SEQ_NBR))
                                                                       OR ((RL.BUSINESS_UNIT IS NULL OR RL.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                                                                    AND POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR)))
            LEFT OUTER JOIN PS_VOUCHER VC ON VL.BUSINESS_UNIT = VC.BUSINESS_UNIT AND VL.VOUCHER_ID = VC.VOUCHER_ID) 
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--PPs Requisition Register
--Experimental Version 1
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, CAT.CATEGORY_CD, P.ACCOUNT AS ITM_ACCT,  
            CAT.ACCOUNT AS CAT_ACCT, D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR, 
            RL.BUSINESS_UNIT AS RECV_BU, RL.RECEIVER_ID, RL.RECV_LN_NBR, RL.QTY_SH_RECVD_VUOM, RL.QTY_SH_ACCPT_VUOM, RL.QTY_SH_REJCT_VUOM, RL.RECEIPT_UM,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          ((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_RECV_LN_SHIP RL ON POD.PO_ID = RL.PO_ID AND POD.LINE_NBR = RL.LINE_NBR AND POD.SCHED_NBR = RL.SCHED_NBR AND POD.BUSINESS_UNIT = RL.BUSINESS_UNIT_PO)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR
                                      AND VL.BUSINESS_UNIT_RECV = RL.BUSINESS_UNIT AND VL.RECEIVER_ID = RL.RECEIVER_ID AND VL.RECV_LN_NBR = RL.RECV_LN_NBR 
                                      AND VL.RECV_SHIP_SEQ_NBR = RL.RECV_SHIP_SEQ_NBR)
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    --AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
    --AND H.REQ_ID = '0000001931'
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--PPs Requisition Register
--Experimental Version 2
--While retrieving Voucher Information, need to make sure that the query returns rows which do not require a receipt, but have been vouchered
--Added DIST_PROCESSED_FLG for Req and PO
SELECT B.BUSINESS_UNIT, B.REQ_ID, H.REQ_STATUS, H.BUDGET_HDR_STATUS, B.LINE_NBR AS REQ_LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM, D.BUDGET_LINE_STATUS,
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, P.RECV_REQ AS ITM_RECV_REQ, B.CURR_STATUS, B.SOURCE_STATUS, B.AMT_ONLY_FLG, B.CATEGORY_ID, 
            CAT.CATEGORY_CD, CAT.RECV_REQ AS CAT_RECV_REQ, P.ACCOUNT AS ITM_ACCT, CAT.ACCOUNT AS CAT_ACCT, 
            D.ACCOUNT AS REQ_ACCT, D.OPERATING_UNIT AS REQ_OP_UNIT, D.FUND_CODE AS REQ_FUND, D.DEPTID AS REQ_DEPT, D.PROJECT_ID AS REQ_PRJ, 
            D.ACTIVITY_ID AS REQ_ACT, D.CHARTFIELD2 AS REQ_DONOR, D.DIST_PROCESSED_FLG AS REQ_DIST_PRCS_FLG, D.PC_DISTRIB_STATUS AS REQ_PC_DIST_STS, 
            D.BUSINESS_UNIT_AM AS REQ_BU_AM, D.PROFILE_ID AS REQ_PROFILE_ID, B.PRICE_VENDOR, V.NAME1, 
            H.REQUESTOR_ID AS REQ_REQUESTOR, H.OPRID_APPROVED_BY AS REQ_APPR, H.APPROVAL_DT AS REQ_APPR_DT, H.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            D.QTY_REQ, D.QTY_OPEN, D.AMT_OPEN, D.BUDGET_DT AS REQ_BUD_DT,
            POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR, D.DIST_PROCESSED_FLG AS PO_DIST_PRCS_FLG, POD.PC_DISTRIB_STATUS AS PO_PC_DIST_STS, POL.RECV_REQ AS PO_RECV_REQ, 
            POD.BUDGET_DT AS PO_BUD_DT, RL.BUSINESS_UNIT AS RECV_BU, RL.RECEIVER_ID, RH.RECV_STATUS, RL.RECV_LN_NBR, RL.RECV_SHIP_SEQ_NBR, 
            RL.QTY_SH_RECVD_VUOM, RL.QTY_SH_ACCPT_VUOM, RL.QTY_SH_REJCT_VUOM, RL.RECEIPT_UM,
            VL.BUSINESS_UNIT AS AP_BU, VL.VOUCHER_ID, VC.VENDOR_ID, VL.VOUCHER_LINE_NUM, VL.QTY_VCHR,
            VC.VOUCHER_STYLE, VC.CLOSE_STATUS, VC.ENTRY_STATUS, VC.POST_STATUS_AP, VC.MATCH_STATUS_VCHR, VC.APPR_STATUS, VC.INVOICE_ID, VC.INVOICE_DT, VC.ACCOUNTING_DT
FROM PS_REQ_HDR H, ((((PS_REQ_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                  LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                                  LEFT OUTER JOIN PS_VENDOR V ON B.PRICE_SETID = V.SETID AND B.PRICE_VENDOR = V.VENDOR_ID), PS_REQ_LINE_SHIP S,
          (((((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
            LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
            LEFT OUTER JOIN PS_PO_LINE POL ON POH.BUSINESS_UNIT = POL.BUSINESS_UNIT AND POH.PO_ID = POL.PO_ID AND POD.LINE_NBR = POL.LINE_NBR)
            LEFT OUTER JOIN PS_RECV_LN_SHIP RL ON POD.PO_ID = RL.PO_ID AND POD.LINE_NBR = RL.LINE_NBR AND POD.SCHED_NBR = RL.SCHED_NBR AND POD.BUSINESS_UNIT = RL.BUSINESS_UNIT_PO)
            LEFT OUTER JOIN PS_RECV_HDR RH ON RL.BUSINESS_UNIT = RH.BUSINESS_UNIT AND RL.RECEIVER_ID = RH.RECEIVER_ID)
            LEFT OUTER JOIN PS_VOUCHER_LINE VL ON (((RL.BUSINESS_UNIT IS NOT NULL OR RL.BUSINESS_UNIT <> ' ') --Vouchers with receipt
                                                                       AND POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR 
                                                                       AND POD.SCHED_NBR = VL.SCHED_NBR 
                                                                       AND (VL.BUSINESS_UNIT_RECV = RL.BUSINESS_UNIT AND VL.RECEIVER_ID = RL.RECEIVER_ID AND VL.RECV_LN_NBR = RL.RECV_LN_NBR 
                                                                       AND VL.RECV_SHIP_SEQ_NBR = RL.RECV_SHIP_SEQ_NBR))
                                                                       OR ((RL.BUSINESS_UNIT IS NULL OR RL.BUSINESS_UNIT = ' ') --Vouchers with no receipt
                                                                    AND POD.BUSINESS_UNIT = VL.BUSINESS_UNIT_PO AND POD.PO_ID = VL.PO_ID AND POD.LINE_NBR = VL.LINE_NBR AND POD.SCHED_NBR = VL.SCHED_NBR)))
            LEFT OUTER JOIN PS_VOUCHER VC ON VL.BUSINESS_UNIT = VC.BUSINESS_UNIT AND VL.VOUCHER_ID = VC.VOUCHER_ID) 
WHERE H.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND H.REQ_ID = B.REQ_ID
    AND H.BUSINESS_UNIT = S.BUSINESS_UNIT 
    AND H.REQ_ID = S.REQ_ID
    AND B.LINE_NBR = S.LINE_NBR
    AND H.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND H.REQ_ID = D.REQ_ID
    AND S.LINE_NBR = D.LINE_NBR
    AND S.SCHED_NBR = D.SCHED_NBR
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
     OR CAT.EFFDT IS NULL)
    AND H.BUSINESS_UNIT LIKE '6%'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    --Compare the Item Account Vs the Req Account, If not, Compare the Item Category Account Vs the Req Account 
    --AND ((P.ACCOUNT IS NOT NULL AND P.ACCOUNT <> D.ACCOUNT) OR (P.ACCOUNT IS NULL AND CAT.ACCOUNT <> D.ACCOUNT))
ORDER BY B.BUSINESS_UNIT, B.REQ_ID, B.LINE_NBR, S.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Asset Management > Depreciation > Review Depreciation Info > Asset Depreciation
--Get Asset Book information
SELECT * FROM PS_BU_BOOK_VW2 WHERE BUSINESS_UNIT = 'UNUNI';
SELECT LIFE_END_DT, END_DEPR_DT,  B.* FROM PS_BOOK B WHERE BUSINESS_UNIT = 'UNUNI' AND ASSET_ID = '000000011561';
SELECT PD_ALLOC, C.* FROM PS_CAL_DETP_TBL C WHERE SETID = 'SHARE' AND CALENDAR_ID = '01' AND FISCAL_YEAR = '2014';
--Depreciation
--DEPR_ALL_YEAR
SELECT * FROM PS_DEPR_ALL_PD_VW WHERE BUSINESS_UNIT = 'UNUNI' AND ASSET_ID = '000000011561'
ORDER BY BUSINESS_UNIT, ASSET_ID, DTTM_STAMP, CF_SEQNO, FISCAL_YEAR, START_PD, END_PD, OPERATING_UNIT, FUND_CODE, TRANS_TYPE;

--EXPENSE
SELECT * FROM PS_DEPR_EXP_PD_VW WHERE BUSINESS_UNIT = 'UNUNI' AND ASSET_ID = '000000011561'
ORDER BY BUSINESS_UNIT, ASSET_ID, DTTM_STAMP, CF_SEQNO, FISCAL_YEAR, START_PD, END_PD, OPERATING_UNIT, FUND_CODE, TRANS_TYPE;

--ACCUM
SELECT * FROM PS_DEPR_AD_PD_VW WHERE BUSINESS_UNIT = 'UNUNI' AND ASSET_ID = '000000011561'
ORDER BY BUSINESS_UNIT, ASSET_ID, DTTM_STAMP, FISCAL_YEAR, START_PD, END_PD, OPERATING_UNIT, FUND_CODE, TRANS_TYPE;

--Period Depreciation
--DEPR_ALL_PERIOD

--PS message displayed while deleting requisition line
SELECT DIST_PROCESSED_FLG, A.* FROM PS_REQ_LN_DISTRIB A WHERE BUSINESS_UNIT = '608UU' AND REQ_ID LIKE '%212';
--10100, 123, "This distribution line has been processed by Projects. It cannot be deleted."

--Once this program is run the DIST_PROCESSED_FLG is updated 
-->Project Costing->Cost Collection->Purchasing - PC_PO_TO_PC
--Check PS_PROJ_RESOURCE
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT_PO = '622UU' AND REQ_ID LIKE '%132';

SELECT DIST_PROCESSED_FLG, A.* FROM PS_REQ_LN_DISTRIB A WHERE BUSINESS_UNIT LIKE '6%' AND DIST_PROCESSED_FLG = 'N';

SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PC_PO_TO_PC' ORDER BY RUNDTTM DESC;
SELECT * FROM PS_RUN_CNTL_PC_AE WHERE OPRID = 'CMBATCH' AND RUN_CNTL_ID = 'PC_PC_PO_TO_PC_D_01';

--Find the last process instance used
SELECT * FROM PS_PRCSSEQUENCE;
--0 -- Process Intance
--1 -- Report Instance
--2 -- Transfer Instance
--3 -- PSRF Report ID
--4 -- PSRF Folder ID
--Good health check to ensure that the numbers in PS_PRCSSEQUENCE match those in the relevant tables
SELECT MAX(PRCSINSTANCE) AS PRCSSEQKEY0 FROM PSPRCSRQST;
SELECT MAX(CONTENTID) PRCSSEQKEY1 FROM PS_CDM_AUTH;
SELECT MAX(TRANSFERINSTANCE) PRCSSEQKEY2 FROM PS_CDM_LIST;
SELECT MAX(PSRF_REPORT_ID) PRCSSEQKEY3 FROM PSRF_RINFO_TBL;
SELECT MAX(PSRF_FOLDER_ID) PRCSSEQKEY4 FROM PSRF_FINFO_TBL;
--Always clear the below 3 tables together in case of problem or if need (based on process instance)
--PS_AERUNCONTROL
--PS_AERUNCONTROLPC
--PS_AETEMPTBLMGR

--PS DFW_PRCS_DASHBOARD
--Check Row Count of PSPRCSQUE and PSPRCSRQST
--The row counts of these tables must be the same. Refer to Document ID: E-PRCS: Process Scheduler Tips for Unexpected Behavior - 615950.1 for steps to correct
SELECT COUNT(1) AS QUEUE_COUNT, 0 AS RQST_COUNT FROM PSPRCSQUE
UNION ALL
SELECT 0 AS QUEUE_COUNT, COUNT(1) AS RQST_COUNT FROM PSPRCSRQST;

--Recurrence definition mismatch
SELECT C.OPRID, C.ACCTLOCK, A.PRCSINSTANCE, A.JOBINSTANCE, A.PRCSJOBNAME, A.PRCSNAME, A.RUNSTATUS, B.BEGINDTTM, A.RUNDTTM, A.RECURNAME 
FROM PSPRCSQUE A, PSPRCSRQST B, PSOPRDEFN C
WHERE A.PRCSINSTANCE = B.PRCSINSTANCE 
    AND A.OPRID = C.OPRID
    AND EXISTS (SELECT 'X' FROM PS_PRCSRECUR RECUR WHERE A.RECURNAME <> '' AND A.RECURNAME <> RECUR.RECURNAME)
ORDER BY 1;

SELECT * FROM PS_PRCSRECUR;

--Problematic rows in the Report Manager table
--Processes in Posting Status
SELECT A.PRCSINSTANCE, A.CONTENTID, A.PRCSNAME, A.RQSTDTTM, A.ENDDTTM, A.DISTSTATUS, B.TRANSFERINSTANCE 
FROM PS_CDM_LIST A, PS_CDM_TRANSFER B 
WHERE A.TRANSFERINSTANCE = B.TRANSFERINSTANCE
ORDER BY 1,2;

--Identify Corruption in Monthly Recurrence Definition
SELECT RECURDAYSPCL, A.* FROM PS_PRCSRECUR A WHERE A.RECURTYPE = 3 AND A.DAYOFMONTH > 0;
--if the RECURDAYSPCL is 0, then change the recurrence definition

--Find users who are associated with Recurrences Processes
SELECT P.PRCSINSTANCE, P.PRCSTYPE, P.PRCSNAME, P.RUNDTTM, P.RECURNAME, P.OPRID, O.OPRDEFNDESC, O.EMPLID, O.EMAILID, P.RUNCNTLID, P.LASTUPDDTTM
FROM PSPRCSRQST P LEFT OUTER JOIN PSOPRDEFN O ON P.OPRID = O.OPRID 
WHERE P.RECURNAME != ' ' 
    AND P.RUNSTATUS = '5' 
ORDER BY RUNDTTM DESC;

--RUNDTTM <= CAST(SYSTIMESTAMP AS TIMESTAMP);

--Application Engine Processes Are Not Scheduled and Stuck in Queued
SELECT PRCSNAME, PRCSINSTANCE, OPRID, SERVERASSIGN, RQSTDTTM, COUNT(1) 
FROM PSPRCSQUE 
WHERE RETRYCOUNT = 0 
     AND RUNSTATUS = '3'
GROUP BY PRCSNAME, SERVERASSIGN, PRCSINSTANCE, OPRID, RQSTDTTM
ORDER BY PRCSNAME, SERVERASSIGN, PRCSINSTANCE, OPRID, RQSTDTTM;

------------------------
--Open Period Check
------------------------
--For GL
SELECT OPN.PSFT_PRODUCT, OPN.BUSINESS_UNIT, OPN.LEDGER_GROUP, OPN.TRANSACTION_TYPE, TRAN.DESCR, OPN.LEDGER_CODE, OPN.GL_ADJUST_TYPE, OPN.CALENDAR_ID, 
            OPN.OPEN_YEAR_FROM, OPN.OPEN_PERIOD_FROM, OPN.BEGIN_LAG_DAYS, OPN.OPEN_FROM_DATE, OPN.OPEN_YEAR_TO, OPN.OPEN_PERIOD_TO, OPN.END_LAG_DAYS, OPN.OPEN_TO_DATE 
FROM PS_FIN_OPEN_PERIOD OPN, PS_TRANS_TYPE_TBL TRAN
WHERE OPN.PSFT_PRODUCT = TRAN.PSFT_PRODUCT
    AND OPN.TRANSACTION_TYPE = TRAN.TRANSACTION_TYPE 
    AND OPN.PSFT_PRODUCT = 'GL'
    AND OPN.BUSINESS_UNIT = 'UNUNI'
   AND OPN.LEDGER_GROUP = 'ACTUALS'
ORDER BY 1,2;

--All Modules for UNUNI
--Need to ensure that GL is also listed
SELECT OPN.PSFT_PRODUCT, OPN.BUSINESS_UNIT, OPN.LEDGER_GROUP, OPN.TRANSACTION_TYPE, TRAN.DESCR, OPN.LEDGER_CODE, OPN.GL_ADJUST_TYPE, OPN.CALENDAR_ID, 
            OPN.OPEN_YEAR_FROM, OPN.OPEN_PERIOD_FROM, OPN.BEGIN_LAG_DAYS, OPN.OPEN_FROM_DATE, OPN.OPEN_YEAR_TO, OPN.OPEN_PERIOD_TO, OPN.END_LAG_DAYS, OPN.OPEN_TO_DATE 
FROM PS_TRANS_TYPE_TBL TRAN, (PS_FIN_OPEN_PERIOD OPN LEFT OUTER JOIN PS_FIN_BU_MAPPING MAP ON OPN.PSFT_PRODUCT = MAP.PSFT_PRODUCT 
                                                                                             AND OPN.BUSINESS_UNIT = MAP.BUSINESS_UNIT
                                                                                             AND MAP.BUSINESS_UNIT_GL = 'UNUNI')
WHERE OPN.PSFT_PRODUCT = TRAN.PSFT_PRODUCT
    AND OPN.TRANSACTION_TYPE = TRAN.TRANSACTION_TYPE
    AND OPN.LEDGER_GROUP = 'ACTUALS'
    AND (OPN.BUSINESS_UNIT LIKE '6%' OR OPN.BUSINESS_UNIT = 'UNUNI')
ORDER BY OPN.PSFT_PRODUCT, OPN.BUSINESS_UNIT, OPN.LEDGER_GROUP, OPN.TRANSACTION_TYPE;

--What Business Units are being used by UNUNI
--When a new AM BU is created, a row is inserted into each of the following tables:
SELECT * FROM PS_FIN_BU_LGRP_TBL WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI') ORDER BY 1,2;
SELECT * FROM PS_FIN_BU_MAPPING WHERE BUSINESS_UNIT_GL = 'UNUNI' ORDER BY 1,2;
SELECT * FROM PS_FIN_OPEN_OPTN WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI') ORDER BY 1,2;
SELECT * FROM PS_FIN_OPEN_PERIOD WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT = 'UNUNI') ORDER BY 1,2;
--PSFT Products that can be selected on the Open Period Update Page
SELECT DISTINCT A.FIELDVALUE, A.XLATLONGNAME
FROM PSXLATITEM A, PS_FIN_BU_MAPPING M
WHERE A.FIELDNAME = 'PS_OWNER'
    AND A.EFF_STATUS = 'A'
    AND A.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM B WHERE A.FIELDNAME = B.FIELDNAME AND B.EFF_STATUS = 'A' AND B.EFFDT <= SYSDATE)
    AND M.PSFT_PRODUCT = A.FIELDVALUE
ORDER BY 1,2;
--Ledger Group(s) that can be selected on the Open Period Update Page
SELECT DISTINCT A.LEDGER_GROUP, A.DESCR, B.LEDGER_TYPE 
FROM PS_LED_GRP_TBL A, PS_LED_TMPLT_TBL B 
WHERE B.LEDGER_TEMPLATE = A.LEDGER_TEMPLATE
ORDER BY 1;

SELECT * FROM PS_FIN_OPEN_PERIOD WHERE PSFT_PRODUCT = 'GL' AND BUSINESS_UNIT = 'UNUNI' AND LEDGER_GROUP = 'ACTUALS' ORDER BY 1,2;
SELECT * FROM PS_TRANS_TYPE_TBL;

--------------------
--UNU AR Groups
SELECT GC.GROUP_BU, GC.GROUP_ID, GC.OPRID, GC.BUSINESS_UNIT, GC.GROUP_TYPE, GT.DESCR AS GRP_TYP_DESCR, GC.BAL_STATUS, GC.EDIT_STATUS, GC.POST_STATUS, GC.POST_ACTION, 
            GC.CONTROL_AMT, GC.CONTROL_CNT, GC.POSTED_TOTAL, GC.ORIGIN_ID, GC.RECEIVED_DT, GC.ENTRY_DT, GC.POST_DT, GC.ACCOUNTING_DT, GC.DEPOSIT_BU, GC.DEPOSIT_ID, 
            GC.PAYMENT_SEQ_NUM, GC.PAYMENT_ID, GC.PAYMENT_CURRENCY, GC.PAYMENT_AMT, GC.BANK_SETID, GC.BANK_CD, GC.BANK_ACCT_KEY
FROM PS_GROUP_CONTROL GC, PS_GROUP_TYPE_TBL GT
WHERE GT.SETID=(SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = GC.BUSINESS_UNIT AND G.RECNAME = 'GROUP_TYPE_TBL')
    AND GC.GROUP_TYPE = GT.GROUP_TYPE
    AND GT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GROUP_TYPE_TBL INTAB WHERE GT.SETID = INTAB.SETID AND GT.GROUP_TYPE = INTAB.GROUP_TYPE AND INTAB.EFFDT <= SYSDATE)
    AND GC.GROUP_BU LIKE '6%'
    --AND GC.GROUP_ID = '3478'
    AND GC.ACCOUNTING_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY 1,2;

------------------------
--WHAT IS AUDITED
------------------------
--Record Auditing
--Identify all records that have an audit record associated with them
--RECUSE
--bit 0 (add = 1)
--bit 1 (change = 2)
--bit 2 (delete = 4)
--bit 3 (selective = 8)
SELECT RECNAME, RECDESCR, AUDITRECNAME, RECUSE    
FROM PSRECDEFN
WHERE AUDITRECNAME != ' '
ORDER BY RECNAME;

--Use bitand operator
SELECT RECNAME, RECDESCR, AUDITRECNAME,
         CASE WHEN BITAND(RECUSE,1) > 0 THEN 'Y' ELSE 'N' END AUDIT_ADD,
         CASE WHEN BITAND(RECUSE,2) > 0 THEN 'Y' ELSE 'N' END AUDIT_CHANGE,
         CASE WHEN BITAND(RECUSE,4) > 0 THEN 'Y' ELSE 'N' END AUDIT_DELETE,
         CASE WHEN BITAND(RECUSE,8) > 0 THEN 'Y' ELSE 'N' END AUDIT_SELECTIVE
FROM PSRECDEFN
WHERE AUDITRECNAME != ' '
ORDER BY RECNAME;

--One problem you may run into is that not every field is audited in the audit record. 
--The following SQL gives the fields that match between the record and the audit record (which means they are actually audited)
SELECT D.RECNAME, D.RECDESCR, D.AUDITRECNAME, D.RECUSE, FA.FIELDNAME, F.FIELDNUM
FROM PSRECDEFN D INNER JOIN PSRECFIELD F ON  D.RECNAME = F.RECNAME
                              INNER JOIN PSRECFIELD FA ON  FA.RECNAME = D.AUDITRECNAME AND FA.FIELDNAME = F.FIELDNAME
WHERE D.AUDITRECNAME != ' '    
ORDER BY D.RECNAME, F.FIELDNUM;

--Field Auditing
--USEEDIT
--bit 3 (add = 8)
--bit 7 (change = 128)
--bit 10 (delete = 1024)
SELECT F.RECNAME, F.FIELDNUM, F.FIELDNAME, F.USEEDIT,
         CASE WHEN BITAND(F.USEEDIT,8) > 0 THEN 'Y' ELSE 'N' END AUDIT_FIELD_ADD,
         CASE WHEN BITAND(F.USEEDIT,128) > 0 THEN 'Y' ELSE 'N' END AUDIT_FIELD_CHANGE,
         CASE WHEN BITAND(F.USEEDIT,1024) > 0 THEN 'Y' ELSE 'N' END AUDIT_FIELD_DELETE
FROM PSRECFIELD F
WHERE F.FIELDNAME = (SELECT CASE WHEN (BITAND(USEEDIT,8) > 0 OR BITAND(USEEDIT,128) > 0 OR BITAND(USEEDIT,1024) > 0) THEN FIELDNAME ELSE '' END AS FIELD_AUDITED FROM PSRECFIELD
                                    WHERE RECNAME = F.RECNAME AND FIELDNAME = F.FIELDNAME)
ORDER BY F.RECNAME, F.FIELDNUM;

--Query To get all the fields ,edit type ,data type and long names of a table
--Version 1
SELECT DISTINCT PR.RECNAME "Record Name", F.FIELDNAME "Field Name", PR.FIELDNUM "Field #", DECODE(BITAND(USEEDIT,1),1, 'Y','') "KEY", 
            CASE F.FIELDTYPE
                     WHEN 0 THEN 'Char'
                     WHEN 1 THEN 'Long Char'
                     WHEN 2 THEN 'NBR'
                     WHEN 3 THEN 'Sign'
                     WHEN 4 THEN 'Date'
                     WHEN 5 THEN 'Time'
                     WHEN 6 THEN 'Dttm'
                     WHEN 7 THEN 'Img'
                     WHEN 8 THEN 'Vers'
            ELSE ' ' END "Data Type",
            F.LENGTH, PR.DEFRECNAME || PR.DEFFIELDNAME  "Default Value", DECODE(BITAND(USEEDIT,256),256, 'Y','N') "REQ (Y/N)", L.LONGNAME, PR.EDITTABLE "Table Edits",
            DECODE('X', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,16384)=16384),'Prompt', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,512)=512),'Xlat',
                               (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,8192)=8192),'Y/N', '') "Edit Type"
FROM PSRECDEFN D, PSDBFIELD F, PSDBFLDLABL L, PSRECFIELDDB PR
WHERE PR.RECNAME = D.RECNAME
    AND PR.FIELDNAME = F.FIELDNAME
    AND F.FIELDNAME = L.FIELDNAME
    AND D.RECNAME IN ('ENTRY_USE_TBL')
    AND L.DEFAULT_LABEL = 1
ORDER BY PR.RECNAME, "Field #";

--Version 2
--FIELDTYPE Case statement adjusted for additional values, SETCNTRLFLD field has been added
SELECT DISTINCT PR.RECNAME "Record Name", F.FIELDNAME "Field Name", PR.FIELDNUM "Field #", DECODE(BITAND(USEEDIT,1),1, 'Y','') "KEY", 
            CASE F.FIELDTYPE
                     WHEN 0 THEN 'Char'
                     WHEN 1 THEN 'Long Char'
                     WHEN 2 THEN 'NBR'
                     WHEN 3 THEN 'Sign NBR'
                     WHEN 4 THEN 'Date'
                     WHEN 5 THEN 'Time'
                     WHEN 6 THEN 'Dttm'
                     WHEN 7 THEN 'Img'
                     WHEN 8 THEN 'Img/Attch'
                     WHEN 9 THEN 'Img/Ref'
            ELSE ' ' END "Data Type",
            F.LENGTH, PR.DEFRECNAME || PR.DEFFIELDNAME "Default Value", DECODE(BITAND(USEEDIT,256),256, 'Y','N') "REQ (Y/N)", L.LONGNAME, PR.EDITTABLE "Table Edits",
            DECODE('X', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,16384)=16384),'Prompt', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,512)=512),'Xlat',
                               (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,8192)=8192),'Y/N', '') "Edit Type", PR.SETCNTRLFLD
FROM PSRECDEFN D, PSDBFIELD F, PSDBFLDLABL L, PSRECFIELDDB PR
WHERE PR.RECNAME = D.RECNAME
    AND PR.FIELDNAME = F.FIELDNAME
    AND F.FIELDNAME = L.FIELDNAME
    AND D.RECNAME IN ('ENTRY_USE_TBL')
    AND L.DEFAULT_LABEL = 1
ORDER BY PR.RECNAME, "Field #";

--Find XLAT for all XLAT fields in a given record
--Version 1
SELECT DISTINCT X.FIELDNAME, X.FIELDVALUE, X.EFFDT, X.EFF_STATUS, X.XLATSHORTNAME, X.XLATLONGNAME 
FROM PSXLATITEM X
WHERE X.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PSXLATITEM B_ED WHERE X.FIELDNAME = B_ED.FIELDNAME AND X.FIELDVALUE = B_ED.FIELDVALUE AND B_ED.EFFDT <= SYSDATE)
    AND X.FIELDNAME IN (SELECT DISTINCT FIELDNAME FROM (SELECT DISTINCT PR.RECNAME, F.FIELDNAME, PR.FIELDNUM, DECODE(BITAND(USEEDIT,1),1, 'Y','') "KEY", 
            CASE F.FIELDTYPE
                     WHEN 0 THEN 'Char'
                     WHEN 1 THEN 'Long Char'
                     WHEN 2 THEN 'NBR'
                     WHEN 3 THEN 'Sign'
                     WHEN 4 THEN 'Date'
                     WHEN 5 THEN 'Time'
                     WHEN 6 THEN 'Dttm'
                     WHEN 7 THEN 'Img'
                     WHEN 8 THEN 'Vers'
            ELSE ' ' END "Data Type",
            F.LENGTH, PR.DEFRECNAME || PR.DEFFIELDNAME  "Default Value", DECODE(BITAND(USEEDIT,256),256, 'Y','N') "REQ (Y/N)", L.LONGNAME, PR.EDITTABLE "Table Edits",
            DECODE('X', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,16384)=16384),'Prompt', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,512)=512),'Xlat',
                               (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,8192)=8192),'Y/N', '') EDIT_TYPE
FROM PSRECDEFN D, PSDBFIELD F, PSDBFLDLABL L, PSRECFIELDDB PR
WHERE PR.RECNAME = D.RECNAME
    AND PR.FIELDNAME = F.FIELDNAME
    AND F.FIELDNAME = L.FIELDNAME
    AND D.RECNAME IN ('ENTRY_USE_TBL')
    AND L.DEFAULT_LABEL = 1
--ORDER BY PR.RECNAME, "Field #";
)
WHERE EDIT_TYPE = 'Xlat')
ORDER BY 1,2;

--Version 2
--Got rid of unwanted fields, as we only need a list of fields which have translate values
SELECT DISTINCT X.FIELDNAME, X.FIELDVALUE, X.EFFDT, X.EFF_STATUS, X.XLATSHORTNAME, X.XLATLONGNAME 
FROM PSXLATITEM X
WHERE X.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PSXLATITEM B_ED WHERE X.FIELDNAME = B_ED.FIELDNAME AND X.FIELDVALUE = B_ED.FIELDVALUE AND B_ED.EFFDT <= SYSDATE) 
    AND X.FIELDNAME IN (SELECT DISTINCT FIELDNAME FROM (SELECT DISTINCT F.FIELDNAME, DECODE('X', (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,16384)=16384),'Prompt', 
                                                                                                                                                              (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,512)=512),'Xlat',
                                                                                                                                                              (SELECT 'X' FROM DUAL WHERE BITAND(USEEDIT,8192)=8192),'Y/N', '') EDIT_TYPE
FROM PSRECDEFN D, PSDBFIELD F, PSDBFLDLABL L, PSRECFIELDDB PR
WHERE PR.RECNAME = D.RECNAME
    AND PR.FIELDNAME = F.FIELDNAME
    AND F.FIELDNAME = L.FIELDNAME
    AND D.RECNAME IN (SELECT RECNAME FROM PSRECDEFN WHERE RECTYPE IN(0))
    --AND D.RECNAME IN ('ENTRY_USE_TBL')
    AND L.DEFAULT_LABEL = 1)
WHERE EDIT_TYPE = 'Xlat')
ORDER BY 1,2;

--Set Up FSCM > Product Related > Receivables > Options
--Entry Type
SELECT * FROM PS_ENTRY_TYPE_TBL WHERE SETID = 'UNUNI';
SELECT * FROM PS_ENTRY_REASN_TBL WHERE SETID = 'UNUNI';

--Group Type
SELECT * FROM PS_GROUP_TYPE_TBL;

--System Functions
SELECT * FROM PS_ENTRY_USE_TBL;
SELECT * FROM PS_ENTRY_USE_L_TBL;

SELECT ENT.*, ENTL.* 
FROM PS_ENTRY_USE_TBL ENT, PS_ENTRY_USE_L_TBL ENTL
WHERE ENT.ENTRY_USE_ID = ENTL.ENTRY_USE_ID
AND ENT.ENTRY_USE_ID = 'WS-01'
ORDER BY 1,2;

--Set Up FSCM > Product Related > Receivables > Payment
--Automatic Entry Type

--UNU Route Control Setup
SELECT * FROM PS_RTE_CNTL_PROF WHERE RTE_CNTL_PROFILE LIKE '%UNU%'
ORDER BY 1;

SELECT * FROM PS_RTE_CNTL_HDR WHERE RTE_CNTL_PROFILE LIKE '%UNU%'
ORDER BY 1;

SELECT * FROM PS_RTE_CNTL_TYPE ORDER BY 1;

SELECT * FROM PS_RTE_CNTL_LN WHERE RTE_CNTL_PROFILE LIKE '%UNU%'
ORDER BY 1;

SELECT PROF.RTE_CNTL_PROFILE, HDR.RTE_CNTL_TYPE, LN.RTE_FROM_VALUE, LN.RTE_TO_VALUE, PROF.DESCRLONG
FROM PS_RTE_CNTL_PROF PROF, PS_RTE_CNTL_HDR HDR, PS_RTE_CNTL_LN LN
WHERE PROF.RTE_CNTL_PROFILE = HDR.RTE_CNTL_PROFILE
    AND PROF.RTE_CNTL_PROFILE = LN.RTE_CNTL_PROFILE
    AND HDR.RTE_CNTL_TYPE = LN.RTE_CNTL_TYPE
    AND PROF.RTE_CNTL_PROFILE LIKE '%UNU%'
ORDER BY PROF.RTE_CNTL_PROFILE, HDR.RTE_CNTL_TYPE, LN.RTE_FROM_VALUE, LN.RTE_TO_VALUE;

--SQL Query to provide the list of records to which user has access to
SELECT DISTINCT B.TREE_NODE, Z.RECDESCR 
FROM PSTREEDEFN A, PSTREENODE B, PS_SCRTY_ACC_GRP C, PSTREENODE E, PSROLECLASS X, PSROLEUSER Y, PSRECDEFN Z 
WHERE A.SETID = ' ' 
    AND A.TREE_STRCT_ID = 'ACCESS_GROUP' 
    AND A.EFF_STATUS = 'A' 
    AND A.EFFDT = (SELECT MAX (D.EFFDT) FROM PSTREEDEFN D WHERE D.SETID = ' ' AND D.TREE_NAME = A.TREE_NAME 
                                                                                                     AND D.EFFDT <= TO_DATE (TO_CHAR (SYSDATE, 'YYYY-MM-DD'),'YYYY-MM-DD')) 
   AND Y.ROLEUSER = 'prakash.prashant' 
   AND Y.ROLENAME = X.ROLENAME 
   AND X.CLASSID = C.CLASSID 
   AND C.TREE_NAME = A.TREE_NAME 
   AND C.ACCESSIBLE = 'Y' 
   AND B.SETID = ' ' 
   AND B.TREE_NAME = E.TREE_NAME 
   AND B.EFFDT = E.EFFDT 
   AND B.TREE_NODE_TYPE = 'R' 
   AND B.TREE_NODE = Z.RECNAME 
  AND Z.RECTYPE IN (0, 1, 6) 
  AND E.SETID = ' ' 
  AND E.TREE_NAME = A.TREE_NAME 
  AND E.EFFDT = A.EFFDT 
  AND E.TREE_NODE_TYPE = 'G' 
  AND B.TREE_NODE_NUM BETWEEN E.TREE_NODE_NUM AND E.TREE_NODE_NUM_END 
  AND C.ACCESS_GROUP = E.TREE_NODE 
  AND ((NOT EXISTS (SELECT 'X' FROM PS_SCRTY_ACC_GRP F WHERE F.CLASSID = X.CLASSID AND F.TREE_NAME = A.TREE_NAME AND F.ACCESSIBLE = 'N')) 
     OR (E.TREE_NODE_NUM = (SELECT MAX (G.TREE_NODE_NUM) FROM PSTREENODE G, PS_SCRTY_ACC_GRP H WHERE G.SETID = ' ' AND G.TREE_NAME = A.TREE_NAME AND G.EFFDT = A.EFFDT 
                                                                                                                                                                          AND G.TREE_NODE_TYPE = 'G' AND B.TREE_NODE_NUM BETWEEN G.TREE_NODE_NUM 
                                                                                                                                                                          AND G.TREE_NODE_NUM_END AND H.CLASSID = X.CLASSID 
                                                                                                                                                                          AND H.TREE_NAME = A.TREE_NAME AND H.ACCESS_GROUP = G.TREE_NODE)))
ORDER BY 1,2;

--Requisition Budgetary Activity Report
--POS8002 + modified it a bit
--Incorrect aggregation for Amounts, not able to understand the logic
SELECT RH.BUSINESS_UNIT, RH.REQ_ID, RH.REQ_STATUS, RD.LINE_NBR, RD.SCHED_NBR, RD.DISTRIB_LINE_NUM, Q.KK_TRAN_ID, 
            --SUM(Q.MONETARY_AMOUNT) AS REMAIN_AMT_BSE, SUM(Q.KK_POSTED_AMT) AS REQ_AMT_BSE, SUM(Q.ACTIVITY) AS PO_AMT_BSE, SUM(POD.MONETARY_AMT_BSE) AS PO_AMT,
            Q.MONETARY_AMOUNT AS REMAIN_AMT_BSE, Q.KK_POSTED_AMT AS REQ_AMT_BSE, Q.ACTIVITY AS PO_AMT_BSE, 
            (POD.MONETARY_AMT_BSE) AS PO_AMT, SUM(A.MONETARY_AMOUNT) AS KK_ACT_AMT,
            RD.ACCOUNT, RD.OPERATING_UNIT, RD.FUND_CODE, RD.DEPTID, RD.PROJECT_ID, RD.ACTIVITY_ID, RD.CHARTFIELD2,
            POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DIST_LINE_NUM
FROM PS_REQ_HDR RH, PS_KK_LIQUIDATION Q, PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_LN L, PS_KK_SOURCE_HDR H, PS_BUL_CNTL_BUD BUD, 
         ((PS_REQ_LN_DISTRIB RD LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON RD.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND RD.REQ_ID = POD.REQ_ID AND RD.LINE_NBR = POD.REQ_LINE_NBR 
                                                                                                              AND RD.SCHED_NBR = POD.REQ_SCHED_NBR AND RD.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR
                                                                                                              AND POD.DISTRIB_LN_STATUS <> 'X' AND POD.BUDGET_LINE_STATUS = 'V')
          LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
WHERE RH.BUSINESS_UNIT = RD.BUSINESS_UNIT
    AND RH.REQ_ID = RD.REQ_ID
    AND RH.BUSINESS_UNIT = H.BUSINESS_UNIT
    AND RH.REQ_ID = H.REQ_ID
    AND RD.LINE_NBR = L.LINE_NBR
    AND RD.SCHED_NBR = L.SCHED_NBR
    AND RD.DISTRIB_LINE_NUM = L.DISTRIB_LINE_NUM
    AND H.KK_TRAN_ID = L.KK_TRAN_ID
    AND H.KK_TRAN_DT = L.KK_TRAN_DT
    AND L.KK_TRAN_ID = A.KK_TRAN_ID
    AND L.KK_TRAN_DT = A.KK_TRAN_DT
    AND L.KK_TRAN_LN = A.KK_TRAN_LN
    AND A.BALANCING_LINE = 'N'
    AND BUD.BUSINESS_UNIT = 'UNUNI'
    AND BUD.KK_DETAIL_LED = 'Y'
    AND A.LEDGER_GROUP = BUD.KK_LEDGER_GROUP
    AND Q.KK_TRAN_ID = A.KK_TRAN_ID
    AND Q.KK_TRAN_LN = A.KK_TRAN_LN
    AND Q.KK_TRAN_DT = A.KK_TRAN_DT
    AND Q.LEDGER_GROUP = A.LEDGER_GROUP
    AND RD.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    AND RD.BUDGET_LINE_STATUS IN ('W', 'V')
    AND RH.BUSINESS_UNIT = '608UU'
    --AND RH.REQ_ID = '0000000203'
GROUP BY RH.BUSINESS_UNIT, RH.REQ_ID, RH.REQ_STATUS, RD.LINE_NBR, RD.SCHED_NBR, RD.DISTRIB_LINE_NUM, Q.KK_TRAN_ID, Q.MONETARY_AMOUNT, Q.KK_POSTED_AMT, Q.ACTIVITY, 
               POD.MONETARY_AMT_BSE, RD.ACCOUNT, RD.OPERATING_UNIT, RD.FUND_CODE, RD.DEPTID, RD.PROJECT_ID, RD.ACTIVITY_ID, RD.CHARTFIELD2,
               POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR, POD.SCHED_NBR, POD.DISTRIB_LINE_NUM
ORDER BY RH.BUSINESS_UNIT, RH.REQ_ID, RD.LINE_NBR, RD.SCHED_NBR, RD.DISTRIB_LINE_NUM;

SELECT * FROM PS_BUL_CNTL_BUD BUD WHERE BUSINESS_UNIT = 'UNUNI' AND BUD.KK_DETAIL_LED = 'Y';
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0075627268';
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0075627268';
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0075627268' AND LEDGER_GROUP = 'DET_UU';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0075627268' AND LEDGER_GROUP = 'DET_UU';
SELECT * FROM PS_PO_LINE_DISTRIB WHERE BUSINESS_UNIT_REQ = '608UU' AND REQ_ID = '0000000203';
SELECT REQ_LINE_NBR, SUM(MONETARY_AMT_BSE) AS PO_AMT
FROM PS_PO_LINE_DISTRIB 
WHERE BUSINESS_UNIT_REQ = '608UU'
    AND REQ_ID = '0000000203'
    AND DISTRIB_LN_STATUS <> 'X'
   AND BUDGET_LINE_STATUS = 'V'
GROUP BY REQ_LINE_NBR;

SELECT RD.LINE_NBR, POD.REQ_LINE_NBR, SUM(POD.MONETARY_AMT_BSE) AS PO_AMT  
FROM PS_REQ_LN_DISTRIB RD, PS_PO_LINE_DISTRIB POD
WHERE RD.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ 
    AND RD.REQ_ID = POD.REQ_ID 
    AND RD.LINE_NBR = POD.REQ_LINE_NBR 
    AND RD.SCHED_NBR = POD.REQ_SCHED_NBR 
    AND RD.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR
    AND POD.DISTRIB_LN_STATUS <> 'X' AND POD.BUDGET_LINE_STATUS = 'V' AND POD.REQ_ID <> ' '
    AND RD.BUSINESS_UNIT = '608UU'
    AND RD.REQ_ID = '0000000203'
GROUP BY RD.LINE_NBR, POD.REQ_LINE_NBR
ORDER BY RD.LINE_NBR, POD.REQ_LINE_NBR;

SELECT RD.LINE_NBR, POD.REQ_LINE_NBR, SUM(POD.MONETARY_AMT_BSE) AS PO_AMT  
FROM (PS_REQ_LN_DISTRIB RD LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON RD.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND RD.REQ_ID = POD.REQ_ID AND RD.LINE_NBR = POD.REQ_LINE_NBR 
                                                                                                               AND RD.SCHED_NBR = POD.REQ_SCHED_NBR AND RD.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR 
                                                                                                               AND POD.DISTRIB_LN_STATUS <> 'X' AND POD.BUDGET_LINE_STATUS = 'V' AND POD.REQ_ID <> ' ') 
WHERE RD.BUSINESS_UNIT = '608UU'
    AND RD.REQ_ID = '0000000203'
GROUP BY RD.LINE_NBR, POD.REQ_LINE_NBR
ORDER BY RD.LINE_NBR, POD.REQ_LINE_NBR;

--Contract and Billing Batch
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'BIPRELD';

SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UN_BI_03' ORDER BY RUNDTTM DESC;
--CA_UNCABIAR_D_01
SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UN_BI_01' ORDER BY RUNDTTM DESC;
--BIKKRECOGNIZED
--BIKKCOLLECTED
SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UNCABIAR' ORDER BY RUNDTTM DESC;
--CA_UNCABIAR_D_01

--Process Other Billing Methods
SELECT * FROM PS_RUN_CNTL_CA_AE WHERE RUN_CNTL_ID = 'CA_UNCABIAR_D_01';

SELECT * FROM PS_PRCSJOBDEFN WHERE PRCSJOBNAME = 'UNCABIAR';
SELECT * FROM PS_PRCSJOBITEM WHERE PRCSJOBNAME = 'UNCABIAR';
--Application Engine    UN_CAEVENTDT
--Application Engine    CA_BI_INTFC
--Application Engine    UN_BI_INTFID
--Application Engine    BIIF0001
--PSJob    UN_BI_03
--Application Engine    BIPCC000

SELECT * FROM PS_PRCSJOBITEM WHERE PRCSJOBNAME = 'UN_BI_03';
--Application Engine    UN_BI_ACCTDT
--Application Engine    BIIVC000
--Application Engine    BICURCNV
--Application Engine    UN_BI_CA_UAR
--Application Engine    BIPRELD
--SQR Report    UNBILDGL
--SQR Report    BILDAR01
--Application Engine    UN_BI_CA_ACT

SELECT * FROM PS_PRCSJOBITEM WHERE PRCSJOBNAME = 'UN_BI_01';
--Application Engine    BIIVC000
--Application Engine    BICURCNV
--Application Engine    BIPRELD
--SQR Report    UNBILDGL
--Application Engine    UN_BIACT
--Application Engine    UN_BIKKFLG
--Application Engine    FS_BP
--Application Engine    UN_BIKKFLG
--SQR Report    BILDAR01

SELECT * FROM PS_PRCSJOBITEM WHERE PRCSNAME = 'BILDGL01';

--Testing some queries to check Batch runs
SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UNCABIAR' AND PRCSJOBSEQ = 0 
ORDER BY RUNDTTM DESC;

--Testing some queries to check Batch runs
SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UN_BI_01' AND PRCSJOBSEQ = 0 
ORDER BY RUNDTTM DESC;

--Testing some queries to check Batch runs
SELECT * FROM PSPRCSRQST WHERE PRCSJOBNAME = 'UN_BI_03' AND PRCSJOBSEQ = 0 
ORDER BY RUNDTTM DESC;

SELECT TRUNC((CAST(Q.ENDDTTM AS DATE) - CAST(Q.BEGINDTTM AS DATE))*24*60) || ' minutes' AS DURATION_MINUTES, 
            TRUNC((CAST(Q.ENDDTTM AS DATE) - CAST(Q.BEGINDTTM AS DATE))*24*60*60) || ' seconds' AS DURATION_SECONDS,
            Q.*
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
    AND Q.PRCSJOBSEQ = 0
ORDER BY Q.RUNDTTM DESC;

--Find Total Runs, First run & Second run of any given process/PSJob
--Version 1
SELECT COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
    AND Q.PRCSJOBSEQ = 0
ORDER BY Q.RUNDTTM DESC;

--Version 2
SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
           COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
    AND Q.PRCSJOBSEQ = 0
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;

--For all UNU jobs triggered by my ID
SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS, COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.PRCSJOBNAME LIKE 'UNU%' OR Q.MAINJOBNAME LIKE 'UNU%'))
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;

--For all UNU jobs triggered by my ID within the last 7 days
SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS, COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.PRCSJOBNAME LIKE 'UNU%' OR Q.MAINJOBNAME LIKE 'UNU%'))
     AND TO_CHAR(((Q.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
     AND TO_CHAR(((Q.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;

--Take interval of a Day
SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
           COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, (24/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
    AND Q.PRCSJOBSEQ = 0
    AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;

--Take interval of a Day
SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
           COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, (24/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNUPODSP'
    AND Q.PRCSJOBSEQ = 0
    AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;

--Find out the Frequency of Job Runs by my ID
--V1
SELECT PRCSNAME, PRCSJOBNAME, MAINJOBNAME, RUNSTATUS, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, ROUND((24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.PRCSJOBNAME LIKE 'UNU%' OR Q.MAINJOBNAME LIKE 'UNU%'))
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY FIRST_OCCURRED, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--V2
SELECT Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                   AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                    AND XLAT.FIELDVALUE = Q.RUNSTATUS) AS RUNSTATUS_XLAT, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, ROUND((24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.PRCSJOBNAME LIKE 'UNU%' OR Q.MAINJOBNAME LIKE 'UNU%'))
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY FIRST_OCCURRED, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--V3
SELECT Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                   AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                    AND XLAT.FIELDVALUE = Q.RUNSTATUS) AS RUNSTATUS_XLAT, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,
            (CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24 AS HOURS_DIFF,
            ROUND(((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.PRCSJOBNAME LIKE 'UNU%' OR Q.MAINJOBNAME LIKE 'UNU%'))
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           --AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY FIRST_OCCURRED DESC, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--Check run times for CA, BI & AR Jobs - 'UNCABIAR', 'UN_BI_03', 'UN_BI_01', 'UNJRNLBI'
SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
           COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, (24/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME IN ('UNCABIAR', 'UN_BI_03', 'UN_BI_01', 'UNJRNLBI')
    --AND Q.PRCSJOBSEQ = 0
    AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
--ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;
ORDER BY FIRST_OCCURRED, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--Find runs of all PSJobs which have a naming convention as follows: UN%BI%
SELECT Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                   AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                    AND XLAT.FIELDVALUE = Q.RUNSTATUS) AS RUNSTATUS_XLAT,
           COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED, (24/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME IN (SELECT PRCSJOBNAME FROM PS_PRCSJOBDEFN WHERE PRCSJOBNAME LIKE 'UN%BI%')
    --UnComment the line below to see only PSJobs, leave it commented to see PSJob Items
    --AND Q.PRCSJOBSEQ = 0
    AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
GROUP BY Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
--ORDER BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS;
ORDER BY FIRST_OCCURRED, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--Test timestamp from DUAL
SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS TODAY,
            TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD') AS "1DAY",
            TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD') AS "7DAY",
            TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -100, 'DD'), 'YYYY-MM-DD') AS "100DAY"
FROM DUAL;

--Date Testing
SELECT DISTINCT TO_CHAR(Q.RUNDTTM,'DD-MON-RR HH24:MI:SS') AS RUNDTTM, TO_CHAR(SYSDATE, 'DD-MON-RR HH24:MI:SS') AS TODAY,
            (CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE))*24 AS HOURS_DIFF,
            (TO_DATE(TO_CHAR(Q.RUNDTTM, 'DD-MON-RR HH24:MI:SS'), 'Dd-MON-RR HH24:MI:SS') - TO_DATE(TO_CHAR(SYSDATE, 'DD-MON-RR HH24:MI:SS'), 'Dd-MON-RR HH24:MI:SS'))*24 HOURS_DIFF
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME IN (SELECT PRCSJOBNAME FROM PS_PRCSJOBDEFN WHERE PRCSJOBNAME LIKE 'UN%BI%')
     AND TO_CHAR(((Q.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
     AND TO_CHAR(((Q.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
ORDER BY 1 DESC;

SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            --ROUND((CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE)), 3)*24 AS HOURS_DIFF,
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED--, 
            --(MAX(ROUND((CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE)), 3)*2)/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
     AND Q.PRCSJOBSEQ = 0
     AND TO_CHAR(((Q.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
     AND TO_CHAR(((Q.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS--, ROUND((CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE)), 3)*24
ORDER BY FIRST_OCCURRED DESC, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--Try and use the Min and Max RUNDTTM values to calculate the frequency
SELECT Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            --ROUND((CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE)), 3)*24 AS HOURS_DIFF,
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,
            (CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24 AS HOURS_DIFF,
            ((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)) AS EVERY_XX_HRS
FROM PSPRCSRQST Q 
WHERE Q.PRCSJOBNAME = 'UNCABIAR'
     AND Q.PRCSJOBSEQ = 0
     AND TO_CHAR(((Q.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
     AND TO_CHAR(((Q.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS--, ROUND((CAST(Q.RUNDTTM AS DATE) - CAST(SYSDATE AS DATE)), 3)*24
ORDER BY FIRST_OCCURRED DESC, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--CMBATCH run for a day
--only PSJobs
SELECT Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                   AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                    AND XLAT.FIELDVALUE = Q.RUNSTATUS) AS RUNSTATUS_XLAT, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,
            ROUND((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24, 3) AS HOURS_DIFF,
            ROUND(((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'CMBATCH')
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY FIRST_OCCURRED DESC, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;

--CMBATCH
--Daily Run - As of Today
SELECT Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS,
            (SELECT XLAT.XLATLONGNAME FROM PSXLATITEM XLAT WHERE XLAT.EFFDT = (SELECT MAX(XLAT_ED.EFFDT) FROM PSXLATITEM XLAT_ED WHERE XLAT_ED.FIELDNAME = XLAT.FIELDNAME 
                                                                                                                                   AND XLAT_ED.FIELDVALUE = XLAT.FIELDVALUE) 
                                                                                                    AND XLAT.FIELDNAME = 'RUNSTATUS' 
                                                                                                    AND XLAT.FIELDVALUE = Q.RUNSTATUS) AS RUNSTATUS_XLAT, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,            
            ROUND((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24, 3) AS HOURS_DIFF,
            ROUND(((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PSPRCSRQST Q
WHERE (Q.OPRID = 'CMBATCH')
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
           --AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.PRCSJOBNAME, Q.MAINJOBNAME, Q.RUNSTATUS
ORDER BY LAST_OCCURRED DESC, Q.MAINJOBNAME, Q.PRCSJOBNAME, Q.PRCSNAME;


SELECT Q.OPRID, Q.PRCSNAME, Q.JOBNAMESRC, Q.SCHEDULENAME, Q.RUNSTATUS, RUNSTATUSDESCR, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,
            ROUND((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24, 3) AS HOURS_DIFF,
            ROUND(((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PS_PMN_PRCSLIST Q
WHERE (Q.OPRID = 'CMBATCH')
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.JOBNAMESRC, Q.SCHEDULENAME, Q.RUNSTATUS, RUNSTATUSDESCR
ORDER BY FIRST_OCCURRED DESC, Q.SCHEDULENAME, Q.JOBNAMESRC, Q.PRCSNAME;

SELECT Q.OPRID, Q.PRCSNAME, Q.JOBNAMESRC, Q.SCHEDULENAME, Q.RUNSTATUS, RUNSTATUSDESCR, 
            COUNT(Q.PRCSINSTANCE) AS TOTAL_RUNS, MIN(Q.RUNDTTM) AS FIRST_OCCURRED, MAX(Q.RUNDTTM) AS LAST_OCCURRED,
            ROUND((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24, 3) AS HOURS_DIFF,
            ROUND(((CAST(MAX(Q.RUNDTTM) AS DATE) - CAST(MIN(Q.RUNDTTM) AS DATE))*24/COUNT(Q.PRCSINSTANCE)), 3) AS EVERY_XX_HRS
FROM PS_PMN_PRCSLIST Q
WHERE (Q.OPRID = 'prakash.prashant' or (Q.JOBNAMESRC LIKE 'UNU%' OR Q.SCHEDULENAME LIKE 'UNU%'))
           AND TO_CHAR(Q.RUNDTTM,'YYYY-MM-DD') = TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
           AND Q.PRCSJOBSEQ = 0 --comment this line if you want to see Processes as well
GROUP BY Q.OPRID, Q.PRCSNAME, Q.JOBNAMESRC, Q.SCHEDULENAME, Q.RUNSTATUS, RUNSTATUSDESCR
ORDER BY FIRST_OCCURRED DESC, Q.SCHEDULENAME, Q.JOBNAMESRC, Q.PRCSNAME;

--Find out Queued Processes which are supposed to run after today
SELECT OPRID, PRCSINSTANCE, RUNSTATUS, PRCSTYPE, PRCSNAME, SERVERNAMERQST, RUNDTTM, RECURNAME, RQSTDTTM, LASTUPDDTTM, RUNCNTLID, 
            JOBINSTANCE, MAINJOBINSTANCE, PRCSJOBSEQ, PRCSJOBNAME, PRCSITEMLEVEL, MAINJOBNAME, MAINJOBSEQ 
FROM PSPRCSRQST 
WHERE (RUNSTATUS = 5 OR RUNSTATUS <> 9) 
     AND TO_CHAR(RUNDTTM, 'YYYY-MM-DD') > TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY RUNDTTM DESC;

--UNU AR GL Amount Differece
--UNU_AR_GL_AMOUNT_DIFF
--Doesn't make sense
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.JOURNAL_LINE, A.MONETARY_AMOUNT AS GL_AMT, B.MONETARY_AMOUNT AS ITEM_AMT, 
            B.CUST_ID, B.ITEM, B.JOURNAL_ID AS JRNL_ID_ITEM, B.JOURNAL_LINE AS JRNL_LN_ITEM
FROM PS_JRNL_LN A, PS_ITEM_DST B
WHERE (A.BUSINESS_UNIT = B.BUSINESS_UNIT_GL
     AND A.JOURNAL_ID = B.JOURNAL_ID
     AND A.JOURNAL_DATE = B.JOURNAL_DATE
     AND A.JOURNAL_LINE = B.JOURNAL_LINE
     AND A.LEDGER = 'USD'
     AND B.GL_DISTRIB_STATUS = 'D'
     AND A.MONETARY_AMOUNT <> B.MONETARY_AMOUNT
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND SYSDATE
     AND A.BUSINESS_UNIT = 'UNUNI')
ORDER BY 1, 2, 3;

--Requisition Inquiry
SELECT * FROM PS_REQ_COPY_WS 
WHERE BUSINESS_UNIT LIKE '6%'
    AND REQ_DT BETWEEN TO_DATE('2009-01-01', 'YYYY-MM-DD') AND TO_DATE('2014-12-31', 'YYYY-MM-DD')
    AND REQ_STATUS <> 'C'
ORDER BY BUSINESS_UNIT, REQ_ID, REQ_DT DESC;

--Mariko's Ticket 20145
--KK Issue
--PO 614UU/6563
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '614UU' AND PO_ID = '0000006563';
--0078280102
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0078280102';

--Voucher 614UU/18156
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '614UU' AND VOUCHER_ID = '00018156';
--0080129640
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0080129640';
SELECT * FROM PS_KK_OVERRIDE_TBL WHERE KK_TRAN_ID = '0080129640';
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0080129640';

--UPD815398
--FMS 9.0 Bundle 29 - Added additional Index
SELECT * FROM PSINDEXDEFN WHERE RECNAME = 'KK_EXCPTN_TBL';

-------------------------------------------------------
--View Open Encumbrances/Pre-Encumbrances
--KK
--PO
--REQ
-------------------------------------------------------
--KK Source Transactions and their Reference KK Transaction
SELECT KK_SOURCE_TRAN, KK_SOURCE_TRAN_REF, A.* FROM PS_KK_SOURCE_TRAN A;
SELECT KK_SOURCE_TRAN, KK_SOURCE_TRAN_REF, ST.* FROM PS_KK_SOURCE_TRAN ST WHERE ST.KK_SOURCE_TRAN_REF = 'PO_POENC';
--Observation(s) 
--1. In KK_ACTIVITY_LOG, Referenced Budget lines will have MONETARY_AMOUNT as NEGATIVE
--2. In KK_ACTIVITY_LOG, Negative Monetary Amount means that PS will populate ACTIVITY field with same amount and reverse sign
--3. In KK_LIQUIDATION, ZERO MONETARY_AMOUNT means that PS will poluate ACTIVITY field with same amount and same sign
--4. KK_LIQUIDATION.ACTIVITY column is always in BASE_CURRENCY

--SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'LEDGER_TYPE_KK';
--SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'KK_INQ_AMT_TYP_R';
--KK Source Transactions and their Reference KK Transaction
SELECT KK_SOURCE_TRAN, KK_SOURCE_TRAN_REF, A.* FROM PS_KK_SOURCE_TRAN A;
SELECT KK_SOURCE_TRAN, KK_SOURCE_TRAN_REF, ST.* FROM PS_KK_SOURCE_TRAN ST WHERE ST.KK_SOURCE_TRAN_REF = 'PO_POENC';
SELECT KK_SOURCE_TRAN, KK_SOURCE_TRAN_REF, ST.* FROM PS_KK_SOURCE_TRAN ST WHERE ST.KK_SOURCE_TRAN = 'PO_POENC';
--Testing for BU/PO_ID - 600UU/0000007040
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID = '0070560613';
SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0070560613';
SELECT * FROM PS_KK_SOURCE_HDR WHERE KK_TRAN_ID IN ('0070552236', '0070552239');
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0070560613';
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0070560613';

--Check Voucher(s) linked to this PO
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT_PO = '600UU' AND PO_ID = '0000007040';
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00026989';
SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' 
AND VOUCHER_ID IN ('00026532', '00026715', '00026989', '00027285', '00027631', '00026533', '00027037', '00027284', '00026633', '00027597');
SELECT * FROM PS_KK_REFERENCED WHERE KK_TRAN_ID = '0075670219';
SELECT * FROM PS_KK_ACTIVITY_LOG WHERE KK_TRAN_ID = '0075670219';
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID = '0075670219';
SELECT * FROM PS_KK_LIQUIDATION WHERE KK_TRAN_ID IN ('0071222968', '0071222969', '0071878046', '0071242537', '0072039622', '0075670219', '0076053791', '0077649231', '0079920005', 
                                                                                           '0072613958', '0075818189', '0077553953', '0077553954', '0079739376', '0079744616');

--Expanded KK_DRL_ALOG_EVW
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, 
            A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, 
            A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, A.STATISTICS_CODE, A.STATISTIC_AMOUNT, B.KK_SOURCE_TRAN, 
            B.PO_ID, B.VOUCHER_ID, B.PROCESS_INSTANCE, B.KK_DATETIME_STAMP, B.KEYLIST
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N' 
    AND A.KK_TRAN_ID = B.KK_TRAN_ID 
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    --Check Referenced Documents (aka Requisition(s))
    AND (EXISTS 
           (SELECT 'X' FROM PS_KK_REFERENCED R, PS_KK_LIQUIDATION L WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT AND A.KK_TRAN_LN = R.KK_TRAN_LN 
                                                                                                                            AND L.KK_TRAN_ID = R.KK_REFD_ID AND L.KK_TRAN_DT = R.KK_REFD_DT AND L.KK_TRAN_LN = R.KK_REFD_LN 
                                                                                                                            AND A.LEDGER_GROUP = L.LEDGER_GROUP AND L.MONETARY_AMOUNT <> 0 AND A.REFERENCED_BUDGET = 'Y'
           ) --End of First SELECT in EXISTS Clause
           --Check Direct POs
           OR EXISTS 
           (SELECT 'X' FROM PS_KK_LIQUIDATION B WHERE A.KK_TRAN_ID = B.KK_TRAN_ID AND A.KK_TRAN_DT = B.KK_TRAN_DT AND A.KK_TRAN_LN = B.KK_TRAN_LN 
                                                                            AND A.LEDGER_GROUP = B.LEDGER_GROUP AND B.MONETARY_AMOUNT <> 0
           ) --End of 1st OR EXISTS Clause 
           --Check Referenced Transactions for PO_POENC
           OR EXISTS 
           (SELECT 'X' FROM PS_KK_SOURCE_HDR H WHERE H.KK_TRAN_ID = A.KK_TRAN_ID AND H.KK_TRAN_DT = A.KK_TRAN_DT 
                                                                                     AND NOT EXISTS (SELECT 'X' FROM PS_KK_SOURCE_TRAN ST WHERE H.KK_SOURCE_TRAN = ST.KK_SOURCE_TRAN_REF)
                                                                                     AND NOT EXISTS (SELECT 'X' FROM PS_KK_REFERENCED R WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT 
                                                                                                                                                                                AND A.KK_TRAN_LN = R.KK_TRAN_LN)
           ) -- End of 2nd OR EXISTS Clause
           ) --End of Exists Clause
   --AND B.BUSINESS_UNIT = '600UU'
   --AND B.PO_ID = '0000007040'
   AND A.LEDGER_GROUP = 'DET_UU'
   AND A.ACCOUNT = '71405'
   AND A.PROJECT_ID = '00064158'
   AND A.BUDGET_PERIOD = '2014'
ORDER BY 1,2,3;

--For PAR_UU
SELECT A.BUSINESS_UNIT, A.LEDGER_GROUP, A.LEDGER, A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, 
            A.BUDGET_PERIOD, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.FOREIGN_CURRENCY, A.KK_TRAN_ID, A.KK_TRAN_DT, A.KK_TRAN_LN, A.REFERENCED_BUDGET, 
            A.FOREIGN_AMOUNT, A.BASE_CURRENCY, A.MONETARY_AMOUNT, A.STATISTICS_CODE, A.STATISTIC_AMOUNT, B.KK_SOURCE_TRAN, 
            B.PO_ID, B.VOUCHER_ID, B.PROCESS_INSTANCE, B.KK_DATETIME_STAMP, B.KEYLIST
FROM PS_KK_ACTIVITY_LOG A, PS_KK_SOURCE_HDR B
WHERE A.BALANCING_LINE = 'N' 
    AND A.KK_TRAN_ID = B.KK_TRAN_ID 
    AND A.KK_TRAN_DT = B.KK_TRAN_DT
    --Check Referenced Documents (aka Requisition(s))
    AND (EXISTS 
           (SELECT 'X' FROM PS_KK_REFERENCED R, PS_KK_LIQUIDATION L WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT AND A.KK_TRAN_LN = R.KK_TRAN_LN 
                                                                                                                            AND L.KK_TRAN_ID = R.KK_REFD_ID AND L.KK_TRAN_DT = R.KK_REFD_DT AND L.KK_TRAN_LN = R.KK_REFD_LN 
                                                                                                                            AND A.LEDGER_GROUP = L.LEDGER_GROUP AND L.MONETARY_AMOUNT <> 0 AND A.REFERENCED_BUDGET = 'Y'
           ) --End of First SELECT in EXISTS Clause
           --Check Direct POs
           OR EXISTS 
           (SELECT 'X' FROM PS_KK_LIQUIDATION B WHERE A.KK_TRAN_ID = B.KK_TRAN_ID AND A.KK_TRAN_DT = B.KK_TRAN_DT AND A.KK_TRAN_LN = B.KK_TRAN_LN 
                                                                            AND A.LEDGER_GROUP = B.LEDGER_GROUP AND B.MONETARY_AMOUNT <> 0
           ) --End of 1st OR EXISTS Clause 
           --Check Referenced Transactions for PO_POENC
           OR EXISTS 
           (SELECT 'X' FROM PS_KK_SOURCE_HDR H WHERE H.KK_TRAN_ID = A.KK_TRAN_ID AND H.KK_TRAN_DT = A.KK_TRAN_DT 
                                                                                     AND NOT EXISTS (SELECT 'X' FROM PS_KK_SOURCE_TRAN ST WHERE H.KK_SOURCE_TRAN = ST.KK_SOURCE_TRAN_REF)
                                                                                     AND NOT EXISTS (SELECT 'X' FROM PS_KK_REFERENCED R WHERE A.KK_TRAN_ID = R.KK_TRAN_ID AND A.KK_TRAN_DT = R.KK_TRAN_DT 
                                                                                                                                                                                AND A.KK_TRAN_LN = R.KK_TRAN_LN)
           ) -- End of 2nd OR EXISTS Clause
           ) --End of Exists Clause
   --AND B.BUSINESS_UNIT = '600UU'
   --AND B.PO_ID = '0000007040'
   AND A.LEDGER_GROUP = 'PAR_UU'
   AND A.LEDGER = 'PAR_UU_ENC'
   --AND A.ACCOUNT = '71405'
   AND A.PROJECT_ID = '00064158'
   AND A.BUDGET_PERIOD = '2014'
ORDER BY 1,2,3;

--Based on PO Tables
--For PAR_UU
--Version 1
SELECT A.BUSINESS_UNIT, A.PO_ID, A.PO_STATUS, X1.XLATLONGNAME AS PO_STATUS_DESCR, A.VENDOR_ID, E.NAME1, E.VENDOR_CLASS, X10.XLATLONGNAME AS VENDOR_CLASS_DESCR, 
            B.INV_ITEM_ID, ITM.DESCR AS ITM_DESCR, P.ACCOUNT AS ITM_ACCT, B.LINE_NBR AS PO_LINE_NBR, C.SCHED_NBR AS PO_SCHED_NBR, D.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM, 
            A.BUDGET_HDR_STATUS, A.BUDGET_CHECK, B.UNIT_OF_MEASURE, B.RECV_REQ, X2.XLATLONGNAME AS RECV_REQ_PO, B.AMT_ONLY_FLG, 
            B.CATEGORY_ID, CAT.CATEGORY_CD, CAT.ACCOUNT AS CAT_ACCT, B.CNTRCT_SETID, B.CNTRCT_ID, 
            B.CNTRCT_LINE_NBR, B.RELEASE_NBR, A.BUYER_ID, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.MATCH_STATUS_PO, X3.XLATLONGNAME AS MTCH_STATUS_PO, A.PO_DT, 
            A.ACCOUNTING_DT AS PO_ACCT_DT, D.BUDGET_DT AS PO_BUD_DT, B.CANCEL_STATUS AS POL_CANCEL_STATUS, D.DISTRIB_LN_STATUS, D.KK_CLOSE_FLAG, D.KK_PROCESS_PRIOR, 
            D.KK_CLOSE_PRIOR, D.QTY_PO AS POD_QTY_PO, D.MERCH_AMT_BSE AS PO_USD_AMT, C.DISTRIB_MTHD_FLG, C.MATCH_STATUS_LN_PO, C.PRICE_PO AS PO_LS_PRICE, 
            C.PRICE_PO_BSE AS PO_LS_PRICE_BSE, C.QTY_PO AS PO_LS_QTY, C.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, C.CURRENCY_CD AS PO_LS_M_AMT_CURR, 
            C.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, C.FREIGHT_TERMS, C.MATCH_LINE_OPT, 
            D.MERCHANDISE_AMT AS PO_FOREIGN_AMT, D.CURRENCY_CD, A.CURRENCY_CD AS PO_HDR_CURR, 
            A.RATE_MULT AS PO_HDR_RATE_MULT, A.RATE_DIV AS PO_HDR_RATE_DIV, D.RATE_MULT AS PO_DIST_RATE_MULT, D.RATE_DIV AS PO_DIST_RATE_DIV, 
            C.DUE_DT, C.SHIPTO_ID, 
            D.ACCOUNT AS PO_ACCT, D.OPERATING_UNIT AS PO_OP_UNIT, D.FUND_CODE AS PO_FUND, D.DEPTID AS PO_DEPT, D.PROJECT_ID AS PO_PRJ, D.ACTIVITY_ID AS PO_ACT, 
            D.CHARTFIELD2 AS PO_DONOR, 
            D.BUSINESS_UNIT_REQ, D.REQ_ID, REQ_LINE_NBR, REQ_SCHED_NBR, REQ_DISTRIB_NBR, REQD.BUSINESS_UNIT_AM AS REQ_BU_AM, REQD.PROFILE_ID AS REQ_PROFILE_ID, 
            REQH.REQUESTOR_ID AS REQ_REQUESTOR, REQH.OPRID_APPROVED_BY AS REQ_APPR, REQH.APPROVAL_DT AS REQ_APPR_DT, REQH.OPRID_ENTERED_BY AS REQ_ENTERED_BY, 
            REQH.ENTERED_DT AS REQ_ENTERED_DT, NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
            REQD.ACCOUNT AS REQ_ACCT, REQD.OPERATING_UNIT AS REQ_OP_UNIT, REQD.FUND_CODE AS REQ_FUND, REQD.DEPTID AS REQ_DEPT, REQD.PROJECT_ID AS REQ_PRJ, 
            REQD.ACTIVITY_ID AS REQ_ACT, REQD.CHARTFIELD2 AS REQ_DONOR,
            REQH.RATE_MULT AS REQ_HDR_RATE_MULT, REQH.RATE_DIV AS REQ_HDR_RATE_DIV, REQD.RATE_MULT AS REQ_DIST_RATE_MULT, REQD.RATE_DIV AS REQ_DIST_RATE_DIV, 
            G.KK_TRAN_LN, G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_ENC, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, G.FOREIGN_CURRENCY, 
            G.ACTIVITY, G.LEDGER_GROUP, G.PC_DISTRIB_STATUS, G.LIQUIDATE_METHOD, A.DST_CNTRL_ID, A.MATCH_ACTION, A.MATCH_CNTRL_ID
FROM PS_PO_HDR A, PS_PO_LINE_SHIP C, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PSXLATITEM X10,
         (((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                                 LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID), 
         (((((PS_PO_LINE_DISTRIB D 
               LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT AND D.PO_ID = E.PO_ID) 
               LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT AND E.KK_TRAN_ID = F.KK_TRAN_ID AND D.LINE_NBR = F.LINE_NBR 
                                                               AND D.SCHED_NBR = F.SCHED_NBR AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM) 
               LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID AND F.KK_TRAN_DT = G.KK_TRAN_DT AND F.KK_TRAN_LN = G.KK_TRAN_LN)
               LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR
                                                                              AND REQD.SCHED_NBR = D.REQ_SCHED_NBR AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
               LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.PO_ID = B.PO_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.PO_ID = C.PO_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.PO_ID = D.PO_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID
    AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
      OR CAT.EFFDT IS NULL)
    --XLAT X1
    AND X1.FIELDNAME = 'PO_STATUS'
    AND X1.FIELDVALUE = A.PO_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'RECV_REQ'
    AND X2.FIELDVALUE = B.RECV_REQ
    --XLAT X3
    AND X3.FIELDNAME = 'MATCH_STATUS_PO'
    AND X3.FIELDVALUE = A.MATCH_STATUS_PO
    --XLAT X10
    AND X10.FIELDNAME = 'VENDOR_CLASS'
    AND X10.FIELDVALUE = E.VENDOR_CLASS
    AND A.BUSINESS_UNIT LIKE '6%'
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD') 
    AND G.LEDGER_GROUP = 'PAR_UU'
    AND G.MONETARY_AMOUNT <> 0
    --AND A.BUSINESS_UNIT = '600UU'
    --AND A.PO_ID = '0000007040'
    --AND D.ACCOUNT = '71405' 
    AND D.PROJECT_ID = '00064158'
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Version 2
--Added column headings
SELECT A.BUSINESS_UNIT "BU PO", A.PO_ID "Purchase Order", A.PO_STATUS, X1.XLATLONGNAME AS "PO Status", A.VENDOR_ID "Vendor ID", E.NAME1 "Vendor Name", E.VENDOR_CLASS, X10.XLATLONGNAME "Vendor Classification", 
       B.INV_ITEM_ID "Item ID", ITM.DESCR "Item Descr", P.ACCOUNT "Item Account", B.LINE_NBR "PO Line #", C.SCHED_NBR "PO Sched #", D.DISTRIB_LINE_NUM "PO Distrib Line #", A.BUDGET_HDR_STATUS "Budget Checking Header Status", 
       A.BUDGET_CHECK "Budget Checked", B.UNIT_OF_MEASURE "Unit of Measure", B.RECV_REQ, X2.XLATLONGNAME "Receiving Required PO", B.AMT_ONLY_FLG "Amount Only", B.CATEGORY_ID "Category ID", CAT.CATEGORY_CD "Category Code", 
       CAT.ACCOUNT "Category Account", B.CNTRCT_SETID "Contract SetID", B.CNTRCT_ID "Contract ID", 
       B.CNTRCT_LINE_NBR "Contract Line #", B.RELEASE_NBR "Release #", A.BUYER_ID "Buyer", A.OPRID_ENTERED_BY "PO Entered By", A.OPRID_APPROVED_BY "PO Approved By", A.MATCH_STATUS_PO, X3.XLATLONGNAME "Match Status PO", 
       TO_CHAR(A.PO_DT,'YYYY-MM-DD') "PO Date", TO_CHAR(A.ACTIVITY_DATE,'YYYY-MM-DD') "Last Activity", TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') "Accounting Date", TO_CHAR(D.BUDGET_DT,'YYYY-MM-DD') "Budget Date PO", 
       B.CANCEL_STATUS "PO Line Cancel Status", D.DISTRIB_LN_STATUS "PO Distrib Line Status", D.KK_CLOSE_FLAG "KK Close Flag", D.KK_PROCESS_PRIOR "Process Prior Document", D.KK_CLOSE_PRIOR "Close Prior Transaction", 
       D.QTY_PO "PO Qty Distrib", D.MERCH_AMT_BSE "Base Merchandise Amount", C.DISTRIB_MTHD_FLG "Distribute by", C.MATCH_STATUS_LN_PO "Match Status PO Line", C.PRICE_PO "PO Price Line Ship", 
       C.PRICE_PO_BSE "Price Base Line Ship", C.QTY_PO "PO Qty Line Ship", C.MERCHANDISE_AMT "Merchandise Amt Line Ship", C.CURRENCY_CD "Curr Cd Line Ship", C.MERCH_AMT_BSE "Base Merchandise Amt Line Ship", 
       C.FREIGHT_TERMS "Freight Terms Code", C.MATCH_LINE_OPT "Match Line Option", D.MERCHANDISE_AMT "Merchandise Amt Distrib", D.CURRENCY_CD "Curr Cd Distrib", A.CURRENCY_CD "PO HDR Currency", 
       A.RATE_MULT "PO HDR Rate Mult", A.RATE_DIV "PO HDR Rate Div", D.RATE_MULT "PO Distrib Rate Mult", D.RATE_DIV "PO Distrib Rate Div", C.DUE_DT "Due Date Line Ship", C.SHIPTO_ID "Ship To Location Line Ship", 
       D.ACCOUNT "PO Account", D.OPERATING_UNIT "PO Op Unit", D.FUND_CODE "PO Fund Code", D.DEPTID "PO Dept ID", D.PROJECT_ID "PO Project ID", D.ACTIVITY_ID "PO Activity ID", D.CHARTFIELD2 "PO Donor", 
       D.BUSINESS_UNIT_REQ "BU Req", D.REQ_ID "Requisition ID", REQ_LINE_NBR "Req Line #", REQ_SCHED_NBR "Req Sched #", REQ_DISTRIB_NBR "Req Distrib #", REQD.BUSINESS_UNIT_AM "Req AM BU", REQD.PROFILE_ID "Req AM Profile ID", 
       REQH.REQUESTOR_ID "Requester", REQH.OPRID_ENTERED_BY "Req Entered By", REQH.OPRID_APPROVED_BY "Req Approved By", TO_CHAR(REQH.APPROVAL_DT,'YYYY-MM-DD') "Req Date of Approval", 
       TO_CHAR(REQH.ENTERED_DT,'YYYY-MM-DD') "Req Entered on", NVL(D.QTY_REQ, 0) "QTY Req on PO Distrib", NVL(REQD.QTY_OPEN, 0) "QTY Open on REQ Distrib", NVL(REQD.AMT_OPEN, 0) "AMT Open on Req Distrib",
       REQD.ACCOUNT "Req Account", REQD.OPERATING_UNIT "req Op Unit", REQD.FUND_CODE "Req Fund Code", REQD.DEPTID "Req Dept ID", REQD.PROJECT_ID "Req Project ID", REQD.ACTIVITY_ID "Req Activity ID", 
       REQD.CHARTFIELD2 "Req Donor", REQH.RATE_MULT "Req HDR Rate Mult", REQH.RATE_DIV "Req HDR Rate Div", REQD.RATE_MULT "Req Distrib Rate Mult", REQD.RATE_DIV "Req Distrib Rate Div", 
       G.KK_TRAN_ID "KK Tran ID", G.KK_TRAN_LN "KK Tran Line", G.KK_POSTED_AMT "KKPosted Amt Total", G.KK_FRN_POSTED_AMT "KK Foreign Posted Amount", 
       G.MONETARY_AMOUNT "Balance Encumbrance Amt USD", G.FOREIGN_AMOUNT "Foreign Amount", G.FOREIGN_CURRENCY "Foreign Currency", G.ACTIVITY "Activity Amt", 
       G.LEDGER_GROUP "KK Ledger Group", G.PC_DISTRIB_STATUS "KK Liqd PC Distrib Status", G.LIQUIDATE_METHOD "KK Liquidate by", A.DST_CNTRL_ID "Accounting Template", A.MATCH_ACTION, A.MATCH_CNTRL_ID
FROM ((PS_PO_HDR A LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'PO_STATUS' AND X1.FIELDVALUE = A.PO_STATUS)
                   LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'MATCH_STATUS_PO' AND X3.FIELDVALUE = A.MATCH_STATUS_PO), PS_PO_LINE_SHIP C, 
         (PS_VENDOR E LEFT OUTER JOIN PSXLATITEM X10 ON X10.FIELDNAME = 'VENDOR_CLASS' AND X10.FIELDVALUE = E.VENDOR_CLASS),
         ((((PS_PO_LINE B LEFT OUTER JOIN PS_MASTER_ITEM_TBL ITM ON B.ITM_SETID = ITM.SETID AND B.INV_ITEM_ID = ITM.INV_ITEM_ID)
                         LEFT OUTER JOIN PS_PURCH_ITEM_ATTR P ON ITM.SETID = P.SETID AND ITM.INV_ITEM_ID = P.INV_ITEM_ID)
                         LEFT OUTER JOIN PS_ITM_CAT_TBL CAT ON CAT.SETID = 'UNUNI' AND CAT.CATEGORY_ID = B.CATEGORY_ID)
                         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'RECV_REQ' AND X2.FIELDVALUE = B.RECV_REQ), 
         (((((PS_PO_LINE_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT AND D.PO_ID = E.PO_ID) 
                                   LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT AND E.KK_TRAN_ID = F.KK_TRAN_ID AND D.LINE_NBR = F.LINE_NBR 
                                                                    AND D.SCHED_NBR = F.SCHED_NBR AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM) 
                                   LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID AND F.KK_TRAN_DT = G.KK_TRAN_DT AND F.KK_TRAN_LN = G.KK_TRAN_LN)
                                   LEFT OUTER JOIN PS_REQ_LN_DISTRIB REQD ON REQD.BUSINESS_UNIT = D.BUSINESS_UNIT_REQ AND REQD.REQ_ID = D.REQ_ID AND REQD.LINE_NBR = D.REQ_LINE_NBR
                                                                         AND REQD.SCHED_NBR = D.REQ_SCHED_NBR AND REQD.DISTRIB_LINE_NUM = D.REQ_DISTRIB_NBR)
                                   LEFT OUTER JOIN PS_REQ_HDR REQH ON REQD.BUSINESS_UNIT = REQH.BUSINESS_UNIT AND REQD.REQ_ID = REQH.REQ_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.PO_ID = B.PO_ID
  AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
  AND B.PO_ID = C.PO_ID
  AND B.LINE_NBR = C.LINE_NBR
  AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
  AND C.PO_ID = D.PO_ID
  AND C.LINE_NBR = D.LINE_NBR
  AND C.SCHED_NBR = D.SCHED_NBR
  AND A.VENDOR_SETID = E.SETID
  AND A.VENDOR_ID = E.VENDOR_ID
  AND (CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                      AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID AND E_ED.EFFDT <= SYSDATE)
    OR CAT.EFFDT IS NULL)
  AND A.BUSINESS_UNIT LIKE '6%'
  AND D.BUSINESS_UNIT_GL = 'UNUNI'
  AND G.LEDGER_GROUP = 'PAR_UU'
  AND G.MONETARY_AMOUNT <> 0
  --AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') IN ('2012')
  --AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD') 
  --AND A.PO_ID = '0000007040'
  --AND D.ACCOUNT = '71405' 
  --AND D.PROJECT_ID = '00064216'
ORDER BY A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM;

--Based on REQ Tables
--PAR_UU
SELECT A.BUSINESS_UNIT, D.BUSINESS_UNIT_PC, D.BUSINESS_UNIT_GL, A.REQ_ID, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, A.REQ_STATUS, 
       A.BUDGET_CHECK, A.REQ_DT, B.BUYER_ID, A.REQUESTOR_ID, A.OPRID_ENTERED_BY, A.OPRID_MODIFIED_BY, A.OPRID_APPROVED_BY, 
       A.PO_POST_STATUS, A.ACCOUNTING_DT, D.QTY_REQ, D.MERCH_AMT_BSE AS REQ_USD_Amt, A.CURRENCY_CD, 
       D.MERCHANDISE_AMT AS REQ_Foreign_Amt, B.VENDOR_ID, C.DUE_DT, B.DESCR254_MIXED, C.SHIPTO_ID, 
       D.ACCOUNT, D.DEPTID, D.FUND_CODE, D.OPERATING_UNIT, D.CHARTFIELD1, D.CHARTFIELD2, D.PROJECT_ID, D.ACTIVITY_ID, D.RESOURCE_TYPE, 
       G.KK_POSTED_AMT AS TOTAL, G.KK_FRN_POSTED_AMT, G.MONETARY_AMOUNT AS USD_Bal_Amt_PRE, G.FOREIGN_CURRENCY, G.FOREIGN_AMOUNT AS Foreign_Bal_Amt, 
       G.LEDGER_GROUP, G.PC_DISTRIB_STATUS,
       POD.BUSINESS_UNIT AS PO_BU, POD.PO_ID, POH.PO_STATUS, POD.LINE_NBR AS PO_LINE_NBR, POD.SCHED_NBR AS PO_SCHED_NBR, POD.DISTRIB_LINE_NUM AS PO_DISTRIB_LINE_NUM,
       POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
       POD.CHARTFIELD2 AS PO_DONOR, POD.BUDGET_DT AS PO_BUD_DT
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, 
         (((((PS_REQ_LN_DISTRIB D LEFT OUTER JOIN PS_KK_SOURCE_HDR E ON D.BUSINESS_UNIT = E.BUSINESS_UNIT AND D.REQ_ID = E.REQ_ID) 
             LEFT OUTER JOIN PS_KK_SOURCE_LN F ON E.KK_TRAN_DT = F.KK_TRAN_DT AND E.KK_TRAN_ID = F.KK_TRAN_ID AND D.LINE_NBR = F.LINE_NBR 
                                                                      AND D.DISTRIB_LINE_NUM = F.DISTRIB_LINE_NUM AND D.SCHED_NBR = F.SCHED_NBR) 
             LEFT OUTER JOIN PS_KK_LIQUIDATION G ON F.KK_TRAN_ID = G.KK_TRAN_ID AND F.KK_TRAN_DT = G.KK_TRAN_DT AND F.KK_TRAN_LN = G.KK_TRAN_LN)
             LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON D.BUSINESS_UNIT = POD.BUSINESS_UNIT_REQ AND D.REQ_ID = POD.REQ_ID AND D.LINE_NBR = POD.REQ_LINE_NBR
                                               AND D.SCHED_NBR = POD.REQ_SCHED_NBR AND D.DISTRIB_LINE_NUM = POD.REQ_DISTRIB_NBR)
             LEFT OUTER JOIN PS_PO_HDR POH ON POD.BUSINESS_UNIT = POH.BUSINESS_UNIT AND POD.PO_ID = POH.PO_ID)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.REQ_ID = B.REQ_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.REQ_ID = C.REQ_ID
    AND B.LINE_NBR = C.LINE_NBR
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND C.REQ_ID = D.REQ_ID
    AND C.LINE_NBR = D.LINE_NBR
    AND C.SCHED_NBR = D.SCHED_NBR
    AND A.BUSINESS_UNIT LIKE '6%' 
    AND D.BUSINESS_UNIT_GL = 'UNUNI'
    --AND D.PROJECT_ID = '00064335'
    --AND D.ACCOUNT = '71605'
    AND D.BUDGET_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    AND G.LEDGER_GROUP = 'PAR_UU'
    AND G.MONETARY_AMOUNT <> 0
    AND D.PROJECT_ID = '00064158'
ORDER BY 1, 4;

--Testing Approvals
SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'sharon.koh';
SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_JE_APPROVER' AND ROLEUSER = 'sharon.koh';
SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_LEVEL3_PO' AND ROLEUSER = 'sharon.koh';

--Check Self Approval setting on Approval Rule Set(s)
SELECT SELF_APPROVAL, APPR_ACTIVE_SW, A.* 
FROM PS_APPR_RULE_HDR A 
WHERE A.APPR_RULE_SET LIKE '%UNU%' 
    AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_APPR_RULE_HDR B WHERE B.APPR_RULE_SET = A.APPR_RULE_SET AND EFFDT <= SYSDATE)
ORDER BY 1,2;

--Check Item Range Count
SELECT SUBSTR(INV_ITEM_ID, 1, 1) AS ITEM_RANGE, COUNT(1) 
FROM PS_ITEM_PROD_VW 
WHERE SETID = 'UNUNI' 
GROUP BY SUBSTR(INV_ITEM_ID, 1, 1) 
ORDER BY 1,2;

--Find Records for a given process which have the Field OPRID as the first field
SELECT DISTINCT A03.RECNAME 
FROM PS_PRCSDEFNPNL A01, PSPNLGROUP A02, PSPNLFIELD A03
WHERE A01.PRCSTYPE = 'Application Engine'
    AND A01.PRCSNAME = 'AP_MATCH'
    AND A02.PNLGRPNAME = A01.PNLGRPNAME
    AND A03.PNLNAME = A02.PNLNAME
    AND A03.RECNAME <> ' '
    AND A03.FIELDNAME <> ' '
AND EXISTS (SELECT 'X' FROM PSRECFIELD WHERE RECNAME = A03.RECNAME AND FIELDNAME = 'OPRID' AND FIELDNUM = 1)
ORDER BY 1;

--Holistic DrillDown for a component
--Does not include PAGES which are accessible via PushButton/HyperLinks
SELECT DISTINCT P3.PORTAL_LABEL L3, P2.PORTAL_LABEL L2, P1.PORTAL_LABEL L1, PRS.PORTAL_LABEL L0, C.SUBITEMNUM, C.PNLNAME, D.ADDSRCHRECNAME,  D.SEARCHRECNAME ,R.RECNAME, 
            DB.SUBRECORD AS "IsSubRecord", P.OCCURSLEVEL AS "REC OccursLevel", R.SQLTABLENAME AS "Non STD SQL Name", R.BUILDSEQNO, R.AUDITRECNAME, DB.RECNAME_PARENT, 
            P.PNLFLDID, P.FIELDNAME, P.OCCURSLEVEL AS "FLD OccursLevel", DB.DEFFIELDNAME As "Default Value", 
            P.FIELDTYPE,
             (CASE FIELDTYPE 
                        WHEN 0 THEN 'Label' 
                        WHEN 6 THEN 'LongEditBox' 
                        WHEN 12 THEN 'PushButton' 
                        WHEN 1 THEN 'Frame'
                        WHEN 7 THEN 'CheckBox' 
                        WHEN 13 THEN 'SecondaryPage (SUBPNLNAME)' 
                        WHEN 2 THEN 'GroupBox' 
                        WHEN 8 THEN 'RadioButton'
                        WHEN 14 THEN 'TreeControl' 
                        WHEN 3 THEN 'StaticImage' 
                        WHEN 9 THEN 'Image' 
                        WHEN 15 THEN 'Gridcontrol' 
                        WHEN 4 THEN 'EditBox' 
                        WHEN 10 THEN 'ScrollBar' 
                        --WHEN 16 THEN "PushButton (GoToMenu, PNLGRPNAME)" 
                        WHEN 16 THEN 'PushButton (GoToMenu, COMP)'
                        WHEN 5 THEN 'ComboBox' 
                        WHEN 11 THEN 'SubPage' 
                        WHEN 18 THEN 'SecPage (SUBPNLNAME)' 
                        WHEN 19 THEN 'PSGrid'
                        WHEN 20 THEN 'Tree'
                        --WHEN 21 THEN "PushButton (calls SecondaryPage)" 
                        WHEN 21 THEN 'PushButton (calls Sec Page)'
                        WHEN 23 THEN 'HorzRule (Horizontal Line)' 
                        WHEN 24 THEN 'TabSeperator' 
                        WHEN 25 THEN 'HTML Area'
                        --WHEN 26 THEN "PushButton (Hyperlink to PromptAction)"
                        WHEN 26 THEN 'PushButton (PromptAction)'
                        WHEN 27 THEN 'Scroll Area'
             END) AS "FLDType Descr",
           DB.EDITTABLE, DB.SETCNTRLFLD, P.LABEL_ID AS "Label ID", P.LBLTEXT AS "Label Text", P.SUBPNLNAME
FROM (((((PSPNLGROUP C INNER JOIN PSPNLFIELD P ON C.PNLNAME = P.PNLNAME) 
         INNER JOIN PSRECDEFN R ON  R.RECNAME = P.RECNAME) 
         FULL OUTER JOIN PSRECFIELDDB DB ON R.RECNAME = DB.RECNAME AND P.FIELDNAME = DB.FIELDNAME) 
         INNER JOIN PSPNLGRPDEFN D ON C.PNLGRPNAME = D.PNLGRPNAME AND C.MARKET = D.MARKET) 
         INNER JOIN PSPRSMDEFN PRS ON PRS.PORTAL_URI_SEG2 = C.PNLGRPNAME), 
         PSPRSMDEFN P1, PSPRSMDEFN P2, PSPRSMDEFN P3
WHERE 1=1
  AND C.PNLGRPNAME = 'BUS_UNIT_PM'
  AND PRS.PORTAL_NAME = 'EMPLOYEE'
  AND PRS.PORTAL_REFTYPE = 'C'
  --AND R.RECTYPE = 0
  AND PRS.PORTAL_PRNTOBJNAME = P1.PORTAL_OBJNAME
  AND P1.PORTAL_PRNTOBJNAME = P2.PORTAL_OBJNAME
  AND P2.PORTAL_PRNTOBJNAME = P3.PORTAL_OBJNAME
  AND PRS.PORTAL_NAME = P1.PORTAL_NAME
  AND P1.PORTAL_NAME = P2.PORTAL_NAME
  AND P2.PORTAL_NAME = P3.PORTAL_NAME
--ORDER BY C.PNLNAME, P.OCCURSLEVEL;
ORDER BY C.SUBITEMNUM, C.PNLNAME, P.PNLFLDID, P.OCCURSLEVEL; 

--Retrieve Component Properties
SELECT DISTINCT P3.PORTAL_LABEL L3, P2.PORTAL_LABEL L2, P1.PORTAL_LABEL L1, PRS.PORTAL_LABEL L0, C.SUBITEMNUM, C.PNLNAME, GRP.SEARCHRECNAME, R.RECNAME, DB.RECNAME_PARENT, 
            P.PNLFLDID, P.FIELDNAME, DB.EDITTABLE, P.LABEL_ID, P.LBLTEXT 
FROM (((((PSPNLGROUP C INNER JOIN PSPNLFIELD P ON C.PNLNAME = P.PNLNAME) 
         INNER JOIN PSRECDEFN R ON R.RECNAME = P.RECNAME) 
         FULL OUTER JOIN PSRECFIELDDB DB ON R.RECNAME = DB.RECNAME) 
         INNER JOIN PSPNLGRPDEFN GRP ON GRP.PNLGRPNAME = C.PNLGRPNAME AND P.FIELDNAME = DB.FIELDNAME) 
         INNER JOIN PSPRSMDEFN PRS ON PRS.PORTAL_URI_SEG2 = C.PNLGRPNAME), PSPRSMDEFN P1, PSPRSMDEFN P2, PSPRSMDEFN P3 
WHERE C.PNLGRPNAME = 'BUS_UNIT_PM' 
    AND R.RECTYPE = 0 
    AND P.ASSOCFIELDNUM = 0 
    AND PRS.PORTAL_PRNTOBJNAME = P1.PORTAL_OBJNAME 
    AND P1.PORTAL_PRNTOBJNAME = P2.PORTAL_OBJNAME 
    AND P2.PORTAL_PRNTOBJNAME = P3.PORTAL_OBJNAME 
    AND PRS.PORTAL_NAME = P1.PORTAL_NAME 
    AND P1.PORTAL_NAME = P2.PORTAL_NAME 
    AND P2.PORTAL_NAME = P3.PORTAL_NAME 
ORDER BY C.SUBITEMNUM, C.PNLNAME, P.PNLFLDID;

--Temporary Table processing failure during allocation phase
SELECT * FROM PS_AELOCKMGR;
SELECT * FROM PS_AETEMPTBLMGR;-- WHERE AE_APPLID = 'PO_POCREATE';

--Find missing tables
SELECT R.RECNAME , N.N INSTANCE , C.TEMPTBLINSTANCES +O.TEMPTBLINSTANCES TEMPTBLINSTANCES 
FROM PSTEMPTBLCNTVW C , PSRECDEFN R , (SELECT ROWNUM-1 N FROM PSRECDEFN WHERE ROWNUM <= 100) N , PSOPTIONS O 
WHERE R.RECNAME = C.RECNAME 
AND N.N <= C.TEMPTBLINSTANCES+O.TEMPTBLINSTANCES
AND R.RECNAME = 'CNTRCT_AUC_T'
AND NOT EXISTS(SELECT 'x' FROM USER_TABLES T WHERE T.TABLE_NAME = DECODE(R.SQLTABLENAME, ' ', 'PS_'||R.RECNAME, R.SQLTABLENAME) ||DECODE(N.N,0,'',N.N) ) 
ORDER BY 1,2;

--How many Temp Tables would be built
SELECT * FROM PSTEMPTBLCNTVW WHERE RECNAME = 'CNTRCT_AUC_T';

--Modified PSTEMPTBLCNTVW to include AE_APPLID
SELECT A.AE_APPLID, A.RECNAME, SUM(B.TEMPTBLINSTANCES) 
FROM PSAEAPPLTEMPTBL A, PSAEAPPLDEFN B 
WHERE A.AE_APPLID = B.AE_APPLID
    AND A.AE_APPLID = 'PO_POCREATE'
GROUP BY A.AE_APPLID, A.RECNAME
ORDER BY A.AE_APPLID, A.RECNAME;


--Are there any temporary tables that have not been built but that should be built?
SELECT r.recname
,      n.n instance
,      c.temptblinstances
     + o.temptblinstances temptblinstances
FROM   pstemptblcntvw c
,      psrecdefn r
,      (SELECT rownum-1 n FROM psrecdefn
        WHERE rownum <= 100) n
,      psoptions o
WHERE  r.recname = c.recname
AND    n.n <= c.temptblinstances+o.temptblinstances
AND NOT EXISTS(
       SELECT 'x'
       FROM   user_tables t
       WHERE  t.table_name = 
            DECODE(r.sqltablename, ' ', 'PS_'||r.recname,
                   r.sqltablename) ||DECODE(n.n,0,'',n.n)
        )
ORDER BY 1,2
/


--Are there any temporary tables built that should not be built?
SELECT r.recname
,      n.n instance
,      c.temptblinstances
     + o.temptblinstances temptblinstances
,      t.table_name
FROM   pstemptblcntvw c
,      psrecdefn r
,      (SELECT rownum-1 n FROM psrecfield
        WHERE rownum <= 100
       ) n
,      user_tables t
,      psoptions o
WHERE  r.recname = c.recname
AND    t.table_name = 
          DECODE(r.sqltablename, ' ', 'PS_'||r.recname,
                 r.sqltablename) ||DECODE(n.n,0,'',n.n)
AND    n.n > c.temptblinstances+o.temptblinstances
ORDER BY r.recname, n.n
/

--Tree Rollup 9 levels
SELECT * 
  FROM ( 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,' ' LVL2 
 ,' ' LVL3 
 ,' ' LVL4 
 ,' ' LVL5 
 ,' ' LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  ,PSTREELEAF lf 
 WHERE T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T1.TREE_NODE_NUM = 1 
   AND T1.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,' ' LVL3 
 ,' ' LVL4 
 ,' ' LVL5 
 ,' ' LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T2.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,' ' LVL4 
 ,' ' LVL5 
 ,' ' LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  , PSTREENODE T3
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T3.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,' ' LVL5 
 ,' ' LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  , PSTREENODE T3
  , PSTREENODE T4
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T4.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,T5.TREE_NODE LVL5 
 ,' ' LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  , PSTREENODE T3
  , PSTREENODE T4
  , PSTREENODE T5
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.SETID = T5.SETID 
   AND T1.TREE_NAME = T5.TREE_NAME 
   AND T1.EFFDT = T5.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T4.TREE_NODE_NUM = T5.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T5.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,T5.TREE_NODE LVL5 
 ,T6.TREE_NODE LVL6 
 ,' ' LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  , PSTREENODE T3
  , PSTREENODE T4
  , PSTREENODE T5
  ,PSTREENODE T6
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.SETID = T5.SETID 
   AND T1.TREE_NAME = T5.TREE_NAME 
   AND T1.EFFDT = T5.EFFDT 
   AND T1.SETID = T6.SETID 
   AND T1.TREE_NAME = T6.TREE_NAME 
   AND T1.EFFDT = T6.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T4.TREE_NODE_NUM = T5.PARENT_NODE_NUM 
   AND T5.TREE_NODE_NUM = T6.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T6.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,T5.TREE_NODE LVL5 
 ,T6.TREE_NODE LVL6 
 ,T7.TREE_NODE LVL7 
 ,' ' LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  , PSTREENODE T2
  , PSTREENODE T3
  , PSTREENODE T4
  , PSTREENODE T5
  ,PSTREENODE T6
  ,PSTREENODE T7
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.SETID = T5.SETID 
   AND T1.TREE_NAME = T5.TREE_NAME 
   AND T1.EFFDT = T5.EFFDT 
   AND T1.SETID = T6.SETID 
   AND T1.TREE_NAME = T6.TREE_NAME 
   AND T1.EFFDT = T6.EFFDT 
   AND T1.SETID = T7.SETID 
   AND T1.TREE_NAME = T7.TREE_NAME 
   AND T1.EFFDT = T7.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T4.TREE_NODE_NUM = T5.PARENT_NODE_NUM 
   AND T5.TREE_NODE_NUM = T6.PARENT_NODE_NUM 
   AND T6.TREE_NODE_NUM = T7.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T7.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,T5.TREE_NODE LVL5 
 ,T6.TREE_NODE LVL6 
 ,T7.TREE_NODE LVL7 
 ,T8.TREE_NODE LVL8 
 ,' ' LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  ,PSTREENODE T2
  ,PSTREENODE T3
  ,PSTREENODE T4
  ,PSTREENODE T5
  ,PSTREENODE T6
  ,PSTREENODE T7
  ,PSTREENODE T8
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.SETID = T5.SETID 
   AND T1.TREE_NAME = T5.TREE_NAME 
   AND T1.EFFDT = T5.EFFDT 
   AND T1.SETID = T6.SETID 
   AND T1.TREE_NAME = T6.TREE_NAME 
   AND T1.EFFDT = T6.EFFDT 
   AND T1.SETID = T7.SETID 
   AND T1.TREE_NAME = T7.TREE_NAME 
   AND T1.EFFDT = T7.EFFDT 
   AND T1.SETID = T8.SETID 
   AND T1.TREE_NAME = T8.TREE_NAME 
   AND T1.EFFDT = T8.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T4.TREE_NODE_NUM = T5.PARENT_NODE_NUM 
   AND T5.TREE_NODE_NUM = T6.PARENT_NODE_NUM 
   AND T6.TREE_NODE_NUM = T7.PARENT_NODE_NUM 
   AND T7.TREE_NODE_NUM = T8.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T8.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 
  UNION 
 SELECT DISTINCT T1.SETID 
 ,T1.TREE_NAME 
 ,T1.EFFDT 
 ,T1.TREE_NODE LVL1 
 ,T2.TREE_NODE LVL2 
 ,T3.TREE_NODE LVL3 
 ,T4.TREE_NODE LVL4 
 ,T5.TREE_NODE LVL5 
 ,T6.TREE_NODE LVL6 
 ,T7.TREE_NODE LVL7 
 ,T8.TREE_NODE LVL8 
 ,T9.TREE_NODE LVL9 
 ,LF.RANGE_FROM 
 ,LF.RANGE_TO 
  FROM PSTREENODE T1
  ,PSTREENODE T2
  ,PSTREENODE T3
  ,PSTREENODE T4
  ,PSTREENODE T5
  ,PSTREENODE T6
  ,PSTREENODE T7
  ,PSTREENODE T8
  ,PSTREENODE T9
  ,PSTREELEAF lf 
 WHERE T1.SETID = T2.SETID 
   AND T1.TREE_NAME = T2.TREE_NAME 
   AND T1.EFFDT = T2.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T1.SETID = T3.SETID 
   AND T1.TREE_NAME = T3.TREE_NAME 
   AND T1.EFFDT = T3.EFFDT 
   AND T1.SETID = T4.SETID 
   AND T1.TREE_NAME = T4.TREE_NAME 
   AND T1.EFFDT = T4.EFFDT 
   AND T1.SETID = T5.SETID 
   AND T1.TREE_NAME = T5.TREE_NAME 
   AND T1.EFFDT = T5.EFFDT 
   AND T1.SETID = T6.SETID 
   AND T1.TREE_NAME = T6.TREE_NAME 
   AND T1.EFFDT = T6.EFFDT 
   AND T1.SETID = T7.SETID 
   AND T1.TREE_NAME = T7.TREE_NAME 
   AND T1.EFFDT = T7.EFFDT 
   AND T1.SETID = T8.SETID 
   AND T1.TREE_NAME = T8.TREE_NAME 
   AND T1.EFFDT = T8.EFFDT 
   AND T1.SETID = T9.SETID 
   AND T1.TREE_NAME = T9.TREE_NAME 
   AND T1.EFFDT = T9.EFFDT 
   AND T1.TREE_NODE_NUM = T2.PARENT_NODE_NUM 
   AND T2.TREE_NODE_NUM = T3.PARENT_NODE_NUM 
   AND T3.TREE_NODE_NUM = T4.PARENT_NODE_NUM 
   AND T4.TREE_NODE_NUM = T5.PARENT_NODE_NUM 
   AND T5.TREE_NODE_NUM = T6.PARENT_NODE_NUM 
   AND T6.TREE_NODE_NUM = T7.PARENT_NODE_NUM 
   AND T7.TREE_NODE_NUM = T8.PARENT_NODE_NUM 
   AND T8.TREE_NODE_NUM = T9.PARENT_NODE_NUM 
   AND T1.SETID = LF.SETID 
   AND T1.TREE_NAME = LF.TREE_NAME 
   AND T1.EFFDT = LF.EFFDT 
   AND T9.TREE_NODE_NUM = LF.TREE_NODE_NUM 
   AND T1.PARENT_NODE_NUM = 0 ) DNM 
 WHERE DNM.TREE_NAME = 'IPSAS_ACCOUNT' 
   AND DNM.SETID = 'SHARE' 
   AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
 
--Will work only in D1
SELECT DNM.TREE_NODE Level_0, DNM.TREE_NODE1 Level_1, DNM.TREE_NODE2 Level_2, DNM.TREE_NODE3 Level_3, DNM.TREE_NODE4 Level_4, DNM.TREE_NODE5 Level_5, DNM.RANGE_FROM, DNM.RANGE_TO 
FROM UNDPFS.PS_UNU_TREE_DNR_VW DNM 
WHERE DNM.TREE_NAME = 'IPSAS_ACCOUNT' 
  AND DNM.SETID = 'SHARE' 
  AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
ORDER BY DNM.TREE_NODE, DNM.TREE_NODE1, DNM.TREE_NODE2, DNM.TREE_NODE3, DNM.TREE_NODE4, DNM.TREE_NODE5, DNM.RANGE_FROM, DNM.RANGE_TO;

--will only work in D1
SELECT DNM.TREE_NODE Level_0, DNM.TREE_NODE1 Level_1, DNM.TREE_NODE2 Level_2, DNM.TREE_NODE3 Level_3, DNM.TREE_NODE4 Level_4, DNM.TREE_NODE5 Level_5, DNM.RANGE_FROM, DNM.RANGE_TO 
FROM UNDPFS.PS_UNU_TREE_DNR_VW DNM 
WHERE DNM.TREE_NAME = 'UNU_IPSAS_ACCOUNT' 
  AND DNM.SETID = 'SHARE' 
  AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
ORDER BY DNM.TREE_NODE, DNM.TREE_NODE1, DNM.TREE_NODE2, DNM.TREE_NODE3, DNM.TREE_NODE4, DNM.TREE_NODE5, DNM.RANGE_FROM, DNM.RANGE_TO;

--Trial Balance using IPSAS_ACCOUNT Tree
SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, X.CHARTFIELD2,
       X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
       SUM(X.POSTED_BASE_AMT) AS EXP_AMT_GL, SUM(X.PERIOD_0) PERIOD_0, 
       SUM(X.JAN) JAN_GL, SUM(X.FEB) FEB_GL, SUM(X.MAR) MAR_GL, SUM(X.APR) APR_GL, SUM(X.MAY) MAY_GL, SUM(X.JUN) JUN_GL, 
       SUM(X.JUL) JUL_GL, SUM(X.AUG) AUG_GL, SUM(X.SEP) SEP_GL, SUM(X.OCT) OCT_GL, SUM(X.NOV) NOV_GL, SUM(X.DEC) DEC_GL
FROM
(SELECT A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, DNM.TREE_NODE Level_0, DNM.TREE_NODE1 Level_1, DNM.TREE_NODE2 Level_2, DNM.TREE_NODE3 Level_3, DNM.TREE_NODE4 Level_4, DNM.TREE_NODE5 Level_5,
        A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, 
        SUM(A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
      , CASE A.ACCOUNTING_PERIOD WHEN 0 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
      , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JAN
      , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS FEB 
      , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAR 
      , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS APR 
      , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAY 
      , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUN 
      , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUL 
      , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS AUG 
      , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS SEP 
      , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS OCT 
      , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS NOV 
      , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS DEC            
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, UNDPFS.PS_UNU_TREE_DNR_VW DNM
WHERE B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
     --AND D.SETID = 'SHARE'
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND DNM.TREE_NAME = 'IPSAS_ACCOUNT' 
     AND DNM.SETID = 'SHARE' 
     AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND D.ACCOUNT BETWEEN DNM.RANGE_FROM AND DNM.RANGE_TO
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.LEDGER = 'USD'
     AND A.FISCAL_YEAR = '2014'
     AND ((A.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND D.ACCOUNT_TYPE IN ('E', 'R')) OR (A.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND D.ACCOUNT_TYPE NOT IN ('E', 'R')))        
     AND A.STATISTICS_CODE = ' '
     AND A.PROJECT_ID = '00064158'
     --AND A.ACCOUNT = '71405'
GROUP BY A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, DNM.TREE_NODE, DNM.TREE_NODE1, DNM.TREE_NODE2, DNM.TREE_NODE3, DNM.TREE_NODE4, DNM.TREE_NODE5,
         A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, 
         A.ACCOUNTING_PERIOD, LEDGER) X, PS_PROJECT B, PS_DEPTID_BUGL_VW C
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
     AND X.PROJECT_ID = B.PROJECT_ID (+)
     AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL')
     AND X.DEPTID = C.DEPTID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE)    
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, X.ACCOUNT, X.DESCR
ORDER BY X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

--Another way to represent a Tree, up to 12 levels
SELECT SETID, SETCNTRLVALUE, TREE_NAME, TREE_BRANCH
, CASE WHEN LVL = 1 THEN TREE_NODE ELSE ' ' END LEVEL1
, CASE WHEN LVL = 2 THEN TREE_NODE ELSE ' ' END LEVEL2
, CASE WHEN LVL = 3 THEN TREE_NODE ELSE ' ' END LEVEL3
, CASE WHEN LVL = 4 THEN TREE_NODE ELSE ' ' END LEVEL4
, CASE WHEN LVL = 5 THEN TREE_NODE ELSE ' ' END LEVEL5
, CASE WHEN LVL = 6 THEN TREE_NODE ELSE ' ' END LEVEL6
, CASE WHEN LVL = 7 THEN TREE_NODE ELSE ' ' END LEVEL7
, CASE WHEN LVL = 8 THEN TREE_NODE ELSE ' ' END LEVEL8
, CASE WHEN LVL = 9 THEN TREE_NODE ELSE ' ' END LEVEL9
, CASE WHEN LVL = 10 THEN TREE_NODE ELSE ' ' END LEVEL10
, CASE WHEN LVL = 11 THEN TREE_NODE ELSE ' ' END LEVEL11
, CASE WHEN LVL = 12 THEN TREE_NODE ELSE ' ' END LEVEL12
FROM (SELECT ROWNUM RN, LEVEL LVL, SETID, SETCNTRLVALUE, TREE_NAME, TREE_NODE, TREE_BRANCH
FROM (SELECT SETID, SETCNTRLVALUE, TREE_NAME, EFFDT, TREE_NODE_NUM, TREE_NODE, TREE_BRANCH, PARENT_NODE_NUM, PARENT_NODE_NAME
FROM PSTREENODE A
WHERE EFFDT >= ALL (SELECT EFFDT FROM PSTREENODE WHERE SETID = A.SETID AND SETCNTRLVALUE = A.SETCNTRLVALUE AND TREE_NAME = A.TREE_NAME AND TREE_NODE_NUM = A.TREE_NODE_NUM 
                                                   AND TREE_NODE = A.TREE_NODE AND TREE_BRANCH = A.TREE_BRANCH))
START WITH PARENT_NODE_NAME = ' '
CONNECT BY PRIOR SETID = SETID
-- and prior setcntrlvalue = setcntrlvalue
AND PRIOR TREE_NAME = TREE_NAME
AND PRIOR TREE_NODE_NUM = PARENT_NODE_NUM
AND PRIOR TREE_NODE = PARENT_NODE_NAME
AND PRIOR TREE_BRANCH = TREE_BRANCH)
WHERE TREE_NAME = 'IPSAS_ACCOUNT' 
  AND SETID = 'SHARE' 
  --AND EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
ORDER BY 1,2,3;

--Find users which have a combination of roles
--Currently Testing
SELECT DISTINCT A.ROLEUSER
FROM PSROLEUSER A
WHERE A.ROLENAME IN ('UN_LEVEL3_PO', 'UN_VOUCHER_LVL3')
  AND A.ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
  AND NOT EXISTS (SELECT 'X' FROM PSROLEUSER B WHERE A.ROLEUSER = B.ROLEUSER AND B.ROLENAME = 'UN_JE_APPROVER')
UNION
SELECT DISTINCT A.ROLEUSER
FROM PSROLEUSER A
WHERE A.ROLENAME IN ('UN_LEVEL3_PO')
  AND A.ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
  AND NOT EXISTS (SELECT 'X' FROM PSROLEUSER B WHERE A.ROLEUSER = B.ROLEUSER AND B.ROLENAME = 'UN_JE_APPROVER')
UNION
SELECT DISTINCT A.ROLEUSER
FROM PSROLEUSER A
WHERE A.ROLENAME IN ('UN_VOUCHER_LVL3')
  AND A.ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
  AND NOT EXISTS (SELECT 'X' FROM PSROLEUSER B WHERE A.ROLEUSER = B.ROLEUSER AND B.ROLENAME = 'UN_JE_APPROVER')
ORDER BY 1;

--UN AP Bank Default
SELECT * FROM PS_UN_AP_BNKDFT_D WHERE BUSINESS_UNIT_GL = 'UNUNI' ORDER BY 1,2,3,4,5,6,7,8;
SELECT * FROM PS_UN_AP_BU_OPRU WHERE SETID LIKE '6%' ORDER BY 1,2,3,4,5;
--SELECT * FROM PS_UN_OPRU_CURR
--Check Vendor Payment preferences and load bank info accordingly;

--check if vendor has currency preference;
SELECT CURRENCY_CD 
FROM PS_VENDOR_LOC A 
WHERE A.SETID = 'UNUNI' 
    AND A.VENDOR_ID = '0000002048' 
    --AND A.VNDR_LOC = :3 
    AND A.EFFDT = (SELECT MAX(EFFDT) FROM PS_VENDOR_LOC  B WHERE B.SETID = A.SETID AND B.VENDOR_ID = A.VENDOR_ID AND B.VNDR_LOC = A.VNDR_LOC AND B.EFF_STATUS = 'A')
ORDER BY 1;

--check if vendor has payment method preference;
SELECT PYMNT_METHOD 
FROM PS_VENDOR_PAY A 
WHERE A.SETID = 'UNUNI' 
    AND A.VENDOR_ID = '0000002048' 
    --AND A.VNDR_LOC = :3 
    AND A.EFFDT = (SELECT MAX(EFFDT) FROM PS_VENDOR_PAY B WHERE B.SETID = A.SETID AND B.VENDOR_ID = A.VENDOR_ID AND B.VNDR_LOC = A.VNDR_LOC AND B.EFF_STATUS = 'A')
ORDER BY 1;

SELECT * FROM PS_UN_BNK_CURR_VW WHERE OPERATING_UNIT LIKE '6%' AND CURRENCY_CD = 'JPY' AND PYMNT_METHOD = 'EFT';

--check if the bank account in business unit defaults supports the vendor currency;
SELECT PYMNT_METHOD, BANK_CD, BANK_ACCT_KEY FROM PS_UN_AP_BU_SETID WHERE BUSINESS_UNIT_AP LIKE '6%' ORDER BY 1,2,3;

--Find Payments made for 60001
SELECT BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY') AS YEAR, COUNT(1) AS "Payments Made"
FROM PS_PAYMENT_TBL 
WHERE BANK_CD = '60001'
GROUP BY BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY')
ORDER BY BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY');

SELECT BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, A.* 
FROM PS_PAYMENT_TBL A
WHERE BANK_CD = '60001'
ORDER BY 1;

SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT = '600UU' AND BANK_CD = '60001' AND BANK_ACCT_KEY = '1001';

--For Financial Gateway
SELECT * FROM PS_BANK_PYMNT_LYT WHERE STL_THROUGH = '01' ORDER BY 1,2,3,4;
--01 means Financial Gateway
--02 means Pay Cycle
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'STL_THROUGH';

--All EFT Payments are settled by Pay Cycle
--WIR Payments are settled by Financial Gateway
SELECT BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY') AS YEAR, COUNT(1) AS "Payments Made"
FROM PS_PAYMENT_TBL 
--WHERE BANK_CD = '00004'
--AND BANK_ACCT_KEY = '1001'
WHERE PYMNT_METHOD = 'WIR'
GROUP BY BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY')
ORDER BY BANK_CD, BANK_ACCT_KEY, BANK_ACCOUNT_NUM, PYMNT_METHOD, TO_CHAR(ACCOUNTING_DT, 'YYYY');

--Vendor Address Issue - (7025, 263)
SELECT * FROM PS_VNDR_ADD2_AP_VW WHERE SETID = 'UNUNI' AND VENDOR_ID LIKE '%1337';
SELECT * FROM PS_VNDR_LOC_AP_VW WHERE SETID = 'UNUNI' AND VENDOR_ID LIKE '%1337';

SELECT * FROM PS_SRCH_CONFIG_TBL;
SELECT * FROM PS_SRCH_CONFIG_FLD WHERE SRCH_CONFIG_ID = 'AP_MTCH_WB';
--Vouchers to be matched with MATCH_STATUS_VCHR = 'T'
SELECT * FROM PS_AP_MTCH_WB_VW WHERE BUSINESS_UNIT LIKE '6%';

--PeopleSoft App Package AP.MATCHING.Workbench.WorkbenchInquiry.OnExecute
--class WorkbenchInquiry
--Version 1
--Testing the joins, may need to change them
SELECT HDR.BUSINESS_UNIT, HDR.VOUCHER_ID, HDR.MATCH_CNTRL_ID, HDR.VCHR_SRC, HDR.VOUCHER_STYLE, HDR.OFAC_STATUS, HDR.RATE_MULT_TOL, HDR.RATE_DIV_TOL, 
            HDR.MERCH_AMT_VCHR_B, HDR.MERCH_AMT_VCHRR_B, HDR.MERCH_AMT_RECVAPPL, HDR.MERCH_AMT_RECV, HDR.MERCH_AMT_PO, HDR.MERCH_AMT_VCHR, HDR.MERCH_AMT_EXTND, 
            HDR.MERCH_AMT_EXTND_B, HDR.MERCH_AMT_EXTND_PO, HDR.PROCESS_INSTANCE,
            DETL.BUSINESS_UNIT, DETL.VOUCHER_ID, DETL.VOUCHER_LINE_NUM, DETL.BUSINESS_UNIT_PO, DETL.PO_ID, DETL.LINE_NBR, DETL.SCHED_NBR, DETL.BUSINESS_UNIT_RECV, DETL.RECEIVER_ID, 
            DETL.RECV_LN_NBR, DETL.RECV_SHIP_SEQ_NBR, DETL.DESCR, DETL.INVOICE_ID, DETL.INVOICE_DT, DETL.VENDOR_SETID, DETL.VENDOR_ID, DETL.VNDR_LOC, DETL.PROCESS_INSTANCE, 
            DETL.ORIGIN_VCHR, DETL.PYMNT_TERMS_CD, DETL.PYMNT_TERMS_CD_PO, DETL.TXN_CURRENCY_CD, DETL.MERCH_AMT_VCHR, DETL.MERCH_AMT_VCHR_B, DETL.MERCH_AMT_VCHRR_B, 
            DETL.INVOICED_AMT_B, DETL.ITM_SETID, DETL.INV_ITEM_ID, DETL.QTY_VCHR, DETL.INVOICED_QTY_CNVT, DETL.UOM_VCHR, DETL.UNIT_PRICE, DETL.DUE_DT, DETL.MATCH_CNTRL_ID, 
            DETL.VNDR_SETID_PO, DETL.VENDOR_PO, DETL.VNDR_LOC_PO, DETL.TAX_EXEMPT, DETL.CNTRCT_ID_VCHR, DETL.CNTRCT_ID, DETL.CTRCT_LINE_NBR, DETL.PO_DT, DETL.ITM_SETID_PO, 
            DETL.INV_ITEM_ID_PO, DETL.AMT_ONLY_FLG_PO, DETL.ITM_ID_VNDR, DETL.PRICE_PO, DETL.UOM_PO, DETL.BUYER_ID, DETL.RECV_REQ, DETL.UNIT_PRC_TOL, DETL.PCT_UNIT_PRC_TOL, 
            DETL.EXT_PRC_TOL, DETL.PCT_EXT_PRC_TOL, DETL.UNIT_PRC_TOL_L, DETL.PCT_UNIT_PRC_TOL_L, DETL.EXT_PRC_TOL_L, DETL.PCT_EXT_PRC_TOL_L, DETL.INSPECT_CD, DETL.SHIPTO_ID, 
            DETL.ORIG_PROM_DT, DETL.QTY_PO, DETL.MERCH_AMT_PO, DETL.FREIGHT_TERMS, DETL.VNDR_SETID_RECV, DETL.VENDOR_RECV, DETL.VNDR_LOC_RECV, DETL.ITM_SETID_RECV, 
            DETL.INV_ITEM_ID_RECV, DETL.AMT_ONLY_FLG_RECV, DETL.ASSTN_NAME, DETL.UOM_RECV, DETL.INSPECT_STATUS, DETL.QTY_SH_RECVD_SUOM, DETL.QTY_SH_RECVD_VUOM, 
            DETL.QTY_SH_ACCPT_SUOM, DETL.QTY_SH_ACCPT_VUOM, DETL.QTY_SH_INSPD_VUOM, DETL.BILLED_QTY_PO, DETL.BILLED_QTY_RECV, DETL.BILLED_AMT_PO, DETL.BILLED_AMT_RECV, 
            DETL.MERCH_AMT_RECV, DETL.TOTAL_RECV_QTY, DETL.TOTAL_RECV_AMT, DETL.TOTAL_RECV_QTY_PO, DETL.TOTAL_RECV_AMT_PO, DETL.CNVT_RT_PO, DETL.CNVT_RT_RECV, 
            DETL.QTY_RECEIVED_CNVT, DETL.QTY_ACCEPTED_CNVT, DETL.QTY_INSPECTED_CNVT, DETL.QTY_VCHR_CNVT, DETL.QTY_VCHR_CNVTR, DETL.UNIT_PRICE_CNVT, DETL.UNIT_PRICE_CNVT_B, 
            DETL.UNIT_PRICE_CNVTR, DETL.UNIT_PRICE_CNVTR_B, DETL.PRICE_DIFF, DETL.QTY_DIFF_RECV, DETL.MERCH_AMT_EXTND, DETL.MERCH_AMT_EXTND_B, DETL.MERCH_AMT_EXT_DIFF, 
            DETL.MERCH_AMT_EXTND_PO, DETL.MATCH_RECEIPT_REQ, DETL.MATCH_LINE_OPT, DETL.MATCH_ERROR_FLG, DETL.MATCH_STATUS_VCHR, DETL.ZERO_IND, DETL.QTY_RECV_TOL_PCT, 
            DETL.TXN_CURRENCY_PO, DETL.TXN_CURRENCY_RECV, DETL.RT_TYPE, DETL.ACCOUNTING_DT, DETL.PRICE_PO_RECV, DETL.QTY_ENTERED, DETL.QTY_ENTERED_CNVT, DETL.TOTAL_RECV_ENT, 
            DETL.TOTAL_RECV_ENT_PO, DETL.RECEIPT_DELAY_DAYS, DETL.PO_TYPE_PO, DETL.PO_TYPE_RECV, DETL.PRICE_CAN_CHANGE, DETL.ZERO_PRICE_IND, DETL.ORIGIN_PO, DETL.ORIGIN_RECV, 
            DETL.FROZEN_FLG, DETL.RJCT_OVER_TOL_FLAG, DETL.PO_RECEIPT_FLG, DETL.RECV_SOURCE, DETL.MATCH_LINE_FLG, DETL.PRICE_CAN_CHANGE_R, DETL.TOT_RECV_ENT_VCHR, 
            DETL.ALGTHM_BEHAVIOR,
            LN.BUSINESS_UNIT, LN.VOUCHER_ID, LN.VOUCHER_LINE_NUM, LN.ASSTN_NAME, LN.BUSINESS_UNIT_PO, LN.PO_ID, LN.LINE_NBR, LN.SCHED_NBR, LN.BUSINESS_UNIT_RECV, LN.RECEIVER_ID, 
            LN.RECV_LN_NBR, LN.RECV_SHIP_SEQ_NBR, LN.QTY_VCHR, LN.QTY_VCHR_CNVT, LN.QTY_VCHR_CNVTR, LN.UNIT_PRICE_CNVT_B, LN.UNIT_PRICE_CNVTR_B, LN.BUSINESS_UNIT_RTV, 
            LN.ACCOUNTING_DT, LN.INVOICE_DT, LN.QTY_RECV_APPLIED, LN.MERCH_AMT_RECVAPPL, LN.MERCH_AMT_VCHR, LN.MERCH_AMT_VCHR_B, LN.MERCH_AMT_VCHRR_B, LN.MERCH_AMT_RECV, 
            LN.MERCH_AMT_PO, LN.QTY_PO, LN.QTY_SH_ACCPT_VUOM, LN.PROCEED_FLG, LN.AP_RULE_ACTION, LN.DUE_DT, LN.FREIGHT_TERMS, LN.FROZEN_FLG, LN.ORIG_PROM_DT, LN.ORIGIN_PO, 
            LN.ORIGIN_RECV, LN.PO_DT, LN.PO_TYPE_PO, LN.PO_TYPE_RECV, LN.QTY_MATCHED_PO, LN.QTY_MATCHED_RECV, LN.AMT_MATCHED_PO, LN.AMT_MATCHED_RECV, LN.UNIT_PRICE_CNVT, 
            LN.UNIT_PRICE_CNVTR, LN.ALGTHM_BEHAVIOR, LN.AMT_ONLY_FLG, LN.MATCH_STATUS_PO, LN.MATCH_LINE_STATUS, LN.MFG_ID, LN.USER_LINE_CHAR1, LN.USER_SCHED_CHAR1, 
            LN.RECEIPT_DT, LN.SHIPTO_ID, LN.MATCH_STATUS_RECV, LN.MATCH_LINE_OPT, LN.PO_STATUS, LN.VCHR_SRC, LN.CONVERSION_RATE, LN.UOM_VCHR, LN.UOM_PO, LN.UOM_RECV, 
            LN.RATE_MULT, LN.RATE_MULT_TOL, LN.RATE_DIV_TOL, LN.RATE_DIV, LN.RT_TYPE_PO, LN.RT_TYPE_VCHR, LN.CURRENCY_CD_PO, LN.CURRENCY_CD_RECV, LN.CURRENCY_CD_VCHR, 
            LN.DBMEMO_FLAG, LN.DMEMO_CAT_PRICE, LN.DMEMO_CAT_QTY, LN.DISTRIB_MTHD_FLG, LN.INSPECT_DT, LN.INVOICE_ID, LN.INVOICED_QTY_CNVT, LN.INVOICED_AMT_B, 
            LN.KK_PROCESS_PRIOR, LN.MATCH_CNTRL_ID, LN.PACKSLIP_NO, LN.MERCH_AMT_EXTND, LN.MERCH_AMT_EXTND_B, LN.MERCH_AMT_EXTND_PO, LN.EXT_PRC_TOL, LN.EXT_PRC_TOL_L, 
            LN.PCT_EXT_PRC_TOL, LN.PCT_EXT_PRC_TOL_L, LN.PYMNT_TERMS_CD, LN.PYMNT_TERMS_CD_PO, LN.QTY_ENTERED, LN.PO_RECEIPT_FLG, LN.VENDOR_SETID, LN.VENDOR_ID, LN.VNDR_LOC, 
            LN.VNDR_SETID_PO, LN.VENDOR_PO, LN.VNDR_LOC_PO, LN.VNDR_SETID_RECV, LN.VOUCHER_STYLE, LN.VENDOR_RECV, LN.VNDR_LOC_RECV, LN.INSPECT_STATUS, LN.INSPECT_CD, 
            LN.ITM_SETID, LN.ITM_SETID_PO, LN.ITM_SETID_RECV, LN.INV_ITEM_ID, LN.INV_ITEM_ID_PO, LN.INV_ITEM_ID_RECV, LN.PRICE_PO, LN.PRICE_PO_RECV, LN.RECV_SOURCE, 
            LN.RJCT_OVER_TOL_FLAG, LN.ZERO_IND, LN.ZERO_PRICE_IND, LN.TOTAL_RECV_AMT, LN.TOTAL_RECV_AMT_PO, LN.TOTAL_RECV_ENT, LN.TOTAL_RECV_ENT_PO, LN.TOTAL_RECV_QTY, 
            LN.TOTAL_RECV_QTY_PO, LN.PRICE_CAN_CHANGE, LN.PRICE_CAN_CHANGE_R, LN.PCT_UNIT_PRC_TOL, LN.PCT_UNIT_PRC_TOL_L, LN.UNIT_PRC_TOL, LN.UNIT_PRC_TOL_L, LN.UNIT_PRICE_VCHR, 
            LN.RECV_REQ, LN.QTY_RECV_TOL_PCT, LN.BUYER_ID, LN.CATEGORY_ID, LN.TRANS_DT, LN.USER_VCHR_CHAR1, LN.USER_VCHR_CHAR2, LN.USER_VCHR_DEC, LN.USER_VCHR_DATE, 
            LN.USER_VCHR_NUM1, LN.PROCESS_INSTANCE, LN.LTD_RECV
FROM PS_AP_VCHR_HDR_SUM HDR, PS_VCHR_MTCH_DETLS DETL, PS_AP_VCHR_LN_SUM LN
WHERE HDR.BUSINESS_UNIT = DETL.BUSINESS_UNIT
    AND HDR.VOUCHER_ID = DETL.VOUCHER_ID
    AND HDR.BUSINESS_UNIT = LN.BUSINESS_UNIT
    AND HDR.VOUCHER_ID = LN.VOUCHER_ID
    AND LN.VOUCHER_LINE_NUM = DETL.VOUCHER_LINE_NUM
    AND LN.BUSINESS_UNIT_PO = DETL.BUSINESS_UNIT_PO
    AND LN.PO_ID = DETL.PO_ID
    AND LN.LINE_NBR = DETL.LINE_NBR
    AND LN.SCHED_NBR = DETL.SCHED_NBR
    AND LN.BUSINESS_UNIT_RECV = DETL.BUSINESS_UNIT_RECV
    AND LN.RECEIVER_ID = DETL.RECEIVER_ID
    AND LN.RECV_LN_NBR = DETL.RECV_LN_NBR
    AND LN.RECV_SHIP_SEQ_NBR = DETL.RECV_SHIP_SEQ_NBR
    --AND LN.ASSTN_NAME
    AND HDR.BUSINESS_UNIT = '600UU'
    AND HDR.VOUCHER_ID = '00027867'
ORDER BY 1;

--Version 2
--Changed Standard Join to LEFT OUTER Join for PS_AP_VCHR_LN_SUM, as receiver information is not populated in this table
SELECT HDR.BUSINESS_UNIT, HDR.VOUCHER_ID, HDR.MATCH_CNTRL_ID, HDR.VCHR_SRC, HDR.VOUCHER_STYLE, HDR.OFAC_STATUS, HDR.RATE_MULT_TOL, HDR.RATE_DIV_TOL, 
            HDR.MERCH_AMT_VCHR_B, HDR.MERCH_AMT_VCHRR_B, HDR.MERCH_AMT_RECVAPPL, HDR.MERCH_AMT_RECV, HDR.MERCH_AMT_PO, HDR.MERCH_AMT_VCHR, HDR.MERCH_AMT_EXTND, 
            HDR.MERCH_AMT_EXTND_B, HDR.MERCH_AMT_EXTND_PO, HDR.PROCESS_INSTANCE,
            DETL.BUSINESS_UNIT, DETL.VOUCHER_ID, DETL.VOUCHER_LINE_NUM, DETL.BUSINESS_UNIT_PO, DETL.PO_ID, DETL.LINE_NBR, DETL.SCHED_NBR, DETL.BUSINESS_UNIT_RECV, DETL.RECEIVER_ID, 
            DETL.RECV_LN_NBR, DETL.RECV_SHIP_SEQ_NBR, DETL.DESCR, DETL.INVOICE_ID, DETL.INVOICE_DT, DETL.VENDOR_SETID, DETL.VENDOR_ID, DETL.VNDR_LOC, DETL.PROCESS_INSTANCE, 
            DETL.ORIGIN_VCHR, DETL.PYMNT_TERMS_CD, DETL.PYMNT_TERMS_CD_PO, DETL.TXN_CURRENCY_CD, DETL.MERCH_AMT_VCHR, DETL.MERCH_AMT_VCHR_B, DETL.MERCH_AMT_VCHRR_B, 
            DETL.INVOICED_AMT_B, DETL.ITM_SETID, DETL.INV_ITEM_ID, DETL.QTY_VCHR, DETL.INVOICED_QTY_CNVT, DETL.UOM_VCHR, DETL.UNIT_PRICE, DETL.DUE_DT, DETL.MATCH_CNTRL_ID, 
            DETL.VNDR_SETID_PO, DETL.VENDOR_PO, DETL.VNDR_LOC_PO, DETL.TAX_EXEMPT, DETL.CNTRCT_ID_VCHR, DETL.CNTRCT_ID, DETL.CTRCT_LINE_NBR, DETL.PO_DT, DETL.ITM_SETID_PO, 
            DETL.INV_ITEM_ID_PO, DETL.AMT_ONLY_FLG_PO, DETL.ITM_ID_VNDR, DETL.PRICE_PO, DETL.UOM_PO, DETL.BUYER_ID, DETL.RECV_REQ, DETL.UNIT_PRC_TOL, DETL.PCT_UNIT_PRC_TOL, 
            DETL.EXT_PRC_TOL, DETL.PCT_EXT_PRC_TOL, DETL.UNIT_PRC_TOL_L, DETL.PCT_UNIT_PRC_TOL_L, DETL.EXT_PRC_TOL_L, DETL.PCT_EXT_PRC_TOL_L, DETL.INSPECT_CD, DETL.SHIPTO_ID, 
            DETL.ORIG_PROM_DT, DETL.QTY_PO, DETL.MERCH_AMT_PO, DETL.FREIGHT_TERMS, DETL.VNDR_SETID_RECV, DETL.VENDOR_RECV, DETL.VNDR_LOC_RECV, DETL.ITM_SETID_RECV, 
            DETL.INV_ITEM_ID_RECV, DETL.AMT_ONLY_FLG_RECV, DETL.ASSTN_NAME, DETL.UOM_RECV, DETL.INSPECT_STATUS, DETL.QTY_SH_RECVD_SUOM, DETL.QTY_SH_RECVD_VUOM, 
            DETL.QTY_SH_ACCPT_SUOM, DETL.QTY_SH_ACCPT_VUOM, DETL.QTY_SH_INSPD_VUOM, DETL.BILLED_QTY_PO, DETL.BILLED_QTY_RECV, DETL.BILLED_AMT_PO, DETL.BILLED_AMT_RECV, 
            DETL.MERCH_AMT_RECV, DETL.TOTAL_RECV_QTY, DETL.TOTAL_RECV_AMT, DETL.TOTAL_RECV_QTY_PO, DETL.TOTAL_RECV_AMT_PO, DETL.CNVT_RT_PO, DETL.CNVT_RT_RECV, 
            DETL.QTY_RECEIVED_CNVT, DETL.QTY_ACCEPTED_CNVT, DETL.QTY_INSPECTED_CNVT, DETL.QTY_VCHR_CNVT, DETL.QTY_VCHR_CNVTR, DETL.UNIT_PRICE_CNVT, DETL.UNIT_PRICE_CNVT_B, 
            DETL.UNIT_PRICE_CNVTR, DETL.UNIT_PRICE_CNVTR_B, DETL.PRICE_DIFF, DETL.QTY_DIFF_RECV, DETL.MERCH_AMT_EXTND, DETL.MERCH_AMT_EXTND_B, DETL.MERCH_AMT_EXT_DIFF, 
            DETL.MERCH_AMT_EXTND_PO, DETL.MATCH_RECEIPT_REQ, DETL.MATCH_LINE_OPT, DETL.MATCH_ERROR_FLG, DETL.MATCH_STATUS_VCHR, DETL.ZERO_IND, DETL.QTY_RECV_TOL_PCT, 
            DETL.TXN_CURRENCY_PO, DETL.TXN_CURRENCY_RECV, DETL.RT_TYPE, DETL.ACCOUNTING_DT, DETL.PRICE_PO_RECV, DETL.QTY_ENTERED, DETL.QTY_ENTERED_CNVT, DETL.TOTAL_RECV_ENT, 
            DETL.TOTAL_RECV_ENT_PO, DETL.RECEIPT_DELAY_DAYS, DETL.PO_TYPE_PO, DETL.PO_TYPE_RECV, DETL.PRICE_CAN_CHANGE, DETL.ZERO_PRICE_IND, DETL.ORIGIN_PO, DETL.ORIGIN_RECV, 
            DETL.FROZEN_FLG, DETL.RJCT_OVER_TOL_FLAG, DETL.PO_RECEIPT_FLG, DETL.RECV_SOURCE, DETL.MATCH_LINE_FLG, DETL.PRICE_CAN_CHANGE_R, DETL.TOT_RECV_ENT_VCHR, 
            DETL.ALGTHM_BEHAVIOR,
            LN.BUSINESS_UNIT, LN.VOUCHER_ID, LN.VOUCHER_LINE_NUM, LN.ASSTN_NAME, LN.BUSINESS_UNIT_PO, LN.PO_ID, LN.LINE_NBR, LN.SCHED_NBR, LN.BUSINESS_UNIT_RECV, LN.RECEIVER_ID, 
            LN.RECV_LN_NBR, LN.RECV_SHIP_SEQ_NBR, LN.QTY_VCHR, LN.QTY_VCHR_CNVT, LN.QTY_VCHR_CNVTR, LN.UNIT_PRICE_CNVT_B, LN.UNIT_PRICE_CNVTR_B, LN.BUSINESS_UNIT_RTV, 
            LN.ACCOUNTING_DT, LN.INVOICE_DT, LN.QTY_RECV_APPLIED, LN.MERCH_AMT_RECVAPPL, LN.MERCH_AMT_VCHR, LN.MERCH_AMT_VCHR_B, LN.MERCH_AMT_VCHRR_B, LN.MERCH_AMT_RECV, 
            LN.MERCH_AMT_PO, LN.QTY_PO, LN.QTY_SH_ACCPT_VUOM, LN.PROCEED_FLG, LN.AP_RULE_ACTION, LN.DUE_DT, LN.FREIGHT_TERMS, LN.FROZEN_FLG, LN.ORIG_PROM_DT, LN.ORIGIN_PO, 
            LN.ORIGIN_RECV, LN.PO_DT, LN.PO_TYPE_PO, LN.PO_TYPE_RECV, LN.QTY_MATCHED_PO, LN.QTY_MATCHED_RECV, LN.AMT_MATCHED_PO, LN.AMT_MATCHED_RECV, LN.UNIT_PRICE_CNVT, 
            LN.UNIT_PRICE_CNVTR, LN.ALGTHM_BEHAVIOR, LN.AMT_ONLY_FLG, LN.MATCH_STATUS_PO, LN.MATCH_LINE_STATUS, LN.MFG_ID, LN.USER_LINE_CHAR1, LN.USER_SCHED_CHAR1, 
            LN.RECEIPT_DT, LN.SHIPTO_ID, LN.MATCH_STATUS_RECV, LN.MATCH_LINE_OPT, LN.PO_STATUS, LN.VCHR_SRC, LN.CONVERSION_RATE, LN.UOM_VCHR, LN.UOM_PO, LN.UOM_RECV, 
            LN.RATE_MULT, LN.RATE_MULT_TOL, LN.RATE_DIV_TOL, LN.RATE_DIV, LN.RT_TYPE_PO, LN.RT_TYPE_VCHR, LN.CURRENCY_CD_PO, LN.CURRENCY_CD_RECV, LN.CURRENCY_CD_VCHR, 
            LN.DBMEMO_FLAG, LN.DMEMO_CAT_PRICE, LN.DMEMO_CAT_QTY, LN.DISTRIB_MTHD_FLG, LN.INSPECT_DT, LN.INVOICE_ID, LN.INVOICED_QTY_CNVT, LN.INVOICED_AMT_B, 
            LN.KK_PROCESS_PRIOR, LN.MATCH_CNTRL_ID, LN.PACKSLIP_NO, LN.MERCH_AMT_EXTND, LN.MERCH_AMT_EXTND_B, LN.MERCH_AMT_EXTND_PO, LN.EXT_PRC_TOL, LN.EXT_PRC_TOL_L, 
            LN.PCT_EXT_PRC_TOL, LN.PCT_EXT_PRC_TOL_L, LN.PYMNT_TERMS_CD, LN.PYMNT_TERMS_CD_PO, LN.QTY_ENTERED, LN.PO_RECEIPT_FLG, LN.VENDOR_SETID, LN.VENDOR_ID, LN.VNDR_LOC, 
            LN.VNDR_SETID_PO, LN.VENDOR_PO, LN.VNDR_LOC_PO, LN.VNDR_SETID_RECV, LN.VOUCHER_STYLE, LN.VENDOR_RECV, LN.VNDR_LOC_RECV, LN.INSPECT_STATUS, LN.INSPECT_CD, 
            LN.ITM_SETID, LN.ITM_SETID_PO, LN.ITM_SETID_RECV, LN.INV_ITEM_ID, LN.INV_ITEM_ID_PO, LN.INV_ITEM_ID_RECV, LN.PRICE_PO, LN.PRICE_PO_RECV, LN.RECV_SOURCE, 
            LN.RJCT_OVER_TOL_FLAG, LN.ZERO_IND, LN.ZERO_PRICE_IND, LN.TOTAL_RECV_AMT, LN.TOTAL_RECV_AMT_PO, LN.TOTAL_RECV_ENT, LN.TOTAL_RECV_ENT_PO, LN.TOTAL_RECV_QTY, 
            LN.TOTAL_RECV_QTY_PO, LN.PRICE_CAN_CHANGE, LN.PRICE_CAN_CHANGE_R, LN.PCT_UNIT_PRC_TOL, LN.PCT_UNIT_PRC_TOL_L, LN.UNIT_PRC_TOL, LN.UNIT_PRC_TOL_L, LN.UNIT_PRICE_VCHR, 
            LN.RECV_REQ, LN.QTY_RECV_TOL_PCT, LN.BUYER_ID, LN.CATEGORY_ID, LN.TRANS_DT, LN.USER_VCHR_CHAR1, LN.USER_VCHR_CHAR2, LN.USER_VCHR_DEC, LN.USER_VCHR_DATE, 
            LN.USER_VCHR_NUM1, LN.PROCESS_INSTANCE, LN.LTD_RECV
FROM PS_AP_VCHR_HDR_SUM HDR, (PS_VCHR_MTCH_DETLS DETL
         --Doc ID 1481709.1, PS says that the Receiver Information on the AP_VCHR_LN_SUM should not be populated for a Regular PO/Receipt/Voucher, this should be blank. 
         --This is a summary table, therefore, it does not contain transaction data in it. 
          LEFT OUTER JOIN PS_AP_VCHR_LN_SUM LN ON LN.VOUCHER_LINE_NUM = DETL.VOUCHER_LINE_NUM AND LN.BUSINESS_UNIT_PO = DETL.BUSINESS_UNIT_PO AND LN.PO_ID = DETL.PO_ID 
                                                                         AND LN.LINE_NBR = DETL.LINE_NBR AND LN.SCHED_NBR = DETL.SCHED_NBR --AND LN.BUSINESS_UNIT_RECV = DETL.BUSINESS_UNIT_RECV 
                                                                         --AND LN.RECEIVER_ID = DETL.RECEIVER_ID AND LN.RECV_LN_NBR = DETL.RECV_LN_NBR AND LN.RECV_SHIP_SEQ_NBR = DETL.RECV_SHIP_SEQ_NBR
                                                                         ) 
WHERE HDR.BUSINESS_UNIT = DETL.BUSINESS_UNIT
    AND HDR.VOUCHER_ID = DETL.VOUCHER_ID
    AND HDR.BUSINESS_UNIT = LN.BUSINESS_UNIT
    AND HDR.VOUCHER_ID = LN.VOUCHER_ID
    --AND HDR.BUSINESS_UNIT = '600UU'
    --AND HDR.VOUCHER_ID = '00026532'
    AND DETL.BUSINESS_UNIT_PO = '611UU'
    AND DETL.PO_ID = '0000004411'
ORDER BY HDR.BUSINESS_UNIT, HDR.VOUCHER_ID, DETL.VOUCHER_LINE_NUM, DETL.BUSINESS_UNIT_PO, DETL.PO_ID, DETL.LINE_NBR, DETL.SCHED_NBR, DETL.BUSINESS_UNIT_RECV, 
               DETL.RECEIVER_ID, DETL.RECV_LN_NBR, DETL.RECV_SHIP_SEQ_NBR;

--UNU AP Pending Payments
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_STYLE, A.VOUCHER_ID_RELATED, A.INVOICE_ID, A.ACCOUNTING_DT, A.OPRID AS "User Id Entered By", A.APPR_STATUS, A.BUDGET_HDR_STATUS, 
            A.BUDGET_MISC_STATUS, A.MATCH_STATUS_VCHR, DECODE(A.POST_VOUCHER,'N','No','Yes') AS POST_VCHR, A.POST_STATUS_AP, A.GROSS_AMT AS "Voucher Gross Amt (Txn)", 
            A.TXN_CURRENCY_CD, A.GROSS_AMT_BSE AS "Voucher Gross Amt (Base)", A.BASE_CURRENCY, D.PYMNT_CNT, D.BANK_SETID, D.BANK_CD, D.BANK_ACCT_KEY, D.PYMNT_METHOD, 
            D.REMIT_VENDOR, B.NAME1, D.VNDR_LOC, D.BANK_ACCT_SEQ_NBR, D.REMIT_ADDR_SEQ_NUM, D.PYMNT_HOLD, D.PYMNT_HOLD_REASON, D.VNDR_PYMNT_HLD_FLG, D.PYMNT_HANDLING_CD, 
            D.PYMNT_GROSS_AMT AS "Payment Gross Amt (Txn)", D.CURRENCY_PYMNT, D.GROSS_AMT_BSE AS "Payment Gross Amt (Base)", D.BASE_CURRENCY AS "Base Currency", D.PYMNT_SEPARATE, 
            D.SCHEDULED_PAY_DT, D.PYMNT_SELCT_STATUS, D.PAY_CYCLE, D.POST_STATUS_AP AS "Payment Post Status"
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF D, PS_VENDOR B
WHERE (A.ENTRY_STATUS <> 'X'
     AND A.CLOSE_STATUS = 'O'
     AND A.VOUCHER_STYLE NOT IN ('TMPL','JRNL')
     AND A.APPR_STATUS = 'A'
     AND A.BUDGET_HDR_STATUS = 'V'
     AND A.BUDGET_MISC_STATUS = 'V'
     AND A.MATCH_STATUS_VCHR IN ('M','N')
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
     AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND A.VOUCHER_ID = D.VOUCHER_ID
     AND D.PYMNT_SELCT_STATUS NOT IN ('P','X','S')
     AND D.BANK_SETID = 'SHARE'
     AND D.BANK_CD LIKE '6%'
     --AND D.BANK_ACCT_KEY LIKE :6
     AND D.PYMNT_GROSS_AMT <> 0
     AND B.SETID = D.REMIT_SETID
     AND B.VENDOR_ID = D.REMIT_VENDOR
     AND D.PYMNT_ACTION NOT IN ('P'))
ORDER BY 1, 2, 18;

--UNU TB including Adjustment Period(s)
--Currently Period 100 and 998 are included
SELECT ST.FISCAL_YEAR, ST.BUSINESS_UNIT, ST.ACCOUNT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.PROJECT_ID, ST.CHARTFIELD2, ST.AFFILIATE, ST.AFFILIATE_INTRA2, 
            ST.AFFILIATE_INTRA1, ST.CURRENCY_CD, SUM( ST.POSTED_TRAN_AMT) AS POSTED_TRAN_AMT, SUM( ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT
FROM PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ST.BUSINESS_UNIT = 'UNUNI'
    AND ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.LEDGER = 'USD'
    AND ST.ACCOUNT >= '00000'
    AND ST.ACCOUNT <= '99999'
    AND ST.FISCAL_YEAR = '2013'  
    AND ((ST.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND ET.ACCOUNT_TYPE IN ('E', 'R')) OR (ST.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND ET.ACCOUNT_TYPE NOT IN ('E', 'R'))
            OR ST.ACCOUNTING_PERIOD IN ('100', '998'))
    AND ST.STATISTICS_CODE = ' '
GROUP BY ST.FISCAL_YEAR, ST.BUSINESS_UNIT, ST.ACCOUNT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.PROJECT_ID, ST.CHARTFIELD2, ST.AFFILIATE, ST.AFFILIATE_INTRA2, 
                ST.AFFILIATE_INTRA1, ST.CURRENCY_CD
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

--Use this to verify the Periods being used
SELECT DISTINCT ACCOUNTING_PERIOD FROM PS_LEDGER WHERE BUSINESS_UNIT = 'UNUNI' AND LEDGER = 'USD' AND FISCAL_YEAR = '2013';

--Debits, Credits, Movements, Opening and Closiing Balance with specific Adjustment Period(s)
SELECT X.FISCAL_YEAR, X.ACCOUNT, X.DESCR, SUM(X.PERIOD_0) AS "Opening Balance", SUM(X.DEBIT) AS "Debits", SUM(X.CREDIT) AS "Credits",
            SUM(X.PERIOD_YTD) AS "Movement", SUM(X.POSTED_BASE_AMT) AS "Closing Balance"           
FROM (SELECT ST.FISCAL_YEAR, ST.ACCOUNT, ET.DESCR, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
     CASE WHEN ST.ACCOUNTING_PERIOD = 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0
   , CASE WHEN ST.ACCOUNTING_PERIOD > 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_YTD
   , CASE WHEN (SUM(ST.POSTED_BASE_AMT) > 0.00 AND ST.ACCOUNTING_PERIOD > 0) THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEBIT
   , CASE WHEN (SUM(ST.POSTED_BASE_AMT) < 0.00 AND ST.ACCOUNTING_PERIOD > 0) THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS CREDIT
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)
    AND ST.BUSINESS_UNIT = 'UNUNI'
    AND ST.LEDGER = 'USD'    
    AND ST.FISCAL_YEAR = '2013'
    AND ((ST.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND ET.ACCOUNT_TYPE IN ('E', 'R')) OR (ST.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND ET.ACCOUNT_TYPE NOT IN ('E', 'R'))
             OR ST.ACCOUNTING_PERIOD IN ('100', '998'))        
    AND ST.STATISTICS_CODE = ' '
    --AND (ST.ACCOUNTING_PERIOD BETWEEN 0 AND 12)
    --AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')    
GROUP BY ST.FISCAL_YEAR, ST.ACCOUNT, ET.DESCR, ST.ACCOUNTING_PERIOD) X
GROUP BY X.FISCAL_YEAR, X.ACCOUNT, X.DESCR
ORDER BY X.FISCAL_YEAR, X.ACCOUNT, X.DESCR;

--Default Ledger Group/Ledgers
SELECT * FROM PS_BU_LED_AP_VW;

--Monitor ITEM(s) and PENDING ITEM(s)
--Version 1
--Still need to test ENTRY_TYPE and Group Statuses
--Items which are pending AR POSTING
SELECT TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, COUNT(1) 
FROM PS_PENDING_ITEM PEN, PS_CUSTOMER CUST
WHERE PEN.BUSINESS_UNIT LIKE '6%'
    --AND PEN.CUST_ID = '10033'
    AND PEN.POSTED_FLAG <> 'Y'
    AND NOT EXISTS (SELECT 'X' FROM PS_ITEM ITM WHERE ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE)
--    AND NOT EXISTS (SELECT 'X' FROM PS_GROUP_CONTROL GRP WHERE GRP.GROUP_BU = PEN.GROUP_BU AND GRP.GROUP_ID = PEN.GROUP_ID 
--                                                                                                    AND (GRP.POST_ACTION = 'A' AND GRP.POST_STATUS IN ('E', 'N') OR GRP.POST_ACTION = 'E'))
    AND EXISTS (SELECT 'X' FROM PS_GROUP_CONTROL GRP WHERE GRP.GROUP_BU = PEN.GROUP_BU AND GRP.GROUP_ID = PEN.GROUP_ID AND GRP.POST_DT IS NULL)
    AND CUST.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = PEN.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
    AND PEN.CUST_ID = CUST.CUST_ID
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM;

--Verification Queries
SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10033';
SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10415';
SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10654';
SELECT * FROM PS_PENDING_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND CUST_ID = '10002';

SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = '8444';
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = '9833';
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID IN ('9516', '9519');

SELECT * FROM PSXLATITEM WHERE FIELDNAME IN ('POST_STATUS', 'POST_ACTION');

--Items which do not have a corresponding PY row in PS_PENDING_ITEM
--Check ITEMs which do not have a Peyment Row yet
--Experimental Version 1
SELECT TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, PEN.ENTRY_TYPE, COUNT(1)
FROM PS_CUSTOMER CUST, (PS_PENDING_ITEM PEN LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE AND ITEM_STATUS = 'O')
--With a self-join, be careful about Group BU, Group ID and Group Sequence Number, as they can be different for the same ITEM
WHERE NOT EXISTS (SELECT 'X' FROM PS_PENDING_ITEM PEN2 WHERE --PEN.GROUP_BU = PEN2.GROUP_BU AND PEN.GROUP_ID = PEN2.GROUP_ID AND 
                                                                                                         PEN.BUSINESS_UNIT = PEN2.BUSINESS_UNIT 
                                                                                           AND PEN.CUST_ID = PEN2.CUST_ID AND PEN.ITEM = PEN2.ITEM AND PEN.ITEM_LINE = PEN2.ITEM_LINE 
                                                                                           --AND PEN.GROUP_SEQ_NUM = PEN2.GROUP_SEQ_NUM 
                                                                                           AND PEN2.ENTRY_TYPE = 'PY')
    AND PEN.ENTRY_TYPE IN ('CONNA', 'IN')
    --make sure to check the ENTRY TYPE to exclude AU, WAU etc.,
    AND CUST.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = PEN.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
    AND PEN.CUST_ID = CUST.CUST_ID
    --need to check the Item Status as well
    --This condition should not be used as it will prevent those rows which have been created and have not been included in a run of AR Update, essentially meaning no ITEM exists. 
    --Try and change to OUTER JOIN 
--    AND EXISTS (SELECT 'X' FROM PS_ITEM ITM WHERE ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
--                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE AND ITEM_STATUS = 'O')
    AND PEN.BUSINESS_UNIT LIKE '6%'
    --AND PEN.CUST_ID = '10685'
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE;

--Experimental Version 2
--Included LISTAGG to group together fields for better representation of the data
SELECT TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, PEN.ENTRY_TYPE, COUNT(1), 
            LISTAGG(NVL(DECODE(PEN.CONTRACT_NUM, ' ', '', PEN.CONTRACT_NUM), 'NO_CONTRACT') || '-' || PEN.GROUP_BU || '-' || PEN.GROUP_ID || '-' || PEN.BUSINESS_UNIT || '-' || 
            PEN.CUST_ID || '-' || PEN.ITEM || '-' || PEN.ITEM_LINE || '-' || PEN.GROUP_SEQ_NUM || '-(' || PEN.ENTRY_AMT_BASE || ')-' 
            || NVL(DECODE(PEN.AR_ERROR_CD, ' ', '', PEN.AR_ERROR_CD), 'NO_ERROR'), '|') WITHIN GROUP (ORDER BY PEN.GROUP_BU, PEN.GROUP_ID) GRP_BU_ID_CUST_ITEM_LN_SEQ_AMT
FROM PS_CUSTOMER CUST, (PS_PENDING_ITEM PEN LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE AND ITEM_STATUS = 'O')
--With a self-join, be careful about Group BU, Group ID and Group Sequence Number, as they can be different for the same ITEM
WHERE (NOT EXISTS (SELECT 'X' FROM PS_PENDING_ITEM PEN2 WHERE --PEN.GROUP_BU = PEN2.GROUP_BU AND PEN.GROUP_ID = PEN2.GROUP_ID AND 
                                                                                                         PEN.BUSINESS_UNIT = PEN2.BUSINESS_UNIT 
                                                                                           AND PEN.CUST_ID = PEN2.CUST_ID AND PEN.ITEM = PEN2.ITEM AND PEN.ITEM_LINE = PEN2.ITEM_LINE 
                                                                                           --AND PEN.GROUP_SEQ_NUM = PEN2.GROUP_SEQ_NUM 
                                                                                           AND PEN2.ENTRY_TYPE = 'PY')
    OR NOT EXISTS (SELECT 'X' FROM PS_ITEM_ACTIVITY IACT WHERE PEN.BUSINESS_UNIT = IACT.BUSINESS_UNIT AND PEN.CUST_ID = IACT.CUST_ID AND PEN.ITEM = IACT.ITEM 
                                                                                                   AND PEN.ITEM_LINE = IACT.ITEM_LINE AND IACT.ENTRY_TYPE = 'PY')
    )
    AND PEN.ENTRY_TYPE IN ('CONNA', 'IN')
    --make sure to check the ENTRY TYPE to exclude AU, WAU etc.,
    AND CUST.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = PEN.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
    AND PEN.CUST_ID = CUST.CUST_ID
    AND PEN.BUSINESS_UNIT LIKE '6%'
    --AND PEN.CUST_ID = '10685'
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE;

--Reverse check for query above, to ensure that all ITEM(s) for a given BU/Customer combination are taken into account
SELECT TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, PEN.ITEM, SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, PEN.ENTRY_TYPE, COUNT(1)
FROM PS_PENDING_ITEM PEN
WHERE EXISTS (SELECT 'X' FROM PS_PENDING_ITEM PEN2 WHERE PEN.GROUP_BU = PEN2.GROUP_BU AND PEN.GROUP_ID = PEN2.GROUP_ID AND PEN.BUSINESS_UNIT = PEN2.BUSINESS_UNIT 
                                                                                           AND PEN.CUST_ID = PEN2.CUST_ID AND PEN.ITEM = PEN2.ITEM AND PEN.ITEM_LINE = PEN2.ITEM_LINE 
                                                                                           AND PEN.GROUP_SEQ_NUM = PEN2.GROUP_SEQ_NUM AND PEN2.ENTRY_TYPE = 'PY')
    --AND PEN.ENTRY_TYPE <> 'PY'
    AND PEN.BUSINESS_UNIT LIKE '6%'
    AND PEN.CUST_ID = '10685'
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, PEN.ITEM, PEN.ENTRY_TYPE
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, PEN.ITEM, PEN.ENTRY_TYPE;

--Track Item Activity for Contracts
--Experimental Version 1
--Anchor is on AR Tables
SELECT B.BUSINESS_UNIT AS CA_BU, B.CONTRACT_NUM, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_STATUS, ITM.ITEM_LINE, A.ITEM_SEQ_NUM, ITM.ENTRY_TYPE, ITM.ENTRY_REASON, 
            ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, 
            A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, 
            ---1*Sum(round((A.PAYMENT_AMT/C.RATE_DIV)*C.RATE_MULT,2)) 
            SUM(ENTRY_AMT_BASE) AS ITEM_ENTRY_AMT_BASE, SUM(P.PAYMENT_AMT) AS PAYMENT_AMT, P.PAYMENT_CURRENCY, P.RECON_STATUS
--LET #UnPaid_amt = #SUM_Billed- #Pay_amt
FROM PS_ITEM ITM, PS_ITEM_ACTIVITY A, PS_CA_CONTR_HDR B, PS_RT_DFLT_VW C,
         (PS_PAYMENT P LEFT OUTER JOIN PS_PAYMENT_ID_CUST PC ON PC.DEPOSIT_BU = P.DEPOSIT_BU AND PC.DEPOSIT_ID = P.DEPOSIT_ID AND PC.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM)
WHERE ITM.BUSINESS_UNIT = A.BUSINESS_UNIT
    AND ITM.CUST_ID = A.CUST_ID
    AND ITM.ITEM = A.ITEM
    AND ITM.ITEM_LINE = A.ITEM_LINE 
    AND A.DEPOSIT_BU = P.DEPOSIT_BU
    AND A.DEPOSIT_ID = P.DEPOSIT_ID
    AND A.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM
    AND ITM.CUST_ID = B.SOLD_TO_CUST_ID
    AND A.CONTRACT_NUM = B.CONTRACT_NUM
    AND A.PAYMENT_CURRENCY = C.FROM_CUR 
    AND C.TO_CUR = B.CURRENCY_CD
    AND C.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_RT_DFLT_VW G_ED WHERE C.FROM_CUR = G_ED.FROM_CUR AND C.TO_CUR = G_ED.TO_CUR AND C.RT_TYPE = G_ED.RT_TYPE 
                                                                                                                      AND G_ED.EFFDT <= P.ACCOUNTING_DT)
    --AND A.CONTRACT_NUM <> ' ' AND ENTRY_TYPE = 'PY'
    AND B.BUSINESS_UNIT = 'UNUNI'
    --AND A.CONTRACT_NUM = '00079869'
GROUP BY B.BUSINESS_UNIT, B.CONTRACT_NUM, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM, ITM.ENTRY_TYPE, ITM.ENTRY_REASON, 
               ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, 
               A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, P.PAYMENT_CURRENCY, P.RECON_STATUS
ORDER BY B.BUSINESS_UNIT, B.CONTRACT_NUM, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM;

--Experimental Version 2
--Anchor is on Contract Tables
SELECT B.BUSINESS_UNIT AS CA_BU, B.CONTRACT_NUM, B.REVISED_NET AS NEGOTIATED_AMOUNT, B.CURRENCY_CD AS CONTRACT_CURR,  
            ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_STATUS, ITM.ITEM_LINE, A.ITEM_SEQ_NUM, ITM.ENTRY_TYPE AS ITM_ENT, ITM.ENTRY_REASON, A.ENTRY_TYPE AS ITM_ACT_ENT,
            ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, 
            A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, SUM(ENTRY_AMT_BASE) AS ITEM_ENTRY_AMT_BASE, 
            SUM(P.PAYMENT_AMT) AS PAYMENT_AMT, P.PAYMENT_CURRENCY, P.RECON_STATUS AS PYMNT_REC_STS
FROM ((((PS_CA_CONTR_HDR B LEFT OUTER JOIN PS_ITEM ITM ON ITM.CUST_ID = B.SOLD_TO_CUST_ID AND ITM.CONTRACT_NUM = B.CONTRACT_NUM) 
                                               LEFT OUTER JOIN PS_ITEM_ACTIVITY A ON ITM.BUSINESS_UNIT = A.BUSINESS_UNIT AND ITM.CUST_ID = A.CUST_ID AND ITM.ITEM = A.ITEM 
                                                                                                        AND ITM.ITEM_LINE = A.ITEM_LINE)
                                               LEFT OUTER JOIN PS_PAYMENT P ON A.DEPOSIT_BU = P.DEPOSIT_BU AND A.DEPOSIT_ID = P.DEPOSIT_ID AND A.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM)    
                                               LEFT OUTER JOIN PS_PAYMENT_ID_CUST PC ON PC.DEPOSIT_BU = P.DEPOSIT_BU AND PC.DEPOSIT_ID = P.DEPOSIT_ID 
                                                                                                               AND PC.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM)
WHERE B.BUSINESS_UNIT = 'UNUNI'
    AND B.CONTRACT_NUM IN ('00079871', '00079870', '00079869')
GROUP BY B.BUSINESS_UNIT, B.CONTRACT_NUM, B.REVISED_NET, B.CURRENCY_CD, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM, 
               ITM.ENTRY_TYPE, ITM.ENTRY_REASON, A.ENTRY_TYPE, ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, 
               A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, 
               P.PAYMENT_CURRENCY, P.RECON_STATUS
ORDER BY B.BUSINESS_UNIT, B.CONTRACT_NUM, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM;

--Experimental Version 3
--Anchor is on Contract Tables
--Removed SUM from Payment Amount and Item Entry Base fields
SELECT B.BUSINESS_UNIT AS CA_BU, B.CONTRACT_NUM, B.REVISED_NET AS NEGOTIATED_AMOUNT, B.CURRENCY_CD AS CONTRACT_CURR,  
            ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_STATUS, ITM.ITEM_LINE, A.ITEM_SEQ_NUM, ITM.ENTRY_TYPE AS ITM_ENT, ITM.ENTRY_REASON, A.ENTRY_TYPE AS ITM_ACT_ENT,
            ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, 
            A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, (A.ENTRY_AMT_BASE) AS ITEM_ENTRY_AMT_BASE, 
            (P.PAYMENT_AMT) AS PAYMENT_AMT, P.PAYMENT_CURRENCY, P.RECON_STATUS AS PYMNT_REC_STS,
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', CAB.AMOUNT,0)) AS SUM_BILLED,
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', 0, DECODE(TO_CHAR(CAB.ACCOUNTING_DT,'YYYY'), TO_CHAR(SYSDATE,'YYYY') -1, CAB.AMOUNT,0))) AS SUM_PRV,
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', 0, DECODE(TO_CHAR(CAB.ACCOUNTING_DT,'YYYY'), TO_CHAR(SYSDATE,'YYYY'), CAB.AMOUNT,0))) AS SUM_CURR,
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', 0, DECODE(TO_CHAR(CAB.ACCOUNTING_DT,'YYYY'), TO_CHAR(SYSDATE,'YYYY') + 1, CAB.AMOUNT,0))) AS SUM_CURR_1,
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', 0, DECODE(TO_CHAR(CAB.ACCOUNTING_DT,'YYYY'), TO_CHAR(SYSDATE,'YYYY') + 2, CAB.AMOUNT,0))) AS SUM_CURR_2,    
            SUM(DECODE(CAB.AP_EVENT_STATUS,'DON', 0, DECODE(TO_CHAR(CAB.ACCOUNTING_DT,'YYYY'), TO_CHAR(SYSDATE,'YYYY') + 3, CAB.AMOUNT,0))) AS SUM_CURR_3,
            SUM(CASE WHEN CAB.AP_EVENT_STATUS <> 'DON' AND TO_CHAR(CAB.ACCOUNTING_DT,'YYYY') > TO_CHAR(SYSDATE,'YYYY') + 2 THEN CAB.AMOUNT ELSE 0.00 END) AS SUM_FUTURE
FROM ((((PS_CA_CONTR_HDR B LEFT OUTER JOIN PS_ITEM ITM ON ITM.CUST_ID = B.SOLD_TO_CUST_ID AND ITM.CONTRACT_NUM = B.CONTRACT_NUM) 
                                               LEFT OUTER JOIN PS_ITEM_ACTIVITY A ON ITM.BUSINESS_UNIT = A.BUSINESS_UNIT AND ITM.CUST_ID = A.CUST_ID AND ITM.ITEM = A.ITEM 
                                                                                                        AND ITM.ITEM_LINE = A.ITEM_LINE)
                                               LEFT OUTER JOIN PS_PAYMENT P ON A.DEPOSIT_BU = P.DEPOSIT_BU AND A.DEPOSIT_ID = P.DEPOSIT_ID AND A.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM)    
                                               LEFT OUTER JOIN PS_PAYMENT_ID_CUST PC ON PC.DEPOSIT_BU = P.DEPOSIT_BU AND PC.DEPOSIT_ID = P.DEPOSIT_ID 
                                                                                                               AND PC.PAYMENT_SEQ_NUM = P.PAYMENT_SEQ_NUM), PS_CA_DETAIL CAD, PS_CA_DETAIL_DST E, PS_CA_AP_EVENT CAB
WHERE B.CONTRACT_NUM = CAD.CONTRACT_NUM
     AND CAD.CONTRACT_NUM = E.CONTRACT_NUM 
     AND CAD.CONTRACT_LINE_NUM = E.CONTRACT_LINE_NUM
     AND CAD.CONTRACT_NUM = CAB.CONTRACT_NUM
     AND CAD.ACCT_PLAN_ID = CAB.ACCT_PLAN_ID 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_CA_DETAIL_DST E_ED WHERE E.CONTRACT_NUM = E_ED.CONTRACT_NUM AND E.CONTRACT_LINE_NUM = E_ED.CONTRACT_LINE_NUM 
                                                                                                                          AND E.DST_SEQ_NUM = E_ED.DST_SEQ_NUM AND E_ED.EFFDT <= SYSDATE)
     --AND CAB.AP_EVENT_STATUS IN ('DON' ,'NEW', 'RDY')
    AND B.BUSINESS_UNIT = 'UNUNI'
    --AND B.CA_STATUS IN ('ACTIVE', 'PENDING')
    AND B.CONTRACT_NUM IN ('00079871', '00079870', '00079869')
GROUP BY B.BUSINESS_UNIT, B.CONTRACT_NUM, B.REVISED_NET, B.CURRENCY_CD, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM, 
               ITM.ENTRY_TYPE, ITM.ENTRY_REASON, A.ENTRY_TYPE, ITM.INVOICE, ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.GROUP_BU, 
               A.GROUP_ID, A.GROUP_SEQ_NUM, A.PAYMENT_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, P.PAYMENT_STATUS, P.PAYMENT_METHOD, P.ACCOUNTING_DT, P.POST_DT, 
               A.ENTRY_AMT_BASE, P.PAYMENT_AMT, P.PAYMENT_CURRENCY, P.RECON_STATUS
ORDER BY B.BUSINESS_UNIT, B.CONTRACT_NUM, ITM.BUSINESS_UNIT, ITM.CUST_ID, ITM.ITEM, ITM.ITEM_LINE, ITM.ITEM_STATUS, A.ITEM_SEQ_NUM;


--PIT_PENDING_ITEMS_2013
--Experimental Version 1
SELECT 'PIT_PENDING_ITEMS_2013', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
            A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, 
            B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY, B.AR_ERROR_CD
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E, PSXLATITEM X1, PSXLATITEM X2 
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     --AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE     
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.ENTRY_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     )
     --XLAT X1
    AND X1.FIELDNAME = 'EDIT_STATUS'
    AND X1.FIELDVALUE = A.EDIT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'POST_STATUS'
    AND X2.FIELDVALUE = A.POST_STATUS
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_2014
--Experimental Version 1
SELECT 'PIT_PENDING_ITEMS_2014', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
            A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, 
            B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY, B.AR_ERROR_CD
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E, PSXLATITEM X1, PSXLATITEM X2 
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     --AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE     
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
     )
     --XLAT X1
    AND X1.FIELDNAME = 'EDIT_STATUS'
    AND X1.FIELDVALUE = A.EDIT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'POST_STATUS'
    AND X2.FIELDVALUE = A.POST_STATUS
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_ALL
--Experimental Version 1
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
            A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, B.POSTED_FLAG, 
            B.ENTRY_AMT, B.CURRENCY_CD, B.ENTRY_AMT_BASE, B.ENTRY_CURRENCY, B.AR_ERROR_CD
FROM PS_GROUP_CONTROL A, PS_PENDING_ITEM B, PS_CUSTOMER C, PS_ENTRY_TYPE_TBL E, PSXLATITEM X1, PSXLATITEM X2 
WHERE A.GROUP_BU LIKE '6%'
    AND (A.GROUP_BU = B.GROUP_BU
     AND A.GROUP_ID = B.GROUP_ID
     --AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND B.CUST_ID = C.CUST_ID
     AND C.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = B.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
     AND E.SETID = (SELECT F.SETID FROM PS_SET_CNTRL_REC F WHERE F.SETCNTRLVALUE = B.BUSINESS_UNIT AND F.RECNAME = 'ENTRY_TYPE_TBL')
     AND E.ENTRY_TYPE = B.ENTRY_TYPE     
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.ENTRY_DT BETWEEN TO_DATE('2000-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
     )
     --XLAT X1
    AND X1.FIELDNAME = 'EDIT_STATUS'
    AND X1.FIELDVALUE = A.EDIT_STATUS
     --XLAT X2
    AND X2.FIELDNAME = 'POST_STATUS'
    AND X2.FIELDVALUE = A.POST_STATUS
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_ALL
--Experimental Version 2
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
            A.OPRID, A.ACCOUNTING_DT, 
            A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, B.ENTRY_REASON, ERT.DESCR AS ENTRY_REASON_DESCR, B.POSTED_FLAG, 
            B.ENTRY_AMT, B.ENTRY_CURRENCY, B.ENTRY_AMT_BASE, B.CURRENCY_CD, B.AR_ERROR_CD
FROM ((((((PS_GROUP_CONTROL A LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_CUSTOMER C ON B.CUST_ID = C.CUST_ID AND C.SETID = 'UNUNI')
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2000-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_ALL
--Experimental Version 3
--Changed to LEFT OUTER JOINS
--Added PS_ITEM Table to include ITEM Status
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
       A.OPRID, A.ACCOUNTING_DT, A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, 
	   B.ENTRY_REASON, ERT.DESCR AS ENTRY_REASON_DESCR, B.POSTED_FLAG, 
       B.ENTRY_AMT, B.ENTRY_CURRENCY, B.ENTRY_AMT_BASE, B.CURRENCY_CD, B.AR_ERROR_CD, ITM.ITEM_STATUS, X3.XLATLONGNAME AS ITEM_STATUS_DESCR
FROM ((((((((PS_GROUP_CONTROL A LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2000-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID = '10019'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_ALL
--Experimental Version 4
--Added CoA from PENDING_DST
--Added additional columns from GROUP_CONTROL and PENDING_ITEM
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
       A.CONTROL_CURRENCY, A.FORMAT_CURRENCY, A.ORIGIN_ID, A.GROUP_TYPE, B.CONTRACT_NUM,
       A.OPRID, A.ACCOUNTING_DT, A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, 
       B.ENTRY_REASON, ERT.DESCR AS ENTRY_REASON_DESCR, B.POSTED_FLAG, B.DST_ID_AR, B.ENTRY_USE_ID, B.PAYMENT_METHOD,
       B.ENTRY_AMT, B.ENTRY_CURRENCY, B.ENTRY_AMT_BASE, B.CURRENCY_CD, B.AR_ERROR_CD, ITM.ITEM_STATUS, X3.XLATLONGNAME AS ITEM_STATUS_DESCR,
       PD.LEDGER_GROUP, PD.LEDGER, PD.ACCOUNT, PD.DEPTID, PD.OPERATING_UNIT, PD.FUND_CODE, PD.PROJECT_ID, PD.CHARTFIELD2, PD.BUDGET_DT
FROM (((((((((PS_GROUP_CONTROL A LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                             AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2000-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID = '10824'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID;

--PIT_PENDING_ITEMS_ALL
--Experimental Version 5
--Added PS_ITEM and PS_ITEM_ACTIVITY
--Date criteria has been changed to limit the number of rows
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.EDIT_STATUS, X1.XLATLONGNAME AS EDIT_STS_DESCR, A.POST_STATUS, X2.XLATLONGNAME AS POST_STS_DESCR, 
       A.CONTROL_CURRENCY, A.FORMAT_CURRENCY, A.ORIGIN_ID, A.GROUP_TYPE, B.CONTRACT_NUM,
       A.OPRID, A.ACCOUNTING_DT, A.BUSINESS_UNIT, B.CUST_ID, C.NAME1, C.NAMESHORT, B.ASOF_DT, B.DUE_DT, B.POST_DT, B.ITEM, B.ITEM_LINE, B.ENTRY_TYPE, E.DESCRSHORT, 
       B.ENTRY_REASON, ERT.DESCR AS ENTRY_REASON_DESCR, B.POSTED_FLAG, B.DST_ID_AR, B.ENTRY_USE_ID, B.PAYMENT_METHOD,
       B.ENTRY_AMT, B.ENTRY_CURRENCY, B.ENTRY_AMT_BASE, B.CURRENCY_CD, B.AR_ERROR_CD, ITM.ITEM_STATUS, X3.XLATLONGNAME AS ITEM_STATUS_DESCR, 
       ITM.PO_REF AS ITEM_PO_REF, ITM.BANK_CD AS ITEM_BANK_CD, ITM.BANK_ACCT_KEY AS ITEM_BANK_ACCT_KEY, ITM.DT_INVOICED AS ITEM_DT_INVOICED, ITM.INVOICE AS ITEM_INVOICE,
       ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM, ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.DEPOSIT_BU, ITA.DEPOSIT_ID, ITA.GROUP_BU AS ITA_GROUP_BU, ITA.GROUP_ID AS ITA_GROUP_ID, ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, ITA.PAYMENT_ID, ITA.PAYMENT_SEQ_NUM,
       ITA.BANK_CD AS ITA_BANK_CD, ITA.BANK_ACCT_KEY AS ITA_BANK_ACCT_KEY, 
       PD.ACCOUNT AS PEND_ACCT, PD.DEPTID AS PEND_DEPTID, PD.OPERATING_UNIT AS PEND_OP_UNIT, PD.FUND_CODE AS PEND_FUND_CD, PD.CHARTFIELD2 AS PEND_DONOR, PD.PROJECT_ID AS PEND_PROJECT_ID, PD.ACTIVITY_ID, PD.BUDGET_DT,
       ITMDST.ACCOUNT AS ITEM_ACCT, ITMDST.DEPTID AS ITEM_DEPTID, ITMDST.OPERATING_UNIT AS ITEM_OP_UNIT, ITMDST.FUND_CODE AS ITEM_FUND_CD, ITMDST.CHARTFIELD2 AS ITEM_DONOR, ITMDST.PROJECT_ID AS ITEM_PROJECT_ID, 
       ITMDST.ACTIVITY_ID AS ITEM_ACTIVITY_ID,
       DEPC.OPRID, DEPC.ASSN_OPRID,DEPC.DEP_POST_STATUS, X5.XLATLONGNAME AS DEP_POST_STS_DESCR, DEPC.PAY_WS_TYPE, DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME AS DEPOSIT_STS_DESCR,
       DEPC.BANK_SETID, DEPC.BANK_CD, DEPC.BNK_ID_NBR, DEPC.BANK_ACCT_KEY, DEPC.BANK_ACCOUNT_NUM, DEPC.DEPOSIT_TYPE, DEPC.PYMT_RATE_MULT, DEPC.PYMT_RATE_DIV,
       PYMT.PAYMENT_SEQ_NUM, PYMT.PAYMENT_ID, PYMT.PAYMENT_STATUS, X4.XLATLONGNAME AS PYMNT_STS_DESCR, PYMT.PAYMENT_AMT, PYMT.PAYMENT_CURRENCY, PYMT.UNPOST_REASON
FROM ((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID IN ('10083', '10044')
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM;


--PIT_PENDING_ITEMS_ALL
--Experimental Version 6
--Added Column Headings
--Improved readibility by adding additional columns
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT "Entered Date", A.GROUP_BU "Group Unit", A.GROUP_ID "Group ID", A.EDIT_STATUS, X1.XLATLONGNAME "Editing", A.POST_STATUS, X2.XLATLONGNAME "Posting Status", 
       A.CONTROL_CURRENCY "Control Currency", A.FORMAT_CURRENCY "Format Currency", A.PAYMENT_AMT "Payment Amount", A.ORIGIN_ID "Origin ID", A.GROUP_TYPE "Group Type", 
       A.OPRID "User ID", A.ASSN_OPRID "Assigned User ID", A.OPRID_APPROVED_BY "Approved User ID", A.DST_BAL_STATUS "Balanced I-Yes/O-No",
       A.CONTROL_AMT "Control Amount", A.CONTROL_CNT "Control Count", A.ENTERED_AMT "Entered Amount", A.ENTERED_CNT "Entered Count", A.POSTED_TOTAL "Posted Total", A.POSTED_COUNT "Payments Set To Post", A.GROUP_SEQ_NUM,
       A.ACCOUNTING_DT "Accounting Date", A.RECEIVED_DT "Received Date", A.POST_DT "Posted Date", A.BUSINESS_UNIT "Business Unit",
       B.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.NAMESHORT, B.ASOF_DT "As Of Date", B.DUE_DT "Due Date", B.POST_DT "Peng Item Posted Date", B.ITEM "Item ID", B.ITEM_LINE "Item Line", B.GROUP_SEQ_NUM "Sequence", 
       B.ENTRY_TYPE, E.DESCRSHORT "Entry Type", B.ENTRY_REASON, ERT.DESCR "Entry Reason", B.POSTED_FLAG, B.DST_ID_AR "AR Distribution Code", B.ENTRY_USE_ID "System Function ID", B.PAYMENT_METHOD,
       B.ENTRY_AMT "Entry Amount", B.ENTRY_CURRENCY "Entry Currency", B.RATE_MULT "Pndg Item Rate Multiplier", B.RATE_DIV "Pndg Item Rate Divisor", B.PAYMENT_AMT "Pndg Item Payment Amount", 
       B.PAYMENT_CURRENCY "Pndg Item Payment Currency", B.ENTRY_AMT_BASE "Pndg Item Base Amount", B.CURRENCY_CD "Currency Code", B.REAL_GAIN_LOSS "Realized Gain/Loss Amount", B.DST_ID_REAL "Realized Gain/Loss Code",
       B.ITM_PAY_AMT_BASE, B.CONTROL_CURRENCY, B.CONTROL_CURR_BASE, B.CONTROL_RATE_MULT, B.CONTROL_RATE_DIV, 
       B.AR_ERROR_CD "AR Update Error Code", ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT, B.ITEM_ACCTG_DT "Original Item Accounting Date",
       B.PC_DISTRIB_STATUS "PC Distribution Status", B.AR_SEQ_NUM, B.SHIP_TO_CUST_ID "Ship To Customer", B.SOLD_TO_CUST_ID "Sold To Customer", 
       B.CONTRACT_NUM "Contract", B.GL_LVL "GL Level",--B.BUSINESS_UNIT_CA "Contracts Business Unit", B.CONTRACT_LINE_NUM "Contract Line Num",
       ITM.ITEM_STATUS, X3.XLATLONGNAME "Item Status Description", B.DST_BAL_ITEM, ITM.PO_REF "Item PO Reference", ITM.BANK_CD "Item Bank Code", ITM.BANK_ACCT_KEY "Item Bank Account", 
       ITM.DT_INVOICED "Item Date Invoiced", ITM.INVOICE "Item Invoice", ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM "Item Sequence Number", ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.ENTRY_CURRENCY "Item ACT Entry Currency", ITA.RATE_MULT "Item ACT Rate MULT", ITA.RATE_DIV "Item ACT Rate DIV", 
       ITA.PAYMENT_AMT "Item ACT Payment Amount", ITA.PAYMENT_CURRENCY "Item ACT Payment Currency", ITA.PYMT_RATE_MULT "Payment Rate Multiplier", ITA.PYMT_RATE_DIV "Payment Rate Divisor", 
       ITA.POSTED_PI "Last Post Process Instance", ITA.DEPOSIT_BU "Deposit Bus Unit", ITA.DEPOSIT_ID "Deposit ID", ITA.GROUP_BU "Item ACT Group Unit", ITA.GROUP_ID "Item ACT Group ID", ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, 
       ITA.PAYMENT_SEQ_NUM "Payment Seq", ITA.PAYMENT_ID "Payment ID", ITA.BANK_CD "Item ACT Bank Code", ITA.BANK_ACCT_KEY "Item ACT Bank Account", 
       ITA.ARRE_STATUS "Revenue Estimate Status", ARC.BUDGET_HDR_STATUS "Budget Checking Header", ARC.AR_SOURCE_TRAN "Transaction Type", ARC.KK_AMOUNT_TYPE "KK Amount Type",
       ARC.CC_AMT_MULTIPLIER "CC Amt Multiplier", ARC.CC_REV_BUCKET "Rev Estimate", ARC.FOREIGN_AMOUNT "AR KK HDR Foreign Amount", ARC.FOREIGN_CURRENCY "AR KK HDR Foreign Currency", 
       PD.ACCOUNT "Pndg Item Account", PD.DEPTID "Pndg Item DeptID", PD.OPERATING_UNIT "Pndg Item Op Unit", PD.FUND_CODE "Pndg Item Fund", PD.CHARTFIELD2 "Pndg Item Donor", PD.PROJECT_ID "Pndg Item Project ID", 
       PD.ACTIVITY_ID "Pndg Item Activity ID", PD.BUDGET_DT "Pndg Item Bud DT",
       ITMDST.DST_SEQ_NUM "Distribution Sequence", 
       ITMDST.ACCOUNT "Item Account", ITMDST.DEPTID "Item DeptID", ITMDST.OPERATING_UNIT "Item Op Unit", ITMDST.FUND_CODE "Item Fund", ITMDST.CHARTFIELD2 "Item Donor", ITMDST.PROJECT_ID "Item Project ID", 
       ITMDST.ACTIVITY_ID "Item Activity ID", ITMDST.JOURNAL_ID "Journal ID", ITMDST.APPL_JRNL_ID "Journal Template", ITMDST.MONETARY_AMOUNT "Item DST Monetary Amount",       
       DEPC.OPRID "Deposit OPRID", DEPC.ASSN_OPRID "Deposit Assigned OPRID", DEPC.DEP_POST_STATUS, X5.XLATLONGNAME "Deposit Post Status", DEPC.PAY_WS_TYPE "Payment Worksheet Type", 
       DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME "Deposit Status", DEPC.BANK_CD "Deposit Bank Code", DEPC.BNK_ID_NBR "Deposit Bank ID NBR", DEPC.BANK_ACCT_KEY "Deposit Bank Account", DEPC.BANK_ACCOUNT_NUM "Deposit Bank Account NBR", 
       DEPC.DEPOSIT_TYPE "Deposit Type", DEPC.PYMT_RATE_MULT "Deposit Payment Rate MULT", DEPC.PYMT_RATE_DIV "Deposit Payment Rate DIV",
       PYMT.PAYMENT_SEQ_NUM "Pymnt Sequence NBR", PYMT.PAYMENT_ID "Pymnt ID", PYMT.PAYMENT_STATUS, X4.XLATLONGNAME "Payment Status", PYMT.PAYMENT_AMT "Pymnt Amount", PYMT.PAYMENT_CURRENCY "Pymnt Currency", 
       PYMT.UNPOST_REASON "Unpost Reason", PYMT.MISC_PAYMENT "Journal Directly Y/N", PYMT.MISC_DST_BAL "Dist Balanced Status", PYMT.CASH_CNTRL_DONE "Cash Control Complete", PYMT.CC_AFFECTED "Rev Estimate Affected", 
       PYMT.BUDGET_HDR_STATUS "Pymnt Budget Header Status"
FROM (((((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         LEFT OUTER JOIN PS_AR_CC_TRAN_HDR ARC ON ITA.BUSINESS_UNIT =  ARC.BUSINESS_UNIT AND ITA.CUST_ID =  ARC.CUST_ID AND ITA.ITEM =  ARC.ITEM AND ITA.ITEM_LINE =  ARC.ITEM_LINE AND ITA.ITEM_SEQ_NUM =  ARC.ITEM_SEQ_NUM)
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID IN ('10083', '10044')
  --AND B.ITEM = 'NET OCW - OPCONTR APR-2014'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM;


--PP added Billing Tables
--Experimental Version 7
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT "Entered Date", A.GROUP_BU "Group Unit", A.GROUP_ID "Group ID", A.EDIT_STATUS, X1.XLATLONGNAME "Editing", A.POST_STATUS, X2.XLATLONGNAME "Posting Status", 
       A.CONTROL_CURRENCY "Control Currency", A.FORMAT_CURRENCY "Format Currency", A.PAYMENT_AMT "Payment Amount", A.ORIGIN_ID "Origin ID", A.GROUP_TYPE "Group Type", 
       A.OPRID "User ID", A.ASSN_OPRID "Assigned User ID", A.OPRID_APPROVED_BY "Approved User ID", A.DST_BAL_STATUS "Balanced I-Yes/O-No",
       A.CONTROL_AMT "Control Amount", A.CONTROL_CNT "Control Count", A.ENTERED_AMT "Entered Amount", A.ENTERED_CNT "Entered Count", A.POSTED_TOTAL "Posted Total", A.POSTED_COUNT "Payments Set To Post", A.GROUP_SEQ_NUM,
       A.ACCOUNTING_DT "Accounting Date", A.RECEIVED_DT "Received Date", A.POST_DT "Posted Date", A.BUSINESS_UNIT "Business Unit",
       B.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.NAMESHORT, B.ASOF_DT "As Of Date", B.DUE_DT "Due Date", B.POST_DT "Peng Item Posted Date", B.ITEM "Item ID", B.ITEM_LINE "Item Line", B.GROUP_SEQ_NUM "Sequence", 
       B.ENTRY_TYPE, E.DESCRSHORT "Entry Type", B.ENTRY_REASON, ERT.DESCR "Entry Reason", B.POSTED_FLAG, B.DST_ID_AR "AR Distribution Code", B.ENTRY_USE_ID "System Function ID", B.PAYMENT_METHOD,
       B.ENTRY_AMT "Entry Amount", B.ENTRY_CURRENCY "Entry Currency", B.RATE_MULT "Pndg Item Rate Multiplier", B.RATE_DIV "Pndg Item Rate Divisor", B.PAYMENT_AMT "Pndg Item Payment Amount", 
       B.PAYMENT_CURRENCY "Pndg Item Payment Currency", B.ENTRY_AMT_BASE "Pndg Item Base Amount", B.CURRENCY_CD "Currency Code", B.REAL_GAIN_LOSS "Realized Gain/Loss Amount", B.DST_ID_REAL "Realized Gain/Loss Code",
       B.ITM_PAY_AMT_BASE, B.CONTROL_CURRENCY, B.CONTROL_CURR_BASE, B.CONTROL_RATE_MULT, B.CONTROL_RATE_DIV, 
       B.AR_ERROR_CD "AR Update Error Code", ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT, B.ITEM_ACCTG_DT "Original Item Accounting Date",
       B.PC_DISTRIB_STATUS "PC Distribution Status", B.AR_SEQ_NUM, B.SHIP_TO_CUST_ID "Ship To Customer", B.SOLD_TO_CUST_ID "Sold To Customer", 
       B.CONTRACT_NUM "Contract", B.GL_LVL "GL Level",--B.BUSINESS_UNIT_CA "Contracts Business Unit", B.CONTRACT_LINE_NUM "Contract Line Num",
       ITM.ITEM_STATUS, X3.XLATLONGNAME "Item Status Description", B.DST_BAL_ITEM, ITM.PO_REF "Item PO Reference", ITM.BANK_CD "Item Bank Code", ITM.BANK_ACCT_KEY "Item Bank Account", 
       ITM.DT_INVOICED "Item Date Invoiced", ITM.INVOICE "Item Invoice", ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM "Item Sequence Number", ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.ENTRY_CURRENCY "Item ACT Entry Currency", ITA.RATE_MULT "Item ACT Rate MULT", ITA.RATE_DIV "Item ACT Rate DIV", 
       ITA.PAYMENT_AMT "Item ACT Payment Amount", ITA.PAYMENT_CURRENCY "Item ACT Payment Currency", ITA.PYMT_RATE_MULT "Payment Rate Multiplier", ITA.PYMT_RATE_DIV "Payment Rate Divisor", 
       ITA.POSTED_PI "Last Post Process Instance", ITA.DEPOSIT_BU "Deposit Bus Unit", ITA.DEPOSIT_ID "Deposit ID", ITA.GROUP_BU "Item ACT Group Unit", ITA.GROUP_ID "Item ACT Group ID", ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, 
       ITA.PAYMENT_SEQ_NUM "Payment Seq", ITA.PAYMENT_ID "Payment ID", ITA.BANK_CD "Item ACT Bank Code", ITA.BANK_ACCT_KEY "Item ACT Bank Account", 
       ITA.ARRE_STATUS "Revenue Estimate Status", ARC.BUDGET_HDR_STATUS "Budget Checking Header", ARC.AR_SOURCE_TRAN "Transaction Type", ARC.KK_AMOUNT_TYPE "KK Amount Type",
       ARC.CC_AMT_MULTIPLIER "CC Amt Multiplier", ARC.CC_REV_BUCKET "Rev Estimate", ARC.FOREIGN_AMOUNT "AR KK HDR Foreign Amount", ARC.FOREIGN_CURRENCY "AR KK HDR Foreign Currency", 
       PD.ACCOUNT "Pndg Item Account", PD.DEPTID "Pndg Item DeptID", PD.OPERATING_UNIT "Pndg Item Op Unit", PD.FUND_CODE "Pndg Item Fund", PD.CHARTFIELD2 "Pndg Item Donor", PD.PROJECT_ID "Pndg Item Project ID", 
       PD.ACTIVITY_ID "Pndg Item Activity ID", PD.BUDGET_DT "Pndg Item Bud DT",
       ITMDST.DST_SEQ_NUM "Distribution Sequence", 
       ITMDST.ACCOUNT "Item Account", ITMDST.DEPTID "Item DeptID", ITMDST.OPERATING_UNIT "Item Op Unit", ITMDST.FUND_CODE "Item Fund", ITMDST.CHARTFIELD2 "Item Donor", ITMDST.PROJECT_ID "Item Project ID", 
       ITMDST.ACTIVITY_ID "Item Activity ID", ITMDST.JOURNAL_ID "Journal ID", ITMDST.APPL_JRNL_ID "Journal Template", ITMDST.MONETARY_AMOUNT "Item DST Monetary Amount",       
       DEPC.OPRID "Deposit OPRID", DEPC.ASSN_OPRID "Deposit Assigned OPRID", DEPC.DEP_POST_STATUS, X5.XLATLONGNAME "Deposit Post Status", DEPC.PAY_WS_TYPE "Payment Worksheet Type", 
       DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME "Deposit Status", DEPC.BANK_CD "Deposit Bank Code", DEPC.BNK_ID_NBR "Deposit Bank ID NBR", DEPC.BANK_ACCT_KEY "Deposit Bank Account", DEPC.BANK_ACCOUNT_NUM "Deposit Bank Account NBR", 
       DEPC.DEPOSIT_TYPE "Deposit Type", DEPC.PYMT_RATE_MULT "Deposit Payment Rate MULT", DEPC.PYMT_RATE_DIV "Deposit Payment Rate DIV",
       PYMT.PAYMENT_SEQ_NUM "Pymnt Sequence NBR", PYMT.PAYMENT_ID "Pymnt ID", PYMT.PAYMENT_STATUS, X4.XLATLONGNAME "Payment Status", PYMT.PAYMENT_AMT "Pymnt Amount", PYMT.PAYMENT_CURRENCY "Pymnt Currency", 
       PYMT.UNPOST_REASON "Unpost Reason", PYMT.MISC_PAYMENT "Journal Directly Y/N", PYMT.MISC_DST_BAL "Dist Balanced Status", PYMT.CASH_CNTRL_DONE "Cash Control Complete", PYMT.CC_AFFECTED "Rev Estimate Affected", 
       PYMT.BUDGET_HDR_STATUS "Pymnt Budget Header Status",
       BIH.INVOICE, BIH.INVOICE_DT, BIH.ACCOUNTING_DT, BIH.RATE_DATE, BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       BIH.ADD_DTTM, BIH.LAST_UPDATE_DTTM, BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, BIL.CONTRACT_DT, BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID, BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE
FROM (((((((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         LEFT OUTER JOIN PS_AR_CC_TRAN_HDR ARC ON ITA.BUSINESS_UNIT =  ARC.BUSINESS_UNIT AND ITA.CUST_ID =  ARC.CUST_ID AND ITA.ITEM =  ARC.ITEM AND ITA.ITEM_LINE =  ARC.ITEM_LINE AND ITA.ITEM_SEQ_NUM =  ARC.ITEM_SEQ_NUM)
         LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = ITM.BUSINESS_UNIT_BI AND BIH.INVOICE = ITM.INVOICE)
         LEFT OUTER JOIN PS_BI_LINE BIL ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  AND B.CUST_ID IN ('10824', '10685')
  --AND B.ITEM = 'NET OCW - OPCONTR APR-2014'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM;

--Experimental Version 8
--PP Added Contract Header and Detail Tables
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT "Entered Date", A.GROUP_BU "Group Unit", A.GROUP_ID "Group ID", A.EDIT_STATUS, X1.XLATLONGNAME "Editing", A.POST_STATUS, X2.XLATLONGNAME "Posting Status", 
       A.CONTROL_CURRENCY "Control Currency", A.FORMAT_CURRENCY "Format Currency", A.PAYMENT_AMT "Payment Amount", A.ORIGIN_ID "Origin ID", A.GROUP_TYPE "Group Type", 
       A.OPRID "User ID", A.ASSN_OPRID "Assigned User ID", A.OPRID_APPROVED_BY "Approved User ID", A.DST_BAL_STATUS "Balanced I-Yes/O-No",
       A.CONTROL_AMT "Control Amount", A.CONTROL_CNT "Control Count", A.ENTERED_AMT "Entered Amount", A.ENTERED_CNT "Entered Count", A.POSTED_TOTAL "Posted Total", A.POSTED_COUNT "Payments Set To Post", A.GROUP_SEQ_NUM,
       A.ACCOUNTING_DT "Accounting Date", A.RECEIVED_DT "Received Date", A.POST_DT "Posted Date", A.BUSINESS_UNIT "Business Unit",
       B.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.NAMESHORT, B.ASOF_DT "As Of Date", B.DUE_DT "Due Date", B.POST_DT "Peng Item Posted Date", B.ITEM "Item ID", B.ITEM_LINE "Item Line", B.GROUP_SEQ_NUM "Sequence", 
       B.ENTRY_TYPE, E.DESCRSHORT "Entry Type", B.ENTRY_REASON, ERT.DESCR "Entry Reason", B.POSTED_FLAG, B.DST_ID_AR "AR Distribution Code", B.ENTRY_USE_ID "System Function ID", B.PAYMENT_METHOD,
       B.ENTRY_AMT "Entry Amount", B.ENTRY_CURRENCY "Entry Currency", B.RATE_MULT "Pndg Item Rate Multiplier", B.RATE_DIV "Pndg Item Rate Divisor", B.PAYMENT_AMT "Pndg Item Payment Amount", 
       B.PAYMENT_CURRENCY "Pndg Item Payment Currency", B.ENTRY_AMT_BASE "Pndg Item Base Amount", B.CURRENCY_CD "Currency Code", B.REAL_GAIN_LOSS "Realized Gain/Loss Amount", B.DST_ID_REAL "Realized Gain/Loss Code",
       B.ITM_PAY_AMT_BASE, B.CONTROL_CURRENCY, B.CONTROL_CURR_BASE, B.CONTROL_RATE_MULT, B.CONTROL_RATE_DIV, 
       B.AR_ERROR_CD "AR Update Error Code", ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT, B.ITEM_ACCTG_DT "Original Item Accounting Date",
       B.PC_DISTRIB_STATUS "PC Distribution Status", B.AR_SEQ_NUM, B.SHIP_TO_CUST_ID "Ship To Customer", B.SOLD_TO_CUST_ID "Sold To Customer", 
       B.CONTRACT_NUM "Contract", B.GL_LVL "GL Level",--B.BUSINESS_UNIT_CA "Contracts Business Unit", B.CONTRACT_LINE_NUM "Contract Line Num",
       ITM.ITEM_STATUS, X3.XLATLONGNAME "Item Status Description", B.DST_BAL_ITEM, ITM.PO_REF "Item PO Reference", ITM.BANK_CD "Item Bank Code", ITM.BANK_ACCT_KEY "Item Bank Account", 
       ITM.DT_INVOICED "Item Date Invoiced", ITM.INVOICE "Item Invoice", ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM "Item Sequence Number", ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.ENTRY_CURRENCY "Item ACT Entry Currency", ITA.RATE_MULT "Item ACT Rate MULT", ITA.RATE_DIV "Item ACT Rate DIV", 
       ITA.PAYMENT_AMT "Item ACT Payment Amount", ITA.PAYMENT_CURRENCY "Item ACT Payment Currency", ITA.PYMT_RATE_MULT "Payment Rate Multiplier", ITA.PYMT_RATE_DIV "Payment Rate Divisor", 
       ITA.POSTED_PI "Last Post Process Instance", ITA.DEPOSIT_BU "Deposit Bus Unit", ITA.DEPOSIT_ID "Deposit ID", ITA.GROUP_BU "Item ACT Group Unit", ITA.GROUP_ID "Item ACT Group ID", ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, 
       ITA.PAYMENT_SEQ_NUM "Payment Seq", ITA.PAYMENT_ID "Payment ID", ITA.BANK_CD "Item ACT Bank Code", ITA.BANK_ACCT_KEY "Item ACT Bank Account", 
       ITA.ARRE_STATUS "Revenue Estimate Status", ARC.BUDGET_HDR_STATUS "Budget Checking Header", ARC.AR_SOURCE_TRAN "Transaction Type", ARC.KK_AMOUNT_TYPE "KK Amount Type",
       ARC.CC_AMT_MULTIPLIER "CC Amt Multiplier", ARC.CC_REV_BUCKET "Rev Estimate", ARC.FOREIGN_AMOUNT "AR KK HDR Foreign Amount", ARC.FOREIGN_CURRENCY "AR KK HDR Foreign Currency", 
       PD.ACCOUNT "Pndg Item Account", PD.DEPTID "Pndg Item DeptID", PD.OPERATING_UNIT "Pndg Item Op Unit", PD.FUND_CODE "Pndg Item Fund", PD.CHARTFIELD2 "Pndg Item Donor", PD.PROJECT_ID "Pndg Item Project ID", 
       PD.ACTIVITY_ID "Pndg Item Activity ID", PD.BUDGET_DT "Pndg Item Bud DT",
       ITMDST.DST_SEQ_NUM "Distribution Sequence", 
       ITMDST.ACCOUNT "Item Account", ITMDST.DEPTID "Item DeptID", ITMDST.OPERATING_UNIT "Item Op Unit", ITMDST.FUND_CODE "Item Fund", ITMDST.CHARTFIELD2 "Item Donor", ITMDST.PROJECT_ID "Item Project ID", 
       ITMDST.ACTIVITY_ID "Item Activity ID", ITMDST.JOURNAL_ID "Journal ID", ITMDST.APPL_JRNL_ID "Journal Template", ITMDST.MONETARY_AMOUNT "Item DST Monetary Amount",       
       DEPC.OPRID "Deposit OPRID", DEPC.ASSN_OPRID "Deposit Assigned OPRID", DEPC.DEP_POST_STATUS, X5.XLATLONGNAME "Deposit Post Status", DEPC.PAY_WS_TYPE "Payment Worksheet Type", 
       DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME "Deposit Status", DEPC.BANK_CD "Deposit Bank Code", DEPC.BNK_ID_NBR "Deposit Bank ID NBR", DEPC.BANK_ACCT_KEY "Deposit Bank Account", DEPC.BANK_ACCOUNT_NUM "Deposit Bank Account NBR", 
       DEPC.DEPOSIT_TYPE "Deposit Type", DEPC.PYMT_RATE_MULT "Deposit Payment Rate MULT", DEPC.PYMT_RATE_DIV "Deposit Payment Rate DIV",
       PYMT.PAYMENT_SEQ_NUM "Pymnt Sequence NBR", PYMT.PAYMENT_ID "Pymnt ID", PYMT.PAYMENT_STATUS, X4.XLATLONGNAME "Payment Status", PYMT.PAYMENT_AMT "Pymnt Amount", PYMT.PAYMENT_CURRENCY "Pymnt Currency", 
       PYMT.UNPOST_REASON "Unpost Reason", PYMT.MISC_PAYMENT "Journal Directly Y/N", PYMT.MISC_DST_BAL "Dist Balanced Status", PYMT.CASH_CNTRL_DONE "Cash Control Complete", PYMT.CC_AFFECTED "Rev Estimate Affected", 
       PYMT.BUDGET_HDR_STATUS "Pymnt Budget Header Status",
       BIH.INVOICE, BIH.INVOICE_DT, BIH.ACCOUNTING_DT, BIH.RATE_DATE, BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       BIH.ADD_DTTM, BIH.LAST_UPDATE_DTTM, BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, BIL.CONTRACT_DT, BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID, BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE,
       CAH.CONTRACT_TYPE "Contract Type", CAH.CA_STATUS "Contract Status", CAH.CONTRACT_SIGN_DT "Contract Signed", CAH.CONTR_NET_AMT "Net Amount", CAH.CURRENCY_CD "Contract Currency", 
       TO_CHAR(CAST((CAH.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time HEADER", CAH.LASTUPDOPRID "Last Update User HEADER", 
       CAH.DESCR "Contract Description", CAH.AMENDMENT_DT "Amendment Date", CAH.REVISED_NET "Revised Net Amount", CAH.LEGAL_REVIEW_FLG "Legal Review Y/N",
       CAD.CONTRACT_LINE_NUM "Contract Line Nbr", CAD.DESCR "Contract Line Descr", CAD.PRICING_STRUCTURE "Pricing Structure", CAD.START_DT "Start Date DETAIL", CAD.END_DT "End Date DETAIL", CAD.GROSS_AMT "Gross Amount", 
       CAD.LASTUPDDTTM "Last Update Date/Time DETAIL", CAD.LASTUPDOPRID "Last Update User DETAIL", CAD.PRODUCT_ID "Product DETAIL", CAD.PRODUCT_GROUP "Product Group" 
FROM (((((((((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         LEFT OUTER JOIN PS_AR_CC_TRAN_HDR ARC ON ITA.BUSINESS_UNIT =  ARC.BUSINESS_UNIT AND ITA.CUST_ID =  ARC.CUST_ID AND ITA.ITEM =  ARC.ITEM AND ITA.ITEM_LINE =  ARC.ITEM_LINE AND ITA.ITEM_SEQ_NUM =  ARC.ITEM_SEQ_NUM)
         LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = ITM.BUSINESS_UNIT_BI AND BIH.INVOICE = ITM.INVOICE)
         LEFT OUTER JOIN PS_BI_LINE BIL ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
         LEFT OUTER JOIN PS_CA_CONTR_HDR CAH ON BIL.CONTRACT_NUM = CAH.CONTRACT_NUM AND BIL.BUSINESS_UNIT = CAH.BUSINESS_UNIT_BI AND BIL.BUSINESS_UNIT_CA = CAH.BUSINESS_UNIT)
         LEFT OUTER JOIN PS_CA_DETAIL CAD ON CAH.CONTRACT_NUM = CAD.CONTRACT_NUM)
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  AND B.CUST_ID IN ('10824', '10685')
  --AND B.ITEM = 'NET OCW - OPCONTR APR-2014'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM, CAH.CONTRACT_NUM, CAD.CONTRACT_LINE_NUM;

--Experimental Version 9
--PP Added Contract Event and Milestone Tables
--Joined BIL and CAAE
--Added Bill Plan and Event Tables
--Under Testing, seems to work so far
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT "Entered Date", A.GROUP_BU "Group Unit", A.GROUP_ID "Group ID", A.EDIT_STATUS, X1.XLATLONGNAME "Editing", A.POST_STATUS, X2.XLATLONGNAME "Posting Status", 
       A.CONTROL_CURRENCY "Control Currency", A.FORMAT_CURRENCY "Format Currency", A.PAYMENT_AMT "Payment Amount", A.ORIGIN_ID "Origin ID", A.GROUP_TYPE "Group Type", 
       A.OPRID "User ID", A.ASSN_OPRID "Assigned User ID", A.OPRID_APPROVED_BY "Approved User ID", A.DST_BAL_STATUS "Balanced I-Yes/O-No",
       A.CONTROL_AMT "Control Amount", A.CONTROL_CNT "Control Count", A.ENTERED_AMT "Entered Amount", A.ENTERED_CNT "Entered Count", A.POSTED_TOTAL "Posted Total", A.POSTED_COUNT "Payments Set To Post", A.GROUP_SEQ_NUM,
       A.ACCOUNTING_DT "Accounting Date", A.RECEIVED_DT "Received Date", A.POST_DT "Posted Date", A.BUSINESS_UNIT "Business Unit",
       B.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.NAMESHORT, B.ASOF_DT "As Of Date", B.DUE_DT "Due Date", B.POST_DT "Peng Item Posted Date", B.ITEM "Item ID", B.ITEM_LINE "Item Line", B.GROUP_SEQ_NUM "Sequence", 
       B.ENTRY_TYPE, E.DESCRSHORT "Entry Type", B.ENTRY_REASON, ERT.DESCR "Entry Reason", B.POSTED_FLAG, B.DST_ID_AR "AR Distribution Code", B.ENTRY_USE_ID "System Function ID", B.PAYMENT_METHOD,
       B.ENTRY_AMT "Entry Amount", B.ENTRY_CURRENCY "Entry Currency", B.RATE_MULT "Pndg Item Rate Multiplier", B.RATE_DIV "Pndg Item Rate Divisor", B.PAYMENT_AMT "Pndg Item Payment Amount", 
       B.PAYMENT_CURRENCY "Pndg Item Payment Currency", B.ENTRY_AMT_BASE "Pndg Item Base Amount", B.CURRENCY_CD "Currency Code", B.REAL_GAIN_LOSS "Realized Gain/Loss Amount", B.DST_ID_REAL "Realized Gain/Loss Code",
       B.ITM_PAY_AMT_BASE, B.CONTROL_CURRENCY, B.CONTROL_CURR_BASE, B.CONTROL_RATE_MULT, B.CONTROL_RATE_DIV, 
       B.AR_ERROR_CD "AR Update Error Code", ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT, B.ITEM_ACCTG_DT "Original Item Accounting Date",
       B.PC_DISTRIB_STATUS "PC Distribution Status", B.AR_SEQ_NUM, B.SHIP_TO_CUST_ID "Ship To Customer", B.SOLD_TO_CUST_ID "Sold To Customer", 
       B.CONTRACT_NUM "Contract", B.GL_LVL "GL Level",--B.BUSINESS_UNIT_CA "Contracts Business Unit", B.CONTRACT_LINE_NUM "Contract Line Num",
       ITM.ITEM_STATUS, X3.XLATLONGNAME "Item Status Description", B.DST_BAL_ITEM, ITM.PO_REF "Item PO Reference", ITM.BANK_CD "Item Bank Code", ITM.BANK_ACCT_KEY "Item Bank Account", 
       ITM.DT_INVOICED "Item Date Invoiced", ITM.INVOICE "Item Invoice", ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM "Item Sequence Number", ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.ENTRY_CURRENCY "Item ACT Entry Currency", ITA.RATE_MULT "Item ACT Rate MULT", ITA.RATE_DIV "Item ACT Rate DIV", 
       ITA.PAYMENT_AMT "Item ACT Payment Amount", ITA.PAYMENT_CURRENCY "Item ACT Payment Currency", ITA.PYMT_RATE_MULT "Payment Rate Multiplier", ITA.PYMT_RATE_DIV "Payment Rate Divisor", 
       ITA.POSTED_PI "Last Post Process Instance", ITA.DEPOSIT_BU "Deposit Bus Unit", ITA.DEPOSIT_ID "Deposit ID", ITA.GROUP_BU "Item ACT Group Unit", ITA.GROUP_ID "Item ACT Group ID", ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, 
       ITA.PAYMENT_SEQ_NUM "Payment Seq", ITA.PAYMENT_ID "Payment ID", ITA.BANK_CD "Item ACT Bank Code", ITA.BANK_ACCT_KEY "Item ACT Bank Account", 
       ITA.ARRE_STATUS "Revenue Estimate Status", ARC.BUDGET_HDR_STATUS "Budget Checking Header", ARC.AR_SOURCE_TRAN "Transaction Type", ARC.KK_AMOUNT_TYPE "KK Amount Type",
       ARC.CC_AMT_MULTIPLIER "CC Amt Multiplier", ARC.CC_REV_BUCKET "Rev Estimate", ARC.FOREIGN_AMOUNT "AR KK HDR Foreign Amount", ARC.FOREIGN_CURRENCY "AR KK HDR Foreign Currency", 
       PD.ACCOUNT "Pndg Item Account", PD.DEPTID "Pndg Item DeptID", PD.OPERATING_UNIT "Pndg Item Op Unit", PD.FUND_CODE "Pndg Item Fund", PD.CHARTFIELD2 "Pndg Item Donor", PD.PROJECT_ID "Pndg Item Project ID", 
       PD.ACTIVITY_ID "Pndg Item Activity ID", PD.BUDGET_DT "Pndg Item Bud DT",
       ITMDST.DST_SEQ_NUM "Distribution Sequence", 
       ITMDST.ACCOUNT "Item Account", ITMDST.DEPTID "Item DeptID", ITMDST.OPERATING_UNIT "Item Op Unit", ITMDST.FUND_CODE "Item Fund", ITMDST.CHARTFIELD2 "Item Donor", ITMDST.PROJECT_ID "Item Project ID", 
       ITMDST.ACTIVITY_ID "Item Activity ID", ITMDST.JOURNAL_ID "Journal ID", ITMDST.APPL_JRNL_ID "Journal Template", ITMDST.MONETARY_AMOUNT "Item DST Monetary Amount",       
       DEPC.OPRID "Deposit OPRID", DEPC.ASSN_OPRID "Deposit Assigned OPRID", DEPC.DEP_POST_STATUS, X5.XLATLONGNAME "Deposit Post Status", DEPC.PAY_WS_TYPE "Payment Worksheet Type", 
       DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME "Deposit Status", DEPC.BANK_CD "Deposit Bank Code", DEPC.BNK_ID_NBR "Deposit Bank ID NBR", DEPC.BANK_ACCT_KEY "Deposit Bank Account", DEPC.BANK_ACCOUNT_NUM "Deposit Bank Account NBR", 
       DEPC.DEPOSIT_TYPE "Deposit Type", DEPC.PYMT_RATE_MULT "Deposit Payment Rate MULT", DEPC.PYMT_RATE_DIV "Deposit Payment Rate DIV",
       PYMT.PAYMENT_SEQ_NUM "Pymnt Sequence NBR", PYMT.PAYMENT_ID "Pymnt ID", PYMT.PAYMENT_STATUS, X4.XLATLONGNAME "Payment Status", PYMT.PAYMENT_AMT "Pymnt Amount", PYMT.PAYMENT_CURRENCY "Pymnt Currency", 
       PYMT.UNPOST_REASON "Unpost Reason", PYMT.MISC_PAYMENT "Journal Directly Y/N", PYMT.MISC_DST_BAL "Dist Balanced Status", PYMT.CASH_CNTRL_DONE "Cash Control Complete", PYMT.CC_AFFECTED "Rev Estimate Affected", 
       PYMT.BUDGET_HDR_STATUS "Pymnt Budget Header Status",
       BIH.INVOICE, BIH.INVOICE_DT, BIH.ACCOUNTING_DT, BIH.RATE_DATE, BIH.RATE_MULT, BIH.RATE_DIV, BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       BIH.ADD_DTTM, BIH.LAST_UPDATE_DTTM, BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, BIL.CONTRACT_DT, BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID,
       BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE,
       CAH.CONTRACT_TYPE "Contract Type", CAH.CA_STATUS "Contract Status", CAH.CONTRACT_SIGN_DT "Contract Signed", CAH.CONTR_NET_AMT "Net Amount", CAH.CURRENCY_CD "Contract Currency", 
       TO_CHAR(CAST((CAH.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time HEADER", CAH.LASTUPDOPRID "Last Update User HEADER", 
       CAH.DESCR "Contract Description", CAH.AMENDMENT_DT "Amendment Date", CAH.REVISED_NET "Revised Net Amount", CAH.LEGAL_REVIEW_FLG "Legal Review Y/N",
       CAD.CONTRACT_LINE_NUM "Contract Line Nbr", CAD.DESCR "Contract Line Descr", CAD.PRICING_STRUCTURE "Pricing Structure", CAD.START_DT "Start Date DETAIL", CAD.END_DT "End Date DETAIL", CAD.GROSS_AMT "Gross Amount", 
       CAD.LASTUPDDTTM "Last Update Date/Time DETAIL", CAD.LASTUPDOPRID "Last Update User DETAIL", CAD.PRODUCT_ID "Product DETAIL", CAD.PRODUCT_GROUP "Product Group",
       CAAE.EVENT_NUM "Event Nbr", CAAE.AP_EVENT_TYPE, X10.FIELDVALUE || ' - ' || X12.XLATLONGNAME AS "Event Type", CAAE.AP_EVENT_STATUS, X11.FIELDVALUE || ' - ' || X11.XLATLONGNAME AS "Event Status",
       CAAE.ACCOUNTING_DT "Acctg Date", CAA.ACCT_PLAN_ID "Revenue Plan", CAA.REV_RECOG_METHOD, X9.FIELDVALUE || ' - ' || X9.XLATLONGNAME AS "Revenue Method", 
       CAA.AP_STATUS, X7.FIELDVALUE || ' - ' || X7.XLATLONGNAME AS "Revenue Plan Status", 
       CAAE.MILESTONE_ORIGIN, X12.FIELDVALUE || ' - ' || X12.XLATLONGNAME AS "M/S Origin", CAAE.MS_SEQNUM "M/S Nbr", CAM.DESCR "M/S Descr",
       CAM.MILESTONE_STATUS, X13.FIELDVALUE || ' - ' || X13.XLATLONGNAME AS "M/S Status", CAM.COMPLETION_DATE "M/S Compl Date", CAM.ESTIMATED_COMP_DT "M/S Estd Compl Date",
       CAAE.AMOUNT "Revenue Amount", CAAE.CURRENCY_CD "Rev Transaction Curr", CAA.CA_ALLOC_METHOD, X8.FIELDVALUE || ' - ' || X8.XLATLONGNAME AS " REV Allocation Method",
       BP.BP_STATUS, X15.FIELDVALUE || ' - ' || X15.XLATLONGNAME AS "Bill Plan Status",
       BP.BILL_PLAN_TYPE, X16.FIELDVALUE || ' - ' || X16.XLATLONGNAME AS "Bill Plan Type", BPE.EVENT_OCCURRENCE "Bill Plan Evt Occur", 
       BPE.BILL_EVENT_TYPE, X17.FIELDVALUE || ' - ' || X17.XLATLONGNAME AS "Bill Plan Event Type", BPE.BP_EVENT_STATUS, X14.FIELDVALUE || ' - ' || X14.XLATLONGNAME AS "Bill Plan Event Status",
       BPE.AMOUNT "Billing Amount", BPE.CURRENCY_CD "Bill Transaction Curr",
       CADD.ACCOUNT "Cntrct Acct", CADD.OPERATING_UNIT "Cntrct Op Unit", CADD.FUND_CODE "Cntrct Fund", CADD.DEPTID "Cntrct Dtl DeptID", CADD.PROJECT_ID "Cntrct Prj ID", CADD.CHARTFIELD2 "Cntrct Donor", CADD.COMBO_VALID_FLG,
       CADP.BUSINESS_UNIT_PC "Cntrct Trms PC BU", CADP.PROJECT_ID "Cntrct Trms Prj ID", CADP.ACTIVITY_ID "Cntrct Trms Act ID"
FROM (((((((((((((((((((((((((((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         LEFT OUTER JOIN PS_AR_CC_TRAN_HDR ARC ON ITA.BUSINESS_UNIT =  ARC.BUSINESS_UNIT AND ITA.CUST_ID =  ARC.CUST_ID AND ITA.ITEM =  ARC.ITEM AND ITA.ITEM_LINE =  ARC.ITEM_LINE AND ITA.ITEM_SEQ_NUM =  ARC.ITEM_SEQ_NUM)
         LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = ITM.BUSINESS_UNIT_BI AND BIH.INVOICE = ITM.INVOICE)
         LEFT OUTER JOIN PS_BI_LINE BIL ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
         LEFT OUTER JOIN PS_CA_CONTR_HDR CAH ON BIL.CONTRACT_NUM = CAH.CONTRACT_NUM AND BIL.BUSINESS_UNIT = CAH.BUSINESS_UNIT_BI AND BIL.BUSINESS_UNIT_CA = CAH.BUSINESS_UNIT)
         LEFT OUTER JOIN PS_CA_DETAIL CAD ON CAH.CONTRACT_NUM = CAD.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_ACCTPLAN CAA ON CAH.CONTRACT_NUM = CAA.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_AP_EVENT CAAE ON CAH.CONTRACT_NUM = CAAE.CONTRACT_NUM AND CAA.ACCT_PLAN_ID = CAAE.ACCT_PLAN_ID AND CAAE.EVENT_NUM = BIL.EVENT_OCCURRENCE)
         LEFT OUTER JOIN PS_CA_MILESTONE CAM ON CAH.CONTRACT_NUM = CAM.CONTRACT_NUM AND CAAE.MS_SEQNUM = CAM.MS_SEQNUM)
         LEFT OUTER JOIN PS_CA_DETAIL_DST CADD ON CAH.CONTRACT_NUM = CADD.CONTRACT_NUM AND CAD.CONTRACT_LINE_NUM = CADD.CONTRACT_LINE_NUM)
         LEFT OUTER JOIN PS_CA_DETAIL_PROJ CADP ON CAH.CONTRACT_NUM = CADP.CONTRACT_NUM AND CAD.CONTRACT_LINE_NUM = CADP.CONTRACT_LINE_NUM)
         LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON CAH.CONTRACT_NUM = BP.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_BP_EVENTS BPE ON BP.CONTRACT_NUM = BPE.CONTRACT_NUM AND BP.BILL_PLAN_ID = BPE.BILL_PLAN_ID AND BPE.EVENT_OCCURRENCE = BIL.EVENT_OCCURRENCE)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'AP_STATUS' AND X7.FIELDVALUE = CAA.AP_STATUS AND X7.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'CA_ALLOC_METHOD' AND X8.FIELDVALUE = CAA.CA_ALLOC_METHOD AND X8.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'REV_RECOG_METHOD' AND X9.FIELDVALUE = CAA.REV_RECOG_METHOD AND X9.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X10 ON X10.FIELDNAME = 'AP_EVENT_TYPE' AND X10.FIELDVALUE = CAAE.AP_EVENT_TYPE AND X10.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'AP_EVENT_STATUS' AND X11.FIELDVALUE = CAAE.AP_EVENT_STATUS AND X11.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'MILESTONE_ORIGIN' AND X12.FIELDVALUE = CAAE.MILESTONE_ORIGIN AND X12.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'MILESTONE_STATUS' AND X13.FIELDVALUE = CAM.MILESTONE_STATUS AND X13.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'BP_EVENT_STATUS' AND X14.FIELDVALUE = BPE.BP_EVENT_STATUS AND X14.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'BP_STATUS' AND X15.FIELDVALUE = BP.BP_STATUS AND X15.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'BILL_PLAN_TYPE' AND X16.FIELDVALUE = BP.BILL_PLAN_TYPE AND X16.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X17 ON X17.FIELDNAME = 'BILL_EVENT_TYPE' AND X17.FIELDVALUE = BPE.BILL_EVENT_TYPE AND X17.EFF_STATUS = 'A')
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND (CADD.EFFDT = (SELECT MAX(CADD_ED.EFFDT) FROM PS_CA_DETAIL_DST CADD_ED WHERE CADD.CONTRACT_NUM = CADD_ED.CONTRACT_NUM AND CADD.CONTRACT_LINE_NUM = CADD_ED.CONTRACT_LINE_NUM 
                                                                               AND CADD.DST_SEQ_NUM = CADD_ED.DST_SEQ_NUM AND CADD_ED.EFFDT<= SYSDATE)
       OR CADD.EFFDT IS NULL)
  AND A.ENTRY_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID IN ('10824', '10685')
  --AND B.ITEM = 'NET OCW - OPCONTR APR-2014'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM, CAH.CONTRACT_NUM, CAD.CONTRACT_LINE_NUM, cAAE.EVENT_NUM, CAAE.MS_SEQNUM, CAA.ACCT_PLAN_ID;

--Experimental Version 10
--PP Added DST_CODE_TBL
--Under Testing
SELECT 'PIT_PENDING_ITEMS_ALL', A.ENTRY_DT "Entered Date", A.GROUP_BU "Group Unit", A.GROUP_ID "Group ID", A.EDIT_STATUS, X1.XLATLONGNAME "Editing", A.POST_STATUS, X2.XLATLONGNAME "Posting Status", 
       A.CONTROL_CURRENCY "Control Currency", A.FORMAT_CURRENCY "Format Currency", A.PAYMENT_AMT "Payment Amount", A.ORIGIN_ID "Origin ID", A.GROUP_TYPE "Group Type", 
       A.OPRID "User ID", A.ASSN_OPRID "Assigned User ID", A.OPRID_APPROVED_BY "Approved User ID", A.DST_BAL_STATUS "Balanced I-Yes/O-No",
       A.CONTROL_AMT "Control Amount", A.CONTROL_CNT "Control Count", A.ENTERED_AMT "Entered Amount", A.ENTERED_CNT "Entered Count", A.POSTED_TOTAL "Posted Total", A.POSTED_COUNT "Payments Set To Post", A.GROUP_SEQ_NUM,
       A.ACCOUNTING_DT "Accounting Date", A.RECEIVED_DT "Received Date", A.POST_DT "Posted Date", A.BUSINESS_UNIT "Business Unit",
       B.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.NAMESHORT, B.ASOF_DT "As Of Date", B.DUE_DT "Due Date", B.POST_DT "Peng Item Posted Date", B.ITEM "Item ID", B.ITEM_LINE "Item Line", B.GROUP_SEQ_NUM "Sequence", 
       B.ENTRY_TYPE, E.DESCRSHORT "Entry Type", B.ENTRY_REASON, ERT.DESCR "Entry Reason", B.POSTED_FLAG, B.DST_ID_AR "AR Distribution Code", DST.DESCR "AR Dist Code Descr", B.ENTRY_USE_ID "System Function ID", B.PAYMENT_METHOD,
       B.ENTRY_AMT "Entry Amount", B.ENTRY_CURRENCY "Entry Currency", B.RATE_MULT "Pndg Item Rate Multiplier", B.RATE_DIV "Pndg Item Rate Divisor", B.PAYMENT_AMT "Pndg Item Payment Amount", 
       B.PAYMENT_CURRENCY "Pndg Item Payment Currency", B.ENTRY_AMT_BASE "Pndg Item Base Amount", B.CURRENCY_CD "Currency Code", B.REAL_GAIN_LOSS "Realized Gain/Loss Amount", B.DST_ID_REAL "Realized Gain/Loss Code",
       B.ITM_PAY_AMT_BASE, B.CONTROL_CURRENCY, B.CONTROL_CURR_BASE, B.CONTROL_RATE_MULT, B.CONTROL_RATE_DIV, 
       B.AR_ERROR_CD "AR Update Error Code", ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT, B.ITEM_ACCTG_DT "Original Item Accounting Date",
       B.PC_DISTRIB_STATUS "PC Distribution Status", B.AR_SEQ_NUM, B.SHIP_TO_CUST_ID "Ship To Customer", B.SOLD_TO_CUST_ID "Sold To Customer", 
       B.CONTRACT_NUM "Contract", B.GL_LVL "GL Level",--B.BUSINESS_UNIT_CA "Contracts Business Unit", B.CONTRACT_LINE_NUM "Contract Line Num",
       ITM.ITEM_STATUS, X3.XLATLONGNAME "Item Status Description", B.DST_BAL_ITEM, ITM.PO_REF "Item PO Reference", ITM.BANK_CD "Item Bank Code", ITM.BANK_ACCT_KEY "Item Bank Account", 
       ITM.DT_INVOICED "Item Date Invoiced", ITM.INVOICE "Item Invoice", ITM.SHIP_TO_CUST_ID, ITM.SOLD_TO_CUST_ID,
       ITA.ITEM_SEQ_NUM "Item Sequence Number", ITA.ENTRY_TYPE AS ITA_ENTRY_TYPE, ITA.ENTRY_CURRENCY "Item ACT Entry Currency", ITA.RATE_MULT "Item ACT Rate MULT", ITA.RATE_DIV "Item ACT Rate DIV", 
       ITA.PAYMENT_AMT "Item ACT Payment Amount", ITA.PAYMENT_CURRENCY "Item ACT Payment Currency", ITA.PYMT_RATE_MULT "Payment Rate Multiplier", ITA.PYMT_RATE_DIV "Payment Rate Divisor", 
       ITA.POSTED_PI "Last Post Process Instance", ITA.DEPOSIT_BU "Deposit Bus Unit", ITA.DEPOSIT_ID "Deposit ID", ITA.GROUP_BU "Item ACT Group Unit", ITA.GROUP_ID "Item ACT Group ID", ITA.GROUP_SEQ_NUM AS ITA_GROUP_SEQ_NUM, 
       ITA.PAYMENT_SEQ_NUM "Payment Seq", ITA.PAYMENT_ID "Payment ID", ITA.BANK_CD "Item ACT Bank Code", ITA.BANK_ACCT_KEY "Item ACT Bank Account", 
       ITA.ARRE_STATUS "Revenue Estimate Status", ARC.BUDGET_HDR_STATUS "Budget Checking Header", ARC.AR_SOURCE_TRAN "Transaction Type", ARC.KK_AMOUNT_TYPE "KK Amount Type",
       ARC.CC_AMT_MULTIPLIER "CC Amt Multiplier", ARC.CC_REV_BUCKET "Rev Estimate", ARC.FOREIGN_AMOUNT "AR KK HDR Foreign Amount", ARC.FOREIGN_CURRENCY "AR KK HDR Foreign Currency", 
       PD.ACCOUNT "Pndg Item Account", PD.DEPTID "Pndg Item DeptID", PD.OPERATING_UNIT "Pndg Item Op Unit", PD.FUND_CODE "Pndg Item Fund", PD.CHARTFIELD2 "Pndg Item Donor", PD.PROJECT_ID "Pndg Item Project ID", 
       PD.ACTIVITY_ID "Pndg Item Activity ID", PD.BUDGET_DT "Pndg Item Bud DT",
       ITMDST.DST_SEQ_NUM "Distribution Sequence", 
       ITMDST.ACCOUNT "Item Account", ITMDST.DEPTID "Item DeptID", ITMDST.OPERATING_UNIT "Item Op Unit", ITMDST.FUND_CODE "Item Fund", ITMDST.CHARTFIELD2 "Item Donor", ITMDST.PROJECT_ID "Item Project ID", 
       ITMDST.ACTIVITY_ID "Item Activity ID", ITMDST.JOURNAL_ID "Journal ID", ITMDST.APPL_JRNL_ID "Journal Template", ITMDST.MONETARY_AMOUNT "Item DST Monetary Amount",       
       DEPC.OPRID "Deposit OPRID", DEPC.ASSN_OPRID "Deposit Assigned OPRID", DEPC.DEP_POST_STATUS, X5.XLATLONGNAME "Deposit Post Status", DEPC.PAY_WS_TYPE "Payment Worksheet Type", 
       DEPC.DEPOSIT_STATUS, X6.XLATLONGNAME "Deposit Status", DEPC.BANK_CD "Deposit Bank Code", DEPC.BNK_ID_NBR "Deposit Bank ID NBR", DEPC.BANK_ACCT_KEY "Deposit Bank Account", DEPC.BANK_ACCOUNT_NUM "Deposit Bank Account NBR", 
       DEPC.DEPOSIT_TYPE "Deposit Type", DEPC.PYMT_RATE_MULT "Deposit Payment Rate MULT", DEPC.PYMT_RATE_DIV "Deposit Payment Rate DIV",
       PYMT.PAYMENT_SEQ_NUM "Pymnt Sequence NBR", PYMT.PAYMENT_ID "Pymnt ID", PYMT.PAYMENT_STATUS, X4.XLATLONGNAME "Payment Status", PYMT.PAYMENT_AMT "Pymnt Amount", PYMT.PAYMENT_CURRENCY "Pymnt Currency", 
       PYMT.UNPOST_REASON "Unpost Reason", PYMT.MISC_PAYMENT "Journal Directly Y/N", PYMT.MISC_DST_BAL "Dist Balanced Status", PYMT.CASH_CNTRL_DONE "Cash Control Complete", PYMT.CC_AFFECTED "Rev Estimate Affected", 
       PYMT.BUDGET_HDR_STATUS "Pymnt Budget Header Status",
       BIH.INVOICE, BIH.INVOICE_DT, BIH.ACCOUNTING_DT, BIH.RATE_DATE, BIH.RATE_MULT, BIH.RATE_DIV, BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       BIH.ADD_DTTM, BIH.LAST_UPDATE_DTTM, BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, BIL.CONTRACT_DT, BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID,
       BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE,
       CAH.CONTRACT_TYPE "Contract Type", CAH.CA_STATUS "Contract Status", CAH.CONTRACT_SIGN_DT "Contract Signed", CAH.CONTR_NET_AMT "Net Amount", CAH.CURRENCY_CD "Contract Currency", 
       TO_CHAR(CAST((CAH.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time HEADER", CAH.LASTUPDOPRID "Last Update User HEADER", 
       CAH.DESCR "Contract Description", CAH.AMENDMENT_DT "Amendment Date", CAH.REVISED_NET "Revised Net Amount", CAH.LEGAL_REVIEW_FLG "Legal Review Y/N",
       CAD.CONTRACT_LINE_NUM "Contract Line Nbr", CAD.DESCR "Contract Line Descr", CAD.PRICING_STRUCTURE "Pricing Structure", CAD.START_DT "Start Date DETAIL", CAD.END_DT "End Date DETAIL", CAD.GROSS_AMT "Gross Amount", 
       CAD.LASTUPDDTTM "Last Update Date/Time DETAIL", CAD.LASTUPDOPRID "Last Update User DETAIL", CAD.PRODUCT_ID "Product DETAIL", CAD.PRODUCT_GROUP "Product Group",
       CAAE.EVENT_NUM "Event Nbr", CAAE.AP_EVENT_TYPE, X10.FIELDVALUE || ' - ' || X12.XLATLONGNAME AS "Event Type", CAAE.AP_EVENT_STATUS, X11.FIELDVALUE || ' - ' || X11.XLATLONGNAME AS "Event Status",
       CAAE.ACCOUNTING_DT "Acctg Date", CAA.ACCT_PLAN_ID "Revenue Plan", CAA.REV_RECOG_METHOD, X9.FIELDVALUE || ' - ' || X9.XLATLONGNAME AS "Revenue Method", 
       CAA.AP_STATUS, X7.FIELDVALUE || ' - ' || X7.XLATLONGNAME AS "Revenue Plan Status", 
       CAAE.MILESTONE_ORIGIN, X12.FIELDVALUE || ' - ' || X12.XLATLONGNAME AS "M/S Origin", CAAE.MS_SEQNUM "M/S Nbr", CAM.DESCR "M/S Descr",
       CAM.MILESTONE_STATUS, X13.FIELDVALUE || ' - ' || X13.XLATLONGNAME AS "M/S Status", CAM.COMPLETION_DATE "M/S Compl Date", CAM.ESTIMATED_COMP_DT "M/S Estd Compl Date",
       CAAE.AMOUNT "Revenue Amount", CAAE.CURRENCY_CD "Rev Transaction Curr", CAA.CA_ALLOC_METHOD, X8.FIELDVALUE || ' - ' || X8.XLATLONGNAME AS " REV Allocation Method",
       BP.BP_STATUS, X15.FIELDVALUE || ' - ' || X15.XLATLONGNAME AS "Bill Plan Status",
       BP.BILL_PLAN_TYPE, X16.FIELDVALUE || ' - ' || X16.XLATLONGNAME AS "Bill Plan Type", BPE.EVENT_OCCURRENCE "Bill Plan Evt Occur", 
       BPE.BILL_EVENT_TYPE, X17.FIELDVALUE || ' - ' || X17.XLATLONGNAME AS "Bill Plan Event Type", BPE.BP_EVENT_STATUS, X14.FIELDVALUE || ' - ' || X14.XLATLONGNAME AS "Bill Plan Event Status",
       BPE.AMOUNT "Billing Amount", BPE.CURRENCY_CD "Bill Transaction Curr",
       CADD.ACCOUNT "Cntrct Acct", CADD.OPERATING_UNIT "Cntrct Op Unit", CADD.FUND_CODE "Cntrct Fund", CADD.DEPTID "Cntrct Dtl DeptID", CADD.PROJECT_ID "Cntrct Prj ID", CADD.CHARTFIELD2 "Cntrct Donor", CADD.COMBO_VALID_FLG,
       CADP.BUSINESS_UNIT_PC "Cntrct Trms PC BU", CADP.PROJECT_ID "Cntrct Trms Prj ID", CADP.ACTIVITY_ID "Cntrct Trms Act ID"
FROM ((((((((((((((((((((((((((((((((((((((((((PS_GROUP_CONTROL A 
         LEFT OUTER JOIN PS_PENDING_ITEM B ON A.GROUP_BU = B.GROUP_BU AND A.GROUP_ID = B.GROUP_ID)
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
         LEFT OUTER JOIN PS_PENDING_DST PD ON B.GROUP_BU = PD.GROUP_BU AND B.GROUP_ID = PD.GROUP_ID AND B.BUSINESS_UNIT = PD.BUSINESS_UNIT AND B.CUST_ID = PD.CUST_ID AND B.ITEM = PD.ITEM AND B.ITEM_LINE = PD.ITEM_LINE 
                                          AND B.GROUP_SEQ_NUM = PD.GROUP_SEQ_NUM AND PD.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = B.BUSINESS_UNIT AND ITM.CUST_ID =  B.CUST_ID AND ITM.ITEM = B.ITEM AND ITM.ITEM_LINE = B.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON ITA.BUSINESS_UNIT = ITM.BUSINESS_UNIT AND ITA.CUST_ID =  ITM.CUST_ID AND ITA.ITEM = ITM.ITEM AND ITA.ITEM_LINE = ITM.ITEM_LINE 
                                             AND A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND B.GROUP_SEQ_NUM = ITA.GROUP_SEQ_NUM)
         LEFT OUTER JOIN PS_AR_CC_TRAN_HDR ARC ON ITA.BUSINESS_UNIT =  ARC.BUSINESS_UNIT AND ITA.CUST_ID =  ARC.CUST_ID AND ITA.ITEM =  ARC.ITEM AND ITA.ITEM_LINE =  ARC.ITEM_LINE AND ITA.ITEM_SEQ_NUM =  ARC.ITEM_SEQ_NUM)
         LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = ITM.BUSINESS_UNIT_BI AND BIH.INVOICE = ITM.INVOICE)
         LEFT OUTER JOIN PS_BI_LINE BIL ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
         LEFT OUTER JOIN PS_CA_CONTR_HDR CAH ON BIL.CONTRACT_NUM = CAH.CONTRACT_NUM AND BIL.BUSINESS_UNIT = CAH.BUSINESS_UNIT_BI AND BIL.BUSINESS_UNIT_CA = CAH.BUSINESS_UNIT)
         LEFT OUTER JOIN PS_CA_DETAIL CAD ON CAH.CONTRACT_NUM = CAD.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_ACCTPLAN CAA ON CAH.CONTRACT_NUM = CAA.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_AP_EVENT CAAE ON CAH.CONTRACT_NUM = CAAE.CONTRACT_NUM AND CAA.ACCT_PLAN_ID = CAAE.ACCT_PLAN_ID AND CAAE.EVENT_NUM = BIL.EVENT_OCCURRENCE)
         LEFT OUTER JOIN PS_CA_MILESTONE CAM ON CAH.CONTRACT_NUM = CAM.CONTRACT_NUM AND CAAE.MS_SEQNUM = CAM.MS_SEQNUM)
         LEFT OUTER JOIN PS_CA_DETAIL_DST CADD ON CAH.CONTRACT_NUM = CADD.CONTRACT_NUM AND CAD.CONTRACT_LINE_NUM = CADD.CONTRACT_LINE_NUM)
         LEFT OUTER JOIN PS_CA_DETAIL_PROJ CADP ON CAH.CONTRACT_NUM = CADP.CONTRACT_NUM AND CAD.CONTRACT_LINE_NUM = CADP.CONTRACT_LINE_NUM)
         LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON CAH.CONTRACT_NUM = BP.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_BP_EVENTS BPE ON BP.CONTRACT_NUM = BPE.CONTRACT_NUM AND BP.BILL_PLAN_ID = BPE.BILL_PLAN_ID AND BPE.EVENT_OCCURRENCE = BIL.EVENT_OCCURRENCE)
         LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'AP_STATUS' AND X7.FIELDVALUE = CAA.AP_STATUS AND X7.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'CA_ALLOC_METHOD' AND X8.FIELDVALUE = CAA.CA_ALLOC_METHOD AND X8.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'REV_RECOG_METHOD' AND X9.FIELDVALUE = CAA.REV_RECOG_METHOD AND X9.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X10 ON X10.FIELDNAME = 'AP_EVENT_TYPE' AND X10.FIELDVALUE = CAAE.AP_EVENT_TYPE AND X10.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'AP_EVENT_STATUS' AND X11.FIELDVALUE = CAAE.AP_EVENT_STATUS AND X11.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'MILESTONE_ORIGIN' AND X12.FIELDVALUE = CAAE.MILESTONE_ORIGIN AND X12.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'MILESTONE_STATUS' AND X13.FIELDVALUE = CAM.MILESTONE_STATUS AND X13.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'BP_EVENT_STATUS' AND X14.FIELDVALUE = BPE.BP_EVENT_STATUS AND X14.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'BP_STATUS' AND X15.FIELDVALUE = BP.BP_STATUS AND X15.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'BILL_PLAN_TYPE' AND X16.FIELDVALUE = BP.BILL_PLAN_TYPE AND X16.EFF_STATUS = 'A')
         LEFT OUTER JOIN PSXLATITEM X17 ON X17.FIELDNAME = 'BILL_EVENT_TYPE' AND X17.FIELDVALUE = BPE.BILL_EVENT_TYPE AND X17.EFF_STATUS = 'A')
         --LEFT OUTER JOIN PS_ITEM_ACTIVITY ITA ON A.GROUP_BU = ITA.GROUP_BU AND A.GROUP_ID = ITA.GROUP_ID AND A.BUSINESS_UNIT = ITA.BUSINESS_UNIT)
         --LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND ITM.CUST_ID =  ITA.CUST_ID AND ITM.ITEM = ITA.ITEM AND ITM.ITEM_LINE = ITA.ITEM_LINE)
         LEFT OUTER JOIN PS_ITEM_DST ITMDST ON ITA.BUSINESS_UNIT = ITMDST.BUSINESS_UNIT AND ITA.CUST_ID = ITMDST.CUST_ID AND ITA.ITEM = ITMDST.ITEM 
                                           AND ITA.ITEM_LINE = ITMDST.ITEM_LINE AND ITA.ITEM_SEQ_NUM = ITMDST.ITEM_SEQ_NUM AND ITMDST.SYSTEM_DEFINED = 'A')
         LEFT OUTER JOIN PS_DEPOSIT_CONTROL DEPC ON ITA.DEPOSIT_BU = DEPC.DEPOSIT_BU AND ITA.DEPOSIT_ID = DEPC.DEPOSIT_ID)
         LEFT OUTER JOIN PS_PAYMENT PYMT ON DEPC.DEPOSIT_BU = PYMT.DEPOSIT_BU AND DEPC.DEPOSIT_ID = PYMT.DEPOSIT_ID AND ITA.PAYMENT_SEQ_NUM = PYMT.PAYMENT_SEQ_NUM)
         LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PAYMENT_STATUS' AND X4.FIELDVALUE = PYMT.PAYMENT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'DEP_POST_STATUS' AND X5.FIELDVALUE = DEPC.DEP_POST_STATUS)
         LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'DEPOSIT_STATUS' AND X6.FIELDVALUE = DEPC.DEPOSIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'ITEM_STATUS' AND X3.FIELDVALUE = ITM.ITEM_STATUS)
         LEFT OUTER JOIN PS_CUSTOMER C ON C.SETID = 'UNUNI' AND B.CUST_ID = C.CUST_ID)
         LEFT OUTER JOIN PS_ENTRY_TYPE_TBL E ON E.SETID = 'UNUNI' AND E.ENTRY_TYPE = B.ENTRY_TYPE)
         LEFT OUTER JOIN PS_ENTRY_REASN_TBL ERT ON ERT.SETID = E.SETID AND E.ENTRY_TYPE = ERT.ENTRY_TYPE AND B.ENTRY_REASON = ERT.ENTRY_REASON) 
         LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'EDIT_STATUS' AND X1.FIELDVALUE = A.EDIT_STATUS)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'POST_STATUS' AND X2.FIELDVALUE = A.POST_STATUS)
         LEFT OUTER JOIN PS_DST_CODE_TBL DST ON DST.DST_ID = B.DST_ID_AR)
WHERE A.GROUP_BU LIKE '6%'
  --AND A.ACCOUNTING_DT BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
  AND (CADD.EFFDT = (SELECT MAX(CADD_ED.EFFDT) FROM PS_CA_DETAIL_DST CADD_ED WHERE CADD.CONTRACT_NUM = CADD_ED.CONTRACT_NUM AND CADD.CONTRACT_LINE_NUM = CADD_ED.CONTRACT_LINE_NUM 
                                                                               AND CADD.DST_SEQ_NUM = CADD_ED.DST_SEQ_NUM AND CADD_ED.EFFDT<= SYSDATE)
       OR CADD.EFFDT IS NULL)
  AND (DST.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC DST_A WHERE DST_A.SETCNTRLVALUE = B.BUSINESS_UNIT AND DST_A.RECNAME = 'DST_CODE_TBL') 
    OR DST.SETID IS NULL)
  AND (DST.EFFDT = (SELECT MAX(EFFDT) FROM PS_DST_CODE_TBL DST_X WHERE DST_X.SETID = DST.SETID AND DST_X.DST_ID = DST.DST_ID AND DST_X.EFFDT <= SYSDATE AND DST_X.EFF_STATUS = 'A')
    OR DST.EFFDT IS NULL)
  AND A.ENTRY_DT BETWEEN TO_DATE('2015-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
  --AND B.CUST_ID IN ('10824', '10685')
  --AND B.ITEM = 'NET OCW - OPCONTR APR-2014'
ORDER BY A.ENTRY_DT, A.GROUP_BU, A.GROUP_ID, A.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, ITA.ITEM_SEQ_NUM, ITA.GROUP_SEQ_NUM, CAH.CONTRACT_NUM, CAD.CONTRACT_LINE_NUM, cAAE.EVENT_NUM, CAAE.MS_SEQNUM, CAA.ACCT_PLAN_ID;

SELECT * FROM PS_DST_CODE_TBL WHERE SETID = 'UNUNI';

--UNU Contract for Services Queries, Security related
SELECT * FROM PSAUTHITEM WHERE CLASSID = 'UN_UNU_CA_SRVCS';
SELECT * FROM PSAUTHITEM WHERE PNLITEMNAME = 'UN_CNTRCT_DTLS';
SELECT * FROM PSROLECLASS WHERE CLASSID = 'UN_UNU_CA_SRVCS';

SELECT * FROM PSROLECLASS WHERE CLASSID = 'UN_UNU_CA_SRVCS'
AND EXISTS (SELECT 'X' FROM PSAUTHITEM WHERE CLASSID = 'UN_UNU_CA_SRVCS');

SELECT ROL.*, AUTH.*
FROM PSROLECLASS ROL, PSAUTHITEM AUTH
WHERE ROL.CLASSID = AUTH.CLASSID
    AND ROL.CLASSID = 'UN_UNU_CA_SRVCS'
    AND AUTH.PNLITEMNAME = 'UN_CNTRCT_DTLS'
ORDER BY 1,2;

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'nurazrina.arshad';
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'UN_CNTRCT_DTLS';
SELECT UN_FINALIZED, A.* FROM PS_UN_CNTRCT_DTLS A WHERE UN_FINALIZED = 'N';

--Trying out a query to list all Accounting Entry Records for Accounting Templates defined in the system 
--CTE Clause
--Experimental Version 1
WITH JGEN_REC (ACCTG_DEF_NAME, SYSTEM_SOURCE, RECNAME, FIELDNAME_MON_AMT, FIELDNAME_ACCTDATE) AS
(
 SELECT A.ACCTG_DEF_NAME, A.SYSTEM_SOURCE, A.RECNAME, A.FIELDNAME_MON_AMT, A.FIELDNAME_ACCTDATE FROM PS_JRNLGEN_DEFN A WHERE SETID = 'SHARE'
 UNION
 SELECT DISTINCT ACCTG_DEF_NAME, SYSTEM_SOURCE, RECNAME, FIELDNAME_MON_AMT, FIELDNAME_ACCTDATE
 FROM PS_JRNLGEN_DEFN
 WHERE SYSTEM_SOURCE IN (SELECT DISTINCT SYSTEM_SOURCE FROM PS_JRNL_HEADER J WHERE J.BUSINESS_UNIT = 'UNUNI')
      AND SETID = (SELECT DISTINCT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'JRNLGEN_DEFN' AND SETCNTRLVALUE = 'UNUNI')
)

SELECT * FROM JGEN_REC ORDER BY 1,2;

--Experimental Version 2
--Don't see the point of using a WITH Clause??
WITH JGEN_REC (SYSTEM_SOURCE, SOURCE_DESCR, RECNAME) AS
( 
 SELECT DISTINCT GEN.SYSTEM_SOURCE, X1.XLATLONGNAME AS SOURCE_DESCR, GEN.RECNAME
 FROM PS_JRNLGEN_DEFN GEN, PSXLATITEM X1
 WHERE X1.FIELDNAME = 'SYSTEM_SOURCE'
     AND X1.FIELDVALUE = GEN.SYSTEM_SOURCE
     AND SYSTEM_SOURCE IN (SELECT DISTINCT SYSTEM_SOURCE FROM PS_JRNL_HEADER J WHERE J.BUSINESS_UNIT = 'UNUNI')
     AND SETID = (SELECT DISTINCT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'JRNLGEN_DEFN' AND SETCNTRLVALUE = 'UNUNI')
)
SELECT * FROM JGEN_REC ORDER BY 1,2;

--Check to boot App Server
SELECT * FROM PSCLOCK;
SELECT TO_CHAR(SYSTIMESTAMP,'YYYY-MM-DD-HH24.MI.SS.FF') AS TIME_WITH_MICRO_SECS FROM PSCLOCK;

--Trying to come up with a query to combine AE Message Log with existing Logging query to include AE parameters
--Trying with AR UPDATE
SELECT MESSAGE_SET_NBR, A.* FROM PSAEAPPLDEFN A WHERE A.AE_APPLID = 'AR_POSTING';
SELECT * FROM PSAESTEPDEFN WHERE AE_APPLID = 'AR_POSTING' ORDER BY 1,2,7;

SELECT STEP.AE_APPLID, STEP.AE_SECTION, STEP.MARKET, STEP.DBTYPE, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
            STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.AE_PC_ON_FALSE, STEP.AE_ON_NOROWS, STEP.DESCR, 
            STEP.MESSAGE_SET_NBR, STEP.MESSAGE_NBR, STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, STEP.AE_COMMIT_FREQ
FROM PSAESTEPDEFN STEP 
WHERE STEP.AE_APPLID = 'AR_POSTING' 
ORDER BY 1,2,7;

SELECT * FROM PSAESTMTDEFN WHERE AE_APPLID = 'AR_POSTING';
SELECT * FROM PSAESTMTDEFN WHERE AE_APPLID = 'AR_POSTING' AND AE_STMT_TYPE = 'M';
SELECT * FROM PSAESTEPMSGDEFN WHERE AE_APPLID = 'AR_POSTING';

--Need to see if Standard JOIN will work
SELECT STEP.AE_APPLID, STEP.AE_SECTION, STEP.MARKET, STEP.DBTYPE, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
            STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.AE_PC_ON_FALSE, STEP.AE_ON_NOROWS, STEP.DESCR, 
            DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR) AS MESSAGE_SET_NBR, STEP.MESSAGE_NBR, 
            STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, STM.AE_MESSAGE_PARMS
FROM PSAEAPPLDEFN AE, PSAESTEPDEFN STEP, PSAESTEPMSGDEFN STM
WHERE AE.AE_APPLID =  STEP.AE_APPLID
    AND STEP.AE_APPLID = STM.AE_APPLID 
    AND STEP.AE_SECTION = STM.AE_SECTION
    AND STEP.MARKET = STM.MARKET
    AND STEP.DBTYPE = STM.DBTYPE 
    AND STEP.EFFDT = STM.EFFDT
    AND STEP.AE_STEP = STM.AE_STEP 
    AND STEP.AE_APPLID = 'AR_POSTING'
ORDER BY 1,2,7;

--Changed to Left OUTER JOIN, as not all AE's contain the Log Message Action
SELECT STEP.AE_APPLID, STEP.AE_SECTION, STEP.MARKET, STEP.DBTYPE, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
            STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.AE_PC_ON_FALSE, STEP.AE_ON_NOROWS, STEP.DESCR, 
            DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR) AS MESSAGE_SET_NBR, STEP.MESSAGE_NBR, 
            STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, STM.AE_MESSAGE_PARMS
FROM PSAEAPPLDEFN AE, (PSAESTEPDEFN STEP LEFT OUTER JOIN PSAESTEPMSGDEFN STM ON STEP.AE_APPLID = STM.AE_APPLID AND STEP.AE_SECTION = STM.AE_SECTION 
                                                                       AND STEP.MARKET = STM.MARKET AND STEP.DBTYPE = STM.DBTYPE AND STEP.EFFDT = STM.EFFDT AND STEP.AE_STEP = STM.AE_STEP)
WHERE AE.AE_APPLID =  STEP.AE_APPLID
    AND AE.AE_APPLID = 'AR_UPDATE'
ORDER BY 1,2,7;

--Experimental Version 1
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (6000, 6810, 6832, 6840)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.MAINJOBNAME = 'UNARUPDT' 
                                                                                                                                                 AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;

--Experimental Version 2
--Does not work yet
--It seems to be missing the AR_UPDATE rows
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM,
            STEP.AE_APPLID, STEP.AE_SECTION, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
            STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.DESCR, 
            DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR) AS AE_MESSAGE_SET_NBR, STEP.MESSAGE_NBR AS AE_MESSAGE_NBR, 
            STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, STM.AE_MESSAGE_PARMS
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT, PSAEAPPLDEFN AE, PSAESTEPDEFN STEP, PSAESTEPMSGDEFN STM
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    --AND PR.PRCSNAME = AE.AE_APPLID
    AND ML.MESSAGE_SET_NBR = DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR)
    --This join assumes that there is a Log Message Action, but what if user has put a messagebox in PeopleCode action
    AND ML.MESSAGE_NBR = STEP.MESSAGE_NBR
    AND ML.MESSAGE_SET_NBR IN (6000, 6810, 6832, 6840)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND AE.AE_APPLID =  STEP.AE_APPLID
    AND STEP.AE_APPLID = STM.AE_APPLID 
    AND STEP.AE_SECTION = STM.AE_SECTION
    AND STEP.MARKET = STM.MARKET
    AND STEP.DBTYPE = STM.DBTYPE 
    AND STEP.EFFDT = STM.EFFDT
    AND STEP.AE_STEP = STM.AE_STEP
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' --AND PR_ED.MAINJOBNAME = 'UNARUPDT' 
                                                                                                    AND PR_ED.PRCSJOBNAME = 'ARUPDATE' AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM, 
               STEP.AE_APPLID, STEP.AE_SECTION, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
               STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.DESCR, 
               DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR), STEP.MESSAGE_NBR, STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, 
               STM.AE_MESSAGE_PARMS
ORDER BY PR.RUNDTTM;

--Experimental Version 3
--It seems to be missing few rows
--Union also won't help
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, JOBSEQ.PRCSJOBSEQ, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM,
            STEP.AE_APPLID, STEP.AE_SECTION, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
            STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.DESCR, 
            DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR) AS AE_MESSAGE_SET_NBR, STEP.MESSAGE_NBR AS AE_MESSAGE_NBR, 
            STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, STM.AE_MESSAGE_PARMS
FROM PS_MESSAGE_LOGPARM PL, PSPRCSRQST PR, PSMSGCATDEFN CAT, PS_MESSAGE_LOG ML, PSAEAPPLDEFN AE, PS_PRCSJOBITEM JOBSEQ, 
         (PSAESTEPDEFN STEP LEFT OUTER JOIN PSAESTEPMSGDEFN STM ON STEP.AE_APPLID = STM.AE_APPLID AND STEP.AE_SECTION = STM.AE_SECTION 
                                           AND STEP.MARKET = STM.MARKET AND STEP.DBTYPE = STM.DBTYPE AND STEP.EFFDT = STM.EFFDT AND STEP.AE_STEP = STM.AE_STEP)
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    AND PR.PRCSJOBNAME = JOBSEQ.PRCSJOBNAME
    AND PR.PRCSNAME = JOBSEQ.PRCSNAME
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND PR.PRCSNAME = AE.AE_APPLID
    AND ML.MESSAGE_SET_NBR = DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR)
    --This join assumes that there is a Log Message Action, but what if user has put a messagebox in PeopleCode action 
    --AND ML.MESSAGE_NBR = STEP.MESSAGE_NBR
    AND ML.MESSAGE_SET_NBR IN (6000, 6810, 6832, 6840)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND AE.AE_APPLID =  STEP.AE_APPLID
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' --AND PR_ED.MAINJOBNAME = 'UNARUPDT' 
                                                                                                    AND PR_ED.PRCSJOBNAME = 'ARUPDATE' AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, JOBSEQ.PRCSJOBSEQ, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM, 
               STEP.AE_APPLID, STEP.AE_SECTION, STEP.EFFDT, STEP.AE_STEP, STEP.AE_SEQ_NUM, STEP.AE_ACTIVE_STATUS, STEP.AE_ABEND_ACTION, 
               STEP.AE_COMMIT_AFTER, STEP.AE_DO_SECTION, STEP.AE_DO_APPL_ID, STEP.AE_DYNAMIC_DO, STEP.DESCR, 
               DECODE(STEP.MESSAGE_SET_NBR, 0, AE.MESSAGE_SET_NBR, STEP.MESSAGE_SET_NBR), STEP.MESSAGE_NBR, STEP.AE_MESSAGE_SET_FLD, STEP.AE_MESSAGE_NBR_FLD, 
               STM.AE_MESSAGE_PARMS
ORDER BY PR.RUNDTTM, JOBSEQ.PRCSJOBSEQ;

--Experimental Version 1
--FS_JGEN run by UNU
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (9100)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.PRCSNAME = 'FS_JGEN' 
                                                                                                                                                 AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;
               
--Experimental Version 1
--FS_BP run by UNU
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (18021)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.PRCSNAME = 'FS_BP' 
                                                                                                                                                 AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;
               
--Experimental Version 1
--AP_MATCH run by UNU
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (7500)
    AND ML.MESSAGE_NBR IN (1, 2, 3, 8, 21, 22, 119, 128, 136, 320, 324, 333, 400, 396, 397, 398, 399, 403, 404, 405, 406, 137, 407)
    --Only for reporting exceptions
    --AND ML.MESSAGE_NBR = 406
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.PRCSNAME = 'AP_MATCH' 
                                                                                                                                                 AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;
               
--Message Catalog AP_MATCH 
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 7500 AND MSG_SEVERITY = 'E';

--Experimental Version 1
--PC_WRAPPER run by UNU IDs
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (13000, 13120)
    --AND ML.MESSAGE_NBR IN (1, 2, 3, 8, 21, 22, 119, 128, 136, 320, 324, 333, 400, 396, 397, 398, 399, 403, 404, 405, 406, 137, 407)
    --Only for reporting exceptions
    --AND ML.MESSAGE_NBR = 406
    --AND PR.OPRID = 'prakash.prashant'
    AND PR.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE B.OPRID = PR.OPRID AND A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu')
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.PRCSNAME = 'PC_WRAPPER'
                                               AND TO_CHAR(((PR_ED.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
                                               AND TO_CHAR(((PR_ED.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;

--Experimental Version 1
--CA/BI Jobs - Last 1 Day
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (12501, 6830)
    --AND ML.MESSAGE_NBR IN (1, 2, 3, 8, 21, 22, 119, 128, 136, 320, 324, 333, 400, 396, 397, 398, 399, 403, 404, 405, 406, 137, 407)
    --Only for reporting exceptions
    --AND ML.MESSAGE_NBR = 406
    --AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSJOBNAME IN ('UNCABIAR', 'UN_BI_03', 'UN_BI_01')
    AND TO_CHAR(((PR.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((PR.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;

--Experimental Version 1
--PRCSYSPURGE - Last 7 Days
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (65)
    --AND ML.MESSAGE_NBR IN (1, 2, 3, 8, 21, 22, 119, 128, 136, 320, 324, 333, 400, 396, 397, 398, 399, 403, 404, 405, 406, 137, 407)
    --Only for reporting exceptions
    --AND ML.MESSAGE_NBR = 406
    --AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSNAME IN ('PRCSYSPURGE')
    AND TO_CHAR(((PR.RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -7, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((PR.RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
         ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--AR_MSGSUM_VW
--AR > Receivables Update > Job Message Log Summary
SELECT MAINJOBINSTANCE, PRCSJOBNAME, RUNCNTLID, RUNDTTM, RUNSTATUS 
FROM PSPRCSRQST 
WHERE PRCSTYPE='PSJob' 
    AND GENPRCSTYPE = '0' 
    AND PRCSJOBSEQ = 0 
    AND RUNSTATUS <> '2'
    AND (PRCSJOBNAME LIKE '%UNU%' OR OPRID = 'prakash.prashant')
    AND TO_CHAR(((RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY 4 DESC;

--Check for Non Zero Process Instance and Flags
--Troubleshooting Group BU/ID 600UU/9926
SELECT POST_ACTION, ACCOUNTING_DT, POST_STATUS , PROCESS_INSTANCE, A.* FROM PS_GROUP_CONTROL A WHERE GROUP_BU = '600UU' AND GROUP_ID = '9926';
SELECT PROCESS_INSTANCE, A.* FROM PS_WS_CONTROL A WHERE WS_BU LIKE '6%';
SELECT PROCESS_INSTANCE, A.* FROM PS_CUST_DATA A WHERE CUST_ID = '10433';
SELECT PAYMENT_METHOD, PROCESS_INSTANCE, A.* FROM PS_ITEM A WHERE CUST_ID = '10433';
SELECT DST_ID_AR, PROCESS_INSTANCE, A.* FROM PS_PENDING_ITEM A WHERE CUST_ID = '10433';
--SELECT PROCESS_INSTANCE, A.* FROM PS_DEPOSIT_CONTROL A WHERE CUST_ID = '10433';
--SELECT PROCESS_INSTANCE, A.* FROM PS_PAYMENT A WHERE GROUP_ID = '9926';

SELECT * FROM PS_RP_PARALLEL;

SELECT * FROM PS_CUST_OPTION WHERE CUST_ID = '10433';
SELECT * FROM PS_CUST_DATA WHERE CUST_ID = '10433';
SELECT * FROM PS_SUBCUST_DATA WHERE CUST_ID = '10433';

SELECT * FROM PS_WS_ITEM WHERE CUST_ID = '10433';

--AR2005
--GET-COLLECTED-AMT
SELECT COL.BUSINESS_UNIT, COL.ITEM, COL.ENTRY_CURRENCY, SUM(COL.ENTRY_AMT) COLLECTED_AMT, SUM(COL.ENTRY_AMT_BASE) COLLECTED_AMT_BASE
FROM PS_ITEM_ACTIVITY COL
WHERE COL.BUSINESS_UNIT LIKE '6%' 
    AND COL.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01')
    --AND COL.CUST_ID = '10824'
    --AND COL.ITEM = $Item_ID
GROUP BY COL.BUSINESS_UNIT, COL.ITEM, COL.ENTRY_CURRENCY
ORDER BY 1;

--GET-ITEM_AMT
SELECT DISTINCT IAM.BUSINESS_UNIT, IAM.ITEM, IAM.ENTRY_CURRENCY, SUM(IAM.ENTRY_AMT) ITEM_AMT, SUM(IAM.ENTRY_AMT_BASE) ITEM_AMT_BASE
FROM PS_ITEM_ACTIVITY IAM
WHERE IAM.BUSINESS_UNIT LIKE '6%' 
    AND IAM.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND IAM.CUST_ID = '10824'
    --AND IAM.ITEM = $Item_ID
GROUP BY IAM.BUSINESS_UNIT, IAM.ITEM, IAM.ENTRY_CURRENCY
ORDER BY 1;

--GET-WRITE-OFF
SELECT WOA.BUSINESS_UNIT, WOA.ITEM, WOA.ENTRY_CURRENCY, SUM(WOA.ENTRY_AMT) WRITE_OFF_AMT, SUM(WOA.ENTRY_AMT_BASE) WRITE_OFF_AMT_BASE
FROM PS_ITEM_ACTIVITY WOA
WHERE WOA.BUSINESS_UNIT LIKE '6%' 
    AND WOA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    --AND WOA.CUST_ID = '10685'
    --AND WOA.ITEM = $Item_ID
GROUP BY WOA.BUSINESS_UNIT, WOA.ITEM, WOA.ENTRY_CURRENCY
ORDER BY 1;

--GET-OVERDUE-AMOUNT
SELECT OVR.BUSINESS_UNIT, OVR.ITEM, OVR.ENTRY_CURRENCY, SUM(OVR.ENTRY_AMT) OVERDUE_AMT, SUM(OVR.ENTRY_AMT_BASE) OVERDUE_AMT_BASE
FROM PS_ITEM_ACTIVITY OVR
WHERE OVR.BUSINESS_UNIT LIKE '6%' 
    AND OVR.ENTRY_USE_ID = 'FC-01'
    --AND OVR.CUST_ID = '10685'
    --AND OVR.ITEM = $Item_ID
GROUP BY OVR.BUSINESS_UNIT, OVR.ITEM, OVR.ENTRY_CURRENCY
ORDER BY 1;

--Main Query of AR20005
SELECT DISTINCT ITA.CUST_ID, ITA.BUSINESS_UNIT, ITA.ITEM
--let #Remaining_Amt =  #Net_Rcv_Amt + (#Write_Off_Amt + #Collect_Amt)
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST
WHERE ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    AND ITA.BUSINESS_UNIT LIKE '6%'
    AND DST.CUST_ID IN ('10685')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, ITA.ITEM, ITA.BUSINESS_UNIT
ORDER BY ITA.CUST_ID, ITA.ITEM, ITA.BUSINESS_UNIT;

--Club all the amounts in one CASE Statement and generate output for AR20005
--Experimental Version 1
SELECT X.CUST_ID, X.BUSINESS_UNIT, X.ITEM, 
            SUM(X.ITEM_AMT_BASE) ITEM_AMT_BASE, SUM(X.OVERDUE_AMT_BASE) OVERDUE_AMT_BASE, SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) NET_RCV_AMT_BASE, 
            SUM(X.COLLECTED_AMT_BASE) COLLECTED_AMT_BASE, SUM(X.WRITE_OFF_AMT_BASE) WRITE_OFF_AMT_BASE,
            (SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) + (SUM(X.COLLECTED_AMT_BASE) + SUM(X.WRITE_OFF_AMT_BASE))) REMAINING_AMT_BASE
FROM
(
SELECT DISTINCT ITA.CUST_ID, ITA.BUSINESS_UNIT, ITA.ITEM,
            CASE WHEN ITA.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "ITEM_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01') THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "COLLECTED_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "WRITE_OFF_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID = 'FC-01' THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "OVERDUE_AMT_BASE"
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST
WHERE ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    --AND ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND ITA.BUSINESS_UNIT LIKE '6%'
    --AND DST.CUST_ID IN ('10627')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, ITA.ITEM, ITA.BUSINESS_UNIT, ITA.ENTRY_USE_ID
) X
WHERE X.BUSINESS_UNIT LIKE '6%'
    --AND X.CUST_ID IN ('10627', '10685', '10433', '10824', '10007', '10044', '10006')
    AND X.CUST_ID IN ('10006')
GROUP BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM
ORDER BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM;

--Experimental Version 2
--Add Year from TO_CHAR(ITA.ACCOUNTING_DT, 'YYYY')
--BEWARE - This does not work correctly
SELECT X.CUST_ID, X.BUSINESS_UNIT, X.ITEM, X.ACCTG_YEAR,
            SUM(X.ITEM_AMT_BASE) ITEM_AMT_BASE, SUM(X.OVERDUE_AMT_BASE) OVERDUE_AMT_BASE, SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) NET_RCV_AMT_BASE, 
            SUM(X.COLLECTED_AMT_BASE) COLLECTED_AMT_BASE, SUM(X.WRITE_OFF_AMT_BASE) WRITE_OFF_AMT_BASE,
            (SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) + (SUM(X.COLLECTED_AMT_BASE) + SUM(X.WRITE_OFF_AMT_BASE))) REMAINING_AMT_BASE
FROM
(
SELECT DISTINCT ITA.CUST_ID, ITA.BUSINESS_UNIT, ITA.ITEM, TO_CHAR(ITA.ACCOUNTING_DT, 'YYYY') ACCTG_YEAR,
            CASE WHEN ITA.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "ITEM_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01') THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "COLLECTED_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "WRITE_OFF_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID = 'FC-01' THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "OVERDUE_AMT_BASE"
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST
WHERE ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    --AND ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND ITA.BUSINESS_UNIT LIKE '6%'
    --AND DST.CUST_ID IN ('10627')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, ITA.BUSINESS_UNIT, ITA.ITEM, TO_CHAR(ITA.ACCOUNTING_DT, 'YYYY'), ITA.ENTRY_USE_ID
) X
WHERE X.BUSINESS_UNIT LIKE '6%'
    --AND X.CUST_ID IN ('10627', '10685', '10433', '10824', '10007')
GROUP BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM, X.ACCTG_YEAR
ORDER BY X.CUST_ID, X.ACCTG_YEAR DESC, X.BUSINESS_UNIT, X.ITEM;

--AR20005
--Experimental Version 3
--Included ChartFields
SELECT X.CUST_ID, X.BUSINESS_UNIT, X.ITEM,
            X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.AFFILIATE, X.AFFILIATE_INTRA1, X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID, 
            SUM(X.ITEM_AMT_BASE) ITEM_AMT_BASE, SUM(X.OVERDUE_AMT_BASE) OVERDUE_AMT_BASE, SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) NET_RCV_AMT_BASE, 
            SUM(X.COLLECTED_AMT_BASE) COLLECTED_AMT_BASE, SUM(X.WRITE_OFF_AMT_BASE) WRITE_OFF_AMT_BASE,
            (SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) + (SUM(X.COLLECTED_AMT_BASE) + SUM(X.WRITE_OFF_AMT_BASE))) REMAINING_AMT_BASE
FROM
(
SELECT DISTINCT ITA.CUST_ID, ITA.BUSINESS_UNIT, ITA.ITEM, 
            DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID,
            CASE WHEN ITA.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "ITEM_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01') THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "COLLECTED_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "WRITE_OFF_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID = 'FC-01' THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "OVERDUE_AMT_BASE"
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST
WHERE ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    --AND ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND ITA.BUSINESS_UNIT LIKE '6%'
    --AND DST.CUST_ID IN ('10627')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, ITA.ITEM, ITA.BUSINESS_UNIT, ITA.ENTRY_USE_ID,
               DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID
) X
WHERE X.BUSINESS_UNIT LIKE '6%'
    --AND X.CUST_ID IN ('10627', '10685', '10433', '10824', '10007', '10044', '10006')
    --AND X.CUST_ID IN ('10433')
GROUP BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.AFFILIATE, X.AFFILIATE_INTRA1, X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID
ORDER BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM;

--AR20005
--Experimental Version 4
--Included Customer Description
SELECT X.CUST_ID, X.NAME1, X.NAME2, X.NAMESHORT, X.BUSINESS_UNIT, X.ITEM,
            X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.AFFILIATE, X.AFFILIATE_INTRA1, X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID, 
            SUM(X.ITEM_AMT_BASE) ITEM_AMT_BASE, SUM(X.OVERDUE_AMT_BASE) OVERDUE_AMT_BASE, SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) NET_RCV_AMT_BASE, 
            SUM(X.COLLECTED_AMT_BASE) COLLECTED_AMT_BASE, SUM(X.WRITE_OFF_AMT_BASE) WRITE_OFF_AMT_BASE,
            (SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) + (SUM(X.COLLECTED_AMT_BASE) + SUM(X.WRITE_OFF_AMT_BASE))) REMAINING_AMT_BASE
FROM
(
SELECT DISTINCT ITA.CUST_ID, CUST.NAME1, CUST.NAME2, CUST.NAMESHORT, ITA.BUSINESS_UNIT, ITA.ITEM, 
            DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID,
            CASE WHEN ITA.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "ITEM_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01') THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "COLLECTED_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "WRITE_OFF_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID = 'FC-01' THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "OVERDUE_AMT_BASE"
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST, PS_CUSTOMER CUST
WHERE ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    --AND ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND CUST.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = DST.BUSINESS_UNIT AND G.RECNAME = 'CUSTOMER')
    AND CUST.CUST_ID = DST.CUST_ID
    AND ITA.BUSINESS_UNIT LIKE '6%'
    --AND DST.CUST_ID IN ('10627')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, CUST.NAME1, CUST.NAME2, CUST.NAMESHORT, ITA.ITEM, ITA.BUSINESS_UNIT, ITA.ENTRY_USE_ID,
               DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID
) X
WHERE X.BUSINESS_UNIT LIKE '6%'
    AND X.CUST_ID IN ('10627', '10685', '10433', '10824', '10007', '10044', '10006')
    --AND X.CUST_ID IN ('10433')
GROUP BY X.CUST_ID, X.NAME1, X.NAME2, X.NAMESHORT, X.BUSINESS_UNIT, X.ITEM, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.AFFILIATE, X.AFFILIATE_INTRA1, 
               X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID
ORDER BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM;

--AR20005
--Experimental Version 5
--Included Sponsor Type and its description column
--Make note that not all donors have a Sponsor Type
SELECT X.CUST_ID, X.NAME1, X.NAME2, X.NAMESHORT, X.SPNSR_TYPE, X.DESCR, X.BUSINESS_UNIT, X.ITEM,
            X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, X.AFFILIATE, X.AFFILIATE_INTRA1, X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID, 
            SUM(X.ITEM_AMT_BASE) ITEM_AMT_BASE, SUM(X.OVERDUE_AMT_BASE) OVERDUE_AMT_BASE, SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) NET_RCV_AMT_BASE, 
            SUM(X.COLLECTED_AMT_BASE) COLLECTED_AMT_BASE, SUM(X.WRITE_OFF_AMT_BASE) WRITE_OFF_AMT_BASE,
            (SUM(X.ITEM_AMT_BASE) + SUM(X.OVERDUE_AMT_BASE) + (SUM(X.COLLECTED_AMT_BASE) + SUM(X.WRITE_OFF_AMT_BASE))) REMAINING_AMT_BASE
FROM
(
SELECT DISTINCT ITA.CUST_ID, CUST.NAME1, CUST.NAME2, CUST.NAMESHORT, CUST.SPNSR_TYPE, SPNSR.DESCR, ITA.BUSINESS_UNIT, ITA.ITEM, 
            DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID,
            CASE WHEN ITA.ENTRY_USE_ID NOT IN ('FC-01', 'WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "ITEM_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-01', 'MT-01', 'DM-01') THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "COLLECTED_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID IN ('WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10') 
                     THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "WRITE_OFF_AMT_BASE",
            CASE WHEN ITA.ENTRY_USE_ID = 'FC-01' THEN SUM(ITA.ENTRY_AMT_BASE) ELSE 0 END AS "OVERDUE_AMT_BASE"
FROM PS_ITEM_ACTIVITY ITA, PS_ITEM_DST DST, PS_CUSTOMER CUST, PS_GM_SPNSR_TYPE SPNSR
WHERE ITA.BUSINESS_UNIT = DST.BUSINESS_UNIT
    AND ITA.CUST_ID = DST.CUST_ID
    AND ITA.ITEM = DST.ITEM
    AND ITA.ITEM_LINE = DST.ITEM_LINE
    AND ITA.ITEM_SEQ_NUM = DST.ITEM_SEQ_NUM
    --AND ITA.ENTRY_USE_ID NOT IN ('WS-01', 'MT-01', 'DM-01', 'WS-09', 'WS-10', 'WS-11', 'WS-12', 'MT-02', 'MT-03', 'MT-06', 'MT-07', 'DM-07', 'DM-08', 'DM-09', 'DM-10')
    AND CUST.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = DST.BUSINESS_UNIT AND G.RECNAME = 'CUSTOMER')
    AND CUST.CUST_ID = DST.CUST_ID
    AND (SPNSR.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = DST.BUSINESS_UNIT AND D.RECNAME = 'GM_SPNSR_TYPE') OR SPNSR.SETID IS NULL)
    AND CUST.SPNSR_TYPE = SPNSR.SPNSR_TYPE (+)
    AND ITA.BUSINESS_UNIT LIKE '6%'
    --AND DST.CUST_ID IN ('10627')
    --[$whereclause]
    AND DST.SYSTEM_DEFINED = 'A'
    --[$Where_Write_Off]
GROUP BY ITA.CUST_ID, CUST.NAME1, CUST.NAME2, CUST.NAMESHORT, CUST.SPNSR_TYPE, SPNSR.DESCR, ITA.ITEM, ITA.BUSINESS_UNIT, ITA.ENTRY_USE_ID,
         DST.ACCOUNT, DST.DEPTID, DST.OPERATING_UNIT, DST.FUND_CODE, DST.AFFILIATE, DST.AFFILIATE_INTRA1, DST.AFFILIATE_INTRA2, DST.CHARTFIELD2, DST.PROJECT_ID
) X
WHERE X.BUSINESS_UNIT LIKE '6%'
    --AND X.CUST_ID IN ('10627', '10685', '10433', '10824', '10007', '10044', '10006')
    --AND X.CUST_ID IN ('10433')
GROUP BY X.CUST_ID, X.NAME1, X.NAME2, X.NAMESHORT, X.SPNSR_TYPE, X.DESCR, X.BUSINESS_UNIT, X.ITEM, X.ACCOUNT, X.DEPTID, X.OPERATING_UNIT, X.FUND_CODE, 
               X.AFFILIATE, X.AFFILIATE_INTRA1, X.AFFILIATE_INTRA2, X.CHARTFIELD2, X.PROJECT_ID
ORDER BY X.CUST_ID, X.BUSINESS_UNIT, X.ITEM;

SELECT RECNAME, FIELDNAME, LABEL_ID, LBLTEXT, A.* FROM PSPNLFIELD A WHERE FIELDNAME = 'SPNSR_TYPE' AND RECNAME = 'CUSTOMER';
SELECT RECNAME, FIELDNAME, LABEL_ID, LBLTEXT, A.* FROM PSPNLFIELD A WHERE PNLNAME = 'GM_SPNSR';

SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'CUSTOMER';
SELECT * FROM PS_GM_SPNSR_TYPE WHERE SETID = 'UNUNI';

SELECT SPNSR_TYPE, COUNT(1) FROM PS_CUSTOMER 
WHERE SETID = 'UNUNI'
GROUP BY SPNSR_TYPE
ORDER BY 1;


--AR30006
--Experimental Version 1
--Always run it for Today's Date
--Query has bind variable (:1) of type DATE
SELECT A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.BAL_AMT_BASE, B.MONETARY_AMOUNT, A.BAL_CURRENCY, A.POST_DT, A.DUE_DT, A.ACCOUNTING_DT, A.ASOF_DT, A.DISPUTE_STATUS,
            A.DEDUCTION_STATUS, A.COLLECTION_STATUS, A.DUE_DAYS, A.ENTRY_TYPE, A.ENTRY_REASON, A.PYMNT_TERMS_CD, A.DOCUMENT, C.NAME1, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, B.CURRENCY_CD, B.PRODUCT, B.DST_SEQ_NUM
FROM PS_ITEM A, PS_ITEM_DST B,PS_CUSTOMER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.CUST_ID = C.CUST_ID
    AND B.PRIMARY_LEDGER = 'Y'
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'CUSTOMER' AND SETCNTRLVALUE = A.BUSINESS_UNIT)
    AND B.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') --(USER,CASH,CASH CLEARING)
    AND :1 >= (SELECT MIN(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                              AND BUSINESS_UNIT = A.BUSINESS_UNIT)
    AND NOT EXISTS(SELECT 'X' FROM PS_INSTALLATION WHERE :1 >= (SELECT MAX(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY 
                                                                                                                                                            WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                                                            AND BUSINESS_UNIT = A.BUSINESS_UNIT AND A.ITEM_STATUS = 'C'))
    AND NOT EXISTS(SELECT 'X' FROM PS_ITEM_DST_CF_VW I WHERE I.BUSINESS_UNIT = B.BUSINESS_UNIT AND I.CUST_ID = B.CUST_ID AND I.ITEM = B.ITEM AND I.ITEM_LINE = B.ITEM_LINE)
    AND A.BUSINESS_UNIT LIKE '6%'
    --AND A.CUST_ID IN ('10007', '10005', '10044', '10433', '10002', '10083')
ORDER BY A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM;


--(#item_seq_num > 1) OR (#item_seq_num = 1 and #DST_SEQ_NUM >= 1)
--If the above condition is TRUE, then the item has undergone some transaction like write off, partial payment to reduce the item balance. 
--REMAINING BALANCE is calculated as:

SELECT M.MONETARY_AMOUNT
FROM PS_ITEM_DST M
WHERE M.ITEM = 'APN RUSD 2011-2'
  AND M.ITEM_LINE = 0
  AND M.ITEM_SEQ_NUM = 2
  --AND M.DST_SEQ_NUM = #DST_SEQ_NUM
  AND M.CUST_ID = '10044'
  AND M.BUSINESS_UNIT LIKE '6%'
--  AND M.ACCOUNT = $account
--  AND M.ALTACCT = $altacct
--  AND M.OPERATING_UNIT = $operating_unit
--  AND M.FUND_CODE = $fund_code
--  AND M.DEPTID = $deptid
--  AND M.PROGRAM_CODE = $program_code
--  AND M.CLASS_FLD = $class_fld
--  AND M.BUDGET_REF = $budget_ref
--  AND M.PROJECT_ID = $project_id
--  AND M.CURRENCY_CD = $currency_cd
--  AND M.PRODUCT = $product 
  AND M.PRIMARY_LEDGER = 'Y'
  AND M.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') -- (USER,CASH,CASH CLEARING)
ORDER BY 1;

SELECT * FROM PS_AGING_TBL;
SELECT * FROM PS_AGING_CATEG_TBL;

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'SYSTEM_DEFINED' ORDER BY 1,2;

SELECT * FROM PS_ITEM_DST_CF_VW WHERE BUSINESS_UNIT LIKE '6%';
SELECT A.* FROM PS_ENTRY_TYPE_TBL A WHERE SETID = 'UNUNI';

--Using Oracle PIVOT XML
WITH PIVOT_DATA AS (
SELECT A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.BAL_AMT_BASE, B.MONETARY_AMOUNT, A.BAL_CURRENCY, A.POST_DT, A.DUE_DT, A.ACCOUNTING_DT, A.ASOF_DT, A.DISPUTE_STATUS,
            A.DEDUCTION_STATUS, A.COLLECTION_STATUS, A.DUE_DAYS, A.ENTRY_TYPE, A.ENTRY_REASON, A.PYMNT_TERMS_CD, A.DOCUMENT, C.NAME1, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, B.CURRENCY_CD, B.PRODUCT, B.DST_SEQ_NUM, 'STD' AS AGING_ID
FROM PS_ITEM A, PS_ITEM_DST B,PS_CUSTOMER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.CUST_ID = C.CUST_ID
    AND B.PRIMARY_LEDGER = 'Y'
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'CUSTOMER' AND SETCNTRLVALUE = A.BUSINESS_UNIT)
    AND B.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') --(USER,CASH,CASH CLEARING)
    AND :1 >= (SELECT MIN(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                              AND BUSINESS_UNIT = A.BUSINESS_UNIT)
    AND NOT EXISTS(SELECT 'X' FROM PS_INSTALLATION WHERE :1 >= (SELECT MAX(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY 
                                                                                                                                                            WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                                                            AND BUSINESS_UNIT = A.BUSINESS_UNIT AND A.ITEM_STATUS = 'C'))
    AND NOT EXISTS(SELECT 'X' FROM PS_ITEM_DST_CF_VW I WHERE I.BUSINESS_UNIT = B.BUSINESS_UNIT AND I.CUST_ID = B.CUST_ID AND I.ITEM = B.ITEM AND I.ITEM_LINE = B.ITEM_LINE)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.CUST_ID IN ('10007', '10005', '10044', '10433', '10002'))
--ORDER BY A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM;
SELECT * FROM PIVOT_DATA
PIVOT XML
            (SUM(BAL_AMT_BASE) FOR AGING_ID IN (SELECT DESCR FROM PS_AGING_CATEG_TBL WHERE SETID = 'SHARE' AND AGING_ID = 'STD'))
            ;

--Using Oracle PIVOT
WITH PIVOT_DATA AS (
SELECT A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.BAL_AMT_BASE, B.MONETARY_AMOUNT, A.BAL_CURRENCY, A.POST_DT, A.DUE_DT, A.ACCOUNTING_DT, A.ASOF_DT, A.DISPUTE_STATUS,
            A.DEDUCTION_STATUS, A.COLLECTION_STATUS, A.DUE_DAYS, A.ENTRY_TYPE, A.ENTRY_REASON, A.PYMNT_TERMS_CD, A.DOCUMENT, C.NAME1, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, B.CURRENCY_CD, B.PRODUCT, B.DST_SEQ_NUM, 
            '                                            ' AS DESCR
FROM PS_ITEM A, PS_ITEM_DST B,PS_CUSTOMER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.CUST_ID = C.CUST_ID
    AND B.PRIMARY_LEDGER = 'Y'
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'CUSTOMER' AND SETCNTRLVALUE = A.BUSINESS_UNIT)
    AND B.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') --(USER,CASH,CASH CLEARING)
    AND :1 >= (SELECT MIN(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                              AND BUSINESS_UNIT = A.BUSINESS_UNIT)
    AND NOT EXISTS(SELECT 'X' FROM PS_INSTALLATION WHERE :1 >= (SELECT MAX(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY 
                                                                                                                                                            WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                                                            AND BUSINESS_UNIT = A.BUSINESS_UNIT AND A.ITEM_STATUS = 'C'))
    AND NOT EXISTS(SELECT 'X' FROM PS_ITEM_DST_CF_VW I WHERE I.BUSINESS_UNIT = B.BUSINESS_UNIT AND I.CUST_ID = B.CUST_ID AND I.ITEM = B.ITEM AND I.ITEM_LINE = B.ITEM_LINE)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.CUST_ID IN ('10007', '10005', '10044', '10433', '10002'))
--ORDER BY A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM;
SELECT * FROM PIVOT_DATA
PIVOT (SUM(BAL_AMT_BASE) FOR (DESCR) IN ('Current', '3-6_Months_Past_Due', '6-12_Months_Past_Due', '1-2_Years_Past_Due', '2-3_Years_Past_Due', 'Over_3_Years_Past_Due'))
ORDER BY 1,2;

--Need to ensure that the column specified in PIVOT FOR Clause is mentioned in the initial select
SELECT * FROM (
SELECT A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.BAL_AMT_BASE, B.MONETARY_AMOUNT, A.BAL_CURRENCY, A.POST_DT, A.DUE_DT, A.ACCOUNTING_DT, A.ASOF_DT, A.DISPUTE_STATUS,
            A.DEDUCTION_STATUS, A.COLLECTION_STATUS, A.DUE_DAYS, A.ENTRY_TYPE, A.ENTRY_REASON, A.PYMNT_TERMS_CD, A.DOCUMENT, C.NAME1, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, B.CURRENCY_CD, B.PRODUCT, B.DST_SEQ_NUM, 
            'Current' AS DESCR
FROM PS_ITEM A, PS_ITEM_DST B,PS_CUSTOMER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.CUST_ID = C.CUST_ID
    AND B.PRIMARY_LEDGER = 'Y'
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'CUSTOMER' AND SETCNTRLVALUE = A.BUSINESS_UNIT)
    AND B.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') --(USER,CASH,CASH CLEARING)
    AND :1 >= (SELECT MIN(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                               AND BUSINESS_UNIT = A.BUSINESS_UNIT)
    AND NOT EXISTS(SELECT 'X' FROM PS_INSTALLATION WHERE :1 >= (SELECT MAX(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY 
                                                                                                                                                          WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                                                          AND BUSINESS_UNIT = A.BUSINESS_UNIT AND A.ITEM_STATUS = 'C'))
    AND NOT EXISTS(SELECT 'X' FROM PS_ITEM_DST_CF_VW I WHERE I.BUSINESS_UNIT = B.BUSINESS_UNIT AND I.CUST_ID = B.CUST_ID AND I.ITEM = B.ITEM AND I.ITEM_LINE = B.ITEM_LINE)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.CUST_ID IN ('10007', '10005', '10044', '10433', '10002'))
PIVOT (SUM(BAL_AMT_BASE) FOR (DESCR) IN ('Current'))
ORDER BY 1,2;

--Made some progress, but still need to iron out few issues
SELECT * FROM
(
SELECT A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.BAL_AMT_BASE, B.MONETARY_AMOUNT, A.BAL_CURRENCY, A.POST_DT, A.DUE_DT, A.ACCOUNTING_DT, A.ASOF_DT, A.DISPUTE_STATUS,
            A.DEDUCTION_STATUS, A.COLLECTION_STATUS, A.DUE_DAYS, A.ENTRY_TYPE, A.ENTRY_REASON, A.PYMNT_TERMS_CD, A.DOCUMENT, C.NAME1, 
            B.ACCOUNT, B.OPERATING_UNIT, B.FUND_CODE, B.DEPTID, B.CHARTFIELD2, B.PROJECT_ID, B.ACTIVITY_ID, B.CURRENCY_CD, B.PRODUCT, B.DST_SEQ_NUM, 
            AG.AGING_CATEGORY, AG.DESCR
FROM PS_ITEM A, PS_ITEM_DST B, PS_CUSTOMER C, PS_AGING_CATEG_TBL AG
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.CUST_ID = C.CUST_ID
    AND B.PRIMARY_LEDGER = 'Y'
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE RECNAME = 'CUSTOMER' AND SETCNTRLVALUE = A.BUSINESS_UNIT)
    AND B.SYSTEM_DEFINED NOT IN ('U', 'C', 'L', 'I', 'H', 'Y') --(USER,CASH,CASH CLEARING)
    AND :1 >= (SELECT MIN(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                               AND BUSINESS_UNIT = A.BUSINESS_UNIT)
    AND NOT EXISTS(SELECT 'X' FROM PS_INSTALLATION WHERE :1 >= (SELECT MAX(ACCOUNTING_DT) FROM PS_ITEM_ACTIVITY 
                                                                                                                                                          WHERE ITEM = A.ITEM AND ITEM_LINE = A.ITEM_LINE AND CUST_ID = A.CUST_ID 
                                                                                                                                                          AND BUSINESS_UNIT = A.BUSINESS_UNIT AND A.ITEM_STATUS = 'C'))
    AND NOT EXISTS(SELECT 'X' FROM PS_ITEM_DST_CF_VW I WHERE I.BUSINESS_UNIT = B.BUSINESS_UNIT AND I.CUST_ID = B.CUST_ID AND I.ITEM = B.ITEM AND I.ITEM_LINE = B.ITEM_LINE)
    AND AG.SETID= (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = A.BUSINESS_UNIT AND G.RECNAME = 'AGING_CATEG_TBL')
    AND AG.AGING_ID = 'STD'
    AND AG.EFFDT = (SELECT MAX(AG_ED.EFFDT) FROM PS_AGING_CATEG_TBL AG_ED WHERE AG.SETID = AG_ED.SETID AND AG.AGING_ID = AG_ED.AGING_ID AND AG_ED.EFFDT <= SYSDATE)
    AND (TRUNC(SYSDATE) - A.ASOF_DT) BETWEEN AG.START_DAY AND AG.END_DAY
    --DO NOT FILTER ON DST_SEQ_NUM, try and use PS delivered logic
    --AND DST_SEQ_NUM = 102
    AND B.SYSTEM_DEFINED = 'A' --(It will pick up one row each for Billing, AR Payment and AR Maintenance, if they exist)
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.CUST_ID IN ('10007', '10005', '10044', '10433', '10002', '10006', '10198', '10206'))
--ORDER BY 1,2, AG.AGING_CATEGORY;
PIVOT XML (SUM(BAL_AMT_BASE) FOR (DESCR) IN (SELECT DESCR FROM PS_AGING_CATEG_TBL WHERE SETID = 'SHARE' AND AGING_ID = 'STD'))
ORDER BY 1,2;

SELECT M.MONETARY_AMOUNT, M.* FROM PS_ITEM_DST M
WHERE M.ITEM = 'BMBF  VIE 2011'
    AND M.ITEM_LINE = 0
    AND M.ITEM_SEQ_NUM IN (1,2, 3)
    --AND M.DST_SEQ_NUM = #DST_SEQ_NUM
    AND M.CUST_ID = '10006'
    AND M.BUSINESS_UNIT = '614UU'
    AND M.ACCOUNT = '51005'
    --AND M.ALTACCT = $altacct
    AND M.OPERATING_UNIT = '600'
    AND M.FUND_CODE = '02000'
    AND M.DEPTID = '10501'
    --AND M.PROGRAM_CODE = $program_code
    --AND M.CLASS_FLD = $class_fld
    --AND M.BUDGET_REF = $budget_ref
    AND M.PROJECT_ID = '00064146'
    AND M.CURRENCY_CD = 'USD'
    --AND M.PRODUCT = $product 
    AND M.PRIMARY_LEDGER = 'Y'
    AND M.SYSTEM_DEFINED NOT IN ('U','C','L','I','H','Y')
ORDER BY ITEM_SEQ_NUM, DST_SEQ_NUM;

--Contracts Reversal Issue
SELECT * FROM PS_BI_ACCT_HDR_STG WHERE BUSINESS_UNIT_GL = ' ';
SELECT * FROM PS_BI_ACCT_LN_STG WHERE BUSINESS_UNIT_GL = ' ';
--BIPRELD
SELECT ACCOUNTING_DT, BUDGET_HDR_STATUS, A.* FROM PS_BI_ACCT_ENTRY A WHERE BUSINESS_UNIT_GL = ' ';

--Check BI Header Staging Table
--Version 1
SELECT BIHS.BUSINESS_UNIT, BUSINESS_UNIT_GL, BIHS.CF_INHERIT_OPT, BIHS.GL_LVL, BIHS.AR_LVL, BIHS.AR_DST_OPT, BIHS.BI_PRELD_STAT, BIHS.ERROR_STATUS_BI, COUNT(1) 
FROM PS_BI_ACCT_HDR_STG BIHS
GROUP BY BIHS.BUSINESS_UNIT, BUSINESS_UNIT_GL, BIHS.CF_INHERIT_OPT, BIHS.GL_LVL, BIHS.AR_LVL, BIHS.AR_DST_OPT, BIHS.BI_PRELD_STAT, BIHS.ERROR_STATUS_BI
ORDER BY BIHS.BUSINESS_UNIT, BUSINESS_UNIT_GL;

--Version 2
--Includes XLAT
SELECT BIHS.BUSINESS_UNIT, BIHS.BUSINESS_UNIT_GL, BIHS.CF_INHERIT_OPT, X2.XLATLONGNAME AS CF_INHERIT_DESC, BIHS.GL_LVL, X3.XLATLONGNAME AS GL_LVL_DESC, 
            BIHS.AR_LVL, X4.XLATLONGNAME AS AR_LVL_DESC, BIHS.AR_DST_OPT, X5.XLATLONGNAME AS AR_DIST_OPT_DESC, BIHS.BI_PRELD_STAT, X6.XLATLONGNAME AS BI_PRELOAD_STS, 
            BIHS.ERROR_STATUS_BI, X1.XLATLONGNAME AS ERROR_STATUS_BI_DESC, COUNT(1) 
FROM ((((((PS_BI_ACCT_HDR_STG BIHS LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'ERROR_STATUS_BI' AND X1.FIELDVALUE = BIHS.ERROR_STATUS_BI)
           LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'CF_INHERIT_OPT' AND X2.FIELDVALUE = BIHS.CF_INHERIT_OPT)
           LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'GL_LVL' AND X3.FIELDVALUE = BIHS.GL_LVL)
           LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'AR_LVL' AND X4.FIELDVALUE = BIHS.AR_LVL)
           LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'AR_DST_OPT' AND X5.FIELDVALUE = BIHS.AR_DST_OPT)
           LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'BI_PRELD_STAT' AND X6.FIELDVALUE = BIHS.BI_PRELD_STAT)
GROUP BY BIHS.BUSINESS_UNIT, BIHS.BUSINESS_UNIT_GL, BIHS.CF_INHERIT_OPT, X2.XLATLONGNAME, BIHS.GL_LVL, X3.XLATLONGNAME, BIHS.AR_LVL, X4.XLATLONGNAME, 
               BIHS.AR_DST_OPT, X5.XLATLONGNAME, BIHS.BI_PRELD_STAT, X6.XLATLONGNAME, BIHS.ERROR_STATUS_BI, X1.XLATLONGNAME
ORDER BY BIHS.BUSINESS_UNIT, BIHS.BUSINESS_UNIT_GL;

--Check BI Line Staging Table
--It seems the system does not populate the GL BU for invoices (originated from Contract Reversals) in the BI Accounting Entry Staging Table
--Version 1 
SELECT BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI, COUNT(1) 
FROM PS_BI_ACCT_LN_STG BISTG 
GROUP BY BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI
ORDER BY BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI;

--Version 2 with XLAT
SELECT BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME, COUNT(1) 
FROM (PS_BI_ACCT_LN_STG BISTG LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'ERROR_STATUS_BI' AND X1.FIELDVALUE = BISTG.ERROR_STATUS_BI) 
GROUP BY BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME
ORDER BY BISTG.BUSINESS_UNIT, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME;

--Version 3
--Included ACCT_ENTRY_TYPE
SELECT BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, BISTG.ERROR_STATUS_BI, COUNT(1) 
FROM PS_BI_ACCT_LN_STG BISTG 
GROUP BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, BISTG.ERROR_STATUS_BI
ORDER BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, BISTG.ERROR_STATUS_BI;

--Version 4
--Included XLAT
--Use this for XLS generation
SELECT BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME AS ACCT_ENTRY_DESC, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME AS ERROR_STATUS_BI_DESC, COUNT(1) 
FROM ((PS_BI_ACCT_LN_STG BISTG LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'ERROR_STATUS_BI' AND X1.FIELDVALUE = BISTG.ERROR_STATUS_BI)
           LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'ACCT_ENTRY_TYPE' AND X2.FIELDVALUE = BISTG.ACCT_ENTRY_TYPE)
GROUP BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME
ORDER BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME;

--Version 5
--Added BI_PRELD_STAT
SELECT BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME AS ACCT_ENTRY_DESC, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME AS ERROR_STATUS_BI_DESC, 
            BISTG.BI_PRELD_STAT, X3.XLATLONGNAME AS BI_PRLOAD_STATUS, COUNT(1) 
FROM (((PS_BI_ACCT_LN_STG BISTG LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'ERROR_STATUS_BI' AND X1.FIELDVALUE = BISTG.ERROR_STATUS_BI)
           LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'ACCT_ENTRY_TYPE' AND X2.FIELDVALUE = BISTG.ACCT_ENTRY_TYPE)
           LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'BI_PRELD_STAT' AND X3.FIELDVALUE = BISTG.BI_PRELD_STAT)
--WHERE BISTG.BUSINESS_UNIT = 'UNUNI'
GROUP BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME, BISTG.BI_PRELD_STAT, X3.XLATLONGNAME
ORDER BY BISTG.BUSINESS_UNIT, BISTG.ACCT_ENTRY_TYPE, X2.XLATLONGNAME, BISTG.ERROR_STATUS_BI, X1.XLATLONGNAME; 

--Billing Delete Data should be run to avoid performance issues
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'BIDELDATA';

--Billing Monitoring
--Monitor Invoices in BI_HDR where PRELOAD_IND = '3'
--Billing > Maintain Bills > Correct Staged Acctg Errors
SELECT BUSINESS_UNIT, --INVOICE, 
            COUNT(1)
FROM PS_BI_HDR
WHERE BUSINESS_UNIT = 'UNUNI'
    AND PRELOAD_IND = '3'
GROUP BY BUSINESS_UNIT--, INVOICE
ORDER BY BUSINESS_UNIT;--, INVOICE;

--COMBO Edit Error Check
SELECT * FROM PS_COMBO_EDIT_TMPL;
--Combo Template for Billing
SELECT * FROM PS_TSE_BICOMBO_FLD WHERE TO_CHAR(ACCOUNTING_DT, 'YYYY') > '2013';
SELECT * FROM PS_TSE_BICOMBO_FLD WHERE BUSINESS_UNIT = 'UNUNI' ORDER BY TSE_PROC_INSTANCE DESC;
--Voucher Edit Template
SELECT * FROM PS_TSE_ACCTLN_FLD WHERE BUSINESS_UNIT LIKE '6%';
--Combo Template for Journals
SELECT * FROM PS_TSE_JLNE_FLD WHERE BUSINESS_UNIT = 'UNUNI';
--AR Combo Edit Template
SELECT * FROM PS_TSE_AR_LN_FLD WHERE (GROUP_BU LIKE '6%' OR BUSINESS_UNIT LIKE '6%') ORDER BY TSE_PROC_INSTANCE DESC;
--Budgets CC Combo Edit Template
SELECT * FROM PS_TSE_BD_KK_FLD WHERE BUSINESS_UNIT = 'UNUNI' ORDER BY TSE_PROC_INSTANCE DESC;
--Template for F&A Accounting
SELECT * FROM PS_TSE_GM_LINE_FLD WHERE BUSINESS_UNIT = 'UNUNI' ORDER BY TSE_PROC_INSTANCE DESC;
--Purchase Order Batch Creation
SELECT * FROM PS_TSE_PO_LN_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC;
--Template for Projects Acctg
SELECT * FROM PS_TSE_PC_LINE_FLD WHERE BUSINESS_UNIT = 'UNUNI' ORDER BY TSE_PROC_INSTANCE DESC;
--Projects Interface Template
SELECT * FROM PS_TSE_PC_LINE_FLD WHERE BUSINESS_UNIT = 'UNUNI' ORDER BY TSE_PROC_INSTANCE DESC;
--Contract Transactions
SELECT * FROM PS_TSE_CA_LINE_FLD ORDER BY TSE_PROC_INSTANCE DESC;
--Requisition Batch Creation
SELECT * FROM PS_TSE_REQ_LN_FLD ORDER BY TSE_PROC_INSTANCE DESC;

--Copying Documents for VOUCHER
--This is for PURCHASE ORDER ONLY aka POOL
SELECT AUTH_CPY_MTCH_PO, A.* FROM PS_OPR_DEF_TBL_AP A WHERE OPRID = 'prakash.prashant';

--VCHR_PO_HDR_VW1
SELECT A.VENDOR_SETID, B.VENDOR_ID, A.BUSINESS_UNIT, A.PO_ID, A.PO_DT, B.VENDOR_NAME_SHORT, B.NAME1, SUM(C.MERCHANDISE_AMT), A.CURRENCY_CD 
FROM PS_PO_HDR_FS A, PS_VENDOR B, PS_PO_LINE_SHIP_FS C 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID 
    AND ((A.PO_STATUS = 'D') OR ((A.CHNG_ORD_BATCH > 0) AND A.PO_STATUS ='D')) 
    AND A.ERS_ACTION = 'N' 
    AND A.MATCH_STATUS_PO IN ('T','P','N') 
    AND A.IN_PROCESS_FLG = 'N' 
    AND A.MID_ROLL_STATUS = 'N' 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.PO_ID = C.PO_ID 
    AND C.MATCH_STATUS_LN_PO IN ('N', 'P') 
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_HDR_STS_NP = 'V' 
    AND A.CC_USE_FLAG IN ('N',' ')
    AND A.BUSINESS_UNIT = '611UU'
    AND A.PO_ID = '0000004506' 
    AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS E WHERE E.BUSINESS_UNIT = C.BUSINESS_UNIT AND E.PO_ID = C.PO_ID AND E.LINE_NBR = C.LINE_NBR AND E.DST_ACCT_TYPE = 'DST' 
                                                                                          AND E.KK_CLOSE_FLAG <> 'Y') 
GROUP BY A.VENDOR_SETID, B.VENDOR_NAME_SHORT, B.VENDOR_ID, B.NAME1, A.BUSINESS_UNIT, A.PO_ID, A.PO_DT, A.CURRENCY_CD
ORDER BY 1,2;

SELECT PO_STATUS, CHNG_ORD_BATCH, ERS_ACTION, MATCH_STATUS_PO, IN_PROCESS_FLG, MID_ROLL_STATUS, BUDGET_HDR_STATUS, BUDGET_HDR_STS_NP, A.* 
FROM PS_PO_HDR_FS A WHERE A.BUSINESS_UNIT = '611UU' AND A.PO_ID = '0000004506';

SELECT MATCH_STATUS_LN_PO, A.* FROM PS_PO_LINE_SHIP_FS A WHERE A.BUSINESS_UNIT = '611UU' AND A.PO_ID = '0000004506';

SELECT KK_CLOSE_FLAG, DST_ACCT_TYPE, A.* FROM PS_PO_LINE_DIST_FS A WHERE A.BUSINESS_UNIT = '611UU' AND A.PO_ID = '0000004506';

--VCHR_PO_LN_VW
--Reference to 3 SUBREC's have been removed
--Version 1
SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, B.ITM_SETID, B.INV_ITEM_ID, SUBSTR(B.DESCR254_MIXED, 1, 30) DESCR, B.UNIT_OF_MEASURE, C.PRICE_PO AS UNIT_PRICE, 
            (C.MERCHANDISE_AMT - D.AMT_MATCHED) MERCHANDISE_AMT, (C.QTY_PO - D.QTY_MATCHED) AS QTY_VCHR, (C.QTY_PO - D.QTY_MATCHED) AS QTY_PO, B.UNIT_OF_MEASURE AS UOM_PO, 
            C.PRICE_PO, C.UNIT_PRC_TOL, C.PCT_UNIT_PRC_TOL, C.EXT_PRC_TOL, C.PCT_EXT_PRC_TOL, C.MATCH_LINE_OPT, B.WTHD_CD, B.WTHD_SW, C.DISTRIB_MTHD_FLG, 
            A.CURRENCY_CD AS TXN_CURRENCY_CD, C.SHIPTO_ID, C.SUT_BASE_ID, C.TAX_CD_SUT, 
            C.SUT_EXCPTN_TYPE, C.SUT_EXCPTN_CERTIF, C.SUT_APPLICABILITY, C.VAT_APPLICABILITY, C.TAX_CD_VAT, C.VAT_TXN_TYPE_CD, C.VAT_USE_ID, C.FREIGHT_TERMS, C.ULTIMATE_USE_CD, 
            B.PHYSICAL_NATURE, C.VAT_RCRD_INPT_FLG, C.VAT_RCRD_OUTPT_FLG, C.VAT_DCLRTN_POINT, C.VAT_CALC_GROSS_NET, C.VAT_CALC_FRGHT_FLG, C.VAT_CALC_MISC_FLG,  
            C.VAT_RECALC_FLG, C.VAT_TREATMENT_GRP, C.VAT_EXCPTN_TYPE, C.VAT_EXCPTN_CERTIF, C.COUNTRY_SHIP_TO, C.COUNTRY_SHIP_FROM, C.COUNTRY_VAT_BILLTO, 
            C.COUNTRY_VAT_BILLFR, C.COUNTRY_VAT_PERFRM, C.COUNTRY_LOC_BUYER, C.COUNTRY_LOC_SELLER, C.COUNTRY_VAT_SUPPLY, C.STATE_LOC_BUYER, C.STATE_LOC_SELLER, 
            C.STATE_SHIP_FROM, C.STATE_SHIP_TO, C.STATE_VAT_DEFAULT, C.STATE_VAT_PERFRM, C.STATE_VAT_SUPPLY, C.VAT_RGSTRN_SELLER, C.VAT_CALC_TYPE, C.VAT_ROUND_RULE, 
            A.VENDOR_ID, A.VNDR_LOC, C.TAX_VAT_FLG, C.TAX_FRGHT_FLG, C.TAX_MISC_FLG, B.CATEGORY_ID, C.SHIP_TYPE_ID, C.VAT_TREATMENT, C.VAT_SVC_SUPPLY_FLG, C.VAT_SERVICE_TYPE, 
            B.CNTRCT_ID, B.ITM_ID_VNDR, B.MFG_ITM_ID, B.AMT_ONLY_FLG, B.RECV_REQ, A.MATCH_CNTRL_ID 
FROM PS_PO_HDR_FS A, PS_PO_LINE_FS B, PS_PO_LINE_SHIP_FS C, PS_PO_LN_SHIP_MTCH D 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID 
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND B.PO_ID = C.PO_ID 
    AND B.LINE_NBR = C.LINE_NBR 
    AND A.IN_PROCESS_FLG = 'N' 
    AND ((A.PO_STATUS IN ('D','X','PX')) OR ((A.CHNG_ORD_BATCH > 0) AND (A.PO_STATUS IN ('D','X','PX'))) OR (A.PO_STATUS = 'C')) 
    AND (A.ERS_ACTION = 'N' OR A.ERS_ACTION = ' ') 
    AND A.MATCH_STATUS_PO IN ('N','P','T') 
    AND C.MATCH_STATUS_LN_PO IN ('N','P') 
    AND C.CANCEL_STATUS <> 'X' 
    AND B.CANCEL_STATUS <> 'X' 
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND C.PO_ID = D.PO_ID 
    AND C.LINE_NBR = D.LINE_NBR 
    AND C.SCHED_NBR = D.SCHED_NBR 
    AND B.CANCEL_STATUS <> 'X' 
    AND C.CANCEL_STATUS <> 'X' 
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_HDR_STS_NP = 'V'
    AND A.BUSINESS_UNIT = '611UU'
    AND A.PO_ID = '0000004506' 
    AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS WHERE BUSINESS_UNIT = C.BUSINESS_UNIT AND PO_ID = C.PO_ID AND LINE_NBR = C.LINE_NBR AND DST_ACCT_TYPE = 'DST' 
                                                                                        AND KK_CLOSE_FLAG <> 'Y')
ORDER BY 1,2;

--Version 2
--Find all those POs which can/should be copied to Vouchers
SELECT A.BUSINESS_UNIT, A.PO_ID, B.LINE_NBR, C.SCHED_NBR, A.CHNG_ORD_BATCH, A.PO_STATUS, A.PO_DT, A.ENTERED_DT, A.OPRID_ENTERED_BY, A.OPRID_APPROVED_BY, A.APPROVAL_DT, 
            A.ACCOUNTING_DT, A.ACTIVITY_DATE, A.RATE_DATE, B.ITM_SETID, B.INV_ITEM_ID, SUBSTR(B.DESCR254_MIXED, 1, 30) DESCR, B.UNIT_OF_MEASURE, C.PRICE_PO AS UNIT_PRICE, 
            B.AMT_ONLY_FLG, B.RECV_REQ, B.CANCEL_STATUS AS PO_LINE_STS, B.CHNG_ORD_SEQ, C.CANCEL_STATUS AS PO_LINE_SHIP_STS, 
            (C.MERCHANDISE_AMT - D.AMT_MATCHED) REMAINING_MERCH_AMT, (C.QTY_PO - D.QTY_MATCHED) AS REMAINING_QTY_VCHR, (C.QTY_PO - D.QTY_MATCHED) AS REMAINING_QTY_PO, 
            C.QTY_PO AS ORDERED_QTY_PO, C.MERCH_AMT_BSE AS ORDERED_PO_AMT_BASE, B.UNIT_OF_MEASURE AS UOM_PO, C.MATCH_STATUS_LN_PO, D.QTY_MATCHED, D.AMT_MATCHED,
            C.PRICE_PO, C.UNIT_PRC_TOL, C.PCT_UNIT_PRC_TOL, C.EXT_PRC_TOL, C.PCT_EXT_PRC_TOL, C.MATCH_LINE_OPT, B.WTHD_CD, B.WTHD_SW, C.DISTRIB_MTHD_FLG, 
            A.CURRENCY_CD AS TXN_CURRENCY_CD, C.SHIPTO_ID, C.SUT_BASE_ID, C.TAX_CD_SUT, 
            C.SUT_EXCPTN_TYPE, C.SUT_EXCPTN_CERTIF, C.SUT_APPLICABILITY, C.VAT_APPLICABILITY, C.TAX_CD_VAT, C.VAT_TXN_TYPE_CD, C.VAT_USE_ID, C.FREIGHT_TERMS, C.ULTIMATE_USE_CD, 
            B.PHYSICAL_NATURE, C.VAT_RCRD_INPT_FLG, C.VAT_RCRD_OUTPT_FLG, C.VAT_DCLRTN_POINT, C.VAT_CALC_GROSS_NET, C.VAT_CALC_FRGHT_FLG, C.VAT_CALC_MISC_FLG,  
            C.VAT_RECALC_FLG, C.VAT_TREATMENT_GRP, C.VAT_EXCPTN_TYPE, C.VAT_EXCPTN_CERTIF, C.COUNTRY_SHIP_TO, C.COUNTRY_SHIP_FROM, C.COUNTRY_VAT_BILLTO, 
            C.COUNTRY_VAT_BILLFR, C.COUNTRY_VAT_PERFRM, C.COUNTRY_LOC_BUYER, C.COUNTRY_LOC_SELLER, C.COUNTRY_VAT_SUPPLY, C.STATE_LOC_BUYER, C.STATE_LOC_SELLER, 
            C.STATE_SHIP_FROM, C.STATE_SHIP_TO, C.STATE_VAT_DEFAULT, C.STATE_VAT_PERFRM, C.STATE_VAT_SUPPLY, C.VAT_RGSTRN_SELLER, C.VAT_CALC_TYPE, C.VAT_ROUND_RULE, 
            A.VENDOR_ID, VEN.NAME1, A.VNDR_LOC, 
            C.TAX_VAT_FLG, C.TAX_FRGHT_FLG, C.TAX_MISC_FLG, B.CATEGORY_ID, C.SHIP_TYPE_ID, C.VAT_TREATMENT, C.VAT_SVC_SUPPLY_FLG, C.VAT_SERVICE_TYPE, 
            B.CNTRCT_ID, B.ITM_ID_VNDR, B.MFG_ITM_ID, A.MATCH_CNTRL_ID 
FROM PS_PO_HDR_FS A, PS_PO_LINE_FS B, PS_PO_LINE_SHIP_FS C, PS_PO_LN_SHIP_MTCH D, PS_VENDOR VEN 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.PO_ID = B.PO_ID 
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND B.PO_ID = C.PO_ID 
    AND B.LINE_NBR = C.LINE_NBR 
    AND A.IN_PROCESS_FLG = 'N' 
    AND ((A.PO_STATUS IN ('D','X','PX')) OR ((A.CHNG_ORD_BATCH > 0) AND (A.PO_STATUS IN ('D','X','PX'))) OR (A.PO_STATUS = 'C')) 
    AND (A.ERS_ACTION = 'N' OR A.ERS_ACTION = ' ') 
    AND A.MATCH_STATUS_PO IN ('N','P','T') 
    AND C.MATCH_STATUS_LN_PO IN ('N','P') 
    AND C.CANCEL_STATUS <> 'X' 
    AND B.CANCEL_STATUS <> 'X' 
    AND C.BUSINESS_UNIT = D.BUSINESS_UNIT 
    AND C.PO_ID = D.PO_ID 
    AND C.LINE_NBR = D.LINE_NBR 
    AND C.SCHED_NBR = D.SCHED_NBR 
    AND B.CANCEL_STATUS <> 'X' 
    AND C.CANCEL_STATUS <> 'X' 
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_HDR_STS_NP = 'V'
    AND A.VENDOR_SETID = VEN.SETID
    AND A.VENDOR_ID = VEN.VENDOR_ID
    --AND A.BUSINESS_UNIT = '600UU'
    --AND A.PO_ID IN ('0000007039', '0000007020')
    AND A.BUSINESS_UNIT LIKE '6%' 
    AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS WHERE BUSINESS_UNIT = C.BUSINESS_UNIT AND PO_ID = C.PO_ID AND LINE_NBR = C.LINE_NBR AND DST_ACCT_TYPE = 'DST' 
                                                                                        AND KK_CLOSE_FLAG <> 'Y')
ORDER BY 1,2,3,4;

SELECT * FROM PS_PO_LN_SHIP_MTCH WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000007039', '0000007020', '0000007142', '0000006192');
SELECT * FROM PS_PO_LINE_FS WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000007039', '0000007020', '0000007142', '0000006192');
SELECT * FROM PS_PO_LINE_SHIP_FS WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000007039', '0000007020', '0000007142', '0000006192');
SELECT * FROM PS_PO_HDR_FS WHERE BUSINESS_UNIT = '600UU' AND PO_ID IN ('0000007039', '0000007020', '0000007142', '0000006192');

--get_recv_lines
--Copy PO/Receipt to Voucher
--VCHR_RECV_LN_VW
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, E.ITM_SETID, C.INV_ITEM_ID, 
           SUBSTR(C.DESCR254_MIXED,1,30) AS DESCR, C.RECEIPT_UM AS UOM, C.PRICE_PO AS UNIT_PRICE, 
           (C.QTY_SH_ACCPT_VUOM - F.QTY_MATCHED) AS QTY_VCHR, (C.MERCHANDISE_AMT - F.AMT_MATCHED) AS MERCHANDISE_AMT, D.PRICE_PO, E.UNIT_OF_MEASURE, 
           D.UNIT_PRC_TOL, D.PCT_UNIT_PRC_TOL, D.EXT_PRC_TOL, D.PCT_EXT_PRC_TOL, D.MATCH_LINE_OPT, C.RECEIPT_UM AS UOM_RECV, 
           (C.QTY_SH_ACCPT_VUOM - F.QTY_MATCHED) AS QTY_SH_ACCPT_VUOM, E.WTHD_CD, E.WTHD_SW, 
           D.DISTRIB_MTHD_FLG, C.CURRENCY_CD, C.RECV_SHIP_STATUS AS RECV_LN_STATUS, C.RECV_SHIP_STATUS, C.SHIPTO_ID, 
           D.VAT_USE_ID, D.VAT_TXN_TYPE_CD, D.TAX_CD_VAT, D.VAT_APPLICABILITY, D.SUT_APPLICABILITY, D.TAX_CD_SUT, D.SUT_EXCPTN_CERTIF, D.SUT_EXCPTN_TYPE, D.ULTIMATE_USE_CD, 
           E.PHYSICAL_NATURE, D.VAT_RCRD_INPT_FLG, D.VAT_RCRD_OUTPT_FLG, D.VAT_DCLRTN_POINT, D.VAT_CALC_GROSS_NET, D.VAT_CALC_FRGHT_FLG, D.VAT_CALC_MISC_FLG, 
           D.VAT_RECALC_FLG, D.VAT_TREATMENT_GRP, D.VAT_EXCPTN_TYPE, 
           D.VAT_EXCPTN_CERTIF, D.COUNTRY_SHIP_TO, D.COUNTRY_SHIP_FROM, D.COUNTRY_VAT_BILLTO, D.COUNTRY_VAT_BILLFR, D.COUNTRY_VAT_PERFRM, D.COUNTRY_LOC_BUYER, 
           D.COUNTRY_LOC_SELLER, D.COUNTRY_VAT_SUPPLY, D.STATE_LOC_BUYER, D.STATE_LOC_SELLER, D.STATE_SHIP_FROM, D.STATE_SHIP_TO, D.STATE_VAT_DEFAULT, D.STATE_VAT_PERFRM, 
           D.STATE_VAT_SUPPLY, D.VAT_RGSTRN_SELLER, D.VAT_CALC_TYPE, D.VAT_ROUND_RULE, A.RECEIPT_DT, A.VENDOR_ID, A.VNDR_LOC, D.SUT_BASE_ID, D.TAX_VAT_FLG, D.TAX_FRGHT_FLG, 
           D.TAX_MISC_FLG, E.CATEGORY_ID, D.FREIGHT_TERMS, D.SHIP_TYPE_ID, D.VAT_TREATMENT, D.VAT_SVC_SUPPLY_FLG, D.VAT_SERVICE_TYPE, C.BILL_OF_LADING, C.PRO_NUMBER, 
           C.PACKSLIP_NO, E.CNTRCT_ID, C.ITM_ID_VNDR, C.MFG_ITM_ID, C.AMT_ONLY_FLG, A.MATCH_CNTRL_ID, C.MERCHANDISE_AMT_PO, C.RECV_LN_MATCH_OPT 
FROM PS_RECV_HDR_FS A, PS_RECV_LN_SHIP_FS C, PS_PO_LINE_FS E, PS_PO_LINE_SHIP_FS D, PS_RECV_LN_SHP_MTH F, PS_PO_HDR_FS G 
 WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT 
     AND A.RECEIVER_ID = C.RECEIVER_ID 
     AND A.IN_PROCESS_FLG = 'N' 
     AND (A.ERS_FLAG = 'N' OR A.ERS_FLAG = ' ') 
     AND C.RECV_SHIP_STATUS IN ('R','O','M','C') 
     AND C.RECV_LN_MATCH_OPT IN ('N', 'P') 
     AND C.BUSINESS_UNIT_PO = E.BUSINESS_UNIT 
     AND C.PO_ID = E.PO_ID 
     AND C.LINE_NBR = E.LINE_NBR 
     AND C.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
     AND C.PO_ID = D.PO_ID 
     AND C.LINE_NBR = D.LINE_NBR 
     AND C.SCHED_NBR = D.SCHED_NBR 
     AND C.BUSINESS_UNIT = F.BUSINESS_UNIT 
     AND C.RECEIVER_ID = F.RECEIVER_ID 
     AND C.RECV_LN_NBR = F.RECV_LN_NBR 
     AND G.BUSINESS_UNIT = E.BUSINESS_UNIT 
     AND G.PO_ID = E.PO_ID 
     AND G.BUDGET_HDR_STATUS = 'V' 
     AND G.BUDGET_HDR_STS_NP = 'V'
     AND A.BUSINESS_UNIT LIKE '6%'
     AND C.PO_ID = '0000007142' 
     AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS WHERE BUSINESS_UNIT = D.BUSINESS_UNIT AND PO_ID = D.PO_ID AND LINE_NBR = D.LINE_NBR AND DST_ACCT_TYPE = 'DST' 
                                                                                        AND KK_CLOSE_FLAG <> 'Y')
ORDER BY 1,2,3,4,5,6,7,8;

--IF OPR_MATCH TRUE
--VCHR_RC_L_NM_VW
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, E.ITM_SETID, C.INV_ITEM_ID, 
            SUBSTR(C.DESCR254_MIXED,1,30), C.RECEIPT_UM, C.PRICE_PO, (C.QTY_SH_ACCPT_VUOM - F.QTY_MATCHED), (C.MERCHANDISE_AMT - F.AMT_MATCHED), D.PRICE_PO, E.UNIT_OF_MEASURE, 
            D.UNIT_PRC_TOL, D.PCT_UNIT_PRC_TOL, D.EXT_PRC_TOL, D.PCT_EXT_PRC_TOL, D.MATCH_LINE_OPT, C.RECEIPT_UM, (C.QTY_SH_ACCPT_VUOM - F.QTY_MATCHED), E.WTHD_CD, E.WTHD_SW, 
            D.DISTRIB_MTHD_FLG, C.CURRENCY_CD, C.RECV_SHIP_STATUS, C.RECV_SHIP_STATUS, C.SHIPTO_ID, D.VAT_USE_ID, D.VAT_TXN_TYPE_CD, D.TAX_CD_VAT, D.VAT_APPLICABILITY, 
            D.SUT_APPLICABILITY, D.TAX_CD_SUT, D.SUT_EXCPTN_CERTIF, D.SUT_EXCPTN_TYPE, D.ULTIMATE_USE_CD, E.PHYSICAL_NATURE, D.VAT_RCRD_INPT_FLG, D.VAT_RCRD_OUTPT_FLG, 
            D.VAT_DCLRTN_POINT, D.VAT_CALC_GROSS_NET, D.VAT_CALC_FRGHT_FLG, D.VAT_CALC_MISC_FLG , D.VAT_RECALC_FLG, D.VAT_TREATMENT_GRP, D.VAT_EXCPTN_TYPE, 
            D.VAT_EXCPTN_CERTIF, D.COUNTRY_SHIP_TO, D.COUNTRY_SHIP_FROM, D.COUNTRY_VAT_BILLTO, D.COUNTRY_VAT_BILLFR, D.COUNTRY_VAT_PERFRM, D.COUNTRY_LOC_BUYER, 
            D.COUNTRY_LOC_SELLER, D.COUNTRY_VAT_SUPPLY, D.STATE_LOC_BUYER, D.STATE_LOC_SELLER, D.STATE_SHIP_FROM, D.STATE_SHIP_TO, D.STATE_VAT_DEFAULT, D.STATE_VAT_PERFRM, 
            D.STATE_VAT_SUPPLY, D.VAT_RGSTRN_SELLER, D.VAT_CALC_TYPE, D.VAT_ROUND_RULE, A.RECEIPT_DT, A.VENDOR_ID, A.VNDR_LOC, D.SUT_BASE_ID, D.TAX_VAT_FLG, D.TAX_FRGHT_FLG, 
            D.TAX_MISC_FLG, E.CATEGORY_ID, D.FREIGHT_TERMS, D.SHIP_TYPE_ID, D.VAT_TREATMENT, D.VAT_SVC_SUPPLY_FLG, D.VAT_SERVICE_TYPE, C.BILL_OF_LADING, C.PRO_NUMBER, 
            C.PACKSLIP_NO, E.CNTRCT_ID, C.ITM_ID_VNDR, C.MFG_ITM_ID, C.AMT_ONLY_FLG, A.MATCH_CNTRL_ID, C.MERCHANDISE_AMT_PO, C.RECV_LN_MATCH_OPT 
FROM PS_RECV_HDR_FS A, PS_RECV_LN_SHIP_FS C, PS_PO_LINE_FS E, PS_PO_LINE_SHIP_FS D, PS_RECV_LN_SHP_MTH F
WHERE A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.RECEIVER_ID = C.RECEIVER_ID 
    AND A.IN_PROCESS_FLG = 'N' 
    AND (A.ERS_FLAG = 'N' OR A.ERS_FLAG = ' ') 
    AND C.RECV_SHIP_STATUS IN ('R','O','M','C') 
    AND C.BUSINESS_UNIT_PO = E.BUSINESS_UNIT 
    AND C.PO_ID = E.PO_ID 
    AND C.LINE_NBR = E.LINE_NBR 
    AND C.BUSINESS_UNIT_PO = D.BUSINESS_UNIT 
    AND C.PO_ID = D.PO_ID 
    AND C.LINE_NBR = D.LINE_NBR 
    AND C.SCHED_NBR = D.SCHED_NBR 
    AND C.BUSINESS_UNIT = F.BUSINESS_UNIT 
    AND C.RECEIVER_ID = F.RECEIVER_ID 
    AND C.RECV_LN_NBR = F.RECV_LN_NBR
    AND A.BUSINESS_UNIT LIKE '6%'
    AND C.PO_ID = '0000007142'
ORDER BY 1,2,3,4,5,6,7,8;

--VCHR_PO_HNM_VW1
SELECT A.VENDOR_SETID, B.VENDOR_ID, A.BUSINESS_UNIT, A.PO_ID, A.PO_DT, B.VENDOR_NAME_SHORT, B.NAME1, SUM(C.MERCHANDISE_AMT), A.CURRENCY_CD 
FROM PS_PO_HDR_FS A, PS_VENDOR B, PS_PO_LINE_SHIP_FS C 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID 
    AND (A.PO_STATUS IN ('D','C') OR (A.CHNG_ORD_BATCH > 0 AND A.PO_STATUS IN ('D','C'))) 
    AND A.ERS_ACTION = 'N' 
    AND A.IN_PROCESS_FLG = 'N' 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND A.PO_ID = C.PO_ID 
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_HDR_STS_NP = 'V' 
    AND A.CC_USE_FLAG IN ('N',' ')
    AND A.BUSINESS_UNIT = '611UU'
    AND A.PO_ID = '0000004506'
    AND EXISTS (SELECT 'X' FROM PS_PO_LINE_DIST_FS WHERE BUSINESS_UNIT = C.BUSINESS_UNIT AND PO_ID = C.PO_ID AND LINE_NBR = C.LINE_NBR AND DST_ACCT_TYPE = 'DST' 
                                                                                       AND KK_CLOSE_FLAG <> 'Y') 
GROUP BY A.VENDOR_SETID, B.VENDOR_NAME_SHORT, B.VENDOR_ID, B.NAME1, A.BUSINESS_UNIT, A.PO_ID, A.PO_DT, A.CURRENCY_CD
ORDER BY 1,2;

SELECT PO_STATUS, CHNG_ORD_BATCH, ERS_ACTION, IN_PROCESS_FLG, BUDGET_HDR_STATUS, BUDGET_HDR_STS_NP, CC_USE_FLAG, A.* 
FROM PS_PO_HDR_FS A WHERE A.BUSINESS_UNIT = '611UU' AND A.PO_ID = '0000004506';

SELECT * FROM PS_VCHR_PO_HNM_VW WHERE BUSINESS_UNIT_PO = '611UU' AND PO_ID = '0000004506';

--UNU TB 2014
SELECT X.FISCAL_YEAR, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR, 
            X.PROJECT_ID, X.CHARTFIELD2, X.AFFILIATE, X.AFFILIATE_INTRA2, X.AFFILIATE_INTRA1, SUM(X.POSTED_BASE_AMT) AS TOTAL,
            SUM(X.PERIOD_0) PERIOD_0, SUM(X.JAN) JAN, SUM(X.FEB) FEB, SUM(X.MAR) MAR, SUM(X.APR) APR, SUM(X.MAY) MAY, SUM(X.JUN) JUN, 
            SUM(X.JUL) JUL, SUM(X.AUG) AUG, SUM(X.SEP) SEP, SUM(X.OCT) OCT, SUM(X.NOV) NOV, SUM(X.DEC) DEC
FROM (
SELECT ST.FISCAL_YEAR, ST.BUSINESS_UNIT, ST.ACCOUNT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.PROJECT_ID, ST.CHARTFIELD2, ST.AFFILIATE, ST.AFFILIATE_INTRA2, 
            ST.AFFILIATE_INTRA1, ST.CURRENCY_CD, ET.DESCR, SUM(ST.POSTED_TRAN_AMT) AS POSTED_TRAN_AMT, SUM(ST.POSTED_BASE_AMT) AS POSTED_BASE_AMT,
            CASE ST.ACCOUNTING_PERIOD WHEN 0 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
          , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JAN
          , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS FEB 
          , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAR 
          , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS APR 
          , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAY 
          , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUN 
          , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUL 
          , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS AUG 
          , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS SEP 
          , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS OCT 
          , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS NOV 
          , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEC 
FROM PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET
WHERE ST.BUSINESS_UNIT = 'UNUNI'
    AND ET.SETID = 'SHARE'
    AND ET.ACCOUNT = ST.ACCOUNT
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= SYSDATE)
    AND ST.LEDGER = 'USD'
    AND ST.ACCOUNT >= '00000'
    AND ST.ACCOUNT <= '99999'
    AND ST.FISCAL_YEAR = '2014'
    AND ((ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12 AND ET.ACCOUNT_TYPE IN ('E', 'R')) OR (ST.ACCOUNTING_PERIOD BETWEEN 0 AND 12 AND ET.ACCOUNT_TYPE NOT IN ('E', 'R')))
    AND ST.STATISTICS_CODE = ' '
GROUP BY ST.FISCAL_YEAR, ST.BUSINESS_UNIT, ST.ACCOUNT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.PROJECT_ID, ST.CHARTFIELD2, ST.AFFILIATE, ST.AFFILIATE_INTRA2, 
                ST.AFFILIATE_INTRA1, ST.CURRENCY_CD, ST.ACCOUNTING_PERIOD, ET.DESCR) X
GROUP BY X.FISCAL_YEAR, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.DESCR, X.PROJECT_ID, X.CHARTFIELD2, X.AFFILIATE, X.AFFILIATE_INTRA2, X.AFFILIATE_INTRA1
ORDER BY X.FISCAL_YEAR, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2;

--Find out all POs/Vouchers which are using a Vendor location which is
--1. Not the default location;
--2. Does not have bank information;
--3. PO Status NOT IN ('C', 'X')
--Still under testing
--Experimental Version 1
SELECT A.SETID, A.VENDOR_ID, A.VENDOR_NAME_SHORT, A.NAME1, A.NAME2, L.UN_NATIONALITY, A.VENDOR_STATUS, A.VENDOR_CLASS, A.AR_NUM, A.CREATED_DTTM, A.CREATED_BY_USER, 
           A.LAST_MODIFIED_DATE, A.ENTERED_BY, A.LAST_ACTIVITY_DT, A.DEFAULT_LOC, B.VNDR_LOC, I.VNDR_LOC AS VNDR_LOC_SCR, I.DESCR, B.EFFDT, B.EFF_STATUS, B.CURRENCY_CD, 
           C.PYMNT_METHOD, C.BANK_CD, C.BANK_ACCT_KEY, C.CURRENCY_PYMNT, E.ADDRESS_SEQ_NUM, E.EFFDT, E.EFF_STATUS, E.NAME1, E.NAME2, E.EMAILID, E.ADDRESS1, E.ADDRESS2, 
           E.ADDRESS3, E.ADDRESS4, E.CITY, E.STATE, H.DESCR, E.POSTAL, E.COUNTRY, F.PHONE, G.COUNTRY_CODE, G.PHONE, D.BANK_ACCT_SEQ_NBR, F.COUNTRY_CODE, D.DESCR, D.DEFAULT_IND, 
           D.COUNTRY, D.BENEFICIARY_BANK, D.BANK_ID_QUAL, D.BNK_ID_NBR, D.BENEF_BRANCH, D.BRANCH_ID, D.BANK_ACCT_TYPE, D.BANK_ACCOUNT_NUM, D.IBAN_ID, 
           D.DFI_ID_QUAL, D.DFI_ID_NUM, K.INTRMED_SEQ_NO, K.STL_ROUTING_METHOD, K.INTRMED_DFI_ID, K.INTRMED_BANK_CD, K.INTRMED_ACCT_KEY, K.INTRMED_PYMNT_MSG, 
           J.CNTCT_SEQ_NUM, J.EFFDT, J.EFF_STATUS, J.CONTACT_NAME, J.CONTACT_TYPE, A.PRIM_ADDR_SEQ_NUM, A.ADDR_SEQ_NUM_ORDR,
           POH.BUSINESS_UNIT AS BU_PO, POH.PO_ID, POH.PO_STATUS, POH.PO_DT, POH.VNDR_LOC AS VNDR_LOC_PO, POH.ADDRESS_SEQ_NUM AS ADDR_SEQ_NUM_PO--, 
           --VCH.BUSINESS_UNIT AS BU_AP, VCH.VOUCHER_ID, VCH.VNDR_LOC AS VNDR_LOC_VCHR, VCH.ADDRESS_SEQ_NUM AS ADDR_SEQ_NUM_VCHR
FROM PS_VENDOR_PAY C, PS_VNDR_LOC_SCROL I, PS_UN_VENDOR L,
          (((PS_VENDOR_ADDR E LEFT OUTER JOIN PS_VENDOR_ADDR_PHN F ON E.SETID = F.SETID AND E.VENDOR_ID = F.VENDOR_ID AND E.ADDRESS_SEQ_NUM = F.ADDRESS_SEQ_NUM 
                                                                                                           AND E.EFFDT = F.EFFDT AND F.PHONE_TYPE = 'MAIN')
             LEFT OUTER JOIN PS_VENDOR_ADDR_PHN G ON E.SETID = G.SETID AND E.VENDOR_ID = G.VENDOR_ID AND E.ADDRESS_SEQ_NUM = G.ADDRESS_SEQ_NUM AND E.EFFDT = G.EFFDT
                                                                            AND G.PHONE_TYPE = 'FAX')
             LEFT OUTER JOIN PS_STATE_TBL H ON E.COUNTRY = H.COUNTRY AND E.STATE =  H.STATE),
          (((PS_VENDOR A LEFT OUTER JOIN PS_VENDOR_CNTCT J ON A.SETID =  J.SETID AND A.VENDOR_ID =  J.VENDOR_ID)
            LEFT OUTER JOIN PS_VENDOR_LOC B ON A.SETID = B.SETID AND A.VENDOR_ID = B.VENDOR_ID)  
            LEFT OUTER JOIN PS_PO_HDR POH ON POH.VENDOR_SETID = A.SETID AND POH.VENDOR_ID = A.VENDOR_ID AND POH.VNDR_LOC = B.VNDR_LOC AND POH.PO_STATUS NOT IN ('C', 'X')),
            --LEFT OUTER JOIN PS_VOUCHER VCH ON VCH.VENDOR_SETID = A.SETID AND VCH.VENDOR_ID = A.VENDOR_ID),
            (PS_VNDR_BANK_ACCT D LEFT OUTER JOIN PS_VNDR_IBANK_ACCT K ON D.SETID = K.SETID AND D.VENDOR_ID = K.VENDOR_ID AND D.VNDR_LOC = K.VNDR_LOC AND D.EFFDT = K.EFFDT 
                                                                                                                AND D.BANK_ACCT_SEQ_NBR = K.BANK_ACCT_SEQ_NBR)   
WHERE A.SETID = 'UNUNI' 
      
     AND (B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_VENDOR_LOC B_ED WHERE B.SETID = B_ED.SETID AND B.VENDOR_ID = B_ED.VENDOR_ID AND B.VNDR_LOC = B_ED.VNDR_LOC)
              OR B.EFFDT IS NULL) 
     AND B.SETID = C.SETID 
     AND B.VENDOR_ID = C.VENDOR_ID 
     AND B.VNDR_LOC = C.VNDR_LOC 
     AND C.EFFDT = B.EFFDT 
     AND B.SETID = D.SETID 
     AND B.VENDOR_ID = D.VENDOR_ID 
     AND B.VNDR_LOC = D.VNDR_LOC 
     AND D.EFFDT = B.EFFDT 
     AND A.SETID = E.SETID 
     AND A.VENDOR_ID = E.VENDOR_ID 
     AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_VENDOR_ADDR E_ED WHERE E.SETID = E_ED.SETID AND E.VENDOR_ID = E_ED.VENDOR_ID 
                                                                                                                        AND E.ADDRESS_SEQ_NUM = E_ED.ADDRESS_SEQ_NUM) 
     AND E.ADDRESS_SEQ_NUM = B.REMIT_ADDR_SEQ_NUM
     AND A.SETID = I.SETID 
     AND A.VENDOR_ID = I.VENDOR_ID 
     AND B.VNDR_LOC = I.VNDR_LOC
     AND (J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_VENDOR_CNTCT J_ED WHERE J.SETID = J_ED.SETID AND J.VENDOR_ID = J_ED.VENDOR_ID AND J.CNTCT_SEQ_NUM = J_ED.CNTCT_SEQ_NUM) 
        OR J.EFFDT IS NULL)
     AND A.SETID = L.SETID
     AND A.VENDOR_ID = L.VENDOR_ID
     AND A.VENDOR_ID IN ('0000005935', '0000008281', '0000007123', '0000007771')
ORDER BY A.SETID, A.VENDOR_ID, B.EFFDT, POH.BUSINESS_UNIT, POH.PO_ID;

--UNU_JRNL_KK_BYPASSED
--version 1
--Exact replica of UNDP query
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.SOURCE, A.JRNL_HDR_STATUS, A.KK_SKIP, A.KK_TRAN_BYPAS_FLAG, A.DESCR254
FROM PS_JRNL_HEADER A
WHERE A.BUSINESS_UNIT = 'UNUNI' 
     AND A.KK_TRAN_BYPAS_FLAG = 'Y'
     AND A.JRNL_HDR_STATUS IN ('U','P')
     AND A.SOURCE NOT IN ('OBL','CNV')
ORDER BY A.BUSINESS_UNIT, A.SOURCE, A.JOURNAL_DATE DESC;

--Version 2
--Removed selection on Journal Source
--Added selection for Journal Date
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID, A.JOURNAL_DATE, A.SOURCE, A.JRNL_HDR_STATUS, A.KK_SKIP, A.KK_TRAN_BYPAS_FLAG, A.DESCR254
FROM PS_JRNL_HEADER A
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.KK_TRAN_BYPAS_FLAG = 'Y'
     AND A.JRNL_HDR_STATUS IN ('U','P')
     AND A.JOURNAL_DATE BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
     --AND A.JOURNAL_DATE BETWEEN TO_DATE('2013-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
ORDER BY 1, 4, 3 DESC;

--Find Receipts in Reporting Table which have rows in more than one accrual period
--Version 1
SELECT A.PROCESS_INSTANCE, A.ACCRUAL_YEAR, A.ACCR_PERIOD, A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE,
            A.ORIGINAL_TRANS, A.DT_TIMESTAMP,
            B.PROCESS_INSTANCE, B.ACCRUAL_YEAR, B.ACCR_PERIOD, B.BUSINESS_UNIT, B.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, B.DISTRIB_LINE_NUM, B.DST_ACCT_TYPE,
            B.ORIGINAL_TRANS, B.DT_TIMESTAMP
FROM PS_RECV_LN_RPT A, PS_RECV_LN_RPT B
WHERE A.PROCESS_INSTANCE <> B.PROCESS_INSTANCE
    AND A.ACCRUAL_YEAR = B.ACCRUAL_YEAR 
    AND A.ACCR_PERIOD <> B.ACCR_PERIOD 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND A.RECV_LN_NBR = B.RECV_LN_NBR
    AND A.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR
    AND A.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM
    AND A.DST_ACCT_TYPE = B.DST_ACCT_TYPE
    AND A.APPL_JRNL_ID = B.APPL_JRNL_ID
    AND A.ORIGINAL_TRANS = B.ORIGINAL_TRANS 
    AND A.DT_TIMESTAMP <> B.DT_TIMESTAMP
    AND A.DST_ACCT_TYPE = 'RAC'
    AND A.BUSINESS_UNIT = '600UU' 
    AND A.RECEIVER_ID = '0000001783'
ORDER BY A.ACCRUAL_YEAR, A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.ACCR_PERIOD;

--Version 2
--Added more columns and changed WHERE criteria
SELECT A.PROCESS_INSTANCE, A.ACCRUAL_YEAR, A.ACCR_PERIOD, A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE,
            A.ORIGINAL_TRANS, A.DT_TIMESTAMP, A.BUSINESS_UNIT_GL, A.BUSINESS_UNIT_PO, A.PO_ID, A.SCHED_NBR, A.LINE_NBR, A.PO_DIST_LINE_NUM, A.ACCOUNTING_DT, A.MONETARY_AMOUNT,
            B.PROCESS_INSTANCE, B.ACCRUAL_YEAR, B.ACCR_PERIOD, B.BUSINESS_UNIT, B.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, B.DISTRIB_LINE_NUM, B.DST_ACCT_TYPE,
            B.ORIGINAL_TRANS, B.DT_TIMESTAMP, B.BUSINESS_UNIT_GL, B.BUSINESS_UNIT_PO, B.PO_ID, B.SCHED_NBR, B.LINE_NBR, B.PO_DIST_LINE_NUM, B.ACCOUNTING_DT, B.MONETARY_AMOUNT
FROM PS_RECV_LN_RPT A, PS_RECV_LN_RPT B
WHERE A.PROCESS_INSTANCE <> B.PROCESS_INSTANCE
    AND A.ACCRUAL_YEAR = B.ACCRUAL_YEAR 
    AND A.ACCR_PERIOD <> B.ACCR_PERIOD 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND A.RECV_LN_NBR = B.RECV_LN_NBR
    AND A.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR
    AND A.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM
    AND A.DST_ACCT_TYPE = B.DST_ACCT_TYPE
    AND A.APPL_JRNL_ID = B.APPL_JRNL_ID
    AND A.ORIGINAL_TRANS = B.ORIGINAL_TRANS 
    AND A.DT_TIMESTAMP <> B.DT_TIMESTAMP
    AND A.DST_ACCT_TYPE = 'RAC'
    --AND A.BUSINESS_UNIT LIKE '6%'
    AND A.BUSINESS_UNIT_GL = 'UNUNI'
    --AND A.RECEIVER_ID = '0000001783'
ORDER BY A.ACCRUAL_YEAR, A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.ACCR_PERIOD;

--Testing
SELECT * FROM PS_RECV_LN_ACCTG WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID LIKE '%1783';
SELECT * FROM PS_RECV_LN_RPT WHERE BUSINESS_UNIT = '600UU' AND RECEIVER_ID LIKE '%1783' AND DST_ACCT_TYPE = 'RAC';
SELECT * FROM PS_RECV_LN_RPT WHERE BUSINESS_UNIT LIKE '6%' AND DST_ACCT_TYPE = 'RAC' ORDER BY 4,5;

--Japan Vendor Bank Ticket
SELECT * FROM PS_VNDR_BANK_ACCT WHERE SETID = 'UNUNI' AND BANK_ID_QUAL = '014' AND DFI_ID_NUM LIKE 'JPP%';
SELECT * FROM PS_VNDR_IBANK_ACCT WHERE SETID = 'UNUNI';
--#8904

--Item Type for UNU
SELECT SUBSTR(RTRIM(A.INV_ITEM_ID), -1, 1) AS ITEM_TYPE, COUNT(1) FROM PS_MASTER_ITEM_TBL A 
WHERE SETID = 'UNUNI'
GROUP BY SUBSTR(RTRIM(A.INV_ITEM_ID), -1, 1)
ORDER BY 1;

--B0750 Issue
--Dump of Voucher Accounting Line Table
SELECT
A.BUSINESS_UNIT, A.VOUCHER_ID, A.UNPOST_SEQ, A.APPL_JRNL_ID, A.POSTING_PROCESS, A.PYMNT_CNT, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, 
A.CF_BAL_LINE_NUM, A.LEDGER, A.FOREIGN_AMOUNT, A.FOREIGN_CURRENCY, A.RT_TYPE, A.RATE_MULT, A.RATE_DIV, 
A.MONETARY_AMOUNT, A.QTY_VCHR, A.STATISTIC_AMOUNT, A.JRNL_LN_REF, A.DESCR, A.MERCHANDISE_AMT, A.MERCH_AMT_BSE, A.DSCNT_AMT_BSE, 
A.CHART_EDIT_STATUS, A.ERROR_FLAG, A.FINAL_REF_IND, A.REFERENCE_NUMBER, A.REF_CLOSED, A.REF_DIST_LINE, A.REF_LINE_NUMBER, 
A.BUSINESS_UNIT_PO, A.PO_ID, A.LINE_NBR, A.SCHED_NBR, A.PO_DIST_LINE_NUM, A.BCM_LINE_STATUS, A.BCM_POST_AMOUNT, A.BCM_POST_AMT_TOT, 
A.CURRENCY_CD, A.ASSET_FLG, A.BUSINESS_UNIT_AM, A.ASSET_ID, A.PROFILE_ID, A.COST_TYPE, A.AM_DISTRIB_STATUS, A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, 
A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, A.LEDGER_GROUP,
A.ACCOUNTING_DT, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.JOURNAL_DATE, A.JOURNAL_LINE, A.MOVEMENT_FLAG, A.GL_DISTRIB_STATUS, 
A.PROCESS_INSTANCE,  
A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT, A.FUND_CODE, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, A.CHARTFIELD2, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, 
A.ANALYSIS_TYPE, A.RESOURCE_TYPE, A.RESOURCE_CATEGORY, A.RESOURCE_SUB_CAT, A.PC_DISTRIB_STATUS,  
A.SHIPTO_ID, A.SUT_BASE_ID, A.TAX_CD_SUT, A.TAX_CD_SUT_PCT, A.SUT_APPLICABILITY, A.DOC_TYPE, A.DOC_SEQ_DATE, A.DOC_SEQ_NBR, A.DOC_SEQ_STATUS, A.POSTING_DATE, 
A.IST_DISTRIB_STATUS, A.PRIMARY_LEDGER, A.BUDGET_HDR_STATUS, A.BUDGET_LINE_STATUS, A.CLOSE_STATUS, A.BUDGET_DT, A.KK_TRAN_OVER_FLAG, A.KK_TRAN_OVER_OPRID, 
A.KK_TRAN_OVER_DTTM, A.IU_ANCHOR_FLG, A.IU_SYS_TRAN_CD, A.IU_TRAN_CD, A.OPEN_ITEM_KEY, A.PHYSICAL_NATURE, A.KK_PROCESS_PRIOR, A.FED_DISTRIB_STATUS, A.QTY_VCHR_STD
FROM PS_VCHR_ACCTG_LINE A 
WHERE A.BUSINESS_UNIT_GL = 'UNUNI' 
    AND A.DEPTID = 'B0750' 
ORDER BY 1,2,3,4;

--Find out PO and Voucher Distrib Lines where the Account used in not an Expense Account
--PO Distribution Details
SELECT ACCT.ACCOUNT_TYPE, POD.* FROM PS_PO_LINE_DISTRIB POD, PS_GL_ACCOUNT_TBL ACCT
WHERE POD.BUSINESS_UNIT LIKE '6%'
    AND ACCT.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = POD.BUSINESS_UNIT AND D.RECNAME = 'GL_ACCOUNT_TBL')
    AND POD.ACCOUNT = ACCT.ACCOUNT
    AND ACCT.ACCOUNT_TYPE <> 'E'
ORDER BY 1,2,3,4;

--Voucher Distribution Details
SELECT ACCT.ACCOUNT_TYPE, VD.* FROM PS_DISTRIB_LINE VD, PS_GL_ACCOUNT_TBL ACCT
WHERE VD.BUSINESS_UNIT LIKE '6%'
    AND ACCT.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = VD.BUSINESS_UNIT AND D.RECNAME = 'GL_ACCOUNT_TBL')
    AND VD.ACCOUNT = ACCT.ACCOUNT
    AND ACCT.ACCOUNT_TYPE <> 'E'
ORDER BY 1,2,3,4;

SELECT * FROM PS_GL_ACCOUNT_TBL WHERE ACCOUNT = '14155';

--AP Unbalanced Accounting Entries
SELECT * FROM PS_PST_UNBALANCED;

--RCPT_ACC_GL_VW
SELECT * FROM PS_RCPT_ACC_GL_VW ORDER BY 1,2;
SELECT * FROM PS_RCPT_ACC_GL_VW WHERE BUSINESS_UNIT = 'UNDP1' ORDER BY 1,2;

--Expanded Version of RCPT_ACC_GL_VW 
SELECT DISTINCT A.BUSINESS_UNIT, A.BUSINESS_UNIT_GL 
FROM PS_RECV_LN_DISTRIB A, PS_BUS_UNIT_TBL_PM B 
WHERE BUSINESS_UNIT_IN = ' ' 
    AND RECV_DS_STATUS IN ('0', 'M', 'R') 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND (B.RECEIPT_ACCR_FLAG = 'Y' OR B.NONPO_ACCR_FLAG = 'Y')
ORDER BY 1,2;

SELECT A.BUSINESS_UNIT_GL, A.* 
FROM PS_RECV_LN_DISTRIB A, PS_BUS_UNIT_TBL_PM B 
WHERE BUSINESS_UNIT_IN = ' ' 
    AND RECV_DS_STATUS IN ('0', 'M', 'R') 
    AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND (B.RECEIPT_ACCR_FLAG = 'Y' OR B.NONPO_ACCR_FLAG = 'Y')
    AND A.BUSINESS_UNIT = 'UNDP1'
    AND A.BUSINESS_UNIT_GL <> 'UNDP1'
ORDER BY 1,2;

--IMP
--Record PeopleCode RCPT_RUN_CNTRL.ACCOUNTING_DT.SaveEdit has a check to ensure that period is open for the GL BU and Transaction Type 'RCA'.
--However, the way option 'R' is now being treated, that warning will no longer be shown to the user on the online page.
--Thus, it is important for user/agencie(s) to ensure that the RCA is open for their respective GL BUs prior to triggerring the process.

--Receipts that will be picked up by RA
--This is before any other checks are carried out
--Make sure to change the date and set it to end date of the period for which RA is being run
--Version 1, Detail Listing
SELECT A.* FROM PS_RECV_HDR A 
WHERE A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI') 
   AND  A.IN_PROCESS_FLG = 'N' 
   AND A.BUSINESS_UNIT LIKE '6%' 
   AND A.RECEIPT_DT <= TO_DATE('2014-08-31','YYYY-MM-DD')
ORDER BY 1,2;

--Version 2, Aggregated
SELECT A.BUSINESS_UNIT, COUNT(1) 
FROM PS_RECV_HDR A 
WHERE A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI') 
   AND  A.IN_PROCESS_FLG = 'N' 
   AND A.BUSINESS_UNIT LIKE '6%' 
   AND A.RECEIPT_DT <= TO_DATE('2014-08-31','YYYY-MM-DD')
GROUP BY A.BUSINESS_UNIT
ORDER BY 1,2;

--Receipts which will not be picked up by RA
SELECT A.* FROM PS_RECV_HDR A 
WHERE A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL = 'UNUNI') 
   AND  A.IN_PROCESS_FLG = 'N' 
   AND A.BUSINESS_UNIT LIKE '6%' 
   AND A.RECEIPT_DT > TO_DATE('2014-08-31','YYYY-MM-DD')
ORDER BY 1,2;

--All the receipts in the system
SELECT A.BUSINESS_UNIT, COUNT(1) 
FROM PS_RECV_HDR A 
WHERE A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_PM WHERE BUSINESS_UNIT_GL IN ('UNDP1', 'UNFPA', 'UNUNI', 'UNCDF', 'UNFEM', 'UNOPS')) 
   AND  A.IN_PROCESS_FLG = 'N' 
   --AND A.BUSINESS_UNIT LIKE '6%' 
   AND A.RECEIPT_DT <= TO_DATE('2014-08-31','YYYY-MM-DD')
GROUP BY A.BUSINESS_UNIT
ORDER BY 1,2;

--Testing PO Staging Stats
--Version 1
SELECT 'PO_STAGE_STATS', PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
            CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (10206)
    --http://docs.oracle.com/cd/E51433_01/fscm92pbr2/eng/fscm/spog/task_SourcingErrorMessages-9f3d70.html
    AND ML.MESSAGE_NBR IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,66,67,68,74,75,76,77)
    --AND PR.OPRID = 'prakash.prashant'
    --AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;
               
--UNU Receipt Monitoring
--Version 1
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECEIPT_DT, A.RECV_STATUS, X1.XLATLONGNAME AS RECV_STATUS_DESC, A.MATCH_STATUS_RECV, X2.XLATLONGNAME AS MATCH_STATUS_DESCR,  
            B.RECV_LN_NBR, B.INV_ITEM_ID, B.CATEGORY_ID, CAT.CATEGORY_CD, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM, B.RECEIPT_UM,
            B.RECV_SHIP_STATUS, X6.XLATLONGNAME AS RECV_SHIP_STATUS_DESCR, B.RECV_LN_MATCH_OPT, X7.XLATLONGNAME AS RECV_LN_MATCH_OPTION, A.OPRID, B.DESCR254_MIXED, 
            B.BUSINESS_UNIT_PO, POH.PO_STATUS, X4.XLATLONGNAME AS PO_STATUS_DESCR, B.PO_ID, B.LINE_NBR, B.SCHED_NBR, C.PO_DIST_LINE_NUM, POH.PO_DT, 
            POH.ACCOUNTING_DT AS PO_ACCT_DT, POD.BUDGET_DT AS PO_BUD_DT, POL.CANCEL_STATUS AS POL_CANCEL_STATUS, 
            POD.DISTRIB_LN_STATUS, POD.QTY_PO AS POD_QTY_PO, POD.MERCH_AMT_BSE AS PO_USD_AMT, 
            POC.DISTRIB_MTHD_FLG, POC.MATCH_STATUS_LN_PO, 
            --POC.PRICE_PO AS PO_LS_PRICE, POC.PRICE_PO_BSE AS PO_LS_PRICE_BSE, POC.QTY_PO AS PO_LS_QTY, 
            --POC.MERCHANDISE_AMT AS PO_LS_MERCH_AMT, POC.CURRENCY_CD AS PO_LS_M_AMT_CURR, POC.MERCH_AMT_BSE AS PO_LS_MERCH_AMT_BSE, POC.FREIGHT_TERMS, 
            --POC.MATCH_LINE_OPT, 
            POD.MERCHANDISE_AMT AS PO_FOREIGN_AMT, POD.CURRENCY_CD, POH.CURRENCY_CD AS PO_HDR_CURR, 
            POL.RECV_REQ, X5.XLATLONGNAME AS RECV_REQ_PO, POL.AMT_ONLY_FLG, A.VENDOR_ID, E.NAME1, C.REQ_ID, C.LOCATION, 
            A.SHIPTO_ID, A.INTFC_ASSET, C.BUSINESS_UNIT_AM, C.PROFILE_ID, B.MOVE_STAT_AM, X3.XLATLONGNAME AS MOVE_STATUS_DESCR,            
            RLA.ACTUAL_COST, RLA.COST, RLA.CUSTODIAN, RLA.DESCR, RLA.DTTM_STAMP, RLA.FINANCIAL_ASSET_SW, RLA.MODEL, RLA.SERIAL_ID, RLA.TAG_NUMBER, RLA.RECV_AM_STATUS,
            C.QTY_DS_ACCPT_VUOM, B.DUE_DT, C.QTY_PO AS RECV_PO_QTY,
            POD.QTY_PO "PO Distrtib Quantity", B.QTY_LN_ASSET_SUOM "Quantity to be Asset Tracked", B.QTY_LN_INV_SUOM "Line Inv Qty", B.QTY_SH_ACCPT "Qty Accepted in Receipt UOM", 
            B.QTY_SH_ACCPT_SUOM "Accepted Quantity", B.QTY_SH_ACCPT_VUOM "Accept Quantity in Vendor UOM", B.QTY_SH_NETRCV_VUOM "Net Receipt Quantity", 
            B.QTY_SH_RECVD "Qty Received in Receipt UOM", B.QTY_SH_RECVD_SUOM "Receipt Quantity", B.QTY_SH_RECVD_VUOM "Receipt Quantity in Vendor UOM",
            POD.ACCOUNT AS PO_ACCT, POD.OPERATING_UNIT AS PO_OP_UNIT, POD.FUND_CODE AS PO_FUND, POD.DEPTID AS PO_DEPT, POD.PROJECT_ID AS PO_PRJ, POD.ACTIVITY_ID AS PO_ACT, 
            POD.CHARTFIELD2 AS PO_DONOR,
            C.ACCOUNT AS RECV_ACCT, C.OPERATING_UNIT AS RECV_OP_UNIT, C.FUND_CODE AS RECV_FUND, C.DEPTID AS RECV_DEPT, C.PROJECT_ID AS RECV_PRJ, C.ACTIVITY_ID AS RECV_ACT, 
            C.CHARTFIELD2 AS RECV_DONOR
FROM PS_RECV_HDR A, PS_RECV_LN_SHIP B, PS_VENDOR E, PSXLATITEM X1, PSXLATITEM X2, PSXLATITEM X3, PS_ITM_CAT_TBL CAT, PS_SET_CNTRL_REC REC, PSXLATITEM X6, PSXLATITEM X7,
         (((((((PS_RECV_LN_DISTRIB C LEFT OUTER JOIN PS_RECV_LN_ASSET RLA ON C.BUSINESS_UNIT = RLA.BUSINESS_UNIT AND C.RECEIVER_ID = RLA.RECEIVER_ID 
                                                                                                                    AND C.RECV_LN_NBR = RLA.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR = RLA.RECV_SHIP_SEQ_NBR
                                                                                                                    AND C.DISTRIB_LINE_NUM = RLA.DISTRIB_LINE_NUM)           
          LEFT OUTER JOIN PS_PO_HDR POH ON C.BUSINESS_UNIT_PO = POH.BUSINESS_UNIT AND C.PO_ID = POH.PO_ID)
          LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PO_STATUS' AND X4.FIELDVALUE = POH.PO_STATUS)
          LEFT OUTER JOIN PS_PO_LINE POL ON C.BUSINESS_UNIT_PO = POL.BUSINESS_UNIT AND C.PO_ID = POL.PO_ID AND C.LINE_NBR = POL.LINE_NBR)
          LEFT OUTER JOIN PS_PO_LINE_SHIP POC ON C.BUSINESS_UNIT_PO = POC.BUSINESS_UNIT AND C.PO_ID = POC.PO_ID AND C.LINE_NBR = POC.LINE_NBR AND C.SCHED_NBR = POC.SCHED_NBR)
          LEFT OUTER JOIN PS_PO_LINE_DISTRIB POD ON C.BUSINESS_UNIT_PO = POD.BUSINESS_UNIT AND C.PO_ID = POD.PO_ID AND C.LINE_NBR = POD.LINE_NBR AND C.SCHED_NBR = POD.SCHED_NBR
                                                                                 AND C.PO_DIST_LINE_NUM = POD.DISTRIB_LINE_NUM)
          LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'RECV_REQ' AND X5.FIELDVALUE = POL.RECV_REQ)
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.RECEIVER_ID = B.RECEIVER_ID
    AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND B.RECEIVER_ID = C.RECEIVER_ID
    AND B.RECV_LN_NBR = C.RECV_LN_NBR
    AND B.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR
    AND B.RECV_SHIP_STATUS NOT IN ('X','C')
    AND A.VENDOR_SETID = E.SETID
    AND A.VENDOR_ID = E.VENDOR_ID    
    AND REC.SETCNTRLVALUE = B.BUSINESS_UNIT
    AND CAT.CATEGORY_ID = B.CATEGORY_ID
    AND CAT.SETID = REC.SETID
    AND REC.RECNAME = 'ITM_CAT_TBL'
    AND CAT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_ITM_CAT_TBL E_ED WHERE CAT.SETID = E_ED.SETID AND CAT.CATEGORY_TYPE = E_ED.CATEGORY_TYPE 
                                                                                                                         AND CAT.CATEGORY_CD = E_ED.CATEGORY_CD AND CAT.CATEGORY_ID = E_ED.CATEGORY_ID 
                                                                                                                         AND E_ED.EFFDT <= SYSDATE)
    --AND C.QTY_DS_ACCPT_VUOM > 0    
    --XLAT X1
    AND X1.FIELDNAME = 'RECV_STATUS'
    AND X1.FIELDVALUE = A.RECV_STATUS
    --XLAT X2
    AND X2.FIELDNAME = 'MATCH_STATUS_RECV'
    AND X2.FIELDVALUE = A.MATCH_STATUS_RECV
    --XLAT X3
    AND X3.FIELDNAME = 'MOVE_STAT_AM'
    AND X3.FIELDVALUE = B.MOVE_STAT_AM
    --XLAT X6
    AND X6.FIELDNAME = 'RECV_SHIP_STATUS'
    AND X6.FIELDVALUE = B.RECV_SHIP_STATUS
    --XLAT X7
    AND X7.FIELDNAME = 'RECV_LN_MATCH_OPT'
    AND X7.FIELDVALUE = B.RECV_LN_MATCH_OPT
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
ORDER BY A.BUSINESS_UNIT, A.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, RLA.DISTRIB_SEQ_NUM;

--Create/Enter Vendor
SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'VNDR_ID';
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'MAINTAIN_VENDORS' AND BARNAME = 'USE' AND BARITEMNAME = 'VENDOR_INFORMATION';

SELECT * FROM PSROLECLASS WHERE CLASSID 
IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'MAINTAIN_VENDORS' AND BARNAME = 'USE' AND BARITEMNAME = 'VENDOR_INFORMATION')
ORDER BY 1,2;

SELECT DISTINCT ROLEUSER FROM PSROLEUSER WHERE ROLENAME IN (SELECT ROLENAME FROM PSROLECLASS 
WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'MAINTAIN_VENDORS' AND BARNAME = 'USE' AND BARITEMNAME = 'VENDOR_INFORMATION'))
AND ROLEUSER LIKE '%stenders%'
ORDER BY 1;

--Req Closing Catalog
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 10110; --AND MESSAGE_NBR = 8;
SELECT * FROM PS_REQ_RC_WB_EXP WHERE BUSINESS_UNIT LIKE '6%';

--Testing Req Closing Stats
--Version 1
--Does not work
SELECT 'REQ_CLOSE_STATS', PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
            ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_REQRQ'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR = 10110
    --AND ML.MESSAGE_NBR IN (1,2)
    --AND PR.OPRID = 'prakash.prashant'
    --AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
               ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;
           
--UNU_REQ_UNSOURCED_BY_BU_YEAR     
SELECT A.BUSINESS_UNIT, A.REQ_ID, A.REQ_STATUS, A.REQ_DT, A.REQUESTOR_ID, A.BUDGET_CHECK, B.LINE_NBR, C.SCHED_NBR, D.DISTRIB_LINE_NUM, C.SHIPTO_ID, D.DEPTID, B.BUYER_ID, 
            B.MERCH_AMT_BSE
FROM PS_REQ_HDR A, PS_REQ_LINE B, PS_REQ_LINE_SHIP C, PS_REQ_LN_DISTRIB D
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.REQ_ID = B.REQ_ID
     AND B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.REQ_ID = C.REQ_ID
     AND B.LINE_NBR = C.LINE_NBR
     AND C.BUSINESS_UNIT = D.BUSINESS_UNIT
     AND C.REQ_ID = D.REQ_ID
     AND C.LINE_NBR = D.LINE_NBR
     AND C.SCHED_NBR = D.SCHED_NBR
     AND A.BUSINESS_UNIT LIKE '6%'
     AND A.REQ_STATUS NOT IN ('X','C')
     AND D.KK_CLOSE_FLAG = 'N'
     AND B.SOURCE_STATUS = 'A'
     AND B.CURR_STATUS NOT IN ('C','X')     
     AND TO_NUMBER(TO_CHAR(A.ACCOUNTING_DT,'YYYY')) < '2014'
ORDER BY 1, 2, 7, 8, 9;

--Testing POs which are open
--Copied from UNFPA's query
SELECT B.BUSINESS_UNIT, B.PO_ID, B.PO_DT, B.VENDOR_ID, B.PO_STATUS, B.BUDGET_HDR_STATUS, B.RECV_STATUS, B.MATCH_STATUS_PO, C.LINE_NBR, C.REQ_ID, D.REQUESTOR_ID, 
            C.BUDGET_DT, B.PO_REF, C.MERCH_AMT_BSE, B.ACCOUNTING_DT, B.BUYER_ID, C.ACCOUNT, C.OPERATING_UNIT, C.FUND_CODE, C.DEPTID, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD2, 
            C.KK_CLOSE_FLAG, E.SHIPTO_ID, B.ACTIVITY_DATE
FROM PS_PO_LINE A, PS_PO_HDR B, (PS_PO_LINE_DISTRIB C LEFT OUTER JOIN PS_REQ_HDR D ON C.BUSINESS_UNIT =  D.BUSINESS_UNIT AND C.REQ_ID = D.REQ_ID), PS_PO_LINE_SHIP E
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.PO_ID = B.PO_ID
     AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND A.PO_ID = C.PO_ID
     AND A.LINE_NBR = C.LINE_NBR
     AND B.BUSINESS_UNIT LIKE '6%'
     AND B.PO_STATUS NOT IN ('C','X')
     AND A.CANCEL_STATUS IN ('A','H')
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2013-12-31','YYYY-MM-DD')
     AND A.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND A.PO_ID = E.PO_ID
     AND A.LINE_NBR = E.LINE_NBR
     AND C.MERCH_AMT_BSE > 0
ORDER BY 1, 2, 9;


--Budget Check Selection Criteria
--KK > Source Transactions > Selection Criteria 
--Source Transaction - REQ_PREENC
--Query used by FS_BP to select Requisitions and its associated KK Information
SELECT 'REQ_PREENC', STAO.*, KKSH.*
FROM PS_REQ_HDR_PR STAO, PS_KK_SOURCE_HDR KKSH 
WHERE (STAO.BUSINESS_UNIT LIKE '6%') 
    AND (STAO.HOLD_STATUS = 'N' OR STAO.HOLD_STATUS = 'N') 
    AND (STAO.POST_DOC = 'Y') 
    AND (STAO.REQ_STATUS = 'A' OR STAO.REQ_STATUS = 'C' OR STAO.REQ_STATUS = 'X' OR STAO.REQ_STATUS = 'LA') 
    AND STAO.BUDGET_HDR_STATUS <> 'V'
    AND KKSH.KK_SOURCE_TRAN = 'REQ_PREENC' 
    AND KKSH.KK_ROLLED <> 'Y' 
    AND KKSH.KK_PROCESS_STATUS <> 'I' 
    AND STAO.BUSINESS_UNIT = KKSH.BUSINESS_UNIT 
    AND STAO.REQ_ID = KKSH.REQ_ID
ORDER BY 1,2;

--Source Transaction - PO_POENC
--Query used by FS_BP to select Purchase Orders and its associated KK Information
SELECT 'PO_POENC', POH.*, KKSH.* 
FROM PS_PO_HDR POH, PS_KK_SOURCE_HDR KKSH
WHERE (POH.BUSINESS_UNIT LIKE '6%') 
    AND (POH.HOLD_STATUS = 'N') 
    AND (POH.POST_DOC = 'Y') 
    AND (POH.PO_STATUS = 'A' OR POH.PO_STATUS = 'C' OR POH.PO_STATUS = 'X' OR POH.PO_STATUS = 'D' OR POH.PO_STATUS = 'PX') 
    AND POH.BUDGET_HDR_STATUS <> 'V'
    --AND KKSH.KK_PROCESS_STATUS = 'E'
    AND KKSH.KK_PROCESS_STATUS IN ('E','I','N','V','W','X')
    AND KKSH.KK_SOURCE_TRAN = 'PO_POENC'
    AND POH.BUSINESS_UNIT = KKSH.BUSINESS_UNIT 
    AND POH.PO_ID = KKSH.PO_ID
ORDER BY 1,2,3;

--Source Transaction - AP_VOUCHER
--Query used by FS_BP to select Vouchers and its associated KK Information
SELECT 'AP_VOUCHER', VC.*, KKSH.*
FROM PS_VOUCHER VC, PS_KK_SOURCE_HDR KKSH
WHERE ((VC.BUSINESS_UNIT BETWEEN '600UU' AND '623UU')) 
    AND (VC.APPR_STATUS = 'A') 
    AND (VC.ENTRY_STATUS = 'P') 
    AND VC.BUDGET_HDR_STATUS <> 'V'
    AND KKSH.KK_SOURCE_TRAN = 'AP_VOUCHER'
    AND KKSH.KK_PROCESS_STATUS IN ('E','I','N','V','W','X')
    AND VC.BUSINESS_UNIT = KKSH.BUSINESS_UNIT 
    AND VC.VOUCHER_ID = KKSH.VOUCHER_ID
ORDER BY 1,2,3;

--Source Transaction - AP_ACCT_LN
--Query used by FS_BP to select Voucher (Gain, Loss, Close) and its associated KK Information
--Does not seem to work. What about Vouchers which only have AP_VOUCHER row in KK_SOURCE_HDR...Standard join fails, doing an Outer Join will also not help
SELECT 'AP_ACCT_LN', VAL.*, KKSH.*
FROM PS_VCHR_ACCTG_LINE VAL, PS_KK_SOURCE_HDR KKSH
WHERE EXISTS (SELECT 'X' FROM PS_VCHR_ACT_HDR_VW VAH WHERE VAL.BUSINESS_UNIT = VAH.BUSINESS_UNIT AND VAL.VOUCHER_ID = VAH.VOUCHER_ID 
                                                                                                    AND VAL.APPL_JRNL_ID = VAH.APPL_JRNL_ID AND VAL.PYMNT_CNT = VAH.PYMNT_CNT 
                                                                                                    AND ((BUSINESS_UNIT BETWEEN '600UU' AND '623UU')) AND BUDGET_HDR_STATUS <> 'V')
    AND KKSH.KK_SOURCE_TRAN = 'AP_ACCT_LN'
    AND KKSH.KK_ROLLED <> 'Y' 
    AND VAL.BUSINESS_UNIT = KKSH.BUSINESS_UNIT 
    AND VAL.VOUCHER_ID = KKSH.VOUCHER_ID 
    AND VAL.PYMNT_CNT = KKSH.PYMNT_CNT 
    AND VAL.APPL_JRNL_ID = KKSH.APPL_JRNL_ID
ORDER BY 1,2,3;

SELECT * FROM PS_VCHR_ACT_HDR_VW HDR WHERE (HDR.BUSINESS_UNIT BETWEEN '600UU' AND '623UU') AND  HDR.BUDGET_HDR_STATUS = 'N' ORDER BY 1,2;
--Use this instead
--Expanded PS_VCHR_ACT_HDR_VW
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, PYMNT_CNT, APPL_JRNL_ID, ACCOUNTING_DT, BUDGET_HDR_STATUS, KK_TRAN_OVER_FLAG, KK_TRAN_OVER_OPRID, 
            KK_TRAN_OVER_DTTM  
FROM PS_VCHR_ACCTG_LINE 
WHERE (BUSINESS_UNIT BETWEEN '600UU' AND '623UU') 
    AND BUDGET_HDR_STATUS IN ('N','E') 
    AND DST_ACCT_TYPE NOT IN ('APA','IUP','DSE','RSA') 
    AND PRIMARY_LEDGER = 'Y' 
ORDER BY 1,2;

--Source Transaction - AR_MISCPAY
--Query used by FS_BP to select Miscellaneous Payment and its associated KK Information
--Still need to go through the Trace file, much more complicated than anticipated
SELECT P.* 
FROM PS_PAYMENT P
WHERE EXISTS (SELECT 'X' FROM PS_ARCC_PAY_HDR_VW ARP WHERE P.DEPOSIT_BU = ARP.DEPOSIT_BU AND P.DEPOSIT_ID = ARP.DEPOSIT_ID 
                                                                                                   AND P.PAYMENT_SEQ_NUM = ARP.PAYMENT_SEQ_NUM 
                                                                                                   AND ((ACCOUNTING_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                                   AND (DEPOSIT_BU LIKE '6%') AND BUDGET_HDR_STATUS <> 'V')
ORDER BY 1,2;

--Expanded PS_ARCC_PAY_HDR_VW
SELECT B.DEPOSIT_BU, B.DEPOSIT_ID, B.PAYMENT_SEQ_NUM, B.DEPOSIT_BU AS BUSINESS_UNIT, B.BUSINESS_UNIT_GL, B.GL_DISTRIB_STATUS, B.PROCESS_INSTANCE, B.ACCOUNTING_DT, 
            B.CC_AFFECTED, B.BUDGET_HDR_STATUS, B.KK_AMOUNT_TYPE, B.KK_TRAN_OVER_DTTM, B.KK_TRAN_OVER_FLAG, B.KK_TRAN_OVER_OPRID 
FROM PS_PAYMENT B
WHERE B.DEPOSIT_BU LIKE '6%'
     AND (B.ACCOUNTING_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')) 
     AND B.MISC_PAYMENT='Y'
     AND B.MISC_DST_BAL='C'
     AND B.CC_AFFECTED = 'Y'
     AND B.BUDGET_HDR_STATUS <> 'V'
ORDER BY 1,2;

SELECT * FROM PS_PAY_MISC_DST PAY
WHERE PAY.DEPOSIT_BU LIKE '6%' 
    AND EXISTS (SELECT 'X' FROM PS_KK_SOURCE_HDR KKSH WHERE KKSH.KK_PROCESS_STATUS IN ('E') AND KKSH.KK_SOURCE_TRAN = 'AR_MISCPAY' 
                                                                                               AND PAY.DEPOSIT_BU = KKSH.DEPOSIT_BU AND PAY.DEPOSIT_ID = KKSH.DEPOSIT_ID 
                                                                                               AND PAY.PAYMENT_SEQ_NUM = KKSH.PAYMENT_SEQ_NUM) 
    AND EXISTS (SELECT 'X' FROM PS_ARCC_PAY_HDR_VW STAO WHERE STAO.DEPOSIT_BU = PAY.DEPOSIT_BU AND STAO.DEPOSIT_ID = PAY.DEPOSIT_ID 
                                                                                                    AND STAO.PAYMENT_SEQ_NUM = PAY.PAYMENT_SEQ_NUM)
ORDER BY 1,2;

--Source Transaction - AR_REVEST
--Query used by FS_BP to select Revenue Estimate and its associated KK Information
--Still need to go through the Trace file, much more complicated than anticipated
SELECT ARCC.* FROM PS_AR_CC_TRAN_HDR ARCC
WHERE EXISTS (SELECT 'X' FROM PS_AR_CC_TRAN_VW ARC WHERE ARCC.BUSINESS_UNIT = ARC.BUSINESS_UNIT AND ARCC.CUST_ID = ARC.CUST_ID AND ARCC.ITEM = ARC.ITEM 
                                                                                               AND ARCC.ITEM_LINE = ARC.ITEM_LINE AND ARCC.ITEM_SEQ_NUM = ARC.ITEM_SEQ_NUM 
                                                                                               AND ARCC.CC_GROUP_SEQ_NUM = ARC.CC_GROUP_SEQ_NUM 
                                                                                               AND ((ACCOUNTING_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD'))) 
                                                                                               AND (BUSINESS_UNIT LIKE '6%') AND BUDGET_HDR_STATUS <> 'V')
ORDER BY 1,2;

--Some Stats on AR ITEM(s)
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU = '600UU' AND GROUP_ID = '10200';
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU = '600UU' AND GROUP_ID = '10200';

SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND ITEM = 'PHD 1ST TUITION VJ 2014 EXTRA';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'ITEM_STATUS';

SELECT * FROM PS_ITEM WHERE BUSINESS_UNIT LIKE '6%' AND TO_CHAR(POST_DT, 'YYYY') = '2014';

SELECT BUSINESS_UNIT, CUST_ID, TO_CHAR(POST_DT, 'YYYY') AS YEAR, TO_CHAR(POST_DT, 'MM') AS MONTH 
FROM PS_ITEM 
WHERE BUSINESS_UNIT LIKE '6%' 
    AND TO_CHAR(POST_DT, 'YYYY') = '2014'
GROUP BY BUSINESS_UNIT, CUST_ID, TO_CHAR(POST_DT, 'YYYY'), TO_CHAR(POST_DT, 'MM')
ORDER BY BUSINESS_UNIT, CUST_ID, TO_CHAR(POST_DT, 'YYYY'), TO_CHAR(POST_DT, 'MM');

SELECT BUSINESS_UNIT, ITEM, ITEM_STATUS, TO_CHAR(POST_DT, 'YYYY') AS YEAR, TO_CHAR(POST_DT, 'MM') AS MONTH 
FROM PS_ITEM 
WHERE BUSINESS_UNIT LIKE '6%' 
    --AND TO_CHAR(POST_DT, 'YYYY') = '2014'
GROUP BY BUSINESS_UNIT, ITEM, ITEM_STATUS, TO_CHAR(POST_DT, 'YYYY'), TO_CHAR(POST_DT, 'MM')
ORDER BY BUSINESS_UNIT, ITEM, ITEM_STATUS, TO_CHAR(POST_DT, 'YYYY'), TO_CHAR(POST_DT, 'MM');

--PS delivered Receipt Close SQLs
--For RECV_LN_SHIP
-- 10.05.12 ....(PO_RECV_COM.RVCM0200.STEP0001) (SQL)
UPDATE PS_RECV_LN_SHIP SET RECV_SHIP_STATUS = 'C' WHERE PS_RECV_LN_SHIP.BUSINESS_UNIT = '600UU' AND PS_RECV_LN_SHIP.RECEIVER_ID = '0000001952' 
AND PS_RECV_LN_SHIP.RECV_SHIP_STATUS IN('R', 'M') AND 'Y' = 'N' AND 'Y' = 'N' AND 'N' = 'N' AND 'Y' = 'N';
-- Row(s) affected: 0

-- 10.05.12 ....(PO_RECV_COM.RVCM0200.STEP0002) (SQL)
UPDATE PS_RECV_LN_SHIP SET RECV_SHIP_STATUS = 'C' WHERE PS_RECV_LN_SHIP.BUSINESS_UNIT = '600UU' AND PS_RECV_LN_SHIP.RECEIVER_ID = '0000001952' 
AND PS_RECV_LN_SHIP.RECV_SHIP_STATUS IN('R', 'M') AND 'Y' = 'N' AND 'Y' = 'N' AND 'N' = 'N' AND 'Y' = 'Y' 
AND (PS_RECV_LN_SHIP.RECV_LN_MATCH_OPT = 'F' OR PS_RECV_LN_SHIP.MATCH_LINE_FLG = 'N');
/
-- Row(s) affected: 0

-- 10.05.12 ....(PO_RECV_COM.RVCM0200.STEP0010) (SQL)
UPDATE PS_RECV_LN_SHIP SET RECV_SHIP_STATUS = 'C' WHERE PS_RECV_LN_SHIP.BUSINESS_UNIT = '600UU' AND PS_RECV_LN_SHIP.RECEIVER_ID = '0000001952' 
AND PS_RECV_LN_SHIP.MOVE_STAT_AM IN ('M', 'N') AND PS_RECV_LN_SHIP.MOVE_STAT_INV IN ('M', 'N') AND PS_RECV_LN_SHIP.MOVE_STAT_MFG IN ('M', 'N') 
AND (PS_RECV_LN_SHIP.RECV_LN_MATCH_OPT = 'F' OR PS_RECV_LN_SHIP.MATCH_LINE_FLG = 'N');

--Doc ID 1576794.1
--EAP: Budget Checking process (FS_BP) erroneously creates entries on KK Tables for deleted AP Voucher

--For a deleted voucher BUDGET_HDR_STATUS <> 'V' & BUDGET_MISC_STATUS <> 'V'
SELECT BUDGET_HDR_STATUS, BUDGET_MISC_STATUS, ENTRY_STATUS, A.* 
FROM PS_VOUCHER A
WHERE BUSINESS_UNIT LIKE '6%'
AND ENTRY_STATUS = 'X'
--AND (BUDGET_HDR_STATUS = 'V' AND BUDGET_MISC_STATUS = 'V')
ORDER BY BUSINESS_UNIT, VOUCHER_ID;

SELECT * FROM PS_KK_SOURCE_HDR WHERE BUSINESS_UNIT = '600UU' AND VOUCHER_ID = '00000059';

--Check to see if there are any UNU voucher(s) which have been deleted and have an entry in KK
SELECT BUDGET_HDR_STATUS, BUDGET_MISC_STATUS, ENTRY_STATUS, A.* 
FROM PS_VOUCHER A
WHERE BUSINESS_UNIT LIKE '6%'
AND ENTRY_STATUS = 'X'
AND EXISTS (SELECT 'X' FROM PS_KK_SOURCE_HDR KKSH WHERE KKSH.BUSINESS_UNIT = A.BUSINESS_UNIT AND KKSH.VOUCHER_ID = A.VOUCHER_ID)
ORDER BY BUSINESS_UNIT, VOUCHER_ID;

--Payables Voucher Error Logging
--AP TSE Records
SELECT * FROM PS_TSE_VCHR WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;
SELECT * FROM PS_TSE_VCHR_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;
SELECT * FROM PS_TSE_VCHRLN_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID, VOUCHER_LINE_NUM;
SELECT * FROM PS_TSE_ACCTLN_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID, VOUCHER_LINE_NUM;
SELECT * FROM PS_TSE_PYMNT_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;
SELECT * FROM PS_TSE_MISC_FLD WHERE BUSINESS_UNIT LIKE '6%' ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;

SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 7500 AND MESSAGE_NBR IN (378,382,377,373,374,369,361,225,215,359);
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 7210 AND MESSAGE_NBR IN (364,311);
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 9600 AND MESSAGE_NBR IN (32,31);
SELECT * FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = 5860 AND MESSAGE_NBR IN (53,47,84);

SELECT 'TSE_VCHR_FLD', A.*, CAT.MESSAGE_TEXT--, CAT.DESCRLONG 
FROM (PS_TSE_VCHR_FLD A LEFT OUTER JOIN PSMSGCATDEFN CAT ON A.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR AND A.MESSAGE_NBR = CAT.MESSAGE_NBR) 
WHERE BUSINESS_UNIT LIKE '6%'
ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;

SELECT 'TSE_VCHRLN_FLD', A.*, CAT.MESSAGE_TEXT--, CAT.DESCRLONG 
FROM (PS_TSE_VCHRLN_FLD A LEFT OUTER JOIN PSMSGCATDEFN CAT ON A.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR AND A.MESSAGE_NBR = CAT.MESSAGE_NBR)
WHERE BUSINESS_UNIT LIKE '6%' 
ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID, VOUCHER_LINE_NUM;

SELECT 'TSE_ACCTLN_FLD', A.*, CAT.MESSAGE_TEXT--, CAT.DESCRLONG 
FROM (PS_TSE_ACCTLN_FLD A LEFT OUTER JOIN PSMSGCATDEFN CAT ON A.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR AND A.MESSAGE_NBR = CAT.MESSAGE_NBR) 
WHERE BUSINESS_UNIT LIKE '6%' 
ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID, VOUCHER_LINE_NUM;

SELECT 'TSE_PYMNT_FLD', A.*, CAT.MESSAGE_TEXT--, CAT.DESCRLONG 
FROM (PS_TSE_PYMNT_FLD A LEFT OUTER JOIN PSMSGCATDEFN CAT ON A.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR AND A.MESSAGE_NBR = CAT.MESSAGE_NBR)
WHERE BUSINESS_UNIT LIKE '6%' 
ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;

SELECT 'TSE_MISC_FLD', A.*, CAT.MESSAGE_TEXT--, CAT.DESCRLONG 
FROM (PS_TSE_MISC_FLD A LEFT OUTER JOIN PSMSGCATDEFN CAT ON A.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR AND A.MESSAGE_NBR = CAT.MESSAGE_NBR) 
WHERE BUSINESS_UNIT LIKE '6%' 
ORDER BY TSE_PROC_INSTANCE DESC, BUSINESS_UNIT, VOUCHER_ID;

--Understanding ChartField Value Sets
SELECT * FROM PS_CFV_SET_TBL WHERE SETID = 'UNUNI' ORDER BY 1,2;
SELECT * FROM PS_CFV_SET_CF_TBL WHERE SETID = 'UNUNI' ORDER BY 1,2;
SELECT * FROM PS_CFV_SET_CFV_TBL WHERE SETID = 'UNUNI' ORDER BY 1,2;

SELECT FIELDNAME FROM PSRECFIELD WHERE RECNAME = 'CFV_SET_CFV_TBL' AND ROUND(USEEDIT/2,0)*2 <> USEEDIT ORDER BY FIELDNUM;

--Experimental Version 1
SELECT A.SETID, A.CFV_SET, A.EFFDT, A.EFF_STATUS, A.DESCR, A.LEDGER_TEMPLATE, A.LEDGER,
            (SELECT LISTAGG(BX.CFV_SET || ' - ' || BX.FIELDNAME || ' - ' || BX.HOW_FIELD_SPECIFY || '-' || X1.XLATLONGNAME || ' - ' || BX.TREE_NAME || ' - ' || 
             BX.TREE_LEVEL, '; ') WITHIN GROUP (ORDER BY BX.CFV_SET, BX.FIELDNAME) AS "CF Tree" FROM PS_CFV_SET_CF_TBL BX, PSXLATITEM X1  
             WHERE X1.FIELDNAME = 'HOW_FIELD_SPECIFY' AND X1.FIELDVALUE = BX.HOW_FIELD_SPECIFY AND BX.SETID = A.SETID AND BX.CFV_SET = A.CFV_SET AND BX.EFFDT = A.EFFDT
             AND (BX.EFFDT = (SELECT MAX(BX_ED.EFFDT) FROM PS_CFV_SET_CF_TBL BX_ED WHERE BX.SETID = BX_ED.SETID AND BX.CFV_SET = BX_ED.CFV_SET AND BX_ED.EFFDT <= A.EFFDT)
                OR BX.EFFDT IS NULL)) AS "CF Tree",
             (SELECT LISTAGG(EX.CFV_SET || ' - ' || EX.FIELDNAME || ' - ' || EX.SELECT_VALUE || '-' || EX.TO_VALUE, '; ') 
              WITHIN GROUP (ORDER BY EX.CFV_SET) AS "CF Tree DETL" FROM PS_CFV_SET_CFV_TBL EX  
              WHERE EX.SETID = A.SETID AND EX.CFV_SET = A.CFV_SET AND EX.EFFDT = A.EFFDT 
              AND (EX.EFFDT = (SELECT MAX(EX_ED.EFFDT) FROM PS_CFV_SET_CF_TBL EX_ED WHERE EX.SETID = EX_ED.SETID AND EX.CFV_SET = EX_ED.CFV_SET AND EX_ED.EFFDT <= A.EFFDT)
                OR EX.EFFDT IS NULL)) AS "CF Tree DETL"
FROM PS_CFV_SET_TBL A 
WHERE A.SETID = 'UNUNI'
GROUP BY A.SETID, A.CFV_SET, A.EFFDT, A.EFF_STATUS, A.DESCR, A.LEDGER_TEMPLATE, A.LEDGER
ORDER BY 1,2;

--AP_WC_PMTPST_VW
--PaymentsReadyforPosting
--As per FSCM 9.2.004/8.53.10
--Modified it for UNU
SELECT 'UNU_PYMNTS_RDY_4_POSTING', A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.PYMNT_METHOD, A.PYMNT_ID_REF, A.REMIT_SETID, A.REMIT_VENDOR, B.VENDOR_NAME_SHORT, 
            A.NAME1, A.PYMNT_DT, A.PYMNT_AMT, A.CURRENCY_PYMNT 
FROM PS_PAYMENT_TBL A, PS_VENDOR B 
WHERE A.IN_PROCESS_FLG = 'N' 
    AND (A.POST_STATUS_AP = 'U' 
             AND (A.PYMNT_METHOD NOT IN ('BOO', 'DFT', 'BEF')
                     OR (A.PYMNT_METHOD IN ('BOO', 'DFT', 'BEF') AND A.DFT_STATUS IN ('A', 'C') AND A.DFT_APPROVE_FLAG = 'N' AND A.CREATION_DT <= SYSDATE) 
                     OR (A.PYMNT_METHOD IN ('BOO', 'DFT', 'BEF') AND A.DFT_STATUS = 'A' AND A.DFT_APPROVE_FLAG = 'Y' AND A.CREATION_DT <= SYSDATE)
                    ) 
              OR (A.POST_STATUS_AP = 'P' 
                     AND ((A.CANCEL_POST_STATUS = 'W') OR (A.DFT_STATUS = 'W' AND A.DFT_WO_DT <= SYSDATE) 
                                                                               OR (A.PYMNT_DT <= SYSDATE AND A.DFT_STATUS = 'A' AND A.CANCEL_POST_STATUS <> 'P'))
                    )
            ) 
   AND A.SOURCE_TXN = 'VCHR' 
   AND A.REMIT_SETID = B.SETID 
   AND A.REMIT_VENDOR = B.VENDOR_ID
   AND B.SETID = 'UNUNI'
   AND A.BANK_SETID = 'SHARE'
   AND A.BANK_CD LIKE '6%'
ORDER BY PYMNT_DT DESC, 1,2,3,4;

--PO/AM Reconciliation
--FSCM 9.2
--AM_PO_RCVR_RECONCILE
SELECT C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.PO_DIST_LINE_NUM, B.BUSINESS_UNIT, B.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, B.DISTRIB_LINE_NUM, 
            B.DISTRIB_SEQ_NUM, B.RECV_AM_STATUS, B.BUSINESS_UNIT_AM, B.ASSET_ID, A.RECEIPT_DT, D.DESCR254_MIXED 
FROM PS_RECV_HDR A, PS_RECV_LN_ASSET B, PS_RECV_LN_DISTRIB C, PS_RECV_LN_SHIP D 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.RECEIVER_ID = B.RECEIVER_ID 
    AND C.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND C.RECEIVER_ID = B.RECEIVER_ID 
    AND C.RECV_LN_NBR = B.RECV_LN_NBR 
    AND C.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR 
    AND C.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM 
    AND D.BUSINESS_UNIT = C.BUSINESS_UNIT 
    AND D.RECEIVER_ID = C.RECEIVER_ID 
    AND D.RECV_LN_NBR = C.RECV_LN_NBR 
    AND D.RECV_SHIP_SEQ_NBR = C.RECV_SHIP_SEQ_NBR 
    AND B.BUSINESS_UNIT_AM <> ' ' 
    AND B.PROFILE_ID <> ' ' 
    AND B.RECV_AM_STATUS IN ('M', 'O', 'R')
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.RECEIPT_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD')
    AND NOT EXISTS (SELECT 'X' FROM PS_ASSET_ACQ_DET D WHERE D.BUSINESS_UNIT_PO = C.BUSINESS_UNIT_PO AND D.PO_ID = C.PO_ID AND D.PO_LINE_NBR = C.LINE_NBR 
                                AND D.PO_DIST_LINE_NUM = C.PO_DIST_LINE_NUM AND D.SCHED_NBR = C.SCHED_NBR AND D.BUSINESS_UNIT_RECV = B.BUSINESS_UNIT AND D.RECEIVER_ID = B.RECEIVER_ID 
                                AND D.RECV_LN_NBR = B.RECV_LN_NBR AND D.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR AND D.RECV_DIST_LINE_NUM = B.DISTRIB_LINE_NUM 
                                AND D.DISTRIB_SEQ_NUM = B.DISTRIB_SEQ_NUM AND D.SYSTEM_SOURCE = 'PPO')
ORDER BY C.BUSINESS_UNIT_PO, C.PO_ID, C.LINE_NBR, C.SCHED_NBR, C.PO_DIST_LINE_NUM, B.BUSINESS_UNIT, B.RECEIVER_ID, B.RECV_LN_NBR, B.RECV_SHIP_SEQ_NBR, B.DISTRIB_LINE_NUM, 
                B.DISTRIB_SEQ_NUM;

--AP/AM Reconciliation
--FSCM 9.2
--AM_AP_VCHR_RECONCILE
--Currently under testing
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.BUSINESS_UNIT_AM, A.ASSET_ID, A.AM_DISTRIB_STATUS, ' ', I.POST_STATUS_AP, A.LEDGER_GROUP, 
            A.LEDGER, I.INVOICE_DT, A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM, 
            SUM(A.MONETARY_AMOUNT) 
FROM PS_VCHR_ACCTG_LINE A, PS_VOUCHER I 
WHERE A.ASSET_FLG = 'Y' 
    AND A.BUSINESS_UNIT = I.BUSINESS_UNIT 
    AND A.VOUCHER_ID = I.VOUCHER_ID
    AND A.BUSINESS_UNIT LIKE '6%'
    AND I.INVOICE_DT BETWEEN TO_DATE('2014-01-01','YYYY-MM-DD') AND TO_DATE('2014-12-31','YYYY-MM-DD') 
    AND NOT EXISTS (SELECT 'X' FROM PS_ASSET_ACQ_DET D WHERE D.BUSINESS_UNIT = A.BUSINESS_UNIT_AM AND D.VOUCHER_ID = A.VOUCHER_ID 
                                AND D.VOUCHER_LINE_NUM = A.VOUCHER_LINE_NUM AND D.DISTRIB_LINE_NUM = A.DISTRIB_LINE_NUM AND D.SYSTEM_SOURCE = 'PAP') 
GROUP BY A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM, A.AM_DISTRIB_STATUS, I.POST_STATUS_AP, A.BUSINESS_UNIT_AM, A.ASSET_ID, A.LEDGER_GROUP, 
               A.LEDGER, I.INVOICE_DT, A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.RECV_DIST_LINE_NUM
HAVING (SUM(A.MONETARY_AMOUNT) <> 0)
ORDER BY A.BUSINESS_UNIT, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.DISTRIB_LINE_NUM;

--Project Costing
--Reporting Options
SELECT ALLOWOPS FROM PS_INSTALLATION_PC;
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'PC_RPO';
SELECT * FROM PS_PC_RPO;
SELECT * FROM PS_PROJ_AN_GRP_MAP B;
SELECT * FROM PS_PROJ_AN_GRP_TBL C;
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'BUTREEPRJACT_OPTN';
SELECT * FROM PS_PC_RPO WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064158';
SELECT * FROM PS_PC_RPO_FA_VW;
SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'PC_RPO_FA_VW';
SELECT * FROM PS_PC_RPO_YT_VW;
SELECT * FROM PS_PC_RPO_TA1 WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159' AND TO_CHAR(TRANS_DT, 'YYYY') = '2014';
SELECT * FROM PS_PC_BU_CAL_SUM B;
SELECT * FROM PS_PC_BU_CAL_DET WHERE BUSINESS_UNIT = 'UNUNI';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'SYSTEM_SOURCE' ORDER BY 1,2;
SELECT * FROM PS_PC_BU_CAL_DET WHERE BUSINESS_UNIT = 'UNUNI' AND CALENDAR_ID = '01' AND FISCAL_YEAR = '2014' ORDER BY 1,2,3,4;
SELECT PC_CAL_TYPE_MT, PC_CAL_TYPE_QT, PC_CAL_TYPE_YR, A.* FROM PS_INSTALLATION_PC A;

SELECT * FROM PSSQLTEXTDEFN WHERE UPPER(SQLTEXT) LIKE '%PC_RPO_TA1%';

SELECT ANALYSIS_TYPE, FISCAL_YEAR, ACCOUNTING_PERIOD, SUM(RESOURCE_AMOUNT)
FROM PS_PC_RPO WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064158'
GROUP BY ANALYSIS_TYPE, FISCAL_YEAR, ACCOUNTING_PERIOD
ORDER BY ANALYSIS_TYPE, FISCAL_YEAR, ACCOUNTING_PERIOD;

SELECT FIELDNAME FROM PSRECFIELD WHERE RECNAME = 'PC_RPO_TA1' AND ROUND(USEEDIT/2,0)*2 <> USEEDIT ORDER BY FIELDNUM;

SELECT C.SETID, C.ANALYSIS_GROUP, B.ANALYSIS_TYPE, X1.DESCR AS ANALYSIS_TYPE_DESCR, C.GROUPING_SW, C.MAPPING_SW, C.THRESHOLD_SW, C.REPORT_SW, C.DESCR, 
            B.ANALYSIS_TYPE_MAP, B.QUANTITY_MULTIPLY, B.SIGNED_VALUE  
FROM PS_PROJ_AN_GRP_MAP B, PS_PROJ_AN_GRP_TBL C, PS_PROJ_ANTYPE_TBL X1
WHERE B.SETID = C.SETID
    AND B.ANALYSIS_GROUP = C.ANALYSIS_GROUP
    AND C.SETID = 'SHARE'
    AND C.SETID = X1.SETID
    AND B.ANALYSIS_TYPE = X1.ANALYSIS_TYPE
    AND X1.EFFDT = (SELECT MAX(X1_ED.EFFDT) FROM PS_PROJ_ANTYPE_TBL X1_ED WHERE X1_ED.SETID = X1.SETID AND X1_ED.ANALYSIS_TYPE = X1.ANALYSIS_TYPE AND X1_ED.EFFDT <= SYSDATE)
ORDER BY 1,2;

SELECT * FROM PS_PROJ_ANTYPE_TBL A 
WHERE A.SETID = 'SHARE' 
    AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_PROJ_ANTYPE_TBL B WHERE B.SETID = A.SETID AND B.ANALYSIS_TYPE = A.ANALYSIS_TYPE AND B.EFFDT <= SYSDATE)
ORDER BY 1,2;

--Testing PC_RPO for 00064159
--Analysis Type(s) GLE and COM do not add up
SELECT * FROM PS_PC_RPO_MT_VW WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159' AND TO_CHAR(TRANS_DT, 'YYYY') = '2014';
SELECT * FROM PS_PC_BU_CAL_DET WHERE BUSINESS_UNIT = 'UNUNI' AND CALENDAR_ID = '01' AND FISCAL_YEAR = '2014' ORDER BY 1,2,3,4;
SELECT PC_CAL_TYPE_MT, PC_CAL_TYPE_QT, PC_CAL_TYPE_YR, A.* FROM PS_INSTALLATION_PC A;
SELECT * FROM PSPRCSRQST WHERE PRCSINSTANCE IN (39444000, 39445559, 39445648, 39445688);
SELECT * FROM PS_PC_RPO WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159';
SELECT * FROM PS_PC_RPO_TAO21 WHERE PROCESS_INSTANCE = 39459677;
SELECT * FROM PS_PC_RPO_TAO21 WHERE PROCESS_INSTANCE = 39459891;
SELECT * FROM PS_PC_RPO_TAO21 WHERE PROCESS_INSTANCE = 39459896;

--Trying to see if MAX Process Instance would work. Apparently, It does not
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.ACTIVITY_ID, A.RESOURCE_ID, A.RESOURCE_ID_FROM, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, A.JOURNAL_LINE, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.ACCOUNT, A.ALTACCT, A.DEPTID, A.OPERATING_UNIT, A.PRODUCT, A.FUND_CODE, A.CLASS_FLD, A.PROGRAM_CODE, A.BUDGET_REF, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, 
            CHARTFIELD1, CHARTFIELD2, CHARTFIELD3, A.BUS_UNIT_GL_FROM, A.CURRENCY_CD, A.STATISTICS_CODE, 
            A.LEDGER_GROUP, A.ANALYSIS_TYPE, A.RESOURCE_TYPE, A.RESOURCE_CATEGORY, A.RESOURCE_SUB_CAT, A.RES_USER1, A.RES_USER2, A.RES_USER3, A.RES_USER4, A.RES_USER5, 
            A.TRANS_DT, A.ACCOUNTING_DT, A.OPRID, A.DTTM_STAMP, A.JRNL_LN_REF, A.OPEN_ITEM_STATUS, A.LINE_DESCR, A.JRNL_LINE_STATUS, A.JOURNAL_LINE_DATE, A.FOREIGN_CURRENCY, 
            A.RT_TYPE, A.FOREIGN_AMOUNT, A.RATE_MULT, A.RATE_DIV, A.CUR_EFFDT, A.PROCESS_INSTANCE, A.PC_DISTRIB_STATUS, A.GL_DISTRIB_STATUS, A.PROJ_TRANS_TYPE, 
            A.PROJ_TRANS_CODE, A.RESOURCE_STATUS, A.DESCR, A.SYSTEM_SOURCE, A.UNIT_OF_MEASURE, A.EMPLID, A.EMPL_RCD, A.SEQ_NBR, A.TIME_RPTG_CD, A.JOBCODE, A.COMPANY, 
            A.BUSINESS_UNIT_AP, A.VENDOR_ID, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.APPL_JRNL_ID, A.PYMNT_CNT, A.DST_ACCT_TYPE, A.PO_DISTRIB_STATUS, A.BUSINESS_UNIT_PO, 
            A.REQ_ID, A.REQ_LINE_NBR, A.REQ_SCHED_NBR, A.REQ_DISTRIB_NBR, A.PO_ID, A.DUE_DATE, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, A.AM_DISTRIB_STATUS, 
            A.BUSINESS_UNIT_AM, A.ASSET_ID, A.PROFILE_ID, A.COST_TYPE, A.BOOK, A.INCENTIVE_ID, A.MSTONE_SEQ, A.CONTRACT_NUM, A.CONTRACT_LINE_NUM, A.CONTRACT_PPD_SEQ, 
            A.BI_DISTRIB_STATUS, A.BUSINESS_UNIT_BI, A.BILLING_DATE, A.INVOICE, A.REV_DISTRIB_STATUS, A.BUSINESS_UNIT_AR, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, 
            A.DST_SEQ_NUM, A.BUSINESS_UNIT_IN, A.SCHED_LINE_NO, A.DEMAND_LINE_NO, A.INV_ITEM_ID, A.PAY_END_DT, A.BUSINESS_UNIT_OM, A.ORDER_NO, A.ORDER_INT_LINE_NO, 
            A.EX_DOC_ID, A.EX_DOC_TYPE, A.RESOURCE_QUANTITY, A.RESOURCE_AMOUNT, A.BUDGET_HDR_STATUS, A.KK_AMOUNT_TYPE, A.KK_TRAN_OVER_FLAG, A.KK_TRAN_OVER_OPRID, 
            A.KK_TRAN_OVER_DTTM, A.BUDGET_OVER_ALLOW, A.BUDGET_LINE_STATUS, A.BUDGET_DT, A.LEDGER, A.BD_DISTRIB_STATUS, A.BUSINESS_UNIT_BD, A.TIME_SHEET_ID, A.SHEET_ID, 
            A.PM_REVIEWED, A.PRICED_RATE, A.ACTIVITY_ID_DETAIL, A.CST_DISTRIB_STATUS, A.TXN_LMT_TRANS_ID, A.EVENT_NUM, A.CA_FEE_STATUS, 
            A.BUSINESS_UNIT_WO, A.WO_ID, A.WO_TASK_ID, A.RSRC_TYPE, A.RES_LN_NBR, B.END_DT 
FROM PS_PC_RPO_TA1 A, PS_PC_BU_CAL_DET B, PS_INSTALLATION_PC C 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND B.CALENDAR_ID = C.PC_CAL_TYPE_MT 
    AND A.TRANS_DT BETWEEN B.BEGIN_DT AND B.END_DT
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND A.PROJECT_ID = '00064159'
    --AND TO_CHAR(A.TRANS_DT, 'YYYY') = '2014'
    --AND A.ACCOUNT = '71405'
    AND A.PROCESS_INSTANCE = (SELECT MAX(A_ED.PROCESS_INSTANCE) FROM PS_PC_RPO_TA1 A_ED WHERE A.BUSINESS_UNIT = A_ED.BUSINESS_UNIT AND A.PROJECT_ID = A_ED.PROJECT_ID
                                                              AND A.ACTIVITY_ID = A_ED.ACTIVITY_ID AND A.RESOURCE_ID = A_ED.RESOURCE_ID)
ORDER BY 1,2,3,4;

SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT = 'UNUNI' AND PROJECT_ID = '00064159' AND ACCOUNT = '61260';

SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'PC_GL_TO_PC' ORDER BY 1,3;
SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'RUN_CNTL_PC_AE' ORDER BY FIELDNUM;
SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'PC_GL_RUN_VW';
SELECT PC_DISTRIB_STATUS, A.* FROM PS_JRNL_HEADER A WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('0005544564','0005546794');
SELECT * FROM PS_PROJ_RESOURCE WHERE BUSINESS_UNIT_GL = 'UNUNI' AND JOURNAL_ID IN ('0005544564','0005546794') AND PROJECT_ID = '00064159';
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('0005544564','0005546794') AND PROJECT_ID = '00064159';
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID IN ('0005544564','0005546794') AND PROJECT_ID = '00064158';
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'JRNL_LINE_SOURCE';
SELECT A.BUSINESS_UNIT, A.JOURNAL_ID 
FROM PS_JRNL_HEADER A, PS_JRNL_LN B 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND A.JOURNAL_ID = B.JOURNAL_ID 
    AND A.JOURNAL_DATE = B.JOURNAL_DATE 
    AND A.UNPOST_SEQ = B.UNPOST_SEQ 
    AND A.PC_DISTRIB_STATUS = 'N' 
    AND A.JRNL_HDR_STATUS IN ('P','U') 
    AND B.BUSINESS_UNIT_PC <> ' ' 
    AND B.PROJECT_ID <> ' ' 
    AND B.ACTIVITY_ID <> ' ' 
GROUP BY A.BUSINESS_UNIT, A.JOURNAL_ID;

--Test this
--Based on Accounting Date instead of Transaction Date
SELECT A.BUSINESS_UNIT, A.PROJECT_ID, A.ACTIVITY_ID, A.RESOURCE_ID, A.RESOURCE_ID_FROM, A.BUSINESS_UNIT_GL, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, A.JOURNAL_LINE, 
            A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, 
            A.ACCOUNT, A.ALTACCT, A.DEPTID, A.OPERATING_UNIT, A.PRODUCT, A.FUND_CODE, A.CLASS_FLD, A.PROGRAM_CODE, A.BUDGET_REF, A.AFFILIATE, A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, 
            CHARTFIELD1, CHARTFIELD2, CHARTFIELD3, A.BUS_UNIT_GL_FROM, A.CURRENCY_CD, A.STATISTICS_CODE, 
            A.LEDGER_GROUP, A.ANALYSIS_TYPE, A.RESOURCE_TYPE, A.RESOURCE_CATEGORY, A.RESOURCE_SUB_CAT, A.RES_USER1, A.RES_USER2, A.RES_USER3, A.RES_USER4, A.RES_USER5, 
            A.TRANS_DT, A.ACCOUNTING_DT, A.OPRID, A.DTTM_STAMP, A.JRNL_LN_REF, A.OPEN_ITEM_STATUS, A.LINE_DESCR, A.JRNL_LINE_STATUS, A.JOURNAL_LINE_DATE, A.FOREIGN_CURRENCY, 
            A.RT_TYPE, A.FOREIGN_AMOUNT, A.RATE_MULT, A.RATE_DIV, A.CUR_EFFDT, A.PROCESS_INSTANCE, A.PC_DISTRIB_STATUS, A.GL_DISTRIB_STATUS, A.PROJ_TRANS_TYPE, 
            A.PROJ_TRANS_CODE, A.RESOURCE_STATUS, A.DESCR, A.SYSTEM_SOURCE, A.UNIT_OF_MEASURE, A.EMPLID, A.EMPL_RCD, A.SEQ_NBR, A.TIME_RPTG_CD, A.JOBCODE, A.COMPANY, 
            A.BUSINESS_UNIT_AP, A.VENDOR_ID, A.VOUCHER_ID, A.VOUCHER_LINE_NUM, A.APPL_JRNL_ID, A.PYMNT_CNT, A.DST_ACCT_TYPE, A.PO_DISTRIB_STATUS, A.BUSINESS_UNIT_PO, 
            A.REQ_ID, A.REQ_LINE_NBR, A.REQ_SCHED_NBR, A.REQ_DISTRIB_NBR, A.PO_ID, A.DUE_DATE, A.LINE_NBR, A.SCHED_NBR, A.DISTRIB_LINE_NUM, A.AM_DISTRIB_STATUS, 
            A.BUSINESS_UNIT_AM, A.ASSET_ID, A.PROFILE_ID, A.COST_TYPE, A.BOOK, A.INCENTIVE_ID, A.MSTONE_SEQ, A.CONTRACT_NUM, A.CONTRACT_LINE_NUM, A.CONTRACT_PPD_SEQ, 
            A.BI_DISTRIB_STATUS, A.BUSINESS_UNIT_BI, A.BILLING_DATE, A.INVOICE, A.REV_DISTRIB_STATUS, A.BUSINESS_UNIT_AR, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, 
            A.DST_SEQ_NUM, A.BUSINESS_UNIT_IN, A.SCHED_LINE_NO, A.DEMAND_LINE_NO, A.INV_ITEM_ID, A.PAY_END_DT, A.BUSINESS_UNIT_OM, A.ORDER_NO, A.ORDER_INT_LINE_NO, 
            A.EX_DOC_ID, A.EX_DOC_TYPE, A.RESOURCE_QUANTITY, A.RESOURCE_AMOUNT, A.BUDGET_HDR_STATUS, A.KK_AMOUNT_TYPE, A.KK_TRAN_OVER_FLAG, A.KK_TRAN_OVER_OPRID, 
            A.KK_TRAN_OVER_DTTM, A.BUDGET_OVER_ALLOW, A.BUDGET_LINE_STATUS, A.BUDGET_DT, A.LEDGER, A.BD_DISTRIB_STATUS, A.BUSINESS_UNIT_BD, A.TIME_SHEET_ID, A.SHEET_ID, 
            A.PM_REVIEWED, A.PRICED_RATE, A.ACTIVITY_ID_DETAIL, A.CST_DISTRIB_STATUS, A.TXN_LMT_TRANS_ID, A.EVENT_NUM, A.CA_FEE_STATUS, 
            A.BUSINESS_UNIT_WO, A.WO_ID, A.WO_TASK_ID, A.RSRC_TYPE, A.RES_LN_NBR, B.END_DT 
FROM PS_PROJ_RESOURCE A, PS_PC_BU_CAL_DET B, PS_INSTALLATION_PC C 
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT 
    AND B.CALENDAR_ID = C.PC_CAL_TYPE_MT 
    AND A.TRANS_DT BETWEEN B.BEGIN_DT AND B.END_DT
    AND A.BUSINESS_UNIT = 'UNUNI' 
    AND A.PROJECT_ID = '00064159'
    AND TO_CHAR(A.ACCOUNTING_DT, 'YYYY') = '2014'
    --AND A.ACCOUNT = '71405'    
ORDER BY 1,2,3,4;

--UNUTB Rollup
--Experimental Version 1
--2nd Oct 2014
--Trial Balance using UNU IPSAS Account Tree with Tree Node Descriptions from UNU custom view 
SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, OP.DESCR AS OP_UNIT_DESCR, X.FUND_CODE, FD.DESCR AS FUND_DESCR, X.DEPTID, C.DESCR AS DEPT_DESCR, 
            X.PROJECT_ID, B.DESCR AS PRJ_DESCR, X.CHARTFIELD2, CF2.DESCR AS DONOR_DESCR,
            X.Level_0, X.Level_0_Descr, X.Level_1, X.Level_1_Descr, X.Level_2, X.Level_2_Descr, X.Level_3, X.Level_3_Descr, X.Level_4, X.Level_4_Descr, X.Level_5, X.Level_5_Descr,
            (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR, 
            SUM(X.POSTED_BASE_AMT) AS EXP_AMT_GL, SUM(X.PERIOD_0) PERIOD_0, 
            SUM(X.JAN) JAN_GL, SUM(X.FEB) FEB_GL, SUM(X.MAR) MAR_GL, SUM(X.APR) APR_GL, SUM(X.MAY) MAY_GL, SUM(X.JUN) JUN_GL, 
            SUM(X.JUL) JUL_GL, SUM(X.AUG) AUG_GL, SUM(X.SEP) SEP_GL, SUM(X.OCT) OCT_GL, SUM(X.NOV) NOV_GL, SUM(X.DEC) DEC_GL
FROM
(SELECT A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, 
             DNM.TREE_NODE Level_0, DNM.DESCR Level_0_Descr, DNM.TREE_NODE1 Level_1, DNM.DESCR1 Level_1_Descr, DNM.TREE_NODE2 Level_2, DNM.DESCR2 Level_2_Descr, 
             DNM.TREE_NODE3 Level_3, DNM.DESCR3 Level_3_Descr, DNM.TREE_NODE4 Level_4, DNM.DESCR30 Level_4_Descr, DNM.TREE_NODE5 Level_5, DNM.DESCR4 Level_5_Descr,
             A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, SUM(A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
           , CASE A.ACCOUNTING_PERIOD WHEN 0 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
           , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JAN
           , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS FEB 
           , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAR 
           , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS APR 
           , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAY 
           , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUN 
           , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUL 
           , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS AUG 
           , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS SEP 
           , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS OCT 
           , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS NOV 
           , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS DEC            
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, UNDPFS.PS_UN_DNORM_TRE_VW DNM
WHERE B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
    --AND D.SETID = 'SHARE'
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND DNM.TREE_NAME = 'UNU_IPSAS_ACCOUNT' 
     AND DNM.SETID = 'SHARE' 
     AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND D.ACCOUNT BETWEEN DNM.RANGE_FROM AND DNM.RANGE_TO
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.LEDGER = 'USD'
     AND A.FISCAL_YEAR = '2014'
     AND ((A.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND D.ACCOUNT_TYPE IN ('E', 'R')) OR (A.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND D.ACCOUNT_TYPE NOT IN ('E', 'R')))        
     AND A.STATISTICS_CODE = ' '
     --AND A.PROJECT_ID = '00064158'
     --AND A.ACCOUNT = '29109'
GROUP BY A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, DNM.TREE_NODE, DNM.DESCR, DNM.TREE_NODE1, DNM.DESCR1, DNM.TREE_NODE2, DNM.DESCR2, DNM.TREE_NODE3, 
               DNM.DESCR3, DNM.TREE_NODE4, DNM.DESCR30, DNM.TREE_NODE5, DNM.DESCR4, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.ACCOUNTING_PERIOD, LEDGER
               )X, PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND X.PROJECT_ID = B.PROJECT_ID (+)
    AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
    AND X.DEPTID = C.DEPTID (+)
    AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
    AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
    AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
    AND (CF2.EFFDT IS NULL OR 
           (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 
                                                                                                                                        AND CF2_ED.EFFDT <= SYSDATE)))
    AND X.FUND_CODE = FD.FUND_CODE (+)
    AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
    AND (FD.EFFDT IS NULL OR 
           (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
    AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
    AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
    AND (OP.EFFDT IS NULL OR 
           (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT 
                                                                                                                                AND OP_ED.EFFDT <= SYSDATE))) 
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, 
               X.Level_0, X.Level_0_Descr, X.Level_1, X.Level_1_Descr, X.Level_2, X.Level_2_Descr, X.Level_3, X.Level_3_Descr, X.Level_4, X.Level_4_Descr, X.Level_5, X.Level_5_Descr, 
               X.ACCOUNT, X.DESCR
ORDER BY X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

--ReqToSource
--Record.SRM_REQ2SRC_VW
SELECT DISTINCT L.BUYER_ID, L.VENDOR_SETID, L.VENDOR_ID, H.BUSINESS_UNIT, H.REQ_ID, H.APPROVAL_DT, H.ACCOUNTING_DT
FROM PS_REQ_HDR H , PS_REQ_LINE L 
WHERE H.BUSINESS_UNIT = L.BUSINESS_UNIT 
    AND H.REQ_ID = L.REQ_ID 
    AND H.REQ_STATUS = 'A' 
    AND L.SOURCE_STATUS NOT IN ('C', 'I')
    AND H.BUSINESS_UNIT LIKE '6%'
ORDER BY BUYER_ID, APPROVAL_DT DESC, BUSINESS_UNIT, REQ_ID;

--New KK Source Transactions for AP
--FSCM 9.1 and upwards
--AP_ACEXP
--VCHR_ACT_EXP_VW
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, PYMNT_CNT, APPL_JRNL_ID, DST_ACCT_TYPE, ACCOUNTING_DT, BUDGET_HDR_STATUS, KK_TRAN_OVER_FLAG, KK_TRAN_OVER_OPRID, 
            KK_TRAN_OVER_DTTM 
FROM PS_VCHR_ACCTG_LINE A 
WHERE POSTING_PROCESS = 'ACAV' 
    AND BUDGET_HDR_STATUS <> 'V' 
    AND DST_ACCT_TYPE = 'DST' 
    AND PRIMARY_LEDGER = 'Y'
ORDER BY 1,2,3,4;
    
--AP_ACENC
--VCHR_ACT_ENC_VW
SELECT DISTINCT BUSINESS_UNIT, VOUCHER_ID, UNPOST_SEQ, PYMNT_CNT, APPL_JRNL_ID, DST_ACCT_TYPE, ACCOUNTING_DT, BUDGET_HDR_STATUS, KK_TRAN_OVER_FLAG, KK_TRAN_OVER_OPRID, 
            KK_TRAN_OVER_DTTM 
FROM PS_VCHR_ACCTG_LINE A 
WHERE POSTING_PROCESS = 'ACAV' 
    AND BUDGET_HDR_STATUS <> 'V' 
    AND DST_ACCT_TYPE = 'ENR'
ORDER BY 1,2,3,4;

--EU_2054
--French_AM_Report2054
--Version 1
SELECT A.BUSINESS_UNIT, A.ASSET_ID, A.BOOK, A.ACCOUNT, D.DESCR, A.DISTRIBUTION_TYPE, A.TRANS_TYPE, A.TRANS_IN_OUT, A.TRANS_CODE, A.ACCOUNTING_DT, A.CATEGORY, A.COST_TYPE, 
            A.AMOUNT, A.LEDGER_GROUP, A.LEDGER, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.BUSINESS_UNIT_GL, A.CURRENCY_CD, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, A.APPL_JRNL_ID, A.JOURNAL_ID, A.JOURNAL_DATE, 0, C.BUSINESS_UNIT_GL, 
            C.BOOK, C.FISCAL_YEAR, C.PERIOD_FROM, C.PERIOD_TO, D.DESCR, C.EU_DETAIL, C.DATE_FROM, C.DATE_TO, B.DESCR, A.IU_SYS_TRAN_CD
FROM PS_DIST_LN A, PS_EU_AM_RUN_CNTRL C, PS_GL_ACCOUNT_TBL D, PS_ASSET B
  WHERE C.OPRID = 'prakash.prashant'
     AND C.RUN_CNTL_ID = 'UNUNI_AM_STAT_RPT'
     AND C.EU_DETAIL = '1'
     AND A.BUSINESS_UNIT_GL = C.BUSINESS_UNIT_GL
     AND A.ACCOUNTING_DT <= C.DATE_TO
     AND A.BOOK = C.BOOK
     AND A.DISTRIBUTION_TYPE = 'FA'
     AND (A.TRANS_TYPE IN ('ADD','REI','DPR','ADJ','RCT','RET') OR (A.TRANS_TYPE = 'TRF' AND A.AFFILIATE <> C.BUSINESS_UNIT_GL))
     AND D.SETID = (SELECT S.SETID FROM PS_SET_CNTRL_REC S WHERE S.RECNAME = 'GL_ACCOUNT_TBL' AND S.SETCNTRLVALUE = A.BUSINESS_UNIT_GL)
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL D_ED WHERE D.SETID = D_ED.SETID AND D.ACCOUNT = D_ED.ACCOUNT AND D_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.ASSET_ID = B.ASSET_ID
     AND B.ACQUISITION_CD <> 'L'
     AND NOT EXISTS (SELECT I.ASSET_ID FROM PS_RETIREMENT I WHERE I.BUSINESS_UNIT = A.BUSINESS_UNIT AND I.ASSET_ID = A.ASSET_ID AND I.BOOK = A.BOOK 
                                     AND I.RETIREMENT_STATUS = 'C' AND I.RETIREMENT_PCT = -1 AND I.ACCOUNTING_DT < C.DATE_FROM)
UNION
SELECT E.BUSINESS_UNIT, E.ASSET_ID, E.BOOK, E.ACCOUNT, H.DESCR, E.DISTRIBUTION_TYPE, E.TRANS_TYPE, E.TRANS_IN_OUT, E.TRANS_CODE, E.ACCOUNTING_DT, E.CATEGORY, E.COST_TYPE, 
            E.AMOUNT, E.LEDGER_GROUP, E.LEDGER, E.FISCAL_YEAR, E.ACCOUNTING_PERIOD, E.BUSINESS_UNIT_GL, E.CURRENCY_CD, 
            TO_CHAR(CAST((E.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, E.APPL_JRNL_ID, E.JOURNAL_ID, E.JOURNAL_DATE, 3, G.BUSINESS_UNIT_GL, 
            G.BOOK, G.FISCAL_YEAR, G.PERIOD_FROM, G.PERIOD_TO, H.DESCR, G.EU_DETAIL, G.DATE_FROM, G.DATE_TO, F.DESCR, E.IU_SYS_TRAN_CD
  FROM PS_DIST_LN E, PS_EU_AM_RUN_CNTRL G, PS_GL_ACCOUNT_TBL H, PS_ASSET F
  WHERE G.OPRID = 'prakash.prashant'
     AND G.RUN_CNTL_ID = 'UNUNI_AM_STAT_RPT'
     AND G.EU_DETAIL = '1'
     AND E.BUSINESS_UNIT_GL = G.BUSINESS_UNIT_GL
     AND E.BOOK = G.BOOK
     AND (E.ACCOUNTING_DT >= G.DATE_FROM AND E.ACCOUNTING_DT <= G.DATE_TO)
     AND E.DISTRIBUTION_TYPE = 'FA'
     AND (( E.TRANS_TYPE = 'TRF' AND E.AFFILIATE <> G.BUSINESS_UNIT_GL) OR E.TRANS_TYPE = 'RET' OR E.TRANS_TYPE = 'REI' OR E.TRANS_TYPE = 'DPR' OR E.TRANS_TYPE = 'RCT' 
                                                                                                                  OR (E.TRANS_TYPE = 'ADJ' AND E.COST_TYPE NOT IN ('R','L')) 
                                                                                                                  OR E.TRANS_TYPE = 'ADD')
     AND H.SETID = (SELECT T.SETID FROM PS_SET_CNTRL_REC T WHERE T.RECNAME = 'GL_ACCOUNT_TBL' AND T.SETCNTRLVALUE = E.BUSINESS_UNIT_GL)
     AND E.ACCOUNT = H.ACCOUNT
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.ACCOUNT = H_ED.ACCOUNT AND H_ED.EFFDT <= SYSDATE)
     AND F.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND F.ASSET_ID = E.ASSET_ID
     AND F.ACQUISITION_CD <> 'L'
ORDER BY 2;

--Experimental Version 1
--Modified column sequence and included PSXLATITEM
SELECT A.BUSINESS_UNIT, A.ASSET_ID, 'LTD', A.BOOK, A.ACCOUNT, D.DESCR, A.DISTRIBUTION_TYPE, A.TRANS_TYPE, A.TRANS_IN_OUT, A.TRANS_CODE, A.ACCOUNTING_DT, A.CATEGORY, 
            A.COST_TYPE, A.AMOUNT, A.LEDGER_GROUP, A.LEDGER, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.BUSINESS_UNIT_GL, A.CURRENCY_CD, B.DESCR AS ASSET_DESCR, A.IU_SYS_TRAN_CD, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, A.APPL_JRNL_ID, A.JOURNAL_ID, A.JOURNAL_DATE, 
            C.BUSINESS_UNIT_GL AS RPT_GL_BU, C.BOOK AS RPT_AM_BOOK, C.FISCAL_YEAR AS RPT_FY, C.PERIOD_FROM, C.PERIOD_TO, C.EU_DETAIL, X1.XLATLONGNAME AS EU_DTL_DESCR, 
            C.DATE_FROM, C.DATE_TO
FROM PS_DIST_LN A, PS_EU_AM_RUN_CNTRL C, PS_GL_ACCOUNT_TBL D, PS_ASSET B, PSXLATITEM X1
  WHERE C.OPRID = 'prakash.prashant'
     AND C.RUN_CNTL_ID = 'UNUNI_AM_STAT_RPT'
     AND C.EU_DETAIL = '1'
     AND A.BUSINESS_UNIT_GL = C.BUSINESS_UNIT_GL
     AND A.ACCOUNTING_DT <= C.DATE_TO
     AND A.BOOK = C.BOOK
     AND A.DISTRIBUTION_TYPE = 'FA'
     AND (A.TRANS_TYPE IN ('ADD','REI','DPR','ADJ','RCT','RET') OR (A.TRANS_TYPE = 'TRF' AND A.AFFILIATE <> C.BUSINESS_UNIT_GL))
     AND D.SETID = (SELECT S.SETID FROM PS_SET_CNTRL_REC S WHERE S.RECNAME = 'GL_ACCOUNT_TBL' AND S.SETCNTRLVALUE = A.BUSINESS_UNIT_GL)
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL D_ED WHERE D.SETID = D_ED.SETID AND D.ACCOUNT = D_ED.ACCOUNT AND D_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.ASSET_ID = B.ASSET_ID
     AND B.ACQUISITION_CD <> 'L'
     AND X1.FIELDNAME = 'EU_DETAIL'
     AND X1.FIELDVALUE = C.EU_DETAIL
     AND NOT EXISTS (SELECT I.ASSET_ID FROM PS_RETIREMENT I WHERE I.BUSINESS_UNIT = A.BUSINESS_UNIT AND I.ASSET_ID = A.ASSET_ID AND I.BOOK = A.BOOK 
                                     AND I.RETIREMENT_STATUS = 'C' AND I.RETIREMENT_PCT = -1 AND I.ACCOUNTING_DT < C.DATE_FROM)
UNION
SELECT E.BUSINESS_UNIT, E.ASSET_ID, 'YTD', E.BOOK, E.ACCOUNT, H.DESCR, E.DISTRIBUTION_TYPE, E.TRANS_TYPE, E.TRANS_IN_OUT, E.TRANS_CODE, E.ACCOUNTING_DT, E.CATEGORY, E.COST_TYPE, 
            E.AMOUNT, E.LEDGER_GROUP, E.LEDGER, E.FISCAL_YEAR, E.ACCOUNTING_PERIOD, E.BUSINESS_UNIT_GL, E.CURRENCY_CD, F.DESCR AS ASSET_DESCR, E.IU_SYS_TRAN_CD,
            TO_CHAR(CAST((E.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, E.APPL_JRNL_ID, E.JOURNAL_ID, E.JOURNAL_DATE, 
            G.BUSINESS_UNIT_GL AS RPT_GL_BU, G.BOOK AS RPT_AM_BOOK, G.FISCAL_YEAR AS RPT_FY, G.PERIOD_FROM, G.PERIOD_TO, G.EU_DETAIL, X2.XLATLONGNAME AS EU_DTL_DESCR, 
            G.DATE_FROM, G.DATE_TO 
FROM PS_DIST_LN E, PS_EU_AM_RUN_CNTRL G, PS_GL_ACCOUNT_TBL H, PS_ASSET F, PSXLATITEM X2
  WHERE G.OPRID = 'prakash.prashant'
     AND G.RUN_CNTL_ID = 'UNUNI_AM_STAT_RPT'
     AND G.EU_DETAIL = '1'
     AND E.BUSINESS_UNIT_GL = G.BUSINESS_UNIT_GL
     AND E.BOOK = G.BOOK
     AND (E.ACCOUNTING_DT >= G.DATE_FROM AND E.ACCOUNTING_DT <= G.DATE_TO)
     AND E.DISTRIBUTION_TYPE = 'FA'
     AND (( E.TRANS_TYPE = 'TRF' AND E.AFFILIATE <> G.BUSINESS_UNIT_GL) OR E.TRANS_TYPE = 'RET' OR E.TRANS_TYPE = 'REI' OR E.TRANS_TYPE = 'DPR' OR E.TRANS_TYPE = 'RCT' 
                                                                                                                  OR (E.TRANS_TYPE = 'ADJ' AND E.COST_TYPE NOT IN ('R','L')) 
                                                                                                                  OR E.TRANS_TYPE = 'ADD')
     AND H.SETID = (SELECT T.SETID FROM PS_SET_CNTRL_REC T WHERE T.RECNAME = 'GL_ACCOUNT_TBL' AND T.SETCNTRLVALUE = E.BUSINESS_UNIT_GL)
     AND E.ACCOUNT = H.ACCOUNT
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.ACCOUNT = H_ED.ACCOUNT AND H_ED.EFFDT <= SYSDATE)
     AND F.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND F.ASSET_ID = E.ASSET_ID
     AND F.ACQUISITION_CD <> 'L'
     AND X2.FIELDNAME = 'EU_DETAIL'
     AND X2.FIELDVALUE = G.EU_DETAIL 
ORDER BY 2;

--Experimental Version 2
--Removed references to the Run Control Table and hard coded the dates and BU
SELECT A.BUSINESS_UNIT, A.ASSET_ID, 'LTD', A.BOOK, A.ACCOUNT, D.DESCR, A.DISTRIBUTION_TYPE, A.TRANS_TYPE, A.TRANS_IN_OUT, A.TRANS_CODE, A.ACCOUNTING_DT, A.CATEGORY, 
            A.COST_TYPE, A.AMOUNT, A.LEDGER_GROUP, A.LEDGER, A.FISCAL_YEAR, A.ACCOUNTING_PERIOD, A.BUSINESS_UNIT_GL, A.CURRENCY_CD, B.DESCR AS ASSET_DESCR, A.IU_SYS_TRAN_CD, 
            TO_CHAR(CAST((A.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, A.APPL_JRNL_ID, A.JOURNAL_ID, A.JOURNAL_DATE
FROM PS_DIST_LN A, PS_GL_ACCOUNT_TBL D, PS_ASSET B
  WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND A.BUSINESS_UNIT_GL = 'UNUNI'
     AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
     AND A.BOOK = 'REPORTING'
     AND A.DISTRIBUTION_TYPE = 'FA'
     AND (A.TRANS_TYPE IN ('ADD','REI','DPR','ADJ','RCT','RET') OR (A.TRANS_TYPE = 'TRF' AND A.AFFILIATE <> A.BUSINESS_UNIT_GL))
     AND D.SETID = (SELECT S.SETID FROM PS_SET_CNTRL_REC S WHERE S.RECNAME = 'GL_ACCOUNT_TBL' AND S.SETCNTRLVALUE = A.BUSINESS_UNIT_GL)
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL D_ED WHERE D.SETID = D_ED.SETID AND D.ACCOUNT = D_ED.ACCOUNT AND D_ED.EFFDT <= SYSDATE)
     AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
     AND A.ASSET_ID = B.ASSET_ID
     AND B.ACQUISITION_CD <> 'L'
     AND NOT EXISTS (SELECT I.ASSET_ID FROM PS_RETIREMENT I WHERE I.BUSINESS_UNIT = A.BUSINESS_UNIT AND I.ASSET_ID = A.ASSET_ID AND I.BOOK = A.BOOK 
                                     AND I.RETIREMENT_STATUS = 'C' AND I.RETIREMENT_PCT = -1 AND I.ACCOUNTING_DT < TO_DATE('2014-01-01','YYYY-MM-DD'))
UNION
SELECT E.BUSINESS_UNIT, E.ASSET_ID, 'YTD', E.BOOK, E.ACCOUNT, H.DESCR, E.DISTRIBUTION_TYPE, E.TRANS_TYPE, E.TRANS_IN_OUT, E.TRANS_CODE, E.ACCOUNTING_DT, E.CATEGORY, E.COST_TYPE, 
            E.AMOUNT, E.LEDGER_GROUP, E.LEDGER, E.FISCAL_YEAR, E.ACCOUNTING_PERIOD, E.BUSINESS_UNIT_GL, E.CURRENCY_CD, F.DESCR AS ASSET_DESCR, E.IU_SYS_TRAN_CD,
            TO_CHAR(CAST((E.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') DTTM_STAMP, E.APPL_JRNL_ID, E.JOURNAL_ID, E.JOURNAL_DATE
FROM PS_DIST_LN E, PS_GL_ACCOUNT_TBL H, PS_ASSET F
  WHERE E.BUSINESS_UNIT = 'UNUNI'
     AND E.BUSINESS_UNIT_GL = 'UNUNI'
     AND E.BOOK = 'REPORTING'
     AND (E.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') AND E.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD'))
     AND E.DISTRIBUTION_TYPE = 'FA'
     AND (( E.TRANS_TYPE = 'TRF' AND E.AFFILIATE <> E.BUSINESS_UNIT_GL) OR E.TRANS_TYPE = 'RET' OR E.TRANS_TYPE = 'REI' OR E.TRANS_TYPE = 'DPR' OR E.TRANS_TYPE = 'RCT' 
                                                                                                                  OR (E.TRANS_TYPE = 'ADJ' AND E.COST_TYPE NOT IN ('R','L')) 
                                                                                                                  OR E.TRANS_TYPE = 'ADD')
     AND H.SETID = (SELECT T.SETID FROM PS_SET_CNTRL_REC T WHERE T.RECNAME = 'GL_ACCOUNT_TBL' AND T.SETCNTRLVALUE = E.BUSINESS_UNIT_GL)
     AND E.ACCOUNT = H.ACCOUNT
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_GL_ACCOUNT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.ACCOUNT = H_ED.ACCOUNT AND H_ED.EFFDT <= SYSDATE)
     AND F.BUSINESS_UNIT = E.BUSINESS_UNIT
     AND F.ASSET_ID = E.ASSET_ID
     AND F.ACQUISITION_CD <> 'L'
ORDER BY 2; 

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'DISTRIBUTION_TYPE' ORDER BY 1,2;
--Dutch and R hahahaha
SELECT * FROM PS_GM_AWD_PROJT_VW WHERE BUSINESS_UNIT_PC = 'UNUNI' AND PROJECT_ID = '00077634';

--PeopleSoft Statutory Reporting Tables
SELECT * FROM PSRECDEFN WHERE RECNAME LIKE 'RPTG_XREF%';

SELECT * FROM PS_RPTG_DETAIL_TBL;
SELECT * FROM PS_RPTG_BALANCE;
SELECT * FROM PS_RPTG_PERIOD;
SELECT * FROM PS_RPTG_XREF_AP;
SELECT * FROM PS_RPTG_XREF_APREV;
SELECT * FROM PS_RPTG_XREF_AR;
SELECT * FROM PS_RPTG_XREF_ARMIS;
SELECT * FROM PS_RPTG_XREF_ARREV;
SELECT * FROM PS_RPTG_XREF_BI;
SELECT * FROM PS_RPTG_XREF_EX;
SELECT * FROM PS_RPTG_XREF_GL;

SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_DETAIL_TBL GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_BALANCE GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_PERIOD GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_AP GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_APREV GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_AR GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_ARMIS GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_ARREV GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_BI GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_EX GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;
SELECT BUSINESS_UNIT, FISCAL_YEAR, COUNT(1) FROM PS_RPTG_XREF_GL GROUP BY BUSINESS_UNIT, FISCAL_YEAR ORDER BY BUSINESS_UNIT, FISCAL_YEAR;

--Find vouchers which have been approved, matched and budget status is valid but have not been posted (aka Post Voucher checkbox is unchecked on the Voucher Attributes Page)
--Vouchers marked DO NOT POST
--Version 1
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_ID, A.BUSINESS_UNIT_PO AS BU_PO, A.PO_ID, B.VENDOR_NAME_SHORT, B.NAME1, A.INVOICE_DT, 
            A.TXN_CURRENCY_CD, A.GROSS_AMT, A.GROSS_AMT_BSE, A.BASE_CURRENCY, A.RATE_MULT, A.RATE_DIV, A.OPRID_LAST_UPDT,
            A.BUDGET_HDR_STATUS, A.BUDGET_MISC_STATUS, A.DOC_TOL_HDR_STATUS, A.ENTRY_STATUS, A.APPR_STATUS, C.POST_UNAPPRV_FLG, C.POST_UNMATCH_FLG, A.MATCH_STATUS_VCHR
FROM PS_VOUCHER A, PS_VENDOR B, PS_BUS_UNIT_TBL_AP C 
WHERE A.VENDOR_SETID = B.SETID 
    AND A.VENDOR_ID = B.VENDOR_ID 
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.BUSINESS_UNIT LIKE '6%'
    AND A.BUDGET_HDR_STATUS = 'V' 
    AND A.BUDGET_MISC_STATUS = 'V' 
    AND A.DOC_TOL_HDR_STATUS = 'V'
    AND A.ENTRY_STATUS = 'P' 
    AND A.IN_PROCESS_FLG = 'N'
    --AND (A.PROCESS_MAN_CLOSE = 'Y' OR A.POST_STATUS_AP = 'U')
    --AND (A.APPR_STATUS = 'A' OR (A.APPR_STATUS <> 'A' AND C.POST_UNAPPRV_FLG = 'Y')) 
    AND A.POST_VOUCHER = 'N' --Do Not Post
ORDER BY 1,2;

--Verification Queries
--Version 1
SELECT BUSINESS_UNIT, ENTRY_STATUS, COUNT(1) 
FROM PS_VOUCHER 
WHERE BUSINESS_UNIT LIKE '6%'
    AND POST_VOUCHER = 'N' --Do Not Post
GROUP BY BUSINESS_UNIT, ENTRY_STATUS
ORDER BY BUSINESS_UNIT, ENTRY_STATUS;

--Version 2
SELECT BUSINESS_UNIT, ENTRY_STATUS, APPR_STATUS, TO_CHAR(INVOICE_DT, 'YYYY') AS INV_YEAR, COUNT(1) 
FROM PS_VOUCHER 
WHERE BUSINESS_UNIT LIKE '6%'
    AND POST_VOUCHER = 'N' --Do Not Post
GROUP BY BUSINESS_UNIT, ENTRY_STATUS, APPR_STATUS, TO_CHAR(INVOICE_DT, 'YYYY')
ORDER BY TO_CHAR(INVOICE_DT, 'YYYY') DESC, BUSINESS_UNIT, ENTRY_STATUS, APPR_STATUS;

--PPs combined version of UNU_CONTRACT_PO_DETAILS and UNU_CONTRACT_SVCS_DETAILS
--Under Testing
SELECT A.SETID, A.CNTRCT_ID, A.CNTRCT_STATUS, A.CNTRCT_BEGIN_DT, A.CNTRCT_EXPIRE_DT, B.BUSINESS_UNIT, B.PO_ID, B.CHNG_ORD_BATCH, B.PO_STATUS, B.BUDGET_HDR_STATUS, 
            B.HOLD_STATUS, B.RECV_STATUS, B.PO_DT, B.ACCOUNTING_DT, B.PO_REF, B.VENDOR_ID, F.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS_DESCR, F.VENDOR_NAME_SHORT, 
            F.NAME1, B.VNDR_LOC, B.BUYER_ID, B.CURRENCY_CD, B.BILL_LOCATION, B.MATCH_ACTION, B.MATCH_STATUS_PO, B.OPRID_ENTERED_BY, B.ENTERED_DT, B.OPRID_APPROVED_BY, 
            B.APPROVAL_DT, B.OPRID_MODIFIED_BY, TO_CHAR(CAST((B.LAST_DTTM_UPDATE) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS LAST_DTTM_UPDATE, B.ACTIVITY_DATE, C.LINE_NBR,
            C.CANCEL_STATUS, H.CATEGORY_CD, H.DESCR AS CAT_DESCR, C.DESCR254_MIXED, C.CNTRCT_LINE_NBR, C.RELEASE_NBR, C.RECV_REQ, C.AMT_ONLY_FLG,
            POS.SCHED_NBR, POS.CANCEL_STATUS, POS.QTY_PO, POS.PRICE_PO, POS.DUE_DT, POS.SHIPTO_ID, POS.MATCH_LINE_OPT, POS.MATCH_STATUS_LN_PO, POD.DISTRIB_LINE_NUM, 
            POD.DISTRIB_LN_STATUS, POD.BUSINESS_UNIT_GL, POD.ACCOUNT, POD.OPERATING_UNIT, POD.FUND_CODE, POD.DEPTID, POD.BUSINESS_UNIT_PC, POD.PROJECT_ID, POD.ACTIVITY_ID, 
            POD.CHARTFIELD2, POD.BUDGET_DT, POD.LOCATION, POD.CHARTFIELD_STATUS, POD.BUDGET_LINE_STATUS, POD.KK_CLOSE_FLAG, POD.DISTRIB_PCT, POD.QTY_PO, POD.MERCHANDISE_AMT, 
            POD.MERCH_AMT_BSE, POD.MONETARY_AMOUNT, POD.MONETARY_AMT_BSE, POD.RATE_MULT, POD.RATE_DIV,
            U.REVISION_DT, U.UN_AMEND_NUM, U.UN_REVISION_TYPE, U.UN_FINALIZED, U.UN_CNTRCT_TYPE, U.UN_RELATE_CNTRCT, U.UN_FUNC_TITLE, U.UN_INIT_START_DT, U.START_DT, 
            U.EXPIRATION_DT, U.UN_REMUN_AMT, U.UN_CNTRCT_FREQ, U.UN_CNTRCT_DUR, U.UN_EXPENSE_AMT, U.UN_CNTRCT_AMT, U.CURRENCY_CD, U.UN_SIGNATORY, 
            U.COMMENTS, U.OPRID_ENTERED_BY, U.DATE_ENTERED, U.OPRID_MODIFIED_BY, U.MODIFIED_DT, U.APPROVER_OPRID, U.APPROVAL_DT, 
            U.UN_PRE_OBL, U.UN_PRE_OBL_BSE, U.UN_PRE_DISB, U.UN_PRE_DISB_BSE, U.UN_PRE_CONTNT_REF
FROM PS_CNTRCT_HDR A, PS_PO_HDR B, PS_PO_LINE C, PS_VENDOR F, PS_SET_CNTRL_REC G, PS_ITM_CAT_TBL H, PS_UN_CNTRCT_DTLS U, PS_PO_LINE_SHIP POS, PS_PO_LINE_DISTRIB POD,
          PSXLATITEM X1
WHERE B.BUSINESS_UNIT = C.BUSINESS_UNIT
     AND B.PO_ID = C.PO_ID
     AND C.BUSINESS_UNIT = POS.BUSINESS_UNIT
     AND C.PO_ID = POS.PO_ID
     AND C.LINE_NBR = POS.LINE_NBR
     AND POS.BUSINESS_UNIT = POD.BUSINESS_UNIT
     AND POS.PO_ID = POD.PO_ID
     AND POS.LINE_NBR = POD.LINE_NBR
     AND POS.SCHED_NBR = POD.SCHED_NBR
     AND C.CNTRCT_SETID = A.SETID
     AND C.CNTRCT_ID = A.CNTRCT_ID
     AND F.VENDOR_ID = B.VENDOR_ID
     AND F.SETID = B.VENDOR_SETID
     AND F.VENDOR_ID = B.VENDOR_ID
     AND A.SETID = U.SETID
     AND A.CNTRCT_ID = U.CNTRCT_ID
     AND U.REVISION_DT = (SELECT MAX(U_ED.REVISION_DT) FROM PS_UN_CNTRCT_DTLS U_ED WHERE U.SETID = U_ED.SETID AND U.CNTRCT_ID = U_ED.CNTRCT_ID)
     AND A.SETID LIKE '6%'
     --AND A.CNTRCT_ID LIKE '%'
     AND A.CNTRCT_STATUS = 'A'
     AND G.SETCNTRLVALUE = B.BUSINESS_UNIT
     AND G.RECNAME = 'ITM_CAT_TBL'
     AND H.SETID = G.SETID
     AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_ITM_CAT_TBL H_ED WHERE H.SETID = H_ED.SETID AND H.CATEGORY_TYPE = H_ED.CATEGORY_TYPE 
                                                                                                                       AND H.CATEGORY_CD = H_ED.CATEGORY_CD AND H.CATEGORY_ID = H_ED.CATEGORY_ID 
                                                                                                                       AND H_ED.EFFDT <= SYSDATE)
     AND H.CATEGORY_ID = C.CATEGORY_ID
     --AND B.PO_STATUS = 'D'
     --AND F.VENDOR_ID = '0000005935'
     AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
     AND X1.FIELDVALUE (+) = F.VENDOR_CLASS
     AND X1.EFF_STATUS (+)  = 'A'
ORDER BY A.SETID, A.CNTRCT_ID, B.BUSINESS_UNIT, B.PO_ID;

--Bank Default
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'UN_AP_BNKDFT_D';

SELECT * FROM PS_UN_AP_BNKDFT_D;
SELECT * FROM PS_UN_AP_BNKDFT_D WHERE (BUSINESS_UNIT_GL = 'UNUNI' OR BUSINESS_UNIT_AP LIKE '6%' OR OPERATING_UNIT LIKE '6%' OR OPERATING_UNIT LIKE '7%' OR BANK_CD LIKE '6%') ORDER BY 1,2;
SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'UN_AP_BNKDFT_D';

--UN_OPER_CURR_VW
--UN_PYMTHD_VW
--UN_AP_SETID_OPR

SELECT * FROM PSSQLTEXTDEFN WHERE SQLID = 'UN_OPER_CURR_VW';

SELECT B.CURRENCY_CD, A.OPERATING_UNIT, C.DESCR 
FROM PS_BANK_ACCT_CHRT A, PS_BANK_ACCT_DEFN B, PS_OPER_UNIT_TBL C 
WHERE A.SETID = B.SETID 
  AND A.BANK_CD = B.BANK_CD 
  AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY 
  AND C.OPERATING_UNIT = A.OPERATING_UNIT 
  AND B.AP ='Y' 
  AND A.BANK_ACCT_LED_TYPE = 'C' 
  AND B.BANK_ACCT_TYPE ='03' 
  AND C.EFF_STATUS = 'A' 
  AND C.EFFDT = ( SELECT MAX(EFFDT) FROM PS_OPER_UNIT_TBL WHERE EFF_STATUS = C.EFF_STATUS AND OPERATING_UNIT = C.OPERATING_UNIT AND SETID = C.SETID AND EFF_STATUS = C.EFF_STATUS AND EFFDT <= SYSDATE);

SELECT * FROM PS_BANK_ACCT_CHRT WHERE BANK_CD LIKE '6%' AND BANK_ACCT_LED_TYPE = 'C';

--FIN3000
--Bank Statements

SELECT * FROM PS_BANK_STMT_TBL ORDER BY RECON_BANK_DT DESC;

--Testing GL & AP Voucher Accounting Line Recon
--Version 1
SELECT 'GL_AP_RECON_2014', HDR.BUSINESS_UNIT, HDR.JOURNAL_ID, LINE.ACCOUNT, LINE.OPERATING_UNIT, LINE.FUND_CODE, LINE.DEPTID, LINE.CHARTFIELD2, LINE.BUSINESS_UNIT_PC, LINE.PROJECT_ID, LINE.ACTIVITY_ID, 
            LINE.ANALYSIS_TYPE, HDR.DESCR254, LINE.LINE_DESCR, 
            LINE.JOURNAL_DATE, SUM(LINE.FOREIGN_AMOUNT) GL_LC, LINE.FOREIGN_CURRENCY, SUM(LINE.MONETARY_AMOUNT) GL_BC, 
            SUM(VCHL.MONETARY_AMOUNT) AP_AMT, VCHL.CURRENCY_CD
FROM PS_JRNL_HEADER HDR, PS_JRNL_LN LINE, PS_VCHR_ACCTG_LINE VCHL
WHERE HDR.BUSINESS_UNIT = LINE.BUSINESS_UNIT
    AND HDR.JOURNAL_ID = LINE.JOURNAL_ID
    AND HDR.JOURNAL_DATE = LINE.JOURNAL_DATE
    AND HDR.UNPOST_SEQ = LINE.UNPOST_SEQ
    AND HDR.BUSINESS_UNIT = VCHL.BUSINESS_UNIT_GL 
    AND HDR.JOURNAL_ID = VCHL.JOURNAL_ID 
    AND HDR.JOURNAL_DATE = VCHL.JOURNAL_DATE 
    AND LINE.JOURNAL_LINE = VCHL.JOURNAL_LINE
    AND HDR.BUSINESS_UNIT = 'UNUNI'
    AND VCHL.BUSINESS_UNIT_GL = 'UNUNI'
    AND HDR.LEDGER_GROUP = 'ACTUALS'
    AND TO_CHAR(HDR.JOURNAL_DATE, 'YYYY') = '2014'
    AND HDR.SOURCE IN ('AP')
    AND HDR.JRNL_HDR_STATUS IN ('P','U')
    AND LINE.ACCOUNT = '21005'
GROUP BY HDR.BUSINESS_UNIT, HDR.JOURNAL_ID, 
         LINE.ACCOUNT, LINE.OPERATING_UNIT, LINE.FUND_CODE, LINE.DEPTID, LINE.CHARTFIELD2, LINE.BUSINESS_UNIT_PC, LINE.PROJECT_ID, LINE.ACTIVITY_ID, 
         LINE.ANALYSIS_TYPE, HDR.DESCR254, LINE.LINE_DESCR, LINE.JOURNAL_DATE, LINE.FOREIGN_CURRENCY, VCHL.CURRENCY_CD
ORDER BY LINE.ACCOUNT, LINE.OPERATING_UNIT, LINE.FUND_CODE, LINE.DEPTID, LINE.CHARTFIELD2, LINE.BUSINESS_UNIT_PC, LINE.PROJECT_ID, LINE.ACTIVITY_ID;

--RECV_LN_ACCTG Dump
SELECT * FROM PS_RECV_LN_ACCTG RECV
WHERE RECV.BUSINESS_UNIT_GL = 'UNUNI'
    --AND RECV.DST_ACCT_TYPE = 'DST'
    --AND RECV.FISCAL_YEAR = '2014'
    AND TO_CHAR(RECV.ACCOUNTING_DT, 'YYYY-MM-DD') = '2015-01-29'
ORDER BY 1,2;

--Budget Check for UNU Receipts
--PO_EAENC and PO_RAEXP
SELECT * FROM PS_PO_KK_RACHK_REQ WHERE OPRID = 'craig.booth' ORDER BY DTTM_STAMP_SEC DESC;
SELECT * FROM PS_PO_KK_RACHK_REQ WHERE KK_SOURCE_TRAN IN ('PO_RAEXP', 'PO_RAENC') ORDER BY DTTM_STAMP_SEC DESC;

SELECT * FROM PS_PO_KK_RACHK_REQ WHERE OPRID = 'prakash.prashant' ORDER BY DTTM_STAMP_SEC DESC;
SELECT * FROM PS_PO_KK_RACHK_REQ WHERE OPRID = 'prakash.prashant' AND RUN_CNTL_ID = 'UNU_RECEIPTS_BUD_CHK' ORDER BY BUSINESS_UNIT, KK_SOURCE_TRAN;

--Receipt Accounting Entries which are ready for Journal Generation
SELECT A.BUSINESS_UNIT, A.RECEIVER_ID, A.RECV_LN_NBR, A.RECV_SHIP_SEQ_NBR, A.DISTRIB_LINE_NUM, A.DST_ACCT_TYPE, A.APPL_JRNL_ID, A.ACCOUNTING_PERIOD, A.FISCAL_YEAR, A.ORIGINAL_TRANS, A.DT_TIMESTAMP, 
       A.ACCOUNT, A.ALTACCT, A.DEPTID, A.BUSINESS_UNIT_GL, A.MERCHANDISE_AMT, A.QTY_DS_ACCPT_SUOM, A.QTY_DS_ACCPT_VUOM, A.QTY_PO, A.BUSINESS_UNIT_PO, A.PO_ID, A.PO_RELEASE_ID, A.SCHED_NBR, A.LINE_NBR, 
       A.PO_DIST_LINE_NUM, A.STATISTICS_CODE, A.STATISTIC_AMOUNT, A.LEDGER_GROUP, A.ACCOUNTING_DT, A.JOURNAL_ID, A.JOURNAL_DATE, A.UNPOST_SEQ, A.CURRENCY_CD, A.MONETARY_AMOUNT, A.FOREIGN_AMOUNT, 
       A.OPEN_ITEM_STATUS, A.JRNL_LINE_STATUS, A.RT_TYPE, A.RATE_MULT, A.RATE_DIV, A.FOREIGN_CURRENCY, A.JOURNAL_LINE_DATE, A.JRNL_LN_REF, A.LEDGER, A.MONETARY_AMT_VCHR, A.GL_DISTRIB_STATUS, A.BASE_CURRENCY, 
       A.PROCESS_INSTANCE , A.JOURNAL_LINE , A.PROJECT_ID , A.CANCEL_FLAG , A.ENTRY_EVENT , A.NEXT_PRD_REVERSAL , A.BUDGET_DT , A.BUDGET_LINE_STATUS , 
       A.EE_PROC_STATUS , A.BUSINESS_UNIT_PC , A.ACTIVITY_ID , A.ANALYSIS_TYPE , A.RESOURCE_TYPE , A.RESOURCE_CATEGORY , A.RESOURCE_SUB_CAT 
FROM PS_RECV_LN_ACCTG A 
WHERE NOT EXISTS (SELECT 'X' FROM PS_RECV_LN_ACCTG B WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.RECEIVER_ID = B.RECEIVER_ID AND A.RECV_LN_NBR = B.RECV_LN_NBR 
                    AND A.RECV_SHIP_SEQ_NBR = B.RECV_SHIP_SEQ_NBR AND A.DISTRIB_LINE_NUM = B.DISTRIB_LINE_NUM AND A.APPL_JRNL_ID = B.APPL_JRNL_ID 
                    AND A.ACCOUNTING_PERIOD = B.ACCOUNTING_PERIOD AND A.FISCAL_YEAR = B.FISCAL_YEAR AND B.BUDGET_LINE_STATUS <> 'V' AND B.BUDGET_LINE_STATUS <> 'W'
                    )
      AND A.BUSINESS_UNIT_GL = 'UNUNI'
ORDER BY 1,2;

--Group By BU, Budget Line Status etc.,
SELECT BUSINESS_UNIT, BUDGET_LINE_STATUS, DST_ACCT_TYPE, COUNT(1) 
FROM PS_RECV_LN_ACCTG A 
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
GROUP BY BUSINESS_UNIT, BUDGET_LINE_STATUS, DST_ACCT_TYPE
ORDER BY BUSINESS_UNIT, BUDGET_LINE_STATUS;

SELECT BUSINESS_UNIT, BUDGET_LINE_STATUS, DST_ACCT_TYPE, FISCAL_YEAR, GL_DISTRIB_STATUS, COUNT(1) 
FROM PS_RECV_LN_ACCTG A 
WHERE BUSINESS_UNIT_GL = 'UNUNI' 
GROUP BY BUSINESS_UNIT, BUDGET_LINE_STATUS, DST_ACCT_TYPE, FISCAL_YEAR, GL_DISTRIB_STATUS
ORDER BY BUSINESS_UNIT, BUDGET_LINE_STATUS, DST_ACCT_TYPE, FISCAL_YEAR;

--FS_JGEN for UNU RA
SELECT * FROM PS_JRNLGEN_REQUEST WHERE ACCTG_DEF_NAME = 'RECACCRL' ORDER BY PROCESS_INSTANCE DESC;
SELECT * FROM PS_JRNLGEN_REQUEST WHERE OPRID = 'craig.booth' AND RUN_CNTL_ID = 'RECEIPT_ACCRUAL';

SELECT * FROM PS_JRNLGEN_REQUEST WHERE OPRID = 'prakash.prashant' AND RUN_CNTL_ID = 'UNU_RECEIPT_ACCR_JGEN' ORDER BY 1;

--Testing UNU PO Self Approval
--PO_PNLS_WRK.OPRID.RowInit
SELECT * FROM PS_OPR_PO_BUYER WHERE OPRID = 'mariko.shimazu-oberhoff';
SELECT PO_WRK_APPR_AUTH AS "Work Approved Purchase Orders", ALL_BUYERS_FLG "All Buyers Flag", A.* FROM PS_OPR_DEF_TBL_PM A WHERE OPRID = 'mariko.shimazu-oberhoff';

SELECT PO_WRK_APPR_AUTH AS "Work Approved Purchase Orders", ALL_BUYERS_FLG "All Buyers Flag", A.* FROM PS_OPR_DEF_TBL_PM A 
WHERE A.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY A.OPRID;

--Join Operator/Buyer Table with Purchasing Defaults
SELECT PO_WRK_APPR_AUTH AS "Work Approved Purchase Orders", ALL_BUYERS_FLG "All Buyers Flag", B.*,A.* 
FROM (PS_OPR_DEF_TBL_PM A LEFT OUTER JOIN PS_OPR_PO_BUYER B ON A.OPRID = B.OPRID)
WHERE A.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY A.OPRID;

--UNU Receipts Budget Exceptions
--Source Transaction Definition
SELECT * FROM PS_KK_PANEL_EVENT WHERE KK_SOURCE_TRAN IN ('PO_RAEXP', 'PO_RAENC');
--KK_XCP_PO5_VW2 -> RECV_ENC_LN_VW1 -> (NOT IN ('RAC', 'DST'))
--KK_XCP_PO4_VW2 -> RECV_EXP_LN_VW1 -> (NOT IN ('RAC', 'ENR'))
--Version 1
--Anchor on KK Tables
SELECT KKH.KK_TRAN_ID, KKH.KK_TRAN_DT, KKH.BUSINESS_UNIT, KKH.RECEIVER_ID, KKH.RECV_LN_NBR, KKH.RECV_SHIP_SEQ_NBR, KKH.DISTRIB_LINE_NUM, KKH.DST_ACCT_TYPE, X1.XLATLONGNAME AS "Accounting Entry Type",
       KKH.APPL_JRNL_ID, KKH.ACCOUNTING_PERIOD, KKH.FISCAL_YEAR, KKH.ORIGINAL_TRANS, KKH.DT_TIMESTAMP, KKH.KK_PROC_INSTANCE, KKH.KK_PROCESS_STATUS,
       KKL.KK_TRAN_LN, KKE.LEDGER_GROUP, KKE.EXCPTN_TYPE, X2.XLATLONGNAME AS "Exception Description", 
       KKE.BUSINESS_UNIT, KKE.ACCOUNT, KKE.DEPTID, KKE.OPERATING_UNIT, KKE.FUND_CODE, KKE.CHARTFIELD2, KKE.BUSINESS_UNIT_PC, KKE.PROJECT_ID, KKE.ACTIVITY_ID, KKE.BUDGET_PERIOD
FROM ((((PS_KK_SOURCE_HDR KKH LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'DST_ACCT_TYPE' AND X1.FIELDVALUE = KKH.DST_ACCT_TYPE)
         LEFT OUTER JOIN PS_KK_SOURCE_LN KKL ON KKH.KK_TRAN_ID = KKL.KK_TRAN_ID AND KKH.KK_TRAN_DT = KKL.KK_TRAN_DT)
         LEFT OUTER JOIN PS_KK_EXCPTN_TBL KKE ON KKL.KK_TRAN_ID = KKE.KK_TRAN_ID AND KKL.KK_TRAN_DT = KKE.KK_TRAN_DT AND KKL.KK_TRAN_LN = KKE.KK_TRAN_LN)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'EXCPTN_TYPE' AND X2.FIELDVALUE = KKE.EXCPTN_TYPE)
WHERE KKH.KK_SOURCE_TRAN IN ('PO_RAEXP', 'PO_RAENC') 
  AND KKH.KK_PROCESS_STATUS NOT IN ('V','N')
  AND KKH.BUSINESS_UNIT LIKE '6%'
  AND TO_CHAR(KKH.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY KKH.KK_TRAN_ID, KKH.KK_TRAN_DT, KKH.BUSINESS_UNIT, KKH.RECEIVER_ID, KKH.RECV_LN_NBR, KKH.RECV_SHIP_SEQ_NBR, KKH.DISTRIB_LINE_NUM, KKH.DST_ACCT_TYPE;

--Verification Queries
SELECT * FROM PS_KK_SOURCE_LN WHERE KK_TRAN_ID = '0079620737';
SELECT * FROM PS_KK_EXCPTN_TBL WHERE KK_TRAN_ID = '0079620737';

--Version 1
--Anchor on Receipt Accounting Line Table
SELECT DISTINCT B.KK_TRAN_ID, B.KK_TRAN_DT, B.KK_TRAN_LN, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, C.DST_ACCT_TYPE, C.APPL_JRNL_ID, C.ACCOUNTING_PERIOD, C.FISCAL_YEAR,
       C.ORIGINAL_TRANS, C.DT_TIMESTAMP, C.BUSINESS_UNIT_GL, C.ACCOUNT, C.DEPTID, C.OPERATING_UNIT, C.FUND_CODE, C.AFFILIATE, C.AFFILIATE_INTRA1, C.AFFILIATE_INTRA2, C.CHARTFIELD2, C.BUSINESS_UNIT_PC, C.PROJECT_ID,
       C.ACTIVITY_ID, C.BUDGET_DT, C.BUDGET_LINE_STATUS, C.STATISTICS_CODE, C.QTY_DS_ACCPT_SUOM, C.FOREIGN_AMOUNT, C.FOREIGN_CURRENCY, C.MONETARY_AMOUNT, C.CURRENCY_CD,
       KKE.LEDGER_GROUP, KKE.EXCPTN_TYPE, X2.XLATLONGNAME AS "Exception Description",
       KKE.BUSINESS_UNIT, KKE.ACCOUNT, KKE.DEPTID, KKE.OPERATING_UNIT, KKE.FUND_CODE, KKE.CHARTFIELD2, KKE.BUSINESS_UNIT_PC, KKE.PROJECT_ID, KKE.ACTIVITY_ID, KKE.BUDGET_PERIOD
FROM ((((PS_RECV_LN_ACCTG C LEFT OUTER JOIN PS_KK_SOURCE_HDR D ON C.BUSINESS_UNIT = D.BUSINESS_UNIT AND C.RECEIVER_ID = D.RECEIVER_ID AND C.RECV_LN_NBR = D.RECV_LN_NBR AND C.RECV_SHIP_SEQ_NBR= D.RECV_SHIP_SEQ_NBR 
                                                              AND C.DISTRIB_LINE_NUM = D.DISTRIB_LINE_NUM AND C.APPL_JRNL_ID = D.APPL_JRNL_ID AND C.ACCOUNTING_PERIOD = D.ACCOUNTING_PERIOD AND C.FISCAL_YEAR = D.FISCAL_YEAR 
                                                              AND C.DST_ACCT_TYPE = D.DST_ACCT_TYPE)
         LEFT OUTER JOIN PS_KK_SOURCE_LN B ON B.KK_TRAN_ID = D.KK_TRAN_ID AND B.KK_TRAN_DT = D.KK_TRAN_DT)
         LEFT OUTER JOIN PS_KK_EXCPTN_TBL KKE ON B.KK_TRAN_ID = KKE.KK_TRAN_ID AND B.KK_TRAN_DT = KKE.KK_TRAN_DT AND B.KK_TRAN_LN = KKE.KK_TRAN_LN)
         LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'EXCPTN_TYPE' AND X2.FIELDVALUE = KKE.EXCPTN_TYPE)
WHERE D.KK_SOURCE_TRAN IN ('PO_RAEXP', 'PO_RAENC') 
  AND D.KK_PROCESS_STATUS NOT IN ('V','N')
  AND (D.BUSINESS_UNIT LIKE '6%' OR C.BUSINESS_UNIT_GL = 'UNUNI')
  AND TO_CHAR(D.KK_TRAN_DT, 'YYYY') >= '2014'
ORDER BY B.KK_TRAN_ID, B.KK_TRAN_DT, B.KK_TRAN_LN, C.BUSINESS_UNIT, C.RECEIVER_ID, C.RECV_LN_NBR, C.RECV_SHIP_SEQ_NBR, C.DISTRIB_LINE_NUM, C.DST_ACCT_TYPE, C.FISCAL_YEAR, C.ACCOUNTING_PERIOD, C.DT_TIMESTAMP;

--KK Exceptions details KK Overridable
SELECT * FROM PS_KK_BC_EXCPTNS;

SELECT * FROM PS_KK_XCP_OPR_DEF
WHERE OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu')
ORDER BY 1;

--PO_RECVPUSH selection SQL
SELECT S.BUSINESS_UNIT, S.RECEIVER_ID, H.RECV_STATUS, H.RECEIPT_DT, H.LAST_DTTM_UPDATE, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.INV_ITEM_ID  
FROM PS_RECV_HDR H, PS_RECV_LN_SHIP S  
WHERE H.PROCESS_INSTANCE = 0  
  AND H.RECV_STATUS <> 'X'  
  AND H.BUSINESS_UNIT LIKE '6%'  
  AND H.BUSINESS_UNIT = S.BUSINESS_UNIT  
  AND H.RECEIVER_ID = S.RECEIVER_ID  
  AND S.PROCESS_COMPLETE = 'N'
  AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (0)),'YYYY-MM-DD') >= '2015-01-01' 
  AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY H.RECEIPT_DT DESC, H.LAST_DTTM_UPDATE DESC, S.BUSINESS_UNIT, S.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR;

SELECT RECV_STATUS, A.* FROM PS_RECV_HDR A WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000128';
SELECT RECV_SHIP_STATUS, MOVE_STAT_AM, MOVE_STAT_INV, MOVE_STAT_MFG, A.* FROM PS_RECV_LN_SHIP A WHERE BUSINESS_UNIT = '622UU' AND RECEIVER_ID = '0000000128';

--Check Copy PO for Voucher creation
--Any rows with P will cause an issue
SELECT BUSINESS_UNIT, DISTRIB_LN_STATUS, COUNT(1)
FROM PS_PO_LINE_DISTRIB
WHERE (BUSINESS_UNIT LIKE '6%' OR BUSINESS_UNIT_GL = 'UNUNI')
  AND DISTRIB_LN_STATUS = 'P'
GROUP BY BUSINESS_UNIT, DISTRIB_LN_STATUS
ORDER BY BUSINESS_UNIT, DISTRIB_LN_STATUS;

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'DISTRIB_LN_STATUS';

--UNU Users with Pay Cycle access
SELECT * FROM PSOPRDEFN WHERE OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
AND OPRCLASS LIKE '6%'
ORDER BY 1;

SELECT * FROM PSOPRDEFN WHERE OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
AND OPRCLASS NOT LIKE '6%'
AND EXISTS (SELECT 'X' FROM PSROLEUSER WHERE PSOPRDEFN.OPRID = PSROLEUSER.ROLEUSER AND ROLENAME = 'UN_UNU_AP_PAYCYCLE_APPR')
ORDER BY 1;

--FG Testing
SELECT * FROM PS_PMT_BATCHFIELDS;
SELECT IN_PROCESS_FLG, PMTRUNINSTANCE, A.* FROM PS_PMT_DETAIL_TBL A WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_PMT_INVOICE_TBL A WHERE BUSINESS_UNIT LIKE '6%';
SELECT * FROM PS_PMT_INTRM_TBL;
SELECT * FROM PS_PMT_INTRM_ACCT;
--Set Charge Acct Setting
SELECT 'X' 
FROM PS_PMT_DETAIL_TBL A, PS_BANK_ACCT_DEFN B 
WHERE A.PMT_FILE_ID=:1 
  AND A.BANK_SETID=B.SETID 
  AND A.BANK_CD=B.BANK_CD 
  AND A.BANK_CD=B.BANK_CD_CPTY 
  AND A.BANK_ACCT_KEY=B.BANK_ACCT_KEY 
  AND B.CHRG_BANK_CD <> ' ' 
  AND B.CHRG_BANK_ACCT_KEY <> ' '
ORDER BY 1,2;

SELECT * FROM PS_PMT_FILE_DEFN;
SELECT * FROM PS_PMT_FILE_ACK;
SELECT * FROM PS_PMT_FILE_ERR;
SELECT * FROM PS_PMT_FILE_XREF;

SELECT * FROM PS_STL_EFT_TRAN WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_PMT_FILE_PMT_VW WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_PMT_FILE_XRF_VW WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';

--FG FIle Status Statistics
--Version 1
SELECT FORMAT_ID, BANK_CD, FILE_STATUS, OUTPUT_TYPE, COUNT(1)
FROM PS_PMT_FILE_DEFN
GROUP BY FORMAT_ID, BANK_CD, FILE_STATUS, OUTPUT_TYPE
ORDER BY FORMAT_ID, BANK_CD, FILE_STATUS, OUTPUT_TYPE;

--FG FIle Status Statistics
--Version 2
SELECT PF.FORMAT_ID, PF.BANK_CD, BNK.DESCR AS BANK_DESCR, BNK.BANK_TYPE, X3.XLATLONGNAME AS BANK_TYPE_DESCR, 
       PF.FILE_STATUS, X1.XLATLONGNAME AS FILE_STATUS_DESCR, PF.OUTPUT_TYPE, X2.XLATLONGNAME AS OUTPUT_TYPE_DESCR, TO_CHAR(PF.CREATE_DTTM, 'YYYY') AS YEAR, COUNT(1)
FROM ((((PS_PMT_FILE_DEFN PF LEFT OUTER JOIN PS_BANK_CD_TBL BNK ON PF.BANK_SETID = BNK.SETID AND PF.BANK_CD = BNK.BANK_CD)
        LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'FILE_STATUS' AND X1.FIELDVALUE = PF.FILE_STATUS)
        LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'OUTPUT_TYPE' AND X2.FIELDVALUE = PF.OUTPUT_TYPE)
        LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'BANK_TYPE' AND X3.FIELDVALUE = BNK.BANK_TYPE)
GROUP BY PF.FORMAT_ID, PF.BANK_CD, BNK.DESCR, BNK.BANK_TYPE, X3.XLATLONGNAME, PF.FILE_STATUS, X1.XLATLONGNAME, PF.OUTPUT_TYPE, X2.XLATLONGNAME, TO_CHAR(PF.CREATE_DTTM, 'YYYY')
ORDER BY TO_CHAR(PF.CREATE_DTTM, 'YYYY') DESC, FORMAT_ID, BANK_CD, FILE_STATUS, OUTPUT_TYPE;


SELECT * FROM PS_UN_TR_BKID_MAP;

SELECT * FROM PSPNLFIELD WHERE RECNAME = 'UN_TR_BKID_MAP';
SELECT * FROM PSPNLGROUP WHERE PNLNAME = 'UN_TR_FG_BNK_CHNL';
SELECT * FROM PSMENUITEM WHERE PNLGRPNAME = 'UN_TR_FG_BNK_CHNL';
--SELECT * FROM PSMENUDEFN WHERE PNLGRPNAME = 'UN_TR_FG_BNK_CHNL';

SELECT * FROM PSRECDEFN WHERE RECNAME LIKE 'PSMENU%';

--Pay Cycle Error Table
--Keep Tab on S06 as that is related to FG Staging
SELECT A.PAY_CYCLE, A.ERR_TYPE, X1.XLATLONGNAME AS ERR_DESCR, A.BUSINESS_UNIT, A.BANK_CD, A.PYMNT_METHOD, A.SOURCE_TXN, COUNT(1) AS "Number of Rows"
FROM (PS_PYCYCL_ERR_TMP A LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'ERR_TYPE' AND X1.FIELDVALUE = A.ERR_TYPE)
GROUP BY A.PAY_CYCLE, A.ERR_TYPE, X1.XLATLONGNAME, A.BUSINESS_UNIT, A.BANK_CD, A.PYMNT_METHOD, A.SOURCE_TXN
ORDER BY A.ERR_TYPE, A.PAY_CYCLE;

SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'ERR_TYPE';
SELECT * FROM PS_PYCYCL_ERR_TMP WHERE PAY_CYCLE = 'JAM10A' AND ERR_TYPE = 'S07';

--AP_FG_PROC
--Identify Paycycle
SELECT DISTINCT A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.PYMNT_METHOD, BNK.DESCR 
FROM (PS_PYCYCL_DATA A LEFT OUTER JOIN PS_BANK_CD_TBL BNK ON A.BANK_SETID = BNK.SETID AND A.BANK_CD = BNK.BANK_CD)
WHERE A.STL_THROUGH = '01'
  --AND A.PAY_CYCLE LIKE '6%' 
  --AND A.PAY_CYCLE_SEQ_NUM = %Bind(PAY_CYCLE_SEQ_NUM)
ORDER BY 1,2;
--For UNU
SELECT * FROM PS_PYCYCL_DATA WHERE REMIT_SETID = 'UNUNI' 
ORDER BY PYMNT_DT DESC, PAY_CYCLE, PAY_CYCLE_SEQ_NUM, BUSINESS_UNIT, PAY_DOC_ID;
--Payment Table
SELECT BANK_SETID, BANK_CD, BANK_ACCT_KEY, PYMNT_METHOD, STL_THROUGH, PMT_PYMNT_STATUS, COUNT(1)
FROM PS_PAYMENT_TBL
WHERE PMT_PYMNT_STATUS = 'N'
  AND STL_THROUGH = '01' 
GROUP BY BANK_SETID, BANK_CD, BANK_ACCT_KEY, PYMNT_METHOD, STL_THROUGH, PMT_PYMNT_STATUS
ORDER BY BANK_SETID, BANK_CD, BANK_ACCT_KEY, PYMNT_METHOD, STL_THROUGH, PMT_PYMNT_STATUS;
--Select Payments
SELECT B.BANK_SETID, B.BANK_CD, B.BANK_ACCT_KEY, B.PYMNT_ID, B.REMIT_SETID, B.REMIT_VENDOR, B.VNDR_LOC, B.EMPLID, B.SOURCE_TXN, B.PYMNT_STATUS, X1.XLATLONGNAME AS PYMNT_STS_DESCR
FROM PS_PYCYCL_MTHD A, (PS_PAYMENT_TBL B LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'PYMNT_STATUS' AND X1.FIELDVALUE = B.PYMNT_STATUS)
WHERE A.BANK_SETID = B.BANK_SETID 
  AND A.BANK_CD = B.BANK_CD 
  AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY 
  AND A.PYMNT_METHOD = B.PYMNT_METHOD 
  AND B.PAY_CYCLE = A.PAY_CYCLE 
  AND B.PYMNT_METHOD IN ('EFT','WIR','ACH','FGT') 
  AND B.PMT_PYMNT_STATUS = 'N' 
  AND B.PYMNT_STATUS IN ('P','E') 
  AND B.STL_THROUGH = '01'
  --AND A.PAY_CYCLE LIKE '6%'
  --AND B.PAY_CYCLE_SEQ_NUM = %Bind(PAY_CYCLE_SEQ_NUM)
ORDER BY B.BANK_SETID, B.BANK_CD, B.BANK_ACCT_KEY, B.PYMNT_ID;


--BANK INTEGRATION SETUP PAGES
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'BANK_INTEGRATION';
SELECT * FROM PSRECFIELDDB WHERE RECNAME = 'BANK_FORMAT';
SELECT * FROM PS_PMT_FRMTDOC_VW;
SELECT * FROM PS_PMT_FORMAT_DEFN;
SELECT * FROM PS_BANK_FORMAT;
SELECT DISTINCT FORMAT_ID FROM PS_BANK_FORMAT;
SELECT * FROM PS_BANK_FORMT_PROP;
SELECT * FROM PSXLATITEM WHERE FIELDNAME IN ('OUTPUT_TYPE', 'FORMAT_DOC_TYPE');

--Bank Integration Layout
--VERSION 1
SELECT A.BANK_CD, BNK.DESCR, A.FORMAT_ID, FD.FORMAT_NAME, FD.DESCR254, A.FORMAT_DOC_TYPE, X1.XLATLONGNAME AS FORMAT_DESCR, A.OUTPUT_TYPE, X2.XLATLONGNAME AS OP_DESCR, 
       A.BANKNODE, A.PROGRAM_ID, A.PMT_CRYPTO_ID, A.ACK_ENABLED, A.SYNC_ASYNC_SW, A.MAX_PMT_COUNT, A.FORMAT_OPTION, A.PRENOTE_FLAG, B.PROP_CODE, B.VALUE 
FROM (((((PS_BANK_FORMAT A LEFT OUTER JOIN PS_BANK_CD_TBL BNK ON A.SETID = BNK.SETID AND A.BANK_CD = BNK.BANK_CD) 
       LEFT OUTER JOIN PS_BANK_FORMT_PROP B ON A.SETID = B.SETID AND A.BANK_CD = B.BANK_CD AND A.FORMAT_ID = B.FORMAT_ID)
       LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'FORMAT_DOC_TYPE' AND X1.FIELDVALUE = A.FORMAT_DOC_TYPE)
       LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'OUTPUT_TYPE' AND X2.FIELDVALUE = A.OUTPUT_TYPE)
       LEFT OUTER JOIN PS_PMT_FORMAT_DEFN FD ON A.FORMAT_ID = FD.FORMAT_ID)
WHERE A.SETID = 'SHARE'
ORDER BY A.BANK_CD, A.FORMAT_ID;

--Bank Integration Layout
--VERSION 2
SELECT A.BANK_CD, BNK.DESCR, A.FORMAT_ID, FD.FORMAT_NAME, FD.DESCR254, A.FORMAT_DOC_TYPE, X1.XLATLONGNAME AS FORMAT_DESCR, A.OUTPUT_TYPE, X2.XLATLONGNAME AS OP_DESCR, 
       A.BANKNODE, A.PROGRAM_ID, A.PMT_CRYPTO_ID, A.ACK_ENABLED, A.SYNC_ASYNC_SW, A.MAX_PMT_COUNT, A.FORMAT_OPTION, A.PRENOTE_FLAG, B.PROP_CODE, B.VALUE,
       FD.TRANS_PROGRAM_TYPE, X3.XLATLONGNAME AS TRANS_PRGM_DESCR, FD.TRANSFORM_PROGRAM, FD.PACKAGEROOT, FD.QUALIFYPATH, FD.APPCLASSID, FD.REPORT_DEFN_ID, 
       FD.TEMPLATE_ID, FD.SOURCE_DOC, FD.TRANSFORM_MSG, FD.CHUNK_CD, FD.MAX_PMT_COUNT 
FROM ((((((PS_BANK_FORMAT A LEFT OUTER JOIN PS_BANK_CD_TBL BNK ON A.SETID = BNK.SETID AND A.BANK_CD = BNK.BANK_CD) 
       LEFT OUTER JOIN PS_BANK_FORMT_PROP B ON A.SETID = B.SETID AND A.BANK_CD = B.BANK_CD AND A.FORMAT_ID = B.FORMAT_ID)
       LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'FORMAT_DOC_TYPE' AND X1.FIELDVALUE = A.FORMAT_DOC_TYPE)
       LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'OUTPUT_TYPE' AND X2.FIELDVALUE = A.OUTPUT_TYPE)
       LEFT OUTER JOIN PS_PMT_FORMAT_DEFN FD ON A.FORMAT_ID = FD.FORMAT_ID)
       LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'TRANS_PROGRAM_TYPE' AND X3.FIELDVALUE = FD.TRANS_PROGRAM_TYPE)
WHERE A.SETID = 'SHARE'
ORDER BY A.BANK_CD, A.FORMAT_ID, B.PROP_CODE;

--Citibank Jamaica T1 Testing for FG
SELECT * FROM PS_UN_AP_BU_SETID WHERE BANK_CD = '00119';

SELECT * FROM PS_PAYMENT_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD = '00119' AND TO_CHAR(PYMNT_DT, 'YYYY') = '2015';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE PYMNT_ID = '0000022249' AND BUSINESS_UNIT = 'JAM10';
SELECT * FROM PS_PYMNT_VCHR_XREF WHERE PYMNT_ID = '0000020529' AND BUSINESS_UNIT = 'JAM10';

SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = 'JAM10' AND VOUCHER_ID = '00019436';
SELECT * FROM PS_DISTRIB_LINE WHERE BUSINESS_UNIT = 'JAM10' AND VOUCHER_ID = '00020797';

SELECT * FROM PSOPRDEFN WHERE OPRID = 'millicent.dawkins';
SELECT * FROM PSOPRDEFN WHERE OPRID = 'claire.adrien';

SELECT * FROM PSROLEUSER WHERE ROLEUSER = 'claire.adrien';

SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_VOUCHER_LVL1' AND ROLEUSER = 'claire.adrien';
SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_VOUCHER_LVL1' AND ROLEUSER LIKE '%stewart%';
SELECT * FROM PS_RTE_CNTL_RUSER WHERE ROLENAME = 'UN_HQ_Finance_User' AND ROLEUSER = 'claire.adrien';


--Testing for Security Setup
SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'ENT_ONLAID_UPDT';
SELECT * FROM PSAUTHITEM WHERE MENUNAME = 'ENTER_RECEIVABLES' AND BARNAME = 'USE' AND BARITEMNAME = 'ONLINE_PENDING_ITEM_ENTRY' ORDER BY CLASSID;
SELECT * FROM PSROLECLASS WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'ENTER_RECEIVABLES' AND BARNAME = 'USE' AND BARITEMNAME = 'ONLINE_PENDING_ITEM_ENTRY') ORDER BY 1;

SELECT DISTINCT ROLEUSER 
FROM PSROLEUSER 
WHERE ROLENAME IN (SELECT ROLENAME FROM PSROLECLASS WHERE CLASSID IN (SELECT CLASSID FROM PSAUTHITEM WHERE MENUNAME = 'ENTER_RECEIVABLES' AND BARNAME = 'USE' AND BARITEMNAME = 'ONLINE_PENDING_ITEM_ENTRY'))
  AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

SELECT * FROM PS_ACLCOMPONENT_V2 WHERE PNLGRPNAME = 'VCHR_EXPRESS';
SELECT * FROM PSPNLGROUP WHERE PNLGRPNAME = 'VCHR_EXPRESS';

--UN Custom Bank Security View
SELECT * FROM PS_UN_BCD_SCRTY_VW WHERE UN_SETID = 'SHARE' AND UN_BANK_CD LIKE '6%' ORDER BY UN_SETID, UN_BANK_CD, ROLEUSER;

SELECT DISTINCT A.ROLEUSER, C.SETID, C.BANK_CD, D.BNK_ID_NBR 
FROM PSROLEUSER A, PS_BANK_ACCT_CHRT B, PS_BANK_ACCT_DEFN C, PS_BANK_CD_TBL D 
WHERE SUBSTR(A.ROLENAME,1, 1) = '#' 
  AND SUBSTR(A.ROLENAME,2,3) = B.OPERATING_UNIT 
  AND B.SETID = C.SETID 
  AND B.BANK_CD = C.BANK_CD 
  AND B.BANK_CD_CPTY = C.BANK_CD_CPTY 
  AND B.BANK_ACCT_KEY = C.BANK_ACCT_KEY 
  AND B.SETID = D.SETID 
  AND B.BANK_CD = D.BANK_CD
  AND C.SETID = 'SHARE' 
  AND C.BANK_CD LIKE '6%'
ORDER BY C.SETID, C.BANK_CD, A.ROLEUSER;

--Bank to Book Reconcilition
SELECT BB.BNK_ID_NBR, BB.BANK_ACCOUNT_NUM, BB.CURRENCY_CD, SUM(BB.BALANCE), BB.VALUE_DT
FROM PS_BANK_BALANCES BB
WHERE BB.VALUE_DT = (SELECT MAX(B_ED.VALUE_DT) FROM PS_BANK_BALANCES B_ED WHERE B_ED.BNK_ID_NBR = BB.BNK_ID_NBR AND B_ED.BANK_ACCOUNT_NUM = BB.BANK_ACCOUNT_NUM AND B_ED.VALUE_DT <= TO_DATE('2015-01-31','YYYY-MM-DD'))
AND BB.BNK_ID_NBR = 'CITICATT'
AND BB.BANK_ACCOUNT_NUM = '2016542007'
AND BB.BANK_STMT_CODE = '015'
GROUP BY BB.BNK_ID_NBR, BB.BANK_ACCOUNT_NUM, BB.CURRENCY_CD, BB.VALUE_DT
ORDER BY BB.BNK_ID_NBR, BB.BANK_ACCOUNT_NUM, BB.CURRENCY_CD, BB.VALUE_DT;

SELECT * FROM PS_STMT_CODE_TBL WHERE TYPE_CODE IN ('1','2');

SELECT * FROM PS_BANK_BALANCES WHERE BNK_ID_NBR = 'CITICATT' AND BANK_ACCOUNT_NUM = '2016542007' ORDER BY VALUE_DT DESC, BNK_ID_NBR;
SELECT * FROM PS_BANK_BALANCES WHERE BNK_ID_NBR = 'CITIUS33' AND BANK_ACCOUNT_NUM = '36890367' ORDER BY VALUE_DT DESC, BNK_ID_NBR;

SELECT BNK_ID_NBR, BANK_STMT_CODE, TO_CHAR(VALUE_DT, 'YYYY') AS "YEAR", COUNT(1) 
FROM PS_BANK_BALANCES
GROUP BY BNK_ID_NBR, BANK_STMT_CODE, TO_CHAR(VALUE_DT, 'YYYY')
ORDER BY TO_CHAR(VALUE_DT, 'YYYY') DESC, BNK_ID_NBR, BANK_STMT_CODE;

SELECT * FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_BANK_ACCT_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_BANK_ACCT_DEFN WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';

SELECT A.BNK_ID_NBR, A.BANK_STMT_CODE, TO_CHAR(A.VALUE_DT, 'YYYY') AS "YEAR", COUNT(1), SUM(BALANCE) AS BALANCE 
FROM PS_BANK_BALANCES A
WHERE A.BNK_ID_NBR IN (SELECT B.BNK_ID_NBR FROM PS_BANK_CD_TBL B WHERE B.SETID = 'SHARE' AND A.BNK_ID_NBR = B.BNK_ID_NBR AND BANK_CD LIKE '6%')
GROUP BY A.BNK_ID_NBR, A.BANK_STMT_CODE, TO_CHAR(A.VALUE_DT, 'YYYY')
ORDER BY TO_CHAR(A.VALUE_DT, 'YYYY') DESC, A.BNK_ID_NBR, A.BANK_STMT_CODE;

--Get Opening Cash_Book Balance for B2B
SELECT * FROM PS_UN_CASH_BOOK_01 WHERE BNK_ID_NBR = 'CITICATT' AND BANK_ACCOUNT_NUM = '2016542007' ORDER BY ASOFDATE DESC, BNK_ID_NBR;

--Bank Statements
--Yearly Aggregation
--Its confusing
SELECT X.BANK_CD, X.DESCR, X.COUNTRY, X.BNK_ID_NBR, X.BANK_ACCOUNT_NUM, X.CURRENCY_CD, X.VALUE_YEAR, 
       SUM(X.OPENING_LEDGER) AS "OPENING LEDGER", SUM(X.CLOSING_LEDGER) "CLOSING LEDGER"
FROM
(
SELECT B.BANK_CD, B.DESCR, B.COUNTRY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.CURRENCY_CD, TO_CHAR(A.VALUE_DT, 'YYYY') AS VALUE_YEAR, COUNT(1), SUM(A.BALANCE) AS BALANCE
       , CASE A.BANK_STMT_CODE WHEN '010' THEN SUM(A.BALANCE) ELSE 0 END AS "OPENING_LEDGER"
       , CASE A.BANK_STMT_CODE WHEN '015' THEN SUM(A.BALANCE) ELSE 0 END AS "CLOSING_LEDGER"
FROM PS_BANK_BALANCES A, PS_BANK_CD_TBL B
WHERE B.SETID = 'SHARE' 
  AND A.BNK_ID_NBR = B.BNK_ID_NBR 
  AND BANK_CD LIKE '6%'
GROUP BY B.BANK_CD, B.DESCR, B.COUNTRY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.CURRENCY_CD, A.BANK_STMT_CODE, TO_CHAR(A.VALUE_DT, 'YYYY')
) X
GROUP BY X.BANK_CD, X.DESCR, X.COUNTRY, X.BNK_ID_NBR, X.BANK_ACCOUNT_NUM, X.CURRENCY_CD, X.VALUE_YEAR
ORDER BY X.BANK_CD, X.VALUE_YEAR DESC;

--Bank Statements
--Yearly Aggregation
--More detail and easier to interpret
SELECT X.BANK_CD, X.DESCR, X.COUNTRY, X.BANK_ACCT_KEY, X.BNK_ID_NBR, X.BANK_ACCOUNT_NUM, X.BANK_ACCT_DESCR, X.CURRENCY_CD, X.VALUE_YEAR, X.VALUE_MONTH,
       SUM(X.OPENING_LEDGER) AS "OPENING LEDGER", SUM(X.CLOSING_LEDGER) "CLOSING LEDGER"
FROM
(
SELECT B.BANK_CD, B.DESCR, B.COUNTRY, C.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, C.DESCR AS BANK_ACCT_DESCR, A.CURRENCY_CD, 
       TO_CHAR(A.VALUE_DT, 'YYYY') AS VALUE_YEAR, TO_CHAR(A.VALUE_DT, 'MM') AS VALUE_MONTH, COUNT(1), SUM(A.BALANCE) AS BALANCE
       , CASE A.BANK_STMT_CODE WHEN '010' THEN SUM(A.BALANCE) ELSE 0 END AS "OPENING_LEDGER"
       , CASE A.BANK_STMT_CODE WHEN '015' THEN SUM(A.BALANCE) ELSE 0 END AS "CLOSING_LEDGER"
FROM PS_BANK_BALANCES A, PS_BANK_CD_TBL B, PS_BANK_ACCT_DEFN C
WHERE B.SETID = 'SHARE' 
  AND A.BNK_ID_NBR = B.BNK_ID_NBR
  AND B.SETID = C.SETID 
  AND B.BANK_CD = C.BANK_CD
  AND A.BANK_ACCOUNT_NUM = C.BANK_ACCOUNT_NUM
  AND B.BANK_CD LIKE '6%'
  --AND B.BANK_CD = '60001'
  AND TO_CHAR(A.VALUE_DT, 'YYYY') >= '2015'
GROUP BY B.BANK_CD, B.DESCR, B.COUNTRY, C.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, C.DESCR, A.CURRENCY_CD, A.BANK_STMT_CODE, TO_CHAR(A.VALUE_DT, 'YYYY'), TO_CHAR(A.VALUE_DT, 'MM')
) X
GROUP BY X.BANK_CD, X.DESCR, X.COUNTRY, X.BANK_ACCT_KEY, X.BNK_ID_NBR, X.BANK_ACCOUNT_NUM, X.BANK_ACCT_DESCR, X.CURRENCY_CD, X.VALUE_YEAR, X.VALUE_MONTH
ORDER BY X.BANK_CD, X.VALUE_YEAR DESC, X.VALUE_MONTH DESC;

--Verification Queries

--BANK_BALANCE_VW
SELECT DISTINCT A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, MAX(A.STATEMENT_ID), A.ASOFDATE, C.BANK_STMT_CODE, C.DESCR20A, B.CURRENCY_CD, B.BALANCE 
FROM PS_BANK_STMT_HDR A, PS_BANK_BALANCES B, PS_STMT_CODE_TBL C 
WHERE A.BNK_ID_NBR = B.BNK_ID_NBR 
  AND A.BANK_ACCOUNT_NUM = B.BANK_ACCOUNT_NUM 
  AND A.STATEMENT_ID = B.RECON_CYCLE_NBR 
  AND B.BANK_STMT_CODE = C.BANK_STMT_CODE 
  AND C.PICK_BALANCE = 'Y'
  AND B.BNK_ID_NBR = 'CITIUS33'
  AND B.BANK_ACCOUNT_NUM = '36890367'
GROUP BY A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.ASOFDATE, B.CURRENCY_CD, C.BANK_STMT_CODE, C.DESCR20A, B.BALANCE
ORDER BY A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.ASOFDATE DESC;

--BANK_BAL_AA_VW
SELECT DISTINCT A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, MAX(A.STATEMENT_ID), A.ASOFDATE, B.CURRENCY_CD, 0 AS BALANCE, 0 AS STMT_BAL_OPEN, 0 AS STMT_BAL_CLOSE, C.SETID, C.BANK_CD, C.BANK_ACCT_KEY, C.BUSINESS_UNIT_GL 
FROM PS_BANK_STMT_HDR A, PS_BANK_BALANCES B, PS_BANK_ACCT_TBL C, PS_BANK_CD_TBL D 
WHERE A.BNK_ID_NBR = B.BNK_ID_NBR 
  AND A.BANK_ACCOUNT_NUM = B.BANK_ACCOUNT_NUM 
  AND A.STATEMENT_ID = B.RECON_CYCLE_NBR 
  AND C.BANK_CD = D.BANK_CD 
  AND C.SETID = D.SETID 
  AND D.BNK_ID_NBR = B.BNK_ID_NBR 
  AND C.BANK_ACCOUNT_NUM=B.BANK_ACCOUNT_NUM
  AND D.SETID = 'SHARE'
  AND D.BANK_CD = '60004' 
GROUP BY A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.ASOFDATE, B.CURRENCY_CD, C.SETID, C.BANK_CD, C.BANK_ACCT_KEY, C.BUSINESS_UNIT_GL
ORDER BY A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.ASOFDATE DESC;

--FIN3004
--Testing
SELECT A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.DEPOSIT_ID, A.ACCOUNTING_DT, A.CONTROL_AMT, A.STTLMNT_DT_ACTUAL, A.RECON_TYPE, A.RECONCILE_OPRID, A.RECON_STATUS, A.BANK_ACCT_RVL_AMT, A.DEPOSIT_STATUS, 
       A.LOCKBOX_BATCH_ID AS "Batch ID", 'A', '1st-' || A.DEPOSIT_BU || '-' || A.DEPOSIT_ID AS "AR Deposit Keys"
FROM PS_BNK_RCN_DEPR A
WHERE (A.BNK_ID_NBR = 'CITIJPJT'
     --AND A.BANK_ACCOUNT_NUM = :2
     --AND A.RECON_STATUS LIKE :3
     AND A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND A.ACCOUNTING_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW J WHERE J.BNK_ID_NBR = A.BNK_ID_NBR AND J.BANK_ACCOUNT_NUM = A.BANK_ACCOUNT_NUM AND J.TRANSACTION_TBL = 'PS_BNK_RCN_DEPOSIT'))
UNION
SELECT B.BNK_ID_NBR, B.BANK_ACCOUNT_NUM, B.PYMNT_ID_REF, B.PYMNT_DT, B.PYMNT_AMT, B.STTLMNT_DT_ACTUAL, B.RECON_TYPE, B.RECONCILE_OPRID, B.RECON_STATUS, B.BANK_ACCT_RVL_AMT, B.PYMNT_STATUS, 
       B.BANK_CD, 'B', '2nd-' || B.BANK_SETID || '-' || B.BANK_CD || '-' || B.BANK_ACCT_KEY || '-' || B.PYMNT_ID
FROM PS_BNK_RCN_DISBR B
WHERE (B.BNK_ID_NBR = 'CITIJPJT'
     --AND B.BANK_ACCOUNT_NUM = :2
     --AND B.RECON_STATUS LIKE :3
     AND B.PYMNT_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND B.PYMNT_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW N WHERE N.BNK_ID_NBR = B.BNK_ID_NBR AND N.BANK_ACCOUNT_NUM = B.BANK_ACCOUNT_NUM AND N.TRANSACTION_TBL = 'PS_BNK_RCN_DISBRSE'))
UNION
SELECT C.BNK_ID_NBR, C.BANK_ACCOUNT_NUM, C.DRAFT_ID, C.DRAFT_DUE_DATE2, C.DRAFT_AMT, C.STTLMNT_DT_ACTUAL, C.RECON_TYPE, C.RECONCILE_OPRID, C.RECON_STATUS, C.BANK_ACCT_RVL_AMT, C.DRAFT_STATUS, 
       C.BANK_CD, 'C', '3rd-' || C.DRAFT_BU || '-' || C.DRAFT_ID
FROM PS_BNK_RCN_DRAFR C
WHERE (C.BNK_ID_NBR = 'CITIJPJT'
     --AND C.BANK_ACCOUNT_NUM = :2
     --AND C.RECON_STATUS LIKE :3
     AND C.DRAFT_DUE_DATE2 >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND C.DRAFT_DUE_DATE2 <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW O WHERE O.BNK_ID_NBR = C.BNK_ID_NBR AND O.BNK_ID_NBR = C.BANK_ACCOUNT_NUM AND O.TRANSACTION_TBL = 'PS_BNK_RCN_DRAFT'))
UNION
SELECT D.BNK_ID_NBR, D.DEPOSIT_ACCT_NUM, D.DD_ID, D.DD_DUE_DT, D.DD_CUST_AMT, D.STTLMNT_DT_ACTUAL, D.RECON_TYPE, D.RECONCILE_OPRID, D.RECON_STATUS, D.BANK_ACCT_RVL_AMT, D.DD_STATUS, 
       D.BANK_CD, 'D', '4th-' || D.DD_BU || '-' || D.DD_ID
FROM PS_BNK_RCN_DEBR D
WHERE (D.BNK_ID_NBR = 'CITIJPJT'
     --AND D.DEPOSIT_ACCT_NUM = :2
     --AND D.RECON_STATUS LIKE :3
     AND D.CREATE_DATE >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND D.CREATE_DATE <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW P WHERE P.BNK_ID_NBR = D.BNK_ID_NBR AND P.BANK_ACCOUNT_NUM = D.DEPOSIT_ACCT_NUM AND P.TRANSACTION_TBL = 'PS_BNK_RCN_DEBIT'))
UNION
SELECT E.BNK_ID_NBR, E.BANK_ACCOUNT_NUM, E.TR_SOURCE_ID, E.BUSINESS_DATE, E.AMOUNT, E.STTLMNT_DT_ACTUAL, E.RECON_TYPE, E.RECONCILE_OPRID, E.RECON_STATUS, E.BANK_ACCT_RVL_AMT, E.PYMNT_SELCT_STATUS, 
       E.BANK_CD, 'E', '5th-' || E.TR_SOURCE_CD || '-' || E.SOURCE_BUS_UNIT || '-' || E.TR_SOURCE_ID || '-' || CAST(TO_CHAR(E.BUSINESS_DATE,'YYYY-MM-DD') AS CHAR(10)) || '-' ||
                       CAST(E.CASH_FLOW_LINE AS CHAR(4)) || '-' || CAST(E.CASH_FLOW_LEG AS CHAR(1))
FROM PS_BNK_RCN_DEALR E
WHERE (E.BNK_ID_NBR = 'CITIJPJT'
     --AND E.BANK_ACCOUNT_NUM = :2
     --AND E.RECON_STATUS LIKE :3
     AND E.BUSINESS_DATE >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND E.BUSINESS_DATE <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW Q WHERE Q.BNK_ID_NBR = E.BNK_ID_NBR AND Q.BANK_ACCOUNT_NUM = E.BANK_ACCOUNT_NUM AND Q.TRANSACTION_TBL = 'PS_BNK_RCN_DEALS'))
UNION
SELECT F.BNK_ID_NBR, F.BANK_ACCOUNT_NUM, F.PAYMENT_ID, F.ACCOUNTING_DT, F.PAYMENT_AMT, F.STTLMNT_DT_ACTUAL, F.RECON_TYPE, F.RECONCILE_OPRID, F.RECON_STATUS, F.BANK_ACCT_RVL_AMT, F.PAYMENT_STATUS, 
       F.DEPOSIT_BU, 'F', '6th-' || F.DEPOSIT_BU || '-' || F.DEPOSIT_ID || '-' || CAST(F.PAYMENT_SEQ_NUM AS CHAR(6))
FROM PS_BNK_RCN_PAYMR F
WHERE (F.BNK_ID_NBR = 'CITIJPJT'
     --AND F.BANK_ACCOUNT_NUM = :2
     --AND F.RECON_STATUS LIKE :3
     AND F.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND F.ACCOUNTING_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW K WHERE K.BNK_ID_NBR = F.BNK_ID_NBR AND K.BANK_ACCOUNT_NUM = F.BANK_ACCOUNT_NUM AND K.TRANSACTION_TBL = 'PS_BNK_RCN_PAYMENT'))
UNION
SELECT G.BNK_ID_NBR, G.BANK_ACCOUNT_NUM, G.TRAN_REF_ID, G.TRAN_DT, G.TRAN_AMT, G.STTLMNT_DT_ACTUAL, G.RECON_TYPE, G.RECONCILE_OPRID, G.RECON_STATUS, G.BANK_ACCT_RVL_AMT, G.TRA_PROCESS_STATUS, 
       G.RECON_TRANS_CODE, 'G', '7th-' || G.TRAN_REF_ID || '-' || CAST(TO_CHAR(G.TRAN_DT,'YYYY-MM-DD') AS CHAR(10))
FROM PS_BNK_RCN_TRAN_VW G
WHERE (G.BNK_ID_NBR = 'CITIJPJT'
     --AND G.BANK_ACCOUNT_NUM = :2
     --AND G.RECON_STATUS LIKE :3
     AND G.TRAN_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND G.TRAN_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW R WHERE R.BNK_ID_NBR = G.BNK_ID_NBR AND R.BANK_ACCOUNT_NUM = G.BANK_ACCOUNT_NUM AND R.TRANSACTION_TBL = 'PS_BNK_RCN_TRAN'))
UNION
SELECT H.BNK_ID_NBR, H.BANK_ACCOUNT_NUM, H.PAYMENT_ID, H.ACCOUNTING_DT, H.PAYMENT_AMT, H.STTLMNT_DT_ACTUAL, H.RECON_TYPE, H.RECONCILE_OPRID, 'CUR', 0, '$', H.PAYMENT_CURRENCY, 'F', 
       '8th-' || H.DEPOSIT_BU || '-' || H.DEPOSIT_ID || '-' || CAST(H.PAYMENT_SEQ_NUM AS CHAR(6))
FROM PS_BNK_RCN_PAYMENT H, PS_BNK_RCN_DEPOSIT I
  WHERE (H.DEPOSIT_BU = I.DEPOSIT_BU
     AND H.DEPOSIT_ID = I.DEPOSIT_ID
     AND H.BNK_ID_NBR = 'CITIJPJT'
     --AND H.BANK_ACCOUNT_NUM = :2
     --AND H.RECON_STATUS LIKE :3
     AND H.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND H.ACCOUNTING_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW L WHERE L.BNK_ID_NBR = H.BNK_ID_NBR AND L.BANK_ACCOUNT_NUM = H.BANK_ACCOUNT_NUM AND L.TRANSACTION_TBL = 'PS_BNK_RCN_PAYMENT')
     AND NOT EXISTS (SELECT 'X' FROM PS_BANK_ACCT_CURR M WHERE M.SETID = I.BANK_SETID AND M.BANK_CD = I.BANK_CD AND M.BANK_CD_CPTY = I.BANK_CD AND M.BANK_ACCT_KEY = I.BANK_ACCT_KEY AND M.CURRENCY_CD = H.PAYMENT_CURRENCY))
UNION
SELECT S.BNK_ID_NBR, S.BANK_ACCOUNT_NUM, S.TR_SOURCE_ID, S.BUSINESS_DATE, S.AMOUNT,  S.STTLMNT_DT_ACTUAL, S.RECON_TYPE, S.RECONCILE_OPRID, 'CUR', 0, '$', S.CURRENCY_CD, 'E', 
       '9th-' || S.TR_SOURCE_CD || '-' || S.SOURCE_BUS_UNIT || '-' || S.TR_SOURCE_ID || '-' || CAST(TO_CHAR(S.BUSINESS_DATE,'YYYY-MM-DD') AS CHAR(10)) || '-' || CAST(S.CASH_FLOW_LINE AS CHAR(4)) || '-' ||
       CAST(S.CASH_FLOW_LEG AS CHAR(1))
FROM PS_BNK_RCN_DEALS S
  WHERE ( S.BNK_ID_NBR = 'CITIJPJT'
     --AND S.BANK_ACCOUNT_NUM = :2
     --AND S.RECON_STATUS LIKE :3
     AND S.BUSINESS_DATE >= TO_DATE('2014-01-01','YYYY-MM-DD')
     AND S.BUSINESS_DATE <= TO_DATE('2015-12-31','YYYY-MM-DD')
     AND EXISTS (SELECT 'X' FROM PS_BANK_RECON_VW T WHERE T.BNK_ID_NBR = S.BNK_ID_NBR AND T.BANK_ACCOUNT_NUM = S.BANK_ACCOUNT_NUM AND T.TRANSACTION_TBL = 'PS_BNK_RCN_DEALS')
     AND NOT EXISTS (SELECT 'X' FROM PS_BANK_ACCT_CURR U WHERE U.SETID = S.BANK_SETID AND U.BANK_CD = S.BANK_CD AND U.BANK_CD_CPTY = S.BANK_CD AND U.BANK_ACCT_KEY = S.BANK_ACCT_KEY AND U.CURRENCY_CD = S.CURRENCY_CD))
ORDER BY 1,2,4 DESC;

SELECT * FROM PS_BNK_RCN_TRAN WHERE BNK_ID_NBR = 'CITIUS33' AND TRAN_REF_ID LIKE 'USD%BK%';

--Liability Exposure by Supplier
--In Transaction Currency ONLY
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_DT, C.SETID, C.VENDOR_ID, C.NAME1, C.VENDOR_NAME_SHORT, A.VNDR_LOC, A.TXN_CURRENCY_CD, SUM(B.PYMNT_GROSS_AMT) AS GROSS_AMT, 0 AS PREPAID_AMT 
FROM PS_VOUCHER A, PS_PYMNT_VCHR_XREF B, PS_VENDOR C 
WHERE A.VOUCHER_STYLE NOT IN ('PPAY', 'TMPL') 
  AND (A.PROCESS_MAN_CLOSE = 'N' OR A.CLOSE_STATUS <> 'C') 
  AND A.ENTRY_STATUS <> 'X' 
  AND A.VENDOR_SETID = C.SETID 
  AND A.VENDOR_ID = C.VENDOR_ID 
  AND A.VOUCHER_ID = B.VOUCHER_ID 
  AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND B.PYMNT_SELCT_STATUS NOT IN ('P', 'X', 'S') 
  AND (B.NET_SELCT_STATUS <> 'S' OR B.NET_TXN_STATUS <> 'N') 
  AND B.DUE_DT IS NOT NULL 
  AND A.BUSINESS_UNIT LIKE '6%'
  AND C.SETID = 'UNUNI'
  --AND C.VENDOR_ID = '0000005935'
GROUP BY C.SETID, C.VENDOR_ID ,C.NAME1, C.VENDOR_NAME_SHORT, A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_DT, A.VNDR_LOC, A.TXN_CURRENCY_CD 
UNION ALL 
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_DT, C.SETID, C.VENDOR_ID, C.NAME1, C.VENDOR_NAME_SHORT, A.VNDR_LOC, A.TXN_CURRENCY_CD, 0, SUM (B.AVAILABLE_AMT) 
FROM PS_VOUCHER A, PS_VCHR_PPAY_XREF B, PS_VENDOR C, PS_PYMNT_VCHR_XREF D 
WHERE A.VOUCHER_STYLE = 'PPAY' 
  AND (A.PROCESS_MAN_CLOSE = 'N' OR A.CLOSE_STATUS <> 'C') 
  AND A.ENTRY_STATUS <> 'X' 
  AND A.VENDOR_SETID = C.SETID 
  AND A.VENDOR_ID = C.VENDOR_ID 
  AND A.VOUCHER_ID = B.VOUCHER_ID 
  AND A.BUSINESS_UNIT = B.BUSINESS_UNIT 
  AND B.PREPAID_STATUS = 'P' 
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
  AND A.VOUCHER_ID = D.VOUCHER_ID 
  AND D.PYMNT_TYPE = 'R' 
  AND D.PYMNT_SELCT_STATUS = 'P'
  AND A.BUSINESS_UNIT LIKE '6%'
  AND C.SETID = 'UNUNI'
  --AND C.VENDOR_ID = '0000005935'
GROUP BY C.SETID, C.VENDOR_ID , C.NAME1, C.VENDOR_NAME_SHORT, A.BUSINESS_UNIT, A.VOUCHER_ID, A.INVOICE_DT, A.VNDR_LOC, A.TXN_CURRENCY_CD
ORDER BY 3 DESC, 1,2;

--Match Overrides Statistics
--Version 1
--Find how many ovverrides per active supplier since inception and log the match rule ID that was overridden
SELECT D.VENDOR_SETID, C.VENDOR_ID, C.NAME1, D.MATCH_STATUS_VCHR, A.DATETIME_STAMP, NVL(TO_CHAR(A.DATETIME_STAMP, 'YYYY'), 'BLANK') AS YEAR,
       A.MATCH_RULE_ID, E.DESCR50, COUNT(A.MATCH_RULE_ID) AS "Total Overrides/Exceptions"
FROM ((PS_MTCH_RULE_OVRD A 
      LEFT OUTER JOIN PS_AP_MTCH_EXCPTN B ON A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.VOUCHER_ID = B.VOUCHER_ID AND A.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM)
      LEFT OUTER JOIN PS_AP_MTCH_RULES E ON A.MATCH_RULE_ID = E.MATCH_RULE_ID),
      PS_VENDOR C, PS_VOUCHER D
WHERE D.VENDOR_SETID = C.SETID 
  AND D.VENDOR_ID = C.VENDOR_ID
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
  AND A.VOUCHER_ID = D.VOUCHER_ID
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND D.MATCH_STATUS_VCHR IN ('C', 'D', 'E', 'O')
  AND A.OVRD_REASON <> ' '
  AND C.VENDOR_STATUS = 'A'
  --AND C.VENDOR_ID = '0000002155'
GROUP BY D.VENDOR_SETID, C.VENDOR_ID, C.NAME1, D.MATCH_STATUS_VCHR, A.DATETIME_STAMP, A.MATCH_RULE_ID, E.DESCR50
ORDER BY D.VENDOR_SETID, C.VENDOR_ID, A.DATETIME_STAMP DESC;

--Version 2
--Added more fields from Voucher and included OPRID from Override Table
SELECT D.VENDOR_SETID, C.VENDOR_ID, C.NAME1, D.MATCH_STATUS_VCHR, A.DATETIME_STAMP, NVL(TO_CHAR(A.DATETIME_STAMP, 'YYYY'), 'BLANK') AS YEAR,
       D.BUSINESS_UNIT AS BU_AP, D.VOUCHER_ID, A.OPRID, A.MATCH_RULE_ID, E.DESCR50, COUNT(A.MATCH_RULE_ID) AS "Total Overrides/Exceptions"
FROM ((PS_MTCH_RULE_OVRD A 
      LEFT OUTER JOIN PS_AP_MTCH_EXCPTN B ON A.BUSINESS_UNIT = B.BUSINESS_UNIT AND A.VOUCHER_ID = B.VOUCHER_ID AND A.VOUCHER_LINE_NUM = B.VOUCHER_LINE_NUM)
      LEFT OUTER JOIN PS_AP_MTCH_RULES E ON A.MATCH_RULE_ID = E.MATCH_RULE_ID),
      PS_VENDOR C, PS_VOUCHER D
WHERE D.VENDOR_SETID = C.SETID 
  AND D.VENDOR_ID = C.VENDOR_ID
  AND A.BUSINESS_UNIT = D.BUSINESS_UNIT 
  AND A.VOUCHER_ID = D.VOUCHER_ID
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND D.MATCH_STATUS_VCHR IN ('C', 'D', 'E', 'O')
  AND A.OVRD_REASON <> ' '
  AND C.VENDOR_STATUS = 'A'
  --AND C.VENDOR_ID = '0000002155'
GROUP BY D.VENDOR_SETID, C.VENDOR_ID, C.NAME1, D.MATCH_STATUS_VCHR, A.DATETIME_STAMP, D.BUSINESS_UNIT, D.VOUCHER_ID, A.OPRID, A.MATCH_RULE_ID, E.DESCR50
ORDER BY D.VENDOR_SETID, A.DATETIME_STAMP DESC, C.VENDOR_ID DESC;

--Verification Queries
SELECT * FROM PS_MTCH_RULE_OVRD WHERE BUSINESS_UNIT = '600UU' ORDER BY DATETIME_STAMP DESC;

SELECT OVRD.* FROM PS_MTCH_RULE_OVRD OVRD, PS_VOUCHER V 
WHERE V.BUSINESS_UNIT = OVRD.BUSINESS_UNIT
  AND V.VOUCHER_ID = OVRD.VOUCHER_ID
  AND V.BUSINESS_UNIT LIKE '6%' 
  AND V.VENDOR_ID = '0000001093' 
ORDER BY DATETIME_STAMP DESC;

SELECT * FROM PS_AP_MTCH_RULES;

--Pay Cycles to be completed
SELECT A.PAY_CYCLE, A.PAY_THRU_DT, A.PYMNT_DT, A.PAY_RUN_DT, A.ACCOUNTING_DT, A.PAY_RUN_AP_STATUS, X1.XLATLONGNAME AS DESCR
FROM (PS_PYCYCL_STAT A LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'PAY_RUN_AP_STATUS' AND X1.FIELDVALUE = A.PAY_RUN_AP_STATUS)
WHERE (A.PAY_RUN_AP_STATUS NOT IN ('2','C','D','N') 
   AND A.PAY_CYCLE_SEQ_NUM = (SELECT MAX( B.PAY_CYCLE_SEQ_NUM) FROM PS_PYCYCL_STAT B WHERE B.PAY_CYCLE =  A.PAY_CYCLE))
   AND A.PAY_CYCLE LIKE '6%' 
ORDER BY A.PAY_CYCLE, A.PAY_THRU_DT, A.PYMNT_DT, A.PAY_RUN_DT, A.ACCOUNTING_DT;

--FG Payment Activity
--FG1000_PAYMENT_ACTIVITY
SELECT A.SRC_REF_ID, A.PMT_ID, A.BUSINESS_UNIT, A.PYMNT_DT, A.AMOUNT, A.AMOUNT_CURRENCY_CD, A7X.XLATSHORTNAME AS "Payment Method", A8X.XLATLONGNAME AS "Dispatch Status", 
       A.PMT_SOURCE, A.BANK_CD, A.BANK_ACCT_KEY, A.FROM_BNK_ID_NBR, A.FROM_BNK_ACCT_NUM, A.FORMAT_ID, 
       A15X.XLATLONGNAME AS PARTY_TYPE, A16X.XLATLONGNAME AS PAYMENT_TYPE, A.PARTY_ID, A.NAME1, A.BANK_SETID, B.DESCR, ':7',  ':8' 
FROM PS_PMT_DETAIL_TBL A LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PYMNT_METHOD' AND TA.EFF_STATUS = 'A' 
                                          AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE 
                                          TB.FIELDNAME='PYMNT_METHOD' 
                                          AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
                                          AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
     A7X ON A7X.FIELDVALUE = A.PYMNT_METHOD AND A7X.FIELDNAME='PYMNT_METHOD' 
     LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PMT_STATUS' AND TA.EFF_STATUS = 'A' 
                  AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PMT_STATUS' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
                  AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
     A8X ON A8X.FIELDVALUE = A.PMT_STATUS AND A8X.FIELDNAME='PMT_STATUS' 
     LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PARTY_ID_TYPE' AND TA.EFF_STATUS = 'A' 
                      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PARTY_ID_TYPE' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
                      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
     A15X ON A15X.FIELDVALUE = A.PARTY_ID_TYPE AND A15X.FIELDNAME='PARTY_ID_TYPE' 
     LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PMT_TYPE' AND TA.EFF_STATUS = 'A' 
                      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PMT_TYPE' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
                      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
     A16X ON A16X.FIELDVALUE = A.PMT_TYPE AND A16X.FIELDNAME='PMT_TYPE', PS_PMT_SRC_DEFN B 
WHERE (A.BANK_SETID = 'SHARE' 
   AND A.BANK_CD LIKE '00119' 
   --AND A.BANK_ACCT_KEY LIKE :3 
   --AND A.BUSINESS_UNIT LIKE :4 
   --AND A.PMT_STATUS LIKE :5 
   --AND A.PARTY_ID LIKE :6 
   --AND A.PYMNT_DT >= TO_DATE(:7,'YYYY-MM-DD') 
   --AND A.PYMNT_DT <= TO_DATE(:8,'YYYY-MM-DD') 
   --AND A.PMT_SOURCE LIKE :9 
   AND B.PMT_SOURCE = A.PMT_SOURCE) 
ORDER BY 19, 3, 10, 11, 12, 13, 9;

--FG1001_PAYMENT_EXCEPTIONS
--FG Payment Exceptions  
SELECT A.SRC_REF_ID, A.PMT_ID, A.BUSINESS_UNIT, A.PYMNT_DT, A.AMOUNT, A.AMOUNT_CURRENCY_CD, A7X.XLATSHORTNAME AS "Payment Method", A8X.XLATLONGNAME AS "Dispatch Status", A.PMT_SOURCE, 
       A.BANK_CD, A.BANK_ACCT_KEY, A.FROM_BNK_ID_NBR, A.FROM_BNK_ACCT_NUM, A.FORMAT_ID, A15X.XLATLONGNAME AS PARTY_TYPE, A16X.XLATLONGNAME AS PAYMENT_TYPE, A.PARTY_ID, A.NAME1, 
       A.BANK_SETID, B.PMT_ACK_FILE_ID, B.PYMNT_REF_ID, B.SEQ_NUM, B.ERROR_CODE, B.ERROR_MESSAGE, C.DESCR, ':5' , ':6' 
FROM (PS_PMT_DETAIL_TBL A LEFT OUTER JOIN PS_PMT_ACK_ERR B ON A.PMT_ID = B.PYMNT_REF_ID) 
      LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PYMNT_METHOD' AND TA.EFF_STATUS = 'A' 
      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PYMNT_METHOD' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
      A7X ON A7X.FIELDVALUE = A.PYMNT_METHOD AND A7X.FIELDNAME='PYMNT_METHOD' 
      LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PMT_STATUS' AND TA.EFF_STATUS = 'A' 
      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PMT_STATUS' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
      A8X ON A8X.FIELDVALUE = A.PMT_STATUS AND A8X.FIELDNAME='PMT_STATUS' 
      LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PARTY_ID_TYPE' AND TA.EFF_STATUS = 'A' 
      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PARTY_ID_TYPE' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
      A15X ON A15X.FIELDVALUE = A.PARTY_ID_TYPE AND A15X.FIELDNAME='PARTY_ID_TYPE' 
      LEFT OUTER JOIN (SELECT * FROM PSXLATITEM TA WHERE TA.FIELDNAME='PMT_TYPE' AND TA.EFF_STATUS = 'A' 
      AND TA.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM TB WHERE TB.FIELDNAME='PMT_TYPE' AND TA.FIELDVALUE=TB.FIELDVALUE AND TB.EFF_STATUS = 'A' 
      AND TB.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))) 
      A16X ON A16X.FIELDVALUE = A.PMT_TYPE AND A16X.FIELDNAME='PMT_TYPE', PS_PMT_SRC_DEFN C 
WHERE (A.BANK_SETID = 'SHARE'
   --AND A.BUSINESS_UNIT LIKE :2 
   --AND A.BANK_CD LIKE :3 
   --AND A.BANK_ACCT_KEY LIKE :4 
   AND A.PYMNT_DT >= TO_DATE('2014-01-01','YYYY-MM-DD') 
   AND A.PYMNT_DT <= TO_DATE('2015-12-31','YYYY-MM-DD') 
   --AND A.PARTY_ID LIKE :7 
   --AND A.PMT_SOURCE LIKE :8 
   AND A.PMT_STATUS = 'E' 
   AND A.PMT_SOURCE = C.PMT_SOURCE) 
ORDER BY 19, 10, 11, 12, 13, 9;

--This table is used by the GL Journal Generator
--It is known to have performance problems due to locking
SELECT * FROM PS_SEQ_NBR_LST_TBL;

--AR Worksheets in Closed Periods
SELECT A.WS_BU, A.WS_ID, A.OPRID, A.ASSN_OPRID, A.BUSINESS_UNIT, A.BAL_STATUS, A.POST_STATUS, A.POST_ACTION, A.ENTERED_AMT, A.ORIGIN_ID, A.ENTRY_DT, A.ACCOUNTING_DT, A.CURRENCY_CD 
FROM PS_WS_CONTROL A 
WHERE (A.WS_BU LIKE '6%'
   AND A.ACCOUNTING_DT < (SELECT B.OPEN_FROM_DATE FROM PS_FIN_OPEN_PERIOD B WHERE B.PSFT_PRODUCT = 'AR' AND B.BUSINESS_UNIT = A.WS_BU AND B.TRANSACTION_TYPE = 'ARM' 
                          AND B.LEDGER_GROUP = (SELECT C.LEDGER_GROUP FROM PS_BU_LED_GRP_TBL C WHERE C.BUSINESS_UNIT = A.WS_BU AND C.DEFAULT_LEDGER_GRP = 'Y')) 
   AND A.ACCOUNTING_DT > (SELECT D.OPEN_TO_DATE FROM PS_FIN_OPEN_PERIOD D WHERE D.PSFT_PRODUCT = 'AR' AND D.BUSINESS_UNIT = A.WS_BU AND D.TRANSACTION_TYPE = 'ARM' 
                          AND D.LEDGER_GROUP = (SELECT E.LEDGER_GROUP FROM PS_BU_LED_GRP_TBL E WHERE E.BUSINESS_UNIT = A.WS_BU AND E.DEFAULT_LEDGER_GRP = 'Y')))
ORDER BY 1,2;

--AR Dashboard Customer Balances
SELECT B.SETID, I.BUSINESS_UNIT, I.CUST_ID, I.ITEM, I.ITEM_LINE, I.ITEM_SEQ_NUM, C.NAME1, I.SUBCUST_QUAL1, I.SUBCUST_QUAL2, I.ITEM_STATUS, I.PYMNT_TERMS_CD, I.ENTRY_TYPE, I.ENTRY_REASON, I.DUE_DT,  
       COUNT(*) AS ITEM_COUNT, I.BAL_AMT, I.BAL_CURRENCY, I.LAST_ACTIVITY_DT, 
       CASE WHEN I.ITEM_STATUS = 'O' THEN (( TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD') ,'YYYY-MM-DD')) - (I.DUE_DT)) ELSE (( I.LAST_ACTIVITY_DT) - (I.DUE_DT)) END AS DAYS_LATE
FROM PS_ITEM I, PS_CUST_DATA A, PS_SET_CNTRL_REC B, PS_CUSTOMER C  
WHERE B.SETCNTRLVALUE = I.BUSINESS_UNIT  
  AND RECNAME = 'CUSTOMER'  
  AND I.BUSINESS_UNIT = A.BUSINESS_UNIT  
  AND I.CUST_ID = A.CUST_ID  
  AND B.SETID = C.SETID  
  AND A.CUST_ID = C.CUST_ID
  AND I.BUSINESS_UNIT LIKE '6%'
  --AND I.CUST_ID = '10007'
GROUP BY B.SETID, I.BUSINESS_UNIT, I.CUST_ID, I.ITEM , I.ITEM_LINE, I.ITEM_SEQ_NUM, C.NAME1, I.SUBCUST_QUAL1, I.SUBCUST_QUAL2, I.ITEM_STATUS, I.PYMNT_TERMS_CD, I.ENTRY_TYPE , 
         I.ENTRY_REASON, I.DUE_DT, I.BAL_AMT, I.BAL_CURRENCY, I.LAST_ACTIVITY_DT
ORDER BY B.SETID, I.BUSINESS_UNIT, I.CUST_ID, I.DUE_DT DESC;

--Monitor UN_F2025 DAT Files for UNU
--Get details about who at UNU runs UN_F2025 SQR
SELECT * FROM PSPRCSRQST WHERE PRCSNAME = 'UN_F2025'
AND OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY RUNDTTM DESC;

--Establish direct download link for the DAT file(s)
SELECT 'https://finance.partneragencies.org/psreports/UNDPP1FS/' || A.CONTENTID || '/' || A.FILENAME AS REPORT_FILENAME_URL, A.*, PRCS.*
FROM PS_CDM_FILE_LIST A INNER JOIN PSPRCSRQST PRCS ON PRCS.PRCSINSTANCE = A.PRCSINSTANCE
WHERE PRCS.OPRID IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0) 
    AND PRCS.PRCSNAME = 'UN_F2025' 
    --AND TO_CHAR(PRCS.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
    --AND A.CDM_FILE_TYPE = 'PDF'
ORDER BY DTTM_CREATED DESC;

SELECT * FROM PS_PYCYCL_STATRPT WHERE PAY_CYCLE LIKE '6%' ORDER bY PAY_CYCLE, PAY_CYCLE_SEQ_NUM DESC;

--Negative LAST PO PRICE PAID Issue
SELECT LAST_PO_PRICE_PAID, A.* FROM PS_PURCH_ITEM_ATTR A WHERE SETID = 'UNUNI' AND LAST_PO_PRICE_PAID < 0 ORDER BY INV_ITEM_ID;

--Supplier Queries for PPs Dashboard
--Step 0
SELECT MIN(INVOICE_DT), MAX(INVOICE_DT)
FROM PS_VOUCHER 
WHERE BUSINESS_UNIT LIKE '6%'
  AND ENTRY_STATUS <> 'X' 
  AND VOUCHER_STYLE NOT IN ('PPAY', 'TMPL')
ORDER BY 1,2;

--Step 1
SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VENDOR_SETID, A.VENDOR_ID, A.INVOICE_ID, A.INVOICE_DT  
       , (CASE WHEN EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT AND B.VOUCHER_ID = A.VOUCHER_ID AND B.PYMNT_SELCT_STATUS IN ('P', 'R')) THEN 'Y' ELSE 'N' END) AS PAID_FLAG, 
       A.GROSS_AMT_BSE, A.BASE_CURRENCY, TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS "Today" 
FROM PS_VOUCHER A
WHERE A.BUSINESS_UNIT LIKE '6%'
  AND A.ENTRY_STATUS = 'P'  
  AND A.CLOSE_STATUS = 'O'  
  AND A.DUP_INVOICE_STATUS = 'N'  
  AND A.VOUCHER_STYLE NOT IN ('PPAY', 'TMPL')  
  AND A.INVOICE_DT BETWEEN TO_DATE('1960-01-01', 'YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')
ORDER BY 1,2;

--Step 2
SELECT X.VENDOR_SETID, X.VENDOR_ID, X.BUSINESS_UNIT, X.BASE_CURRENCY, SUM(X.GROSS_AMT_BSE) AMOUNT, COUNT(*) 
FROM (SELECT A.BUSINESS_UNIT, A.VOUCHER_ID, A.VENDOR_SETID, A.VENDOR_ID, A.INVOICE_ID, A.INVOICE_DT  
       , (CASE WHEN EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF B WHERE B.BUSINESS_UNIT = A.BUSINESS_UNIT AND B.VOUCHER_ID = A.VOUCHER_ID AND B.PYMNT_SELCT_STATUS IN ('P', 'R')) THEN 'Y' ELSE 'N' END) AS PAID_FLAG, 
       A.GROSS_AMT_BSE, A.BASE_CURRENCY, TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS "TODAY" 
FROM PS_VOUCHER A
WHERE A.BUSINESS_UNIT LIKE '6%'
  AND A.ENTRY_STATUS = 'P'  
  AND A.CLOSE_STATUS = 'O'  
  AND A.DUP_INVOICE_STATUS = 'N'  
  AND A.VOUCHER_STYLE NOT IN ('PPAY', 'TMPL')  
  AND A.INVOICE_DT BETWEEN TO_DATE('1960-01-01', 'YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD')) X
WHERE X.VENDOR_SETID = 'UNUNI'
GROUP BY X.VENDOR_SETID, X.VENDOR_ID, X.BUSINESS_UNIT, X.BASE_CURRENCY
ORDER BY X.VENDOR_SETID, X.VENDOR_ID, X.BUSINESS_UNIT, X.BASE_CURRENCY;

--Map PS Bank ID Qualifiers to UN entered Bank Qualifiers
SELECT * FROM PS_BNK_ID_QUAL_TBL ORDER BY COUNTRY;

SELECT BC.SETID, BC.BANK_CD, BC.DESCR, BC.BNK_ID_NBR, BC.BANK_STATUS, BC.BANK_ID_QUAL, BC.COUNTRY, BC.CITY
FROM PS_BANK_CD_TBL BC
WHERE BC.SETID = 'SHARE' 
  AND BC.BANK_CD LIKE '6%'
ORDER BY BC.BANK_CD;

SELECT * FROM PS_BNK_ID_QUAL_TBL ORDER BY COUNTRY;

--Report for UNU Banks and their custom qualifiers
SELECT BC.SETID, BC.BANK_CD, BC.DESCR AS BANK_DESCR, BC.BNK_ID_NBR, BC.BANK_STATUS, BC.BANK_ID_QUAL, BC.COUNTRY, BC.CITY, BQ.BANK_ID_QUAL AS BANK_QUAL, BQ.DESCR AS BNK_COUNTRY_DESCR
FROM (PS_BANK_CD_TBL BC LEFT OUTER JOIN PS_BNK_ID_QUAL_TBL BQ ON BC.COUNTRY = BQ.COUNTRY)
WHERE BC.SETID = 'SHARE' 
  AND BC.BANK_CD LIKE '6%'
ORDER BY BC.BANK_CD, BQ.BANK_ID_QUAL;

--Understanding DBMS_LOB
SELECT MAX(dbms_lob.getlength(B.UN_TOR)), MAX(dbms_lob.getlength(B.UN_SCHED_COND)), MAX(dbms_lob.getlength(B.COMMENTS))
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B
WHERE (A.SETID LIKE '6%'
   --AND A.CNTRCT_ID LIKE '%1435'
   --AND A.CNTRCT_STATUS LIKE :3
   AND F.SETID = A.VENDOR_SETID
   AND F.VENDOR_ID = A.VENDOR_ID
   AND A.SETID = B.SETID
   AND A.CNTRCT_ID = B.CNTRCT_ID )
ORDER BY 1;

--Extracting CLOB
--Version 1
SELECT A.SETID "Contract SetId", A.CNTRCT_ID "Contract Id", A.CNTRCT_STATUS "Contract Status", A.VENDOR_ID "Vendor Id", F.VENDOR_NAME_SHORT "Vendor Short Name", F.NAME1 "Vendor Name", B.REVISION_DT "Revision Date", 
       B.UN_AMEND_NUM "Amendment #", B.UN_REVISION_TYPE "Revision Type", B.UN_FINALIZED "Finalized", B.UN_CNTRCT_TYPE "Contract Type", B.UN_RELATE_CNTRCT "Related Contract Id", B.UN_FUNC_TITLE "Functional Title", 
       B.UN_INIT_START_DT "Init Start Date", B.START_DT "Current Start Date", B.EXPIRATION_DT "Current End Date",
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 1455 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 1455 THEN TO_CHAR(B.UN_TOR)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS TOR_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 2910 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 2910 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 1455, 1456))
    END AS TOR_2,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 4365 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 2911)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 4365 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 2910 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 2910, 2911))
    END AS TOR_3,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 5820 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 4366)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 5820 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 4365 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 4365, 4366))
    END AS TOR_4,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 7275 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 5821)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 7275 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 5820 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 5820, 5821))
    END AS TOR_5,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 8730 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 7276)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 8730 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 7275 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 7275, 7276))
    END AS TOR_6,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 10185 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 8731)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 10185 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 8730 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 8730, 8731))
    END AS TOR_7,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 11640 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 10186)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 11640 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 10185 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 10185, 10186))
    END AS TOR_8,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 13095 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 11641)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 13095 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 11640 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 11640, 11641))
    END AS TOR_9,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 14550 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 13096)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 14550 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 13095 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 13095, 13096))
    END AS TOR_10,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 16005 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 14551)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 16005 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 14550 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 14550, 14551))
    END AS TOR_11,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 17460 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 16006)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 17460 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 16005 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 16005, 16006))
    END AS TOR_12,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 18915 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 17461)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 18915 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 17460 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 17460, 17461))
    END AS TOR_13,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 20370 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 18916)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 20370 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 18915 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 18915, 18916))
    END AS TOR_14,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 21825 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 20371)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 21825 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 20370 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 20370, 20371))
    END AS TOR_15,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 23280 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 21826)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 23280 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 21825 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 21825, 21826))
    END AS TOR_16,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 24735 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 23281)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 24735 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 23280 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 23280, 23281))
    END AS TOR_17,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 26190 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 24736)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 26190 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 24735 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 24735, 24736))
    END AS TOR_18,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 27645 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 26191)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 27645 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 26190 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 26190, 26191))
    END AS TOR_19,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 29100 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 27646)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 29100 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 27645 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 27645, 27646))
    END AS TOR_20,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 30555 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 29101)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 30555 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 29100 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 29100, 29101))
    END AS TOR_21,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 32010 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 30556)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 32010 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 30555 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 30555, 30556))
    END AS TOR_22,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 33465 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 32011)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 33465 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 32010 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 32010, 32011))
    END AS TOR_23,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 34920 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 33466)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 34920 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 33465 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 33465, 33466))
    END AS TOR_24,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 36375 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 34921)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 36375 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 34920 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 34920, 34921))
    END AS TOR_25,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 37830 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 36376)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 37830 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 36375 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 36375, 36376))
    END AS TOR_26,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 39285 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 37831)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 39285 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 37830 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 37830, 37831))
    END AS TOR_27,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 40740 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 39286)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 40740 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 39285 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 39285, 39286))
    END AS TOR_28,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 42195 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 40741)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 42195 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 40740 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 40740, 40741))
    END AS TOR_29,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 43650 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 42196)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 43650 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 42195 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 42195, 42196))
    END AS TOR_30
    , B.UN_REMUN_AMT "Remuneration/Fee", B.UN_CNTRCT_FREQ "Type", B.UN_CNTRCT_DUR "Number of Periods", B.UN_EXPENSE_AMT "Expenses", B.UN_CNTRCT_AMT "Current Contract Amount", 
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 1455 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 1455 THEN TO_CHAR(B.UN_SCHED_COND)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS COND_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 2910 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 2910 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 1455, 1456))
    END AS COND_2,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 4365 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 2911)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 4365 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 2910 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 2910, 2911))
    END AS COND_3,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 5820 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 4366)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 5820 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 4365 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 4365, 4366))
    END AS COND_4,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 7275 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 5821)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 7275 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 5820 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 5820, 5821))
    END AS COND_5,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 8730 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 7276)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 8730 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 7275 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 7275, 7276))
    END AS COND_6,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 10185 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 8731)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 10185 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 8730 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 8730, 8731))
    END AS COND_7,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 11640 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 10186)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 11640 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 10185 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 10185, 10186))
    END AS COND_8  
    --, B.UN_SCHED_COND "Schedule and Condition of Pymt", 
    , B.CURRENCY_CD "Contract Currency", B.UN_SIGNATORY "Signatory Name/Title", 
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) > 1455 THEN DBMS_LOB.SUBSTR(B.COMMENTS, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) <= 1455 THEN TO_CHAR(B.COMMENTS)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS COMMENT_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) > 2910 THEN DBMS_LOB.SUBSTR(B.COMMENTS, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) <= 2910 AND DBMS_LOB.GETLENGTH(B.COMMENTS) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.COMMENTS, DBMS_LOB.GETLENGTH(B.COMMENTS) - 1455, 1456))
    END AS COMMENT_2 
    --  B.COMMENTS "Additional Remarks", 
    , B.OPRID_ENTERED_BY "Revision Created By", B.DATE_ENTERED "Revision Created Date", B.OPRID_MODIFIED_BY "Revision Modified By", B.MODIFIED_DT "Revision Modified Date", B.APPROVER_OPRID "Revision Finalized By", 
      B.APPROVAL_DT "Revision Finalized Date", B.UN_PRE_OBL "Pre-Atlas Obligation", B.UN_PRE_OBL_BSE "Pre-Atlas Obligation (USD)", 
      B.UN_PRE_DISB "Pre-Atlas Disbursement", B.UN_PRE_DISB_BSE "Pre-Atlas Disbursement (USD)", B.UN_PRE_CONTNT_REF "Pre-Atlas Contract Ref"
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B
WHERE (A.SETID LIKE '6%'
   --AND A.CNTRCT_ID LIKE '%1435'
   AND A.CNTRCT_STATUS NOT IN ('X', 'C')
   AND F.SETID = A.VENDOR_SETID
   AND F.VENDOR_ID = A.VENDOR_ID
   AND A.SETID = B.SETID
   AND A.CNTRCT_ID = B.CNTRCT_ID)
   --AND dbms_lob.getlength(B.UN_TOR) >= 30000
ORDER BY 1, 2, 7 DESC;

--Experimental Version 2
--Added Vendor Tables
--Added XLATs
SELECT A.SETID "Contract SetId", A.CNTRCT_ID "Contract Id", A.CNTRCT_STATUS "Contract Status", A.VENDOR_ID "Vendor Id", F.VENDOR_NAME_SHORT "Vendor Short Name", F.NAME1 "Vendor Name", 
       UV.UN_NATIONALITY, F.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS_DESCR, F.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS_DESCR,
       B.REVISION_DT "Revision Date", B.UN_AMEND_NUM "Amendment #", B.UN_REVISION_TYPE "Revision Type", X3.XLATLONGNAME AS REV_TYPE_DESCR, B.UN_FINALIZED "Finalized", B.UN_CNTRCT_TYPE "Contract Type", 
       B.UN_RELATE_CNTRCT "Related Contract Id", B.UN_FUNC_TITLE "Functional Title", B.UN_INIT_START_DT "Init Start Date", B.START_DT "Current Start Date", B.EXPIRATION_DT "Current End Date",
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 1455 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 1455 THEN TO_CHAR(B.UN_TOR)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS TOR_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 2910 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 2910 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 1455, 1456))
    END AS TOR_2,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 4365 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 2911)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 4365 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 2910 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 2910, 2911))
    END AS TOR_3,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 5820 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 4366)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 5820 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 4365 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 4365, 4366))
    END AS TOR_4,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 7275 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 5821)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 7275 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 5820 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 5820, 5821))
    END AS TOR_5,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 8730 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 7276)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 8730 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 7275 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 7275, 7276))
    END AS TOR_6,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 10185 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 8731)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 10185 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 8730 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 8730, 8731))
    END AS TOR_7,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 11640 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 10186)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 11640 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 10185 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 10185, 10186))
    END AS TOR_8,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 13095 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 11641)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 13095 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 11640 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 11640, 11641))
    END AS TOR_9,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 14550 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 13096)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 14550 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 13095 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 13095, 13096))
    END AS TOR_10,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 16005 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 14551)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 16005 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 14550 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 14550, 14551))
    END AS TOR_11,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 17460 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 16006)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 17460 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 16005 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 16005, 16006))
    END AS TOR_12,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 18915 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 17461)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 18915 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 17460 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 17460, 17461))
    END AS TOR_13,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 20370 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 18916)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 20370 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 18915 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 18915, 18916))
    END AS TOR_14,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 21825 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 20371)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 21825 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 20370 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 20370, 20371))
    END AS TOR_15,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 23280 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 21826)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 23280 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 21825 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 21825, 21826))
    END AS TOR_16,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 24735 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 23281)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 24735 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 23280 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 23280, 23281))
    END AS TOR_17,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 26190 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 24736)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 26190 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 24735 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 24735, 24736))
    END AS TOR_18,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 27645 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 26191)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 27645 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 26190 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 26190, 26191))
    END AS TOR_19,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 29100 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 27646)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 29100 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 27645 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 27645, 27646))
    END AS TOR_20,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 30555 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 29101)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 30555 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 29100 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 29100, 29101))
    END AS TOR_21,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 32010 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 30556)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 32010 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 30555 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 30555, 30556))
    END AS TOR_22,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 33465 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 32011)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 33465 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 32010 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 32010, 32011))
    END AS TOR_23,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 34920 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 33466)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 34920 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 33465 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 33465, 33466))
    END AS TOR_24,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 36375 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 34921)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 36375 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 34920 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 34920, 34921))
    END AS TOR_25,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 37830 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 36376)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 37830 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 36375 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 36375, 36376))
    END AS TOR_26,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 39285 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 37831)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 39285 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 37830 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 37830, 37831))
    END AS TOR_27,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 40740 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 39286)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 40740 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 39285 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 39285, 39286))
    END AS TOR_28,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 42195 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 40741)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 42195 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 40740 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 40740, 40741))
    END AS TOR_29,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) > 43650 THEN DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 42196)
      WHEN DBMS_LOB.GETLENGTH(B.UN_TOR) <= 43650 AND DBMS_LOB.GETLENGTH(B.UN_TOR) > 42195 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_TOR, DBMS_LOB.GETLENGTH(B.UN_TOR) - 42195, 42196))
    END AS TOR_30
    , B.UN_REMUN_AMT "Remuneration/Fee", B.UN_CNTRCT_FREQ "Type", B.UN_CNTRCT_DUR "Number of Periods", B.UN_EXPENSE_AMT "Expenses", B.UN_CNTRCT_AMT "Current Contract Amount", 
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 1455 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 1455 THEN TO_CHAR(B.UN_SCHED_COND)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS COND_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 2910 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 2910 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 1455, 1456))
    END AS COND_2,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 4365 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 2911)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 4365 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 2910 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 2910, 2911))
    END AS COND_3,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 5820 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 4366)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 5820 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 4365 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 4365, 4366))
    END AS COND_4,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 7275 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 5821)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 7275 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 5820 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 5820, 5821))
    END AS COND_5,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 8730 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 7276)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 8730 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 7275 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 7275, 7276))
    END AS COND_6,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 10185 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 8731)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 10185 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 8730 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 8730, 8731))
    END AS COND_7,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 11640 THEN DBMS_LOB.SUBSTR(B.UN_SCHED_COND, 1455, 10186)
      WHEN DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) <= 11640 AND DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) > 10185 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.UN_SCHED_COND, DBMS_LOB.GETLENGTH(B.UN_SCHED_COND) - 10185, 10186))
    END AS COND_8  
    --, B.UN_SCHED_COND "Schedule and Condition of Pymt", 
    , B.CURRENCY_CD "Contract Currency", B.UN_SIGNATORY "Signatory Name/Title", 
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) > 1455 THEN DBMS_LOB.SUBSTR(B.COMMENTS, 1455, 1)--UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(B.UN_TOR, 1455, 1))
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) <= 1455 THEN TO_CHAR(B.COMMENTS)--UTL_RAW.CAST_TO_VARCHAR2(B.UN_TOR)
    END AS COMMENT_1,
    CASE
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) > 2910 THEN DBMS_LOB.SUBSTR(B.COMMENTS, 1455, 1456)
      WHEN DBMS_LOB.GETLENGTH(B.COMMENTS) <= 2910 AND DBMS_LOB.GETLENGTH(B.COMMENTS) > 1455 THEN TO_CHAR(DBMS_LOB.SUBSTR(B.COMMENTS, DBMS_LOB.GETLENGTH(B.COMMENTS) - 1455, 1456))
    END AS COMMENT_2 
    --  B.COMMENTS "Additional Remarks", 
    , B.OPRID_ENTERED_BY "Revision Created By", B.DATE_ENTERED "Revision Created Date", B.OPRID_MODIFIED_BY "Revision Modified By", B.MODIFIED_DT "Revision Modified Date", B.APPROVER_OPRID "Revision Finalized By", 
      B.APPROVAL_DT "Revision Finalized Date", B.UN_PRE_OBL "Pre-Atlas Obligation", B.UN_PRE_OBL_BSE "Pre-Atlas Obligation (USD)", 
      B.UN_PRE_DISB "Pre-Atlas Disbursement", B.UN_PRE_DISB_BSE "Pre-Atlas Disbursement (USD)", B.UN_PRE_CONTNT_REF "Pre-Atlas Contract Ref"
FROM PS_CNTRCT_HDR A, (PS_UN_CNTRCT_DTLS B LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'UN_REVISION_TYPE' AND X3.FIELDVALUE = B.UN_REVISION_TYPE AND X3.EFF_STATUS = 'A'),
     (((PS_VENDOR F LEFT OUTER JOIN PS_UN_VENDOR UV ON UV.SETID = F.SETID AND UV.VENDOR_ID = F.VENDOR_ID)
        LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'VENDOR_CLASS' AND X1.FIELDVALUE = F.VENDOR_CLASS AND X1.EFF_STATUS = 'A')
        LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'VENDOR_STATUS' AND X2.FIELDVALUE = F.VENDOR_STATUS AND X2.EFF_STATUS = 'A')
WHERE (A.SETID LIKE '6%'
   --AND A.CNTRCT_ID LIKE '%1435'
   AND A.CNTRCT_STATUS NOT IN ('X', 'C')
   AND F.SETID = A.VENDOR_SETID
   AND F.VENDOR_ID = A.VENDOR_ID
   AND A.SETID = B.SETID
   AND A.CNTRCT_ID = B.CNTRCT_ID)
   --AND dbms_lob.getlength(B.UN_TOR) >= 30000
ORDER BY 1, 2, 7 DESC;

--UNU ALL ASSETS
SELECT A.BUSINESS_UNIT "Business Unit", A.ASSET_ID "Asset ID", D.PROFILE_ID "Profile ID", D.ASSET_CLASS "Asset Class", D.DESCR "Descr", D.ASSET_STATUS "Asset Status", D.TAG_NUMBER "Tag Number", 
       D.SERIAL_ID "Serial Numbmer", D.MODEL "Model", D.ACQUISITION_DT "Acquisition Date",
       A.CURRENCY_CD "Amt Currency", C.FROM_CUR "Cost Currency", NVL(C.COST, A.AMOUNT) "Asset Value", A.TXN_AMOUNT "Transaction Amt", A.TXN_CURRENCY_CD "Transaction Currency",
       DECODE(B.FUND_CODE,'', A.FUND_CODE, B.FUND_CODE) FUND_CODE,  
       DECODE( B.OPERATING_UNIT, '',  A.OPERATING_UNIT,  B.OPERATING_UNIT) OPERATING_UNIT,  
       DECODE( B.DEPTID, '',  A.DEPTID,  B.DEPTID) DEPTID,  DECODE( B.CHARTFIELD2, '',  A.CHARTFIELD2,  B.CHARTFIELD2) CHARTFIELD2,  
       DECODE( B.PROJECT_ID, '',  A.PROJECT_ID,  B.PROJECT_ID) PROJECT_ID, D.FINANCIAL_ASSET_SW "Capitalized Asset", F.LOCATION, G.DESCR AS LOCATION_DESCR, 
       ASD.CUSTODIAN, ASD.DEPTID AS CUSTODIAN_DEPTID, ASD.PROJECT_ID AS CUSTODIAN_PROJECT_ID,
       A.BUSINESS_UNIT_PO, A.PO_ID, A.BUSINESS_UNIT_RECV, A.RECEIVER_ID, A.INV_ITEM_ID, 
       A.BUSINESS_UNIT_AP, A.VOUCHER_ID, A.VENDOR_ID
FROM (((PS_ASSET_ACQ_DET A LEFT OUTER JOIN PS_UN_OAPR_COST_CF B ON A.BUSINESS_UNIT =  B.BUSINESS_UNIT AND A.ASSET_ID =  B.ASSET_ID)
      LEFT OUTER JOIN PS_UN_OAPR_COST_VW C ON A.BUSINESS_UNIT =  C.BUSINESS_UNIT AND A.ASSET_ID =  C.ASSET_ID)
      LEFT OUTER JOIN PS_ASSET_CUSTODIAN ASD ON A.BUSINESS_UNIT =  ASD.BUSINESS_UNIT AND A.ASSET_ID =  ASD.ASSET_ID)
     , PS_ASSET D, PS_ASSET_LOCATION F, PS_LOCATION_TBL G
WHERE A.BUSINESS_UNIT = 'UNUNI'
  AND A.SEQUENCE_NBR_6 = (SELECT MAX( E.SEQUENCE_NBR_6) FROM PS_ASSET_ACQ_DET E WHERE E.BUSINESS_UNIT = A.BUSINESS_UNIT AND E.ASSET_ID = A.ASSET_ID)
  AND A.BUSINESS_UNIT =  D.BUSINESS_UNIT
  AND A.ASSET_ID =  D.ASSET_ID
  AND D.BUSINESS_UNIT = F.BUSINESS_UNIT
  AND D.ASSET_ID = F.ASSET_ID
  AND F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_ASSET_LOCATION F_ED WHERE F.BUSINESS_UNIT = F_ED.BUSINESS_UNIT AND F.ASSET_ID = F_ED.ASSET_ID AND F_ED.EFFDT <= SYSDATE)
  AND F.EFFSEQ = (SELECT MAX(F_ES.EFFSEQ) FROM PS_ASSET_LOCATION F_ES WHERE F.BUSINESS_UNIT = F_ES.BUSINESS_UNIT AND F.ASSET_ID = F_ES.ASSET_ID AND F.EFFDT = F_ES.EFFDT)
  AND (ASD.EFFDT = (SELECT MAX(EFFDT) FROM PS_ASSET_CUSTODIAN A_ASD WHERE ASD.BUSINESS_UNIT = A_ASD.BUSINESS_UNIT AND ASD.ASSET_ID = A_ASD.ASSET_ID AND A_ASD.EFFDT <= SYSDATE)
    OR ASD.EFFDT IS NULL)
  AND (ASD.EFFSEQ = (SELECT MAX(ASD_ED.EFFSEQ) FROM PS_ASSET_CUSTODIAN ASD_ED WHERE ASD.BUSINESS_UNIT = ASD_ED.BUSINESS_UNIT AND ASD.ASSET_ID = ASD_ED.ASSET_ID AND ASD.EFFDT = ASD_ED.EFFDT)
    OR ASD.EFFSEQ IS NULL)  
  AND G.LOCATION = F.LOCATION
  AND G.EFFDT = (SELECT MAX(G_ED.EFFDT) FROM PS_LOCATION_TBL G_ED WHERE G.SETID = G_ED.SETID AND G.LOCATION = G_ED.LOCATION AND G_ED.EFFDT <= SYSDATE)
  AND G.SETID = 'UNUNI'
  --AND A.ASSET_ID IN ('000000012902', '000000012903')
ORDER BY 1, 2;

--NGs request for Vendor and their Email Addresses
--Under Development
SELECT A.SETID "Contract SetId", A.CNTRCT_ID "Contract Id", A.CNTRCT_STATUS "Contract Status", A.VENDOR_ID "Vendor Id", F.VENDOR_NAME_SHORT "Vendor Short Name", F.NAME1 "Vendor Name", 
       UV.UN_NATIONALITY, F.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS_DESCR, F.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS_DESCR,
       B.REVISION_DT "Revision Date", B.UN_AMEND_NUM "Amendment #", B.UN_REVISION_TYPE "Revision Type", B.UN_FINALIZED "Finalized", B.UN_CNTRCT_TYPE "Contract Type", B.UN_RELATE_CNTRCT "Related Contract Id", 
       B.UN_FUNC_TITLE "Functional Title", B.UN_INIT_START_DT "Init Start Date", B.START_DT "Current Start Date", B.EXPIRATION_DT "Current End Date", '%' || LOWER(REPLACE(F.NAME1, ' ', '%')) || '%' AS "Test COL",
       OPR.OPRID, OPR.OPRDEFNDESC, SUBSTR(OPR.EMAILID, instr(OPR.EMAILID, '@')+1) AS ORG, OPR.EMAILID
--       B.UN_TOR "Terms Of Reference", B.UN_REMUN_AMT "Remuneration/Fee", B.UN_CNTRCT_FREQ "Type", 
--       B.UN_CNTRCT_DUR "Number of Periods", B.UN_EXPENSE_AMT "Expenses", B.UN_CNTRCT_AMT "Current Contract Amount", B.UN_SCHED_COND "Schedule and Condition of Pymt", B.CURRENCY_CD "Contract Currency", 
--       B.UN_SIGNATORY "Signatory Name/Title", B.COMMENTS "Additional Remarks", B.OPRID_ENTERED_BY "Revision Created By", B.DATE_ENTERED "Revision Created Date", B.OPRID_MODIFIED_BY "Revision Modified By", 
--       B.MODIFIED_DT "Revision Modified Date", B.APPROVER_OPRID "Revision Finalized By", B.APPROVAL_DT "Revision Finalized Date", B.UN_PRE_OBL "Pre-Atlas Obligation", B.UN_PRE_OBL_BSE "Pre-Atlas Obligation (USD)", 
--       B.UN_PRE_DISB "Pre-Atlas Disbursement", B.UN_PRE_DISB_BSE "Pre-Atlas Disbursement (USD)", B.UN_PRE_CONTNT_REF "Pre-Atlas Contract Ref"
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B, PS_UN_VENDOR UV, PSXLATITEM X1, PSXLATITEM X2, PSOPRDEFN OPR
WHERE (A.SETID LIKE '6%'
  --AND A.CNTRCT_ID LIKE :2
   AND A.CNTRCT_STATUS NOT IN ('X', 'C')
   AND F.SETID = A.VENDOR_SETID
   AND F.VENDOR_ID = A.VENDOR_ID
   AND A.SETID = B.SETID
   AND A.CNTRCT_ID = B.CNTRCT_ID
   AND UV.SETID = F.SETID 
   AND UV.VENDOR_ID = F.VENDOR_ID
   AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
   AND X1.FIELDVALUE (+) = F.VENDOR_CLASS
   AND X1.EFF_STATUS (+)  = 'A' 
   AND X2.FIELDNAME (+) = 'VENDOR_STATUS'
   AND X2.FIELDVALUE (+) = F.VENDOR_STATUS
   AND X2.EFF_STATUS (+)  = 'A'
   AND F.VENDOR_ID = '0000000258'
   AND (LOWER(OPR.OPRDEFNDESC) LIKE '%' || LOWER(REPLACE(SUBSTR(F.NAME1, 1, 10), ' ', '%')) || '%')
   --AND INSTR(OPR.EMAILID, '@', 1, 1)
   --AND LOWER(OPR.EMAILID) LIKE '%unu.edu'
   )
ORDER BY 1, 2, 7 DESC;

--For the time being filter on Contract Type(s)
--This query has been added to TDP
SELECT A.SETID "Contract SetId", A.CNTRCT_ID "Contract Id", A.CNTRCT_STATUS "Contract Status", A.VENDOR_ID "Vendor Id", F.VENDOR_NAME_SHORT "Vendor Short Name", F.NAME1 "Vendor Name", 
       UV.UN_NATIONALITY, F.VENDOR_CLASS, X1.XLATLONGNAME AS VNDR_CLASS_DESCR, F.VENDOR_STATUS, X2.XLATLONGNAME AS VNDR_STS_DESCR,
       B.REVISION_DT "Revision Date", B.UN_AMEND_NUM "Amendment #", B.UN_REVISION_TYPE "Revision Type", B.UN_FINALIZED "Finalized", B.UN_CNTRCT_TYPE "Contract Type", B.UN_RELATE_CNTRCT "Related Contract Id", 
       B.UN_FUNC_TITLE "Functional Title", B.UN_INIT_START_DT "Init Start Date", B.START_DT "Current Start Date", B.EXPIRATION_DT "Current End Date"
--       B.UN_TOR "Terms Of Reference", B.UN_REMUN_AMT "Remuneration/Fee", B.UN_CNTRCT_FREQ "Type", 
--       B.UN_CNTRCT_DUR "Number of Periods", B.UN_EXPENSE_AMT "Expenses", B.UN_CNTRCT_AMT "Current Contract Amount", B.UN_SCHED_COND "Schedule and Condition of Pymt", B.CURRENCY_CD "Contract Currency", 
--       B.UN_SIGNATORY "Signatory Name/Title", B.COMMENTS "Additional Remarks", B.OPRID_ENTERED_BY "Revision Created By", B.DATE_ENTERED "Revision Created Date", B.OPRID_MODIFIED_BY "Revision Modified By", 
--       B.MODIFIED_DT "Revision Modified Date", B.APPROVER_OPRID "Revision Finalized By", B.APPROVAL_DT "Revision Finalized Date", B.UN_PRE_OBL "Pre-Atlas Obligation", B.UN_PRE_OBL_BSE "Pre-Atlas Obligation (USD)", 
--       B.UN_PRE_DISB "Pre-Atlas Disbursement", B.UN_PRE_DISB_BSE "Pre-Atlas Disbursement (USD)", B.UN_PRE_CONTNT_REF "Pre-Atlas Contract Ref"
FROM PS_CNTRCT_HDR A, PS_VENDOR F, PS_UN_CNTRCT_DTLS B, PS_UN_VENDOR UV, PSXLATITEM X1, PSXLATITEM X2
WHERE (A.SETID LIKE '6%'
  --AND A.CNTRCT_ID LIKE :2
   AND A.CNTRCT_STATUS NOT IN ('X', 'C')
   AND F.SETID = A.VENDOR_SETID
   AND F.VENDOR_ID = A.VENDOR_ID
   AND A.SETID = B.SETID
   AND A.CNTRCT_ID = B.CNTRCT_ID
   AND UV.SETID = F.SETID 
   AND UV.VENDOR_ID = F.VENDOR_ID
   AND X1.FIELDNAME (+) = 'VENDOR_CLASS'
   AND X1.FIELDVALUE (+) = F.VENDOR_CLASS
   AND X1.EFF_STATUS (+)  = 'A' 
   AND X2.FIELDNAME (+) = 'VENDOR_STATUS'
   AND X2.FIELDVALUE (+) = F.VENDOR_STATUS
   AND X2.EFF_STATUS (+)  = 'A'
   AND B.UN_CNTRCT_TYPE NOT IN ('ICA')
   )
ORDER BY 1, 2, 7 DESC;

--Verification Queries
SELECT * FROM PSOPRALIAS WHERE OPRID = 'prakash.prashant';
SELECT * FROM PSOPRDEFN WHERE OPRID = 'prakash.prashant';
SELECT * FROM PSOPRDEFN WHERE LOWER(OPRDEFNDESC) LIKE '%barbara%solich%';
SELECT * FROM PSOPRDEFN WHERE OPRID LIKE '%barbara%';
SELECT * FROM PSOPRDEFN WHERE LOWER(OPRDEFNDESC) LIKE '%barbara%wanda%solich%';
SELECT * FROM PS_UN_VENDOR WHERE SETID = 'UNUNI';
SELECT * FROM PSOPRDEFN WHERE LOWER(OPRDEFNDESC) LIKE '%saharsh%';
SELECT * FROM PSOPRALIASTYPE;
SELECT * FROM PSOPRALIAS WHERE OPRALIASTYPE = 'VND' AND (SETID LIKE '6%' OR SETID = 'UNUNI');
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND VENDOR_ID LIKE '%5935';
SELECT * FROM PS_VENDOR WHERE SETID = 'UNUNI' AND LOWER(NAME1) LIKE '%saharsh%';

--Understanding FIN2025
SELECT * FROM PS_EFT_FILESEQ_TBL;
SELECT * FROM PS_ACH_FILESEQ_TBL;
SELECT * FROM PS_EFT_LAYOUT_TBL;
SELECT * FROM PS_BANK_PYMNT_LYT WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';
SELECT * FROM PS_EFT_ADVICE_TMP WHERE REMIT_VENDOR ='0000005935' AND UPPER(VENDOR_NAME) LIKE '%PRASHANT%';
SELECT * FROM PS_EFT_FILE_RPT WHERE BNK_ID_NBR IN (SELECT BNK_ID_NBR FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%') ORDER BY FILE_CREATE_DT DESC;
SELECT * FROM PS_EFT_BANK_TMP WHERE BNK_ID_NBR IN (SELECT BNK_ID_NBR FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%');

--Trying to see if the numbers can somehow be reconciled with PAYMENT_TBL
--Numbers tie
--Creation Date and Payment Date need to check
SELECT BANK_NAME, COUNTRY_NAME, BANK_ACCOUNT_NUM, PAY_CYCLE, TO_CHAR(PYMNT_DT, 'YYYY') AS "YEAR", SUM(PYMNT_AMT) AS "PYMNT_AMT", CURRENCY_CD 
FROM PS_EFT_BANK_TMP 
WHERE BNK_ID_NBR IN (SELECT BNK_ID_NBR FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%')
GROUP BY BANK_NAME, COUNTRY_NAME, BANK_ACCOUNT_NUM, PAY_CYCLE, TO_CHAR(PYMNT_DT, 'YYYY'), CURRENCY_CD
ORDER BY TO_CHAR(PYMNT_DT, 'YYYY') DESC, BANK_NAME, COUNTRY_NAME, BANK_ACCOUNT_NUM, PAY_CYCLE;

SELECT * FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD LIKE '6%';

--Stats from PAYMENT_TBL
--Numbers tie with EFT_BANK_TMP
SELECT PY.BANK_CD, BCD.DESCR AS BANK_CD_DESCR, BCD.BANK_ID_QUAL, BCD.COUNTRY, BAD.BANK_ACCT_KEY, PY.BANK_ACCOUNT_NUM, BAD.DESCR AS BANK_ACCT_NUM_DESCR, 
       PY.PAY_CYCLE, PY.PYMNT_METHOD, PY.PYMNT_HANDLING_CD, PY.EFT_PYMNT_FMT_CD, PY.EFT_TRANS_HANDLING, X2.XLATLONGNAME AS EFT_TRANS_CD, PY.PYMNT_TYPE, PY.SOURCE_TXN, PY.PREFERRED_LANGUAGE, PY.EFT_LAYOUT_CD, 
       PY.STL_THROUGH, X1.XLATLONGNAME AS SETTLED_BY, TO_CHAR(PY.PYMNT_DT, 'YYYY') AS "YEAR", SUM(PY.PYMNT_AMT) AS "PYMNT_AMT", PY.CURRENCY_PYMNT
FROM ((((PS_PAYMENT_TBL PY LEFT OUTER JOIN PS_BANK_CD_TBL BCD ON PY.BANK_SETID = BCD.SETID AND PY.BANK_CD = BCD.BANK_CD)
      LEFT OUTER JOIN PS_BANK_ACCT_DEFN BAD ON BCD.SETID = BAD.SETID AND BCD.BANK_CD = BAD.BANK_CD AND PY.BANK_ACCT_KEY = BAD.BANK_ACCT_KEY)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'STL_THROUGH' AND X1.FIELDVALUE = PY.STL_THROUGH AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'EFT_TRANS_HANDLING' AND X2.FIELDVALUE = PY.EFT_TRANS_HANDLING AND X2.EFF_STATUS = 'A')
WHERE PY.BANK_SETID = 'SHARE' 
  AND PY.BANK_CD LIKE '6%'
GROUP BY PY.BANK_CD, BCD.DESCR, BCD.BANK_ID_QUAL, BCD.COUNTRY, BAD.BANK_ACCT_KEY, PY.BANK_ACCOUNT_NUM, BAD.DESCR,
         PY.PAY_CYCLE, PY.PYMNT_METHOD, PY.PYMNT_HANDLING_CD, PY.EFT_PYMNT_FMT_CD, PY.EFT_TRANS_HANDLING, X2.XLATLONGNAME, PY.PYMNT_TYPE, PY.SOURCE_TXN, PY.PREFERRED_LANGUAGE, 
         PY.EFT_LAYOUT_CD, PY.STL_THROUGH, X1.XLATLONGNAME, TO_CHAR(PY.PYMNT_DT, 'YYYY'), PY.CURRENCY_PYMNT
ORDER BY TO_CHAR(PY.PYMNT_DT, 'YYYY') DESC, PY.BANK_CD, BAD.BANK_ACCT_KEY, PY.BANK_ACCOUNT_NUM, PY.PAY_CYCLE;

--Check for numbers in PYMNT_VCHR_XREF
--Version 1
--Difficult to tie the numbers with PAYMENT_TBL because of the date criteria, but it ties
SELECT XPY.BANK_CD, BCD.DESCR AS BANK_CD_DESCR, BCD.BANK_ID_QUAL, BCD.COUNTRY, BAD.BANK_ACCT_KEY, BAD.DESCR AS BANK_ACCT_NUM_DESCR, XPY.PYMNT_SELCT_STATUS, X2.XLATLONGNAME AS PYMNT_SELECT_STATUS,
       XPY.PAY_CYCLE, XPY.PYMNT_METHOD, XPY.PYMNT_HANDLING_CD, XPY.EFT_PYMNT_FMT_CD, XPY.PYMNT_TYPE, XPY.SOURCE_TXN, XPY.EFT_LAYOUT_CD, 
       XPY.STL_THROUGH, X1.XLATLONGNAME AS SETTLED_BY, TO_CHAR(XPY.DUE_DT, 'YYYY') AS "DUE_YEAR", TO_CHAR(XPY.SCHEDULED_PAY_DT, 'YYYY') AS "SCHED_YEAR",
       SUM(XPY.PAID_AMT) AS "PAID_AMT", XPY.CURRENCY_PYMNT, SUM(XPY.PAID_AMT_BNK_BSE) AS "PAID_AMT_BNK_BASE", XPY.BASE_CURRENCY_BNK
FROM ((((PS_PYMNT_VCHR_XREF XPY LEFT OUTER JOIN PS_BANK_CD_TBL BCD ON XPY.BANK_SETID = BCD.SETID AND XPY.BANK_CD = BCD.BANK_CD)
      LEFT OUTER JOIN PS_BANK_ACCT_DEFN BAD ON BCD.SETID = BAD.SETID AND BCD.BANK_CD = BAD.BANK_CD AND XPY.BANK_ACCT_KEY = BAD.BANK_ACCT_KEY)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'STL_THROUGH' AND X1.FIELDVALUE = XPY.STL_THROUGH AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X2.FIELDVALUE = XPY.PYMNT_SELCT_STATUS AND X2.EFF_STATUS = 'A')
WHERE XPY.BANK_SETID = 'SHARE' 
  AND (XPY.BUSINESS_UNIT LIKE '6%')
  --AND XPY.PYMNT_SELCT_STATUS NOT IN ('X')
  --AND TO_CHAR(XPY.DUE_DT, 'YYYY') >= '2015'
  AND TO_CHAR(XPY.SCHEDULED_PAY_DT, 'YYYY') >= '2015'
  AND XPY.BANK_CD = '60002'
GROUP BY XPY.BANK_CD, BCD.DESCR, BCD.BANK_ID_QUAL, BCD.COUNTRY, BAD.BANK_ACCT_KEY, BAD.DESCR, XPY.PYMNT_SELCT_STATUS, X2.XLATLONGNAME,
         XPY.PAY_CYCLE, XPY.PYMNT_METHOD, XPY.PYMNT_HANDLING_CD, XPY.EFT_PYMNT_FMT_CD, XPY.PYMNT_TYPE, XPY.SOURCE_TXN,
         XPY.EFT_LAYOUT_CD, XPY.STL_THROUGH, X1.XLATLONGNAME, TO_CHAR(XPY.DUE_DT, 'YYYY'), TO_CHAR(XPY.SCHEDULED_PAY_DT, 'YYYY'), XPY.CURRENCY_PYMNT, XPY.BASE_CURRENCY_BNK
ORDER BY TO_CHAR(XPY.DUE_DT, 'YYYY') DESC, XPY.BANK_CD, BAD.BANK_ACCT_KEY, XPY.PAY_CYCLE;

--Verification Queries
SELECT TO_CHAR(XPY.DUE_DT, 'YYYY'), XPY.PYMNT_SELCT_STATUS, XPY.PYMNT_METHOD, 
       SUM(XPY.PAID_AMT) AS "PAID_AMT", XPY.CURRENCY_PYMNT, SUM(XPY.PAID_AMT_BNK_BSE) AS "PAID_AMT_BNK_BASE", XPY.BASE_CURRENCY_BNK 
FROM PS_PYMNT_VCHR_XREF XPY 
WHERE BANK_CD = '60002' 
 --AND (DUE_DT IS NULL OR SCHEDULED_PAY_DT IS NULL)
GROUP BY TO_CHAR(XPY.DUE_DT, 'YYYY'), XPY.PYMNT_SELCT_STATUS, XPY.PYMNT_METHOD, XPY.CURRENCY_PYMNT, XPY.BASE_CURRENCY_BNK
ORDER BY TO_CHAR(XPY.DUE_DT, 'YYYY') DESC;

SELECT * FROM PS_PAYMENT_TBL WHERE BANK_CD = '60002' AND PYMNT_METHOD = 'MAN' AND TO_CHAR(PYMNT_DT, 'YYYY') >= '2015';
SELECT * FROM PS_PAYMENT_TBL WHERE BANK_CD = '60002' AND PYMNT_METHOD = 'EFT' AND TO_CHAR(PYMNT_DT, 'YYYY') >= '2015';

SELECT * FROM PS_PYMNT_VCHR_XREF WHERE BANK_CD = '60002' AND PYMNT_ID IN ('0000004447', '0000004437', '0000004438');

--Use this query to identify which rows are included
SELECT * FROM PS_PAYMENT_TBL PY WHERE PY.BANK_CD = '60002' AND PY.PYMNT_METHOD = 'EFT' AND TO_CHAR(PY.PYMNT_DT, 'YYYY') >= '2015'
AND EXISTS (SELECT 'X' FROM PS_PYMNT_VCHR_XREF PX WHERE PY.BANK_SETID = PX.BANK_SETID AND PY.BANK_CD = PX.BANK_CD AND PY.BANK_ACCT_KEY = PX.BANK_ACCT_KEY AND PY.PYMNT_ID = PX.PYMNT_ID
                                                    AND TO_CHAR(PX.SCHEDULED_PAY_DT, 'YYYY') >= '2015');

--UNU Check Vendor Approval
SELECT * FROM PS_RTE_CNTL_LN_VW2 A 
WHERE A.ROLENAME = 'UN_VENDOR_APPROVER_WF' 
  AND A.RTE_CNTL_TYPE_1 = 'Administrative Area' 
  AND A.RTE_FROM_VALUE_1 <= 'AP' 
  AND A.RTE_TO_VALUE_1 >= 'AP' 
  AND A.RTE_CNTL_TYPE_2 = 'UN_SETID' 
  AND A.RTE_FROM_VALUE_2 <= 'UNUNI' 
  AND A.RTE_TO_VALUE_2 >= 'UNUNI' 
  --AND A.ROLEUSER = 'prakash.prashant'
ORDER BY 1,2;

--Select Payments for FG
--AP_FG_PROC
SELECT B.BANK_SETID, B.BANK_CD, B.BANK_ACCT_KEY, B.PYMNT_ID, B.REMIT_SETID, B.REMIT_VENDOR, B.VNDR_LOC, B.EMPLID, B.SOURCE_TXN, B.PYMNT_STATUS, B.SINGLE_PYMNT_FLG 
FROM PS_PYCYCL_MTHD A, PS_PAYMENT_TBL B 
WHERE A.BANK_SETID = B.BANK_SETID 
  AND A.BANK_CD = B.BANK_CD 
  AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY 
  AND A.PYMNT_METHOD = B.PYMNT_METHOD 
  AND B.PAY_CYCLE = A.PAY_CYCLE 
  AND B.PYMNT_METHOD IN ('EFT','WIR','ACH') 
  AND B.PMT_PYMNT_STATUS = 'N' 
  AND ((B.PYMNT_STATUS = 'P' AND B.PYMNT_AMT <> 0) OR B.PYMNT_STATUS = 'E') 
  AND B.STL_THROUGH = '01'
  --AND A.PAY_CYCLE LIKE '6%'
  --AND B.PAY_CYCLE_SEQ_NUM = 0000
ORDER BY 1,2,3,4;

--TR Event Log App Package
SELECT * FROM PS_TR_EVENT_LOG WHERE EVENT_TRACKING_ID = '196766' ORDER BY EVENT_DATE DESC;
SELECT * FROM PS_TR_EVENT_CHANGE WHERE EVENT_TRACKING_ID = '196766';

SELECT * FROM PS_TR_EVENT_CD_TBL;
SELECT * FROM PSXLATITEM WHERE FIELDNAME = 'EVENT_MODE';

SELECT EL.EVENT_TRACKING_ID, EL.EVENT_CODE, ECT.DESCR150_MIXED, EL.EVENT_SEQUENCE, EL.EVENT_DATE, EL.EVENT_SEVERITY, EL.EVENT_PROCESSED, EL.OPRID, EC.EVENT_CHANGE_ID, 
       EL.MESSAGE_SET_NBR, EL.MESSAGE_NBR, MSG.MESSAGE_TEXT, EL.EVENT_MSG_BIND1, EL.EVENT_MSG_BIND2, EL.EVENT_MSG_BIND3, EL.EVENT_CHANGED_SW, 
       --EC.EVENT_TRACKING_ID, EC.EVENT_CODE, EC.EVENT_SEQUENCE, 
       EC.EVENT_FIELD_NAME, EC.RECORDNAME, EC.FIELDNAME, EC.EVENT_OLD_VALUE, EC.EVENT_NEW_VALUE
FROM (((PS_TR_EVENT_LOG EL LEFT OUTER JOIN PS_TR_EVENT_CHANGE EC ON EL.EVENT_TRACKING_ID = EC.EVENT_TRACKING_ID AND EL.EVENT_CODE = EC.EVENT_CODE AND EL.EVENT_SEQUENCE = EC.EVENT_SEQUENCE)
      LEFT OUTER JOIN PSMSGCATDEFN MSG ON EL.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR AND EL.MESSAGE_NBR = MSG.MESSAGE_NBR)
      LEFT OUTER JOIN PS_TR_EVENT_CD_TBL ECT ON EL.EVENT_CODE = ECT.EVENT_CODE)
WHERE TO_CHAR(EL.EVENT_DATE, 'YYYY') >= '2015'
  --AND EL.EVENT_TRACKING_ID = '196766'
ORDER BY EL.EVENT_TRACKING_ID DESC, EVENT_DATE DESC, EL.EVENT_CODE, EL.EVENT_SEQUENCE, EC.EVENT_CHANGE_ID;

--Use the TR Event Logging Framework totrack FG payments for UNU
--This is based on the PMT_DETAIL_TBL
SELECT EL.EVENT_TRACKING_ID, EL.EVENT_CODE, ECT.DESCR150_MIXED, EL.EVENT_SEQUENCE, EL.EVENT_DATE, EL.EVENT_SEVERITY, EL.EVENT_PROCESSED, EL.OPRID, EC.EVENT_CHANGE_ID, 
       EL.MESSAGE_SET_NBR, EL.MESSAGE_NBR, MSG.MESSAGE_TEXT, EL.EVENT_MSG_BIND1, EL.EVENT_MSG_BIND2, EL.EVENT_MSG_BIND3, EL.EVENT_CHANGED_SW, 
       --EC.EVENT_TRACKING_ID, EC.EVENT_CODE, EC.EVENT_SEQUENCE, 
       EC.EVENT_FIELD_NAME, EC.RECORDNAME, EC.FIELDNAME, EC.EVENT_OLD_VALUE, EC.EVENT_NEW_VALUE
FROM (((PS_TR_EVENT_LOG EL LEFT OUTER JOIN PS_TR_EVENT_CHANGE EC ON EL.EVENT_TRACKING_ID = EC.EVENT_TRACKING_ID AND EL.EVENT_CODE = EC.EVENT_CODE AND EL.EVENT_SEQUENCE = EC.EVENT_SEQUENCE)
      LEFT OUTER JOIN PSMSGCATDEFN MSG ON EL.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR AND EL.MESSAGE_NBR = MSG.MESSAGE_NBR)
      LEFT OUTER JOIN PS_TR_EVENT_CD_TBL ECT ON EL.EVENT_CODE = ECT.EVENT_CODE)
WHERE TO_CHAR(EL.EVENT_DATE, 'YYYY') >= '2009'
  --AND EL.EVENT_TRACKING_ID = '196766'
  AND EL.EVENT_TRACKING_ID IN (SELECT EVENT_TRACKING_ID FROM PS_PMT_DETAIL_TBL WHERE (BUSINESS_UNIT LIKE '6%' OR ACCT_BUS_UNIT_GL = 'UNUNI'))
ORDER BY EL.EVENT_TRACKING_ID DESC, EVENT_DATE DESC, EL.EVENT_CODE, EL.EVENT_SEQUENCE, EC.EVENT_CHANGE_ID;

--This is based on PMT_REQUEST_LOG
SELECT EL.EVENT_TRACKING_ID, EL.EVENT_CODE, ECT.DESCR150_MIXED, EL.EVENT_SEQUENCE, EL.EVENT_DATE, EL.EVENT_SEVERITY, EL.EVENT_PROCESSED, EL.OPRID, EC.EVENT_CHANGE_ID, 
       EL.MESSAGE_SET_NBR, EL.MESSAGE_NBR, MSG.MESSAGE_TEXT, EL.EVENT_MSG_BIND1, EL.EVENT_MSG_BIND2, EL.EVENT_MSG_BIND3, EL.EVENT_CHANGED_SW, 
       --EC.EVENT_TRACKING_ID, EC.EVENT_CODE, EC.EVENT_SEQUENCE, 
       EC.EVENT_FIELD_NAME, EC.RECORDNAME, EC.FIELDNAME, EC.EVENT_OLD_VALUE, EC.EVENT_NEW_VALUE
FROM (((PS_TR_EVENT_LOG EL LEFT OUTER JOIN PS_TR_EVENT_CHANGE EC ON EL.EVENT_TRACKING_ID = EC.EVENT_TRACKING_ID AND EL.EVENT_CODE = EC.EVENT_CODE AND EL.EVENT_SEQUENCE = EC.EVENT_SEQUENCE)
      LEFT OUTER JOIN PSMSGCATDEFN MSG ON EL.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR AND EL.MESSAGE_NBR = MSG.MESSAGE_NBR)
      LEFT OUTER JOIN PS_TR_EVENT_CD_TBL ECT ON EL.EVENT_CODE = ECT.EVENT_CODE)
WHERE TO_CHAR(EL.EVENT_DATE, 'YYYY') >= '2009'
  --AND EL.EVENT_TRACKING_ID = '198017'
  AND EL.EVENT_TRACKING_ID IN (SELECT EVENT_TRACKING_ID FROM PS_PMT_REQUEST_LOG WHERE EVENT_TRACKING_ID IS NOT NULL)
ORDER BY EL.EVENT_TRACKING_ID DESC, EVENT_DATE DESC, EL.EVENT_CODE, EL.EVENT_SEQUENCE, EC.EVENT_CHANGE_ID;

--Actual Query
SELECT DISTINCT R.BUSINESS_UNIT, R.ASSET_ID, B.DESCR, R.BOOK, R.DTTM_STAMP, R.RETIREMENT_DT, R.CONVENTION, R.END_DEPR_DT, R.DISPOSAL_CODE, R.RETIREMENT_TYPE, R.RETIREMENT_STATUS, R.VOLUNTARY, 
       R.TRADE_IN_ASSET_ID, R.TRADE_IN_DTTM_STMP, R.TRADE_IN_AMT, R.TXN_TRADE_IN_AMT, R.GROUPID_ONE_MANY, R.LIKE_EXCH_ASSET_ID, R.LIKE_KIND_DATESTMP, R.LIKE_KIND_BASIS, R.NON_LIKE_ASSET_ID, R.NON_LKE_DTTM_STAMP, 
       R.NON_LIKE_BASIS, R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.TXN_PROCEEDS, R.PROCEEDS, R.TXN_REMOVAL_COST, R.REMOVAL_COST, R.TXN_CURRENCY_CD2, R.RATE_DIV_2, R.RATE_MULT_2, R.RETIREMENT_RSV, R.GAIN_LOSS, 
       R.BASIS_RED_RECAP, R.LEASE_REM_PAYMNTS, R.TXN_CURRENCY_CD, R.FROM_CUR, R.RATE_DIV, R.RATE_MULT, R.RT_TYPE, R.RT_EFFDT, R.INCL_NON_CAP_COST, R.ORIGINAL_COST_FLG, R.RECALC_COST_W_INDX, R.TRAN_EXCLUDE_CODE, 
       R.TRAN_EXCLUDE_AMT, R.RETIREMENT_PCT, R.RET_NON_CAP_AMT, R.INDEX_NAME, R.INDEX_DETAIL_NAME, R.INDEX_REVALUE_AMT, R.FULLY_DEPR_SW, R.REDUCED_COST, R.CAPITAL_G_L, R.RET_NON_CAP_AMT2, R.IN_SERVICE_PDS, 
       R.RETIREMENT_RSV_SL, R.RECOG_GAIN_LOSS, R.TXN_CASH, R.CASH, R.TXN_TRADE_IN_VALUE, R.TRADE_IN_VALUE, R.TXN_NON_LIKE_KIND, R.NON_LIKE_KIND, R.TXN_LIAB_ASSUMED, R.LIABILITY_ASSUMED, R.ACCOUNTING_DT, R.DEPR_YTD, 
       R.ACCUM_DEPR, R.DEPR_BAL, R.AUTO_RETIRED_SW, R.BILL_TO_CUST_ID, R.ADDRESS_SEQ_NUM, R.SHIP_TO_CUST_ID, R.SHIP_TO_ADDR_NUM, R.SOLD_TO_CUST_ID, R.SOLD_TO_ADDR_NUM, R.SHIP_FROM_LOC, R.AM_CREATE_BILL, R.CUSTOMER_SETID, 
       R.PROCEEDS_BSE_DIFF, R.DESCR254 
FROM (PS_RETIREMENT R LEFT OUTER JOIN PS_COST C ON R.BUSINESS_UNIT = C.BUSINESS_UNIT AND R.ASSET_ID = C.ASSET_ID AND R.BOOK = C.BOOK AND R.DTTM_STAMP = C.DTTM_STAMP), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID 
  AND R.BUSINESS_UNIT = 'UNUNI' 
  --AND C.AM_PHY_TXN_SW <> 'Y'
ORDER BY R.DTTM_STAMP DESC, R.BUSINESS_UNIT, R.ASSET_ID, R.BOOK, R.RETIREMENT_DT;

--Trimmed Version based on 9.2 SQR AMRT2100
--UNION seems to be working
--Version 1
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW, R.ASSET_ID, B.DESCR, TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, 
       TO_DATE('1901-01-01','YYYY-MM-DD') AS TRANS_DT, 
       R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, 
       R.DISPOSAL_CODE, R.RETIREMENT_TYPE, R.RETIREMENT_STATUS, 
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, 
       R.TXN_CURRENCY_CD, R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, R.IN_SERVICE_PDS, R.ACCOUNTING_DT
FROM (PS_RETIREMENT R LEFT OUTER JOIN PS_COST C ON R.BUSINESS_UNIT = C.BUSINESS_UNIT AND R.ASSET_ID = C.ASSET_ID AND R.BOOK = C.BOOK AND R.DTTM_STAMP = C.DTTM_STAMP), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID 
  AND R.BUSINESS_UNIT = 'UNUNI' 
  --AND C.AM_PHY_TXN_SW <> 'Y'
UNION
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW, R.ASSET_ID, B.DESCR, TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, 
       R.TRANS_DT,
       R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, R.DISPOSAL_CODE, R.RETIREMENT_TYPE, R.RETIREMENT_STATUS,
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, ' ', R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, 0.00, TO_DATE('1901-01-01','YYYY-MM-DD') AS ACCOUNTING_DT
FROM PS_RETIREMENT_NF R, PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID 
  AND R.BUSINESS_UNIT = 'UNUNI'
ORDER BY DTTM_STAMP DESC, BUSINESS_UNIT, ASSET_ID, BOOK, RETIREMENT_DT;

--Version 2
--Added XLAT
--Added CoA
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW "Capitalized Asset", R.ASSET_ID, B.DESCR, TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, 
       TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, TO_DATE('1901-01-01','YYYY-MM-DD') AS TRANS_DT, R.ACCOUNTING_DT, R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, 
       R.DISPOSAL_CODE, X1.XLATLONGNAME AS DISPOSAL_CD_DESCR, R.RETIREMENT_TYPE, X2.XLATLONGNAME AS RETIREMENT_TYPE_DESCR, R.RETIREMENT_STATUS, X3.XLATLONGNAME AS RETIREMENT_STS_DESCR,
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, ACQ.CURRENCY_CD AS ACQ_CURR_CD, ACQ.AMOUNT AS ACQ_AMT, ACQ.TXN_CURRENCY_CD AS ACQ_TXN_CURR_CD, ACQ.TXN_AMOUNT AS ACQ_TXN_AMT,
       R.TXN_CURRENCY_CD, R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, R.IN_SERVICE_PDS,
       DECODE(C.OPERATING_UNIT, '',  ACQ.OPERATING_UNIT,  C.OPERATING_UNIT) OPERATING_UNIT,
       DECODE(C.FUND_CODE,'', ACQ.FUND_CODE, C.FUND_CODE) FUND_CODE,
       DECODE(C.DEPTID, '',  ACQ.DEPTID,  C.DEPTID) DEPTID,
       DECODE(C.CHARTFIELD2, '',  ACQ.CHARTFIELD2,  C.CHARTFIELD2) CHARTFIELD2,
       DECODE(C.PROJECT_ID, '',  ACQ.PROJECT_ID,  C.PROJECT_ID) PROJECT_ID,
       ASD.CUSTODIAN, ASD.OPERATING_UNIT AS CUST_OP_UNIT, ASD.FUND_CODE AS CUST_FUND_CODE, ASD.DEPTID AS CUST_DEPTID, ASD.CHARTFIELD2 AS CUST_DONOR, ASD.PROJECT_ID AS CUST_PROJECT_ID
FROM (((((((PS_RETIREMENT R LEFT OUTER JOIN PS_COST C ON R.BUSINESS_UNIT = C.BUSINESS_UNIT AND R.ASSET_ID = C.ASSET_ID AND R.BOOK = C.BOOK AND R.DTTM_STAMP = C.DTTM_STAMP)
      LEFT OUTER JOIN PS_ASSET_ACQ_DET ACQ ON R.BUSINESS_UNIT = ACQ.BUSINESS_UNIT AND R.ASSET_ID = ACQ.ASSET_ID)
      LEFT OUTER JOIN PS_UN_OAPR_COST_CF C ON R.BUSINESS_UNIT =  C.BUSINESS_UNIT AND R.ASSET_ID =  C.ASSET_ID)
      LEFT OUTER JOIN PS_ASSET_CUSTODIAN ASD ON R.BUSINESS_UNIT =  ASD.BUSINESS_UNIT AND R.ASSET_ID =  ASD.ASSET_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'DISPOSAL_CODE' AND X1.FIELDVALUE = R.DISPOSAL_CODE AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'RETIREMENT_TYPE' AND X2.FIELDVALUE = R.RETIREMENT_TYPE AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'RETIREMENT_STATUS' AND X3.FIELDVALUE = R.RETIREMENT_STATUS AND X3.EFF_STATUS = 'A'), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID 
  AND (ASD.EFFDT = (SELECT MAX(EFFDT) FROM PS_ASSET_CUSTODIAN A_ASD WHERE ASD.BUSINESS_UNIT = A_ASD.BUSINESS_UNIT AND ASD.ASSET_ID = A_ASD.ASSET_ID AND A_ASD.EFFDT <= SYSDATE)
    OR ASD.EFFDT IS NULL)
  AND (ASD.EFFSEQ = (SELECT MAX(ASD_ED.EFFSEQ) FROM PS_ASSET_CUSTODIAN ASD_ED WHERE ASD.BUSINESS_UNIT = ASD_ED.BUSINESS_UNIT AND ASD.ASSET_ID = ASD_ED.ASSET_ID AND ASD.EFFDT = ASD_ED.EFFDT)
    OR ASD.EFFSEQ IS NULL)
  AND R.BUSINESS_UNIT = 'UNUNI' 
  --AND C.AM_PHY_TXN_SW <> 'Y'
UNION
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW, R.ASSET_ID, B.DESCR, TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, 
       R.TRANS_DT, TO_DATE('1901-01-01','YYYY-MM-DD') AS ACCOUNTING_DT, R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, 
       R.DISPOSAL_CODE, X1.XLATLONGNAME AS DISPOSAL_CD_DESCR, R.RETIREMENT_TYPE, X2.XLATLONGNAME AS RETIREMENT_TYPE_DESCR, R.RETIREMENT_STATUS, X3.XLATLONGNAME AS RETIREMENT_STS_DESCR,
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, ACQ.CURRENCY_CD AS ACQ_CURR_CD, ACQ.AMOUNT AS ACQ_AMT, ACQ.TXN_CURRENCY_CD AS ACQ_TXN_CURR_CD, ACQ.TXN_AMOUNT AS ACQ_TXN_AMT, 
       ' ', R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, 0.00,
       ACQ.OPERATING_UNIT, ACQ.FUND_CODE, ACQ.DEPTID, ACQ.CHARTFIELD2, ACQ.PROJECT_ID,
       ASD.CUSTODIAN, ASD.OPERATING_UNIT AS CUST_OP_UNIT, ASD.FUND_CODE AS CUST_FUND_CODE, ASD.DEPTID AS CUST_DEPTID, ASD.CHARTFIELD2 AS CUST_DONOR, ASD.PROJECT_ID AS CUST_PROJECT_ID
FROM (((((PS_RETIREMENT_NF R LEFT OUTER JOIN PS_ASSET_ACQ_DET ACQ ON R.BUSINESS_UNIT = ACQ.BUSINESS_UNIT AND R.ASSET_ID = ACQ.ASSET_ID)
      LEFT OUTER JOIN PS_ASSET_CUSTODIAN ASD ON R.BUSINESS_UNIT =  ASD.BUSINESS_UNIT AND R.ASSET_ID =  ASD.ASSET_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'DISPOSAL_CODE' AND X1.FIELDVALUE = R.DISPOSAL_CODE AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'RETIREMENT_TYPE' AND X2.FIELDVALUE = R.RETIREMENT_TYPE AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'RETIREMENT_STATUS' AND X3.FIELDVALUE = R.RETIREMENT_STATUS AND X3.EFF_STATUS = 'A'), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID
  AND (ASD.EFFDT = (SELECT MAX(EFFDT) FROM PS_ASSET_CUSTODIAN A_ASD WHERE ASD.BUSINESS_UNIT = A_ASD.BUSINESS_UNIT AND ASD.ASSET_ID = A_ASD.ASSET_ID AND A_ASD.EFFDT <= SYSDATE)
    OR ASD.EFFDT IS NULL)
  AND (ASD.EFFSEQ = (SELECT MAX(ASD_ED.EFFSEQ) FROM PS_ASSET_CUSTODIAN ASD_ED WHERE ASD.BUSINESS_UNIT = ASD_ED.BUSINESS_UNIT AND ASD.ASSET_ID = ASD_ED.ASSET_ID AND ASD.EFFDT = ASD_ED.EFFDT)
    OR ASD.EFFSEQ IS NULL)
  AND R.BUSINESS_UNIT = 'UNUNI'
ORDER BY DTTM_STAMP DESC, BUSINESS_UNIT, ASSET_ID, BOOK, RETIREMENT_DT;


--UNU_AP_REMITTANCE_ADVICE
SELECT A.PAY_CYCLE, A.PYMNT_METHOD, A.BUSINESS_UNIT, A.PYMNT_ID_REF, B.PYMNT_DT, B.NAME1, B.ADDRESS1, B.ADDRESS2, B.ADDRESS3, B.ADDRESS4, B.CITY, B.POSTAL, B.COUNTRY, B.DFI_ID_NUM, B.REMIT_BANK_ACCOUNT, 
       A.INVOICE_ID, A.PAY_DOC_DT, A.PAY_DOC_ID, A.CURRENCY_PYMNT, A.PAID_AMT, A.VENDOR_ID, F.VENDOR_CLASS, E.PHONE_TYPE, E.COUNTRY_CODE, E.PHONE, E.EFFDT, 
       DECODE(INSTR(UPPER( G.DESCR),'-NOPAD'),0, D.EMAILID, '') EMAILID, C.DESCR254_MIXED, C.OPRID, A.PYMNT_MESSAGE
FROM PS_PYMNT_ADVICE A, PS_PAYMENT_TBL B, PS_VOUCHER C, PS_VENDOR_ADDR D, PS_VENDOR_ADDR_PHN E, PS_VENDOR F, PS_VNDR_ADDR_SCROL G
WHERE (A.PAY_CYCLE LIKE '600UUA%'
   AND B.PYMNT_DT >= TO_DATE('2015-04-01','YYYY-MM-DD')
   AND B.PYMNT_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
   AND A.PAY_CYCLE = B.PAY_CYCLE
   AND A.PAY_CYCLE_SEQ_NUM = B.PAY_CYCLE_SEQ_NUM
   AND A.BANK_SETID = B.BANK_SETID
   AND A.BANK_CD = B.BANK_CD
   AND A.BANK_ACCT_KEY = B.BANK_ACCT_KEY
   AND A.PYMNT_METHOD = B.PYMNT_METHOD
   AND A.PYMNT_ID_REF = B.PYMNT_ID_REF
   AND A.SOURCE_TXN = B.SOURCE_TXN
   AND B.PYMNT_ID = A.PYMNT_ID
   AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
   AND A.PAY_DOC_ID = C.VOUCHER_ID
   AND D.SETID = C.VENDOR_SETID
   AND D.VENDOR_ID = C.VENDOR_ID
   AND D.ADDRESS_SEQ_NUM = C.ADDRESS_SEQ_NUM
   AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PS_VENDOR_ADDR D_ED WHERE D.SETID = D_ED.SETID AND D.VENDOR_ID = D_ED.VENDOR_ID AND D.ADDRESS_SEQ_NUM = D_ED.ADDRESS_SEQ_NUM)
   AND D.SETID =  E.SETID(+)
   AND D.VENDOR_ID =  E.VENDOR_ID(+)
   AND D.ADDRESS_SEQ_NUM =  E.ADDRESS_SEQ_NUM(+)
   AND C.VENDOR_SETID = F.SETID
   AND C.VENDOR_ID = F.VENDOR_ID
   AND D.SETID = G.SETID
   AND D.VENDOR_ID = G.VENDOR_ID
   AND D.ADDRESS_SEQ_NUM = G.ADDRESS_SEQ_NUM )
ORDER BY B.PYMNT_DT DESC, A.PAY_CYCLE, A.BUSINESS_UNIT;

--Trying to make a reporting query for FG
--Version 1
SELECT PD.PMT_ID, PD.PMT_SOURCE, PD.BUSINESS_UNIT, PD.SRC_REF_ID, PD.AMOUNT, PD.AMOUNT_CURRENCY_CD, PD.PYMNT_DT, PD.VALUE_DT, PD.ESTIMATED_DUE_DATE, PD.PMT_STATUS, X1.XLATLONGNAME AS PMT_STS_DESCR, 
       PD.PMT_LAST_STATUS, X2.XLATLONGNAME AS PMT_LAST_STS_DESCR, PD.PMT_TYPE, X9.XLATLONGNAME AS PMT_TYPE_DESCR, PD.BANK_SETID, 
       PD.BANK_CD, PD.BANK_ACCT_KEY, PD.ACCT_BUS_UNIT_GL, PD.FROM_BNK_ID_NBR, PD.FROM_BNK_ACCT_NUM, PD.FROM_DFI_ID_NUM, PD.FROM_DFI_ID_QUAL, PD.PYMNT_METHOD, PD.FORMAT_ID, PD.PRENOTE_FLAG, X4.XLATLONGNAME AS PRE_NOTE_DESCR,
       PD.PAY_IMMEDIATELY, PD.COUNTRY, PD.BANK_ID_QUAL, PD.BNK_ID_NBR, PD.BRANCH_ID, PD.BANK_ACCT_TYPE, X5.XLATLONGNAME AS BANK_ACCT_TYPE_DECSR, 
       PD.BANK_ACCOUNT_NUM, PD.CHECK_DIGIT, PD.DFI_ID_QUAL, X3.XLATLONGNAME AS DFI_ID_QUAL_DESCR, PD.DFI_ID_NUM, 
       PD.BANK_NAME, PD.BANK_NAME_AC, PD.BRANCH_DESCR, PD.BRANCH_NAME_AC, PD.IBAN_CHECK_DIGIT, PD.IBAN_ID, PD.PARTY_ID_TYPE, PD.PARTY_SETID, PD.PARTY_ID, PD.NAME1, PD.NAME1_AC, PD.NAME2, 
       PD.STD_ID_NUM, PD.STD_ID_NUM_QUAL, PD.EFT_PYMNT_FMT_CD, X6.XLATLONGNAME AS EFT_PMT_FMT_CD_DESCR, PD.EFT_RTNG_FLG, PD.EFT_RTNG_STATUS, 
       PD.EFT_TRANS_HANDLING, X7.XLATLONGNAME AS EFT_TRANS_HANDLING_DESCR, PD.EFT_DOM_COSTS_CD, X8.XLATLONGNAME AS EFT_DOMESTIC_COSTS, 
       PD.EFT_CORR_COSTS_CD, PD.EFT_CROSSED_CHECK, PD.EFT_CHECK_FWRD_CD, PD.EFT_CHECK_DRAW_CD, PD.EFT_PAY_INST_CD1, PD.EFT_PAY_INST_CD2, PD.EFT_PAY_INST_CD3,
       PD.EFT_PAY_INST_CD4, PD.EFT_PAY_INST_REF1, PD.EFT_PAY_INST_REF2, PD.ADDENDA_VALUE, PD.REPETITVE_TRNFR_CD, PD.DRAWDOWN_FLG, PD.CREATED_BY_USER, PD.PMT_FIELD1, PD.PMT_FIELD2, PD.PMT_FIELD3, PD.PAY_CYCLE, 
       PAY_CYCLE_SEQ_NUM, PD.BATCH_NAME, PD.PMT_FILE_ID, PD.BANK_REF_ID, PD.EVENT_TRACKING_ID, PD.PMT_MSG_ID, PD.PMTRUNINSTANCE, PD.IN_PROCESS_FLG, PD.PAYEE_VIOLATION,
       PI.PMT_ID AS INV_PMT_ID, PI.INVOICE_ID, PI.BUSINESS_UNIT AS INV_BU, PI.INVOICE_DT, PI.GROSS_AMT, PI.TXN_CURRENCY_CD, PI.PAID_AMT, PI.PAID_AMT_CURRENCY, PI.DISCOUNT_TAKEN, PI.DESCR254_MIXED, 
       PI.PAY_DOC_ID, PI.PAY_DOC_SEQ, PI.AR_NUM, PI.EMPLID
FROM ((((((((((PS_PMT_DETAIL_TBL PD LEFT OUTER JOIN PS_PMT_INVOICE_TBL PI ON PD.PMT_ID = PI.PMT_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'PMT_STATUS' AND X1.FIELDVALUE = PD.PMT_STATUS AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'PMT_LAST_STATUS' AND X2.FIELDVALUE = PD.PMT_LAST_STATUS AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'DFI_ID_QUAL' AND X3.FIELDVALUE = PD.DFI_ID_QUAL AND X3.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PRENOTE_FLAG' AND X4.FIELDVALUE = PD.PRENOTE_FLAG AND X4.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'BANK_ACCT_TYPE' AND X5.FIELDVALUE = PD.BANK_ACCT_TYPE AND X5.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'EFT_PYMNT_FMT_CD' AND X6.FIELDVALUE = PD.EFT_PYMNT_FMT_CD AND X6.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'EFT_TRANS_HANDLING' AND X7.FIELDVALUE = PD.EFT_TRANS_HANDLING AND X7.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'EFT_DOM_COSTS_CD' AND X8.FIELDVALUE = PD.EFT_DOM_COSTS_CD AND X8.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'PMT_TYPE' AND X9.FIELDVALUE = PD.PMT_TYPE AND X9.EFF_STATUS = 'A')
WHERE PD.BANK_SETID = 'SHARE' 
  AND PD.BANK_CD LIKE '6%'
ORDER BY 1 DESC;

--Version 2
--Added PAYMENT_TBL, PYMNT_VCHR_XREF, PYMNT_ADVICE Tables
SELECT PD.PMT_ID, PD.PMT_SOURCE, PD.BUSINESS_UNIT, PD.SRC_REF_ID, PD.AMOUNT, PD.AMOUNT_CURRENCY_CD, PD.PYMNT_DT, PD.VALUE_DT, PD.ESTIMATED_DUE_DATE, PD.PMT_STATUS, X1.XLATLONGNAME AS PMT_STS_DESCR, 
       PD.PMT_LAST_STATUS, X2.XLATLONGNAME AS PMT_LAST_STS_DESCR, PD.PMT_TYPE, X9.XLATLONGNAME AS PMT_TYPE_DESCR, PD.BANK_SETID, 
       PD.BANK_CD, PD.BANK_ACCT_KEY, PD.ACCT_BUS_UNIT_GL, PD.FROM_BNK_ID_NBR, PD.FROM_BNK_ACCT_NUM, PD.FROM_DFI_ID_NUM, PD.FROM_DFI_ID_QUAL, PD.PYMNT_METHOD, PD.FORMAT_ID, PD.PRENOTE_FLAG, X4.XLATLONGNAME AS PRE_NOTE_DESCR,
       PD.PAY_IMMEDIATELY, PD.COUNTRY, PD.BANK_ID_QUAL, PD.BNK_ID_NBR, PD.BRANCH_ID, PD.BANK_ACCT_TYPE, X5.XLATLONGNAME AS BANK_ACCT_TYPE_DECSR, 
       PD.BANK_ACCOUNT_NUM, PD.CHECK_DIGIT, PD.DFI_ID_QUAL, X3.XLATLONGNAME AS DFI_ID_QUAL_DESCR, PD.DFI_ID_NUM, 
       PD.BANK_NAME, PD.BANK_NAME_AC, PD.BRANCH_DESCR, PD.BRANCH_NAME_AC, PD.IBAN_CHECK_DIGIT, PD.IBAN_ID, PD.PARTY_ID_TYPE, PD.PARTY_SETID, PD.PARTY_ID, PD.NAME1, PD.NAME1_AC, PD.NAME2, 
       PD.STD_ID_NUM, PD.STD_ID_NUM_QUAL, PD.EFT_PYMNT_FMT_CD, X6.XLATLONGNAME AS EFT_PMT_FMT_CD_DESCR, PD.EFT_RTNG_FLG, PD.EFT_RTNG_STATUS, 
       PD.EFT_TRANS_HANDLING, X7.XLATLONGNAME AS EFT_TRANS_HANDLING_DESCR, PD.EFT_DOM_COSTS_CD, X8.XLATLONGNAME AS EFT_DOMESTIC_COSTS, 
       PD.EFT_CORR_COSTS_CD, X13.XLATLONGNAME AS EFT_CORRESPONDENTS_COSTS, PD.EFT_CROSSED_CHECK, PD.EFT_CHECK_FWRD_CD, PD.EFT_CHECK_DRAW_CD, PD.EFT_PAY_INST_CD1, PD.EFT_PAY_INST_CD2, PD.EFT_PAY_INST_CD3,
       PD.EFT_PAY_INST_CD4, PD.EFT_PAY_INST_REF1, PD.EFT_PAY_INST_REF2, PD.ADDENDA_VALUE, PD.REPETITVE_TRNFR_CD, PD.DRAWDOWN_FLG, PD.CREATED_BY_USER, PD.PMT_FIELD1, PD.PMT_FIELD2, PD.PMT_FIELD3, PD.PAY_CYCLE, 
       PD.PAY_CYCLE_SEQ_NUM, PD.BATCH_NAME, PD.PMT_FILE_ID, PD.BANK_REF_ID, PD.EVENT_TRACKING_ID, PD.PMT_MSG_ID, PD.PMTRUNINSTANCE, PD.IN_PROCESS_FLG, PD.PAYEE_VIOLATION,
       PI.PMT_ID AS INV_PMT_ID, PI.INVOICE_ID, PI.BUSINESS_UNIT AS INV_BU, PI.INVOICE_DT, PI.GROSS_AMT, PI.TXN_CURRENCY_CD, PI.PAID_AMT, PI.PAID_AMT_CURRENCY, PI.DISCOUNT_TAKEN, PI.DESCR254_MIXED, 
       PI.PAY_DOC_ID, PI.PAY_DOC_SEQ, PI.AR_NUM, PI.EMPLID, 
       PF.PMT_FILE_ID, PF.PMTRUNINSTANCE, PF.FILE_STATUS, X12.XLATLONGNAME AS FILE_STS_DESCR, PF.BANK_SETID, PF.BANK_CD, PF.FORMAT_ID, PF.TOTAL_PMT_COUNT, PF.OUTPUT_TYPE, PF.PMT_FILE_PATH, PF.FILENAME, 
       PF.CREATE_DTTM, PF.CREATED_BY_USER, PF.PMT_CRYPTO_ID, PF.PUBNODE, PF.MSGNAME, PF.APMSGVER, PF.CHNLNAME, PF.PUBID, PF.IBPUBTRANSACTID, PF.EVENT_TRACKING_ID, PF.EXT_FILE_ID, PF.PMT_FIELD1,
       XREF.VOUCHER_ID, XREF.PYMNT_ID, XREF.PYMNT_SELCT_STATUS, X10.XLATLONGNAME AS PYMNT_SELECT_STS, 
       PT.PYMNT_ID_REF, PT.PYMNT_STATUS, X11.XLATLONGNAME AS PYMNT_STS_DESCR, PT.COUNTRY, PT.ADDRESS1, PT.ADDRESS2, PT.ADDRESS3, PT.ADDRESS4,
       PT.CITY, PT.STATE, PT.POSTAL, PT.OPRID, PT.PYMNT_RECONCILE_DT, PT.RECONCILE_OPRID, PT.RECON_STATUS, PT.MICR_LINE,
       PA.PAY_DOC_SEQ, PA.SOURCE_TXN, PA.BUSINESS_UNIT, PA.PAY_DOC_ID, PA.CURRENCY_PYMNT, PA.VENDOR_ID, PA.EMPLID, PA.INVOICE_ID, 
       PA.PAY_DOC_DT, PA.PAID_AMT, PA.PAID_AMT_GROSS
FROM ((((((((((((((((((PS_PMT_DETAIL_TBL PD LEFT OUTER JOIN PS_PMT_INVOICE_TBL PI ON PD.PMT_ID = PI.PMT_ID)
      LEFT OUTER JOIN PS_PMT_FILE_DEFN PF ON PD.PMT_FILE_ID = PF.PMT_FILE_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'PMT_STATUS' AND X1.FIELDVALUE = PD.PMT_STATUS AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'PMT_LAST_STATUS' AND X2.FIELDVALUE = PD.PMT_LAST_STATUS AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'DFI_ID_QUAL' AND X3.FIELDVALUE = PD.DFI_ID_QUAL AND X3.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'PRENOTE_FLAG' AND X4.FIELDVALUE = PD.PRENOTE_FLAG AND X4.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'BANK_ACCT_TYPE' AND X5.FIELDVALUE = PD.BANK_ACCT_TYPE AND X5.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'EFT_PYMNT_FMT_CD' AND X6.FIELDVALUE = PD.EFT_PYMNT_FMT_CD AND X6.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'EFT_TRANS_HANDLING' AND X7.FIELDVALUE = PD.EFT_TRANS_HANDLING AND X7.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'EFT_DOM_COSTS_CD' AND X8.FIELDVALUE = PD.EFT_DOM_COSTS_CD AND X8.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X13 ON X13.FIELDNAME = 'EFT_CORR_COSTS_CD' AND X13.FIELDVALUE = PD.EFT_CORR_COSTS_CD AND X13.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'PMT_TYPE' AND X9.FIELDVALUE = PD.PMT_TYPE AND X9.EFF_STATUS = 'A')
      --LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON PD.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND PI.PAY_DOC_ID = XREF.VOUCHER_ID)
      LEFT OUTER JOIN PS_PYMNT_VCHR_XREF XREF ON PI.BUSINESS_UNIT = XREF.BUSINESS_UNIT AND PI.PAY_DOC_ID = XREF.VOUCHER_ID)
      LEFT OUTER JOIN PS_PAYMENT_TBL PT ON XREF.BANK_SETID = PT.BANK_SETID AND XREF.BANK_CD = PT.BANK_CD AND XREF.BANK_ACCT_KEY = PT.BANK_ACCT_KEY AND XREF.PYMNT_ID = PT.PYMNT_ID AND PD.PMT_ID = PT.PMT_ID)
      LEFT OUTER JOIN PSXLATITEM X10 ON X10.FIELDNAME = 'PYMNT_SELCT_STATUS' AND X10.FIELDVALUE = XREF.PYMNT_SELCT_STATUS AND X10.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X11 ON X11.FIELDNAME = 'PYMNT_STATUS' AND X11.FIELDVALUE = PT.PYMNT_STATUS AND X11.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X12 ON X12.FIELDNAME = 'FILE_STATUS' AND X12.FIELDVALUE = PF.FILE_STATUS AND X12.EFF_STATUS = 'A')
      LEFT OUTER JOIN PS_PYMNT_ADVICE PA ON PT.PAY_CYCLE = PA.PAY_CYCLE AND PT.PAY_CYCLE_SEQ_NUM = PA.PAY_CYCLE_SEQ_NUM AND PT.BANK_SETID = PA.BANK_SETID AND PT.BANK_CD = PA.BANK_CD AND PT.BANK_ACCT_KEY = PA.BANK_ACCT_KEY
                                        AND PT.PYMNT_METHOD = PA.PYMNT_METHOD AND PA.REMIT_LINE_TYPE = 'A' AND PT.PYMNT_ID_REF = PA.PYMNT_ID_REF)
WHERE PD.BANK_SETID = 'SHARE' 
  AND PD.BANK_CD LIKE '6%'
ORDER BY PD.PYMNT_DT DESC, PD.VALUE_DT DESC, PD.PMT_SOURCE, PD.PMT_ID DESC;

--Verifiation Queries
SELECT * FROM PS_PMT_INVOICE_TBL WHERE PMT_ID IN (SELECT PMT_ID FROM PS_PMT_DETAIL_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%');
SELECT * FROM PS_PMT_DETAIL_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%';

SELECT * FROM PS_PMT_ACK_ERR ORDER BY 1 DESC;
SELECT * FROM PS_PMT_FILE_ERR ORDER BY 1 DESC;
SELECT * FROM PS_PMT_EXCEPT_LOG;
SELECT * FROM PS_PMT_EXCEPT_LOG WHERE PMT_MSG_ID IN (SELECT PMT_MSG_ID FROM PS_PMT_DETAIL_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD LIKE '6%');

SELECT * FROM PS_PMT_ACK_HEADER ORDER BY 1 DESC;

SELECT * FROM PS_PMT_REQUEST_LOG ORDER BY PROCESS_INSTANCE DESC;

--Aggegrated Information for FG
SELECT SUM(AMOUNT), AMOUNT_CURRENCY_CD, PMT_SOURCE, PMT_STATUS, BANK_CD, PYMNT_METHOD, PMT_ID, PYMNT_DT, BANK_ACCT_KEY, BUSINESS_UNIT 
FROM PS_PMT_DETAIL_TBL WHERE BANK_SETID = 'SHARE' AND BANK_CD NOT LIKE '6%'
GROUP BY AMOUNT_CURRENCY_CD, PMT_SOURCE, PMT_STATUS, BANK_CD, PYMNT_METHOD, PMT_ID, PYMNT_DT, BANK_ACCT_KEY, BUSINESS_UNIT
ORDER BY PYMNT_DT DESC;

--Queries for FG to check Process Monitor for specific Message Catalogs
--Version 1
--Using LISTAGG
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
       CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    AND ML.MESSAGE_SET_NBR IN (10511, 13950)
    --AND ML.MESSAGE_NBR IN (1, 2, 3, 8, 21, 22, 119, 128, 136, 320, 324, 333, 400, 396, 397, 398, 399, 403, 404, 405, 406, 137, 407)
    --Only for reporting exceptions
    --AND ML.MESSAGE_NBR = 406
    --AND PR.OPRID = 'prakash.prashant'
    AND TO_CHAR(((RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.OPRID, PR.RUNCNTLID, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
         ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--Version 2
--Using XMLAGG
SELECT PL.PROCESS_INSTANCE, PR.OPRID, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, 
       ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, MSG.MESSAGE_NBR, 
       RTRIM(XMLAGG(XMLELEMENT(E, PL.MESSAGE_PARM, '|').EXTRACT('//text()') ORDER BY PL.PARM_SEQ).GETCLOBVAL(),',') AS MESSAGE_PARM
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN MSG
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = MSG.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = MSG.MESSAGE_NBR
    AND ML.MESSAGE_SET_NBR IN (10511, 13950)
    AND TO_CHAR(((RUNDTTM ) + (0)),'YYYY-MM-DD') >= TO_CHAR(TRUNC(TRUNC(SYSDATE, 'DD') -1, 'DD'), 'YYYY-MM-DD')
    AND TO_CHAR(((RUNDTTM ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
GROUP BY PL.PROCESS_INSTANCE, PR.OPRID, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, 
         ML.DTTM_STAMP_SEC, MSG.MESSAGE_TEXT, MSG.MESSAGE_SET_NBR, MSG.MESSAGE_NBR
ORDER BY PL.PROCESS_INSTANCE DESC, PL.MESSAGE_SEQ;

--What Banks UNU has used since 2014 for payments to Vendors
SELECT * FROM PS_BANK_CD_TBL WHERE SETID = 'SHARE' AND BANK_CD IN (SELECT DISTINCT BANK_CD FROM PS_PYMNT_VCHR_XREF WHERE BUSINESS_UNIT LIKE '6%' AND TO_CHAR(DUE_DT, 'YYYY') >= '2014') ORDER BY 1,2;

--UNU_AR_POSTED_DJ_TRANS_DETAIL
--Modified to include User ID per Sharon's request
SELECT A.DEPOSIT_BU "Deposit Bus Unit", A.DEPOSIT_ID "Deposit ID", A.PAYMENT_SEQ_NUM "Payment Seq ", D.PAYMENT_ID "Payment ID ", C.DEP_DESCR "Deposit Description ", A.DST_SEQ_NUM "Distrib Line ", 
       A.ACCOUNTING_DT "Accounting Date ", A.SYSTEM_DEFINED "Line Type ", X1.XLATLONGNAME AS "Line Type Descr",A.BUSINESS_UNIT_GL "GL Bus Unit ", 
       A.ACCOUNT "Account", A.OPERATING_UNIT "Oper Unit ", A.FUND_CODE "Fund", A.DEPTID "DeptID", A.BUSINESS_UNIT_PC "PC Bus Unit ", A.PROJECT_ID "Project", A.ACTIVITY_ID "Activity", A.CHARTFIELD2 "Donor", 
       A.OPEN_ITEM_KEY "Open Item Key ", A.JOURNAL_ID "Journal ID ", A.JOURNAL_DATE "Journal Date ", A.JOURNAL_LINE "Journal Line ", A.FISCAL_YEAR "Fiscal Year ", 
       A.ACCOUNTING_PERIOD "Accounting Period ", A.FOREIGN_CURRENCY "Currency ", A.FOREIGN_AMOUNT "Amount (Txn Curr)", A.RATE_MULT "Exch Rate Multiplier ", A.RATE_DIV "Exch Rate Divisor ", A.MONETARY_AMOUNT "Amount (USD)",
       DC.OPRID "User ID", DC.ASSN_OPRID "Assigned Operator ID", D.MISC_PAYMENT "Direct Journal Yes/No", D.APPLIED_OPRID "Payment Applied By", D.OPRID_APPROVED_BY "Payment Approved By"
FROM PS_PAY_MISC_DST A, PS_JRNL_HEADER B, PS_UN_DEP_DSCR C, PS_PAYMENT D, PS_DEPOSIT_CONTROL DC, PSXLATITEM X1
WHERE (A.GL_DISTRIB_STATUS = 'D'
   AND A.BUSINESS_UNIT_GL = 'UNUNI'
   AND A.OPERATING_UNIT LIKE '6%'
   --AND A.DEPTID LIKE :3
   --AND A.PROJECT_ID LIKE :4
   --AND A.CHARTFIELD2 LIKE :5
   --AND A.ACCOUNT >= :6
   --AND A.ACCOUNT <= :7
   AND A.ACCOUNTING_DT >= TO_DATE('2014-01-01','YYYY-MM-DD')
   AND A.ACCOUNTING_DT <= TO_DATE('2014-12-31','YYYY-MM-DD')
   AND B.BUSINESS_UNIT = A.BUSINESS_UNIT_GL
   AND B.JOURNAL_ID = A.JOURNAL_ID
   AND B.JOURNAL_DATE = A.JOURNAL_DATE
   AND B.JRNL_HDR_STATUS IN ('P','U')
   AND B.UNPOST_SEQ = 0
   AND A.DEPOSIT_BU =  C.DEPOSIT_BU (+)
   AND A.DEPOSIT_ID =  C.DEPOSIT_ID (+)
   AND A.PAYMENT_SEQ_NUM =  C.PAYMENT_SEQ_NUM (+)
   AND (C.ID_SEQ_NUM = 1 OR C.ID_SEQ_NUM IS NULL)
   AND A.DEPOSIT_BU = D.DEPOSIT_BU
   AND A.DEPOSIT_ID = D.DEPOSIT_ID
   AND A.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM
   AND X1.FIELDNAME = 'SYSTEM_DEFINED' 
   AND X1.FIELDVALUE = A.SYSTEM_DEFINED
   AND DC.DEPOSIT_BU = A.DEPOSIT_BU
   AND DC.DEPOSIT_ID = A.DEPOSIT_ID)
ORDER BY A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.DST_SEQ_NUM;

--Voucher Approval Enquiry
SELECT A.TRANSACTIONID, A.INSTAVAILABLEDTTM, A.INSTSELECTEDDTTM, A.INSTWORKEDDTTM, A.BUSPROCNAME, A.WORKLISTNAME, B.BUSINESS_UNIT, B.VOUCHER_ID, A.OPRID, OPRDEFNDESC 
FROM PSWORKLIST A, PS_VCHR_WL1 B, PSOPRDEFN C 
WHERE A.BUSPROCNAME = B.BUSPROCNAME 
  AND A.ACTIVITYNAME = B.ACTIVITYNAME 
  AND A.EVENTNAME = B.EVENTNAME 
  AND A.WORKLISTNAME = B.WORKLISTNAME 
  AND A.INSTANCEID = B.INSTANCEID 
  AND A.OPRID = C.OPRID
  AND B.BUSINESS_UNIT = '605UU'
  AND B.VOUCHER_ID = '00006508'
ORDER BY 1,2;

--Security Request
--Find all the roles that have been granted to active UNU profiles
SELECT DISTINCT ROLENAME FROM PSROLEUSER WHERE ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)
ORDER BY 1;

--Find all the PLs and the access to pages that these roles have
SELECT DISTINCT A.ROLENAME, A.CLASSID, CD.CLASSDEFNDESC AS CLASS_DESCR, B.MENUNAME, B.BARNAME, B.BARITEMNAME, D.PNLGRPNAME, D.PNLNAME, D.ITEMLABEL, D.FOLDERTABLABEL, C.PAGEACCESSDESCR, 
       DECODE(B.DISPLAYONLY, 0, 'N', 1, 'Y') AS "Display Only"
FROM PSROLECLASS A, PSAUTHITEM B, PSPGEACCESSDESC C, PSPNLGROUP D, PSMENUITEM E, PSCLASSDEFN CD
WHERE (A.CLASSID = B.CLASSID 
   AND D.PNLGRPNAME = E.PNLGRPNAME 
   AND B.MENUNAME = E.MENUNAME 
   AND B.BARNAME = E.BARNAME 
   AND B.BARITEMNAME = E.ITEMNAME 
   AND D.ITEMNAME = B.PNLITEMNAME 
   AND B.MENUNAME NOT IN ('APPLICATION_DESIGNER','CLIENTPROCESS','DATA_MOVER','IMPORT_MANAGER','OBJECT_SECURITY','QUERY','PERFMONPPMI')
   AND B.MENUNAME NOT LIKE 'WEBLIB%' 
   AND B.AUTHORIZEDACTIONS = C.AUTHORIZEDACTIONS
   AND CD.CLASSID = A.CLASSID
   AND A.ROLENAME IN (SELECT DISTINCT ROLENAME FROM PSROLEUSER WHERE ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0)))
ORDER BY A.ROLENAME, A.CLASSID, B.MENUNAME, B.BARNAME, B.BARITEMNAME, D.PNLGRPNAME, D.PNLNAME, C.PAGEACCESSDESCR;

--Run the queries below per role
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_BUYER'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_HR'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_PROCUREMENT_ADMIN'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_PROJECT_MANAGER'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

--Ignore this role
SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_PROJECTS_ADMIN'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_GENERAL_USER'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_FINANCE'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_FINANCE_ADMIN'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_TREASURY'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_RTCP_FINANCE_TRSRY'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_AR_POSTING'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

SELECT * FROM PSROLEUSER WHERE ROLENAME = 'UN_UNU_AP_PAYCYCLE_APPR'
AND ROLEUSER IN (SELECT DISTINCT B.OPRID FROM PSUSEREMAIL A, PSOPRDEFN B WHERE A.OPRID = B.OPRID AND A.EMAILID LIKE '%unu.edu' AND B.ACCTLOCK = 0);

--UNU TB Roll-up
--Experimental Version 1
--2nd Oct 2014
--Trial Balance using UNU IPSAS Account Tree with Tree Node Descriptions from UNU custom view 
--DOES NOT include all Adjustment Periods
--21May2015 - Included Adjustment Periods 100 and 998
SELECT X.BUSINESS_UNIT "GL Bus Unit", X.OPERATING_UNIT "Oper Unit", OP.DESCR AS "Oper Unit Description", X.FUND_CODE "Fund", FD.DESCR "Fund Description", X.DEPTID "Detail DeptId", C.DESCR AS "DeptId Description", 
       X.PROJECT_ID "Project ID", B.DESCR "Project Description", X.CHARTFIELD2 "Donor", CF2.DESCR "Donor Description",
       X.Level_0 "Level 0", X.Level_0_Descr "Level 0 Description", X.Level_1 "Level 1", X.Level_1_Descr "Level 1 Description", X.Level_2 "Level 2", X.Level_2_Descr "Level 2 Description", 
       X.Level_3 "Level 3", X.Level_3_Descr "Level 3 Descrption", X.Level_4 "Level 4", X.Level_4_Descr "Level 4 Description", X.Level_5 "Level 5", X.Level_5_Descr "Level 5 Description",
       (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') "Account Roll-Up", X.ACCOUNT "Account", X.DESCR "Account Description", 
       SUM(X.POSTED_BASE_AMT) AS "Total GL", SUM(X.PERIOD_0) "Year Opening", 
       SUM(X.JAN) "January", SUM(X.FEB) "February", SUM(X.MAR) "March", SUM(X.APR) "April", SUM(X.MAY) "May", SUM(X.JUN) "June", 
       SUM(X.JUL) "July", SUM(X.AUG) "August", SUM(X.SEP) "September", SUM(X.OCT) "October", SUM(X.NOV) "November", SUM(X.DEC) "December", 
       SUM(X.ADJ_IP0) "IPSAS Opening Balance", SUM(X.ADJ_EOY) "Year End Adjustments"
FROM
(SELECT A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, 
        DNM.TREE_NODE Level_0, DNM.DESCR Level_0_Descr, DNM.TREE_NODE1 Level_1, DNM.DESCR1 Level_1_Descr, DNM.TREE_NODE2 Level_2, DNM.DESCR2 Level_2_Descr, 
        DNM.TREE_NODE3 Level_3, DNM.DESCR3 Level_3_Descr, DNM.TREE_NODE4 Level_4, DNM.DESCR30 Level_4_Descr, DNM.TREE_NODE5 Level_5, DNM.DESCR4 Level_5_Descr,
        A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, SUM(A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
      , CASE A.ACCOUNTING_PERIOD WHEN 0 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
      , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JAN
      , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS FEB 
      , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAR 
      , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS APR 
      , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAY 
      , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUN 
      , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUL 
      , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS AUG 
      , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS SEP 
      , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS OCT 
      , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS NOV 
      , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS DEC
      , CASE A.ACCOUNTING_PERIOD WHEN 100 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS ADJ_IP0
      , CASE A.ACCOUNTING_PERIOD WHEN 998 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS ADJ_EOY
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, UNDPFS.PS_UN_DNORM_TRE_VW DNM
WHERE B4.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND B4.RECNAME = 'GL_ACCOUNT_TBL'
  AND B4.SETID = D.SETID
  --AND D.SETID = 'SHARE'
  AND A.ACCOUNT = D.ACCOUNT
  AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
  AND DNM.TREE_NAME = 'UNU_IPSAS_ACCOUNT' 
  AND DNM.SETID = 'SHARE' 
  AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
  AND D.ACCOUNT BETWEEN DNM.RANGE_FROM AND DNM.RANGE_TO
  AND A.BUSINESS_UNIT = 'UNUNI'
  AND A.LEDGER = 'USD'
  AND A.FISCAL_YEAR = '2015'
  AND ((A.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND D.ACCOUNT_TYPE IN ('E', 'R')) OR (A.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND D.ACCOUNT_TYPE NOT IN ('E', 'R'))
     OR A.ACCOUNTING_PERIOD IN ('100', '998'))
  AND A.STATISTICS_CODE = ' '
  --AND A.PROJECT_ID = '00064158'
  --AND A.ACCOUNT = '29109'
GROUP BY A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, DNM.TREE_NODE, DNM.DESCR, DNM.TREE_NODE1, DNM.DESCR1, DNM.TREE_NODE2, DNM.DESCR2, DNM.TREE_NODE3, DNM.DESCR3, DNM.TREE_NODE4, DNM.DESCR30, DNM.TREE_NODE5, 
         DNM.DESCR4, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.ACCOUNTING_PERIOD, LEDGER)X, PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
  AND X.PROJECT_ID = B.PROJECT_ID (+)
  AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
  AND X.DEPTID = C.DEPTID (+)
  AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
  AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
  AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
  AND (CF2.EFFDT IS NULL OR 
      (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 AND CF2_ED.EFFDT <= SYSDATE)))
  AND X.FUND_CODE = FD.FUND_CODE (+)
  AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
  AND (FD.EFFDT IS NULL OR 
      (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
  AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
  AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
  AND (OP.EFFDT IS NULL OR 
      (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT AND OP_ED.EFFDT <= SYSDATE))) 
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, 
         X.Level_0, X.Level_0_Descr, X.Level_1, X.Level_1_Descr, X.Level_2, X.Level_2_Descr, X.Level_3, X.Level_3_Descr, X.Level_4, X.Level_4_Descr, X.Level_5, X.Level_5_Descr, 
         X.ACCOUNT, X.DESCR
ORDER BY X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;

SELECT * FROM PS_CAL_DETP_TBL WHERE SETID = 'SHARE' AND CALENDAR_ID = '01' AND FISCAL_YEAR = '2015';
SELECT * FROM PS_CAL_ADJP_TBL;

--For XLATS Use this view if possible
--SELECT * FROM PS_FSFB_XLAT_VW;
--PS_FSFB_XLAT_VW
SELECT X.FIELDNAME, X.FIELDVALUE, X.XLATLONGNAME, X.FIELDVALUE || ' - ' || X.XLATLONGNAME AS DESCR
FROM PSXLATITEM X  
WHERE X.EFF_STATUS = 'A'  
  AND X.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM X_ED WHERE X_ED.FIELDNAME = X.FIELDNAME AND X_ED.FIELDVALUE = X.FIELDVALUE AND X_ED.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))
  AND X.FIELDNAME = 'SYSTEM_DEFINED'
ORDER BY 1,2;

--Keep tab on processes triggered by specific users
SELECT * FROM PSPRCSRQST WHERE OPRID = 'saharsh.kumar' ORDER BY RUNDTTM DESC;

--Find all Voucher Distrib lines which make use of an Open Item Account but do not have an EMPLID
SELECT A.ACCOUNT, A.OPEN_ITEM_KEY, A.OPEN_ITEM_STATUS, D.OPEN_ITEM, A.BUDGET_LINE_STATUS, A.* 
FROM PS_DISTRIB_LINE A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4
WHERE (A.BUSINESS_UNIT LIKE '6%' OR A.BUSINESS_UNIT_GL = 'UNUNI')
   AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
   AND B4.RECNAME = 'GL_ACCOUNT_TBL'
   AND B4.SETID = D.SETID
   AND A.ACCOUNT = D.ACCOUNT
   AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
   AND A.OPEN_ITEM_KEY = ' '
   AND D.OPEN_ITEM = 'Y'
ORDER BY BUSINESS_UNIT, VOUCHER_ID, VOUCHER_LINE_NUM, DISTRIB_LINE_NUM;

--UNU_KK_REVENUE_NOT_ASSOCIATED
SELECT 'KK_REV_NOT_ASSOCIATED', DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' ') "Type (R = Recog, C=Collected) ", A.BUSINESS_UNIT "Bus Unit", A.LEDGER "Ledger", 
       A.ACCOUNT "Account", A.OPERATING_UNIT "Oper Unit", A.FUND_CODE "Fund", A.DEPTID "DeptID", A.PROJECT_ID "Project", A.CHARTFIELD2 "Donor", 
       SUM(A.POSTED_BASE_AMT) "Amount", C.INSTID "Project Institution", C.DEPTID "Project DeptID"
FROM PS_LEDGER_KK A, PS_GM_PRJ_DEPT C
WHERE (A.BUSINESS_UNIT = 'UNUNI'
   AND A.LEDGER LIKE 'REV_UU%'
   AND NOT EXISTS (SELECT B.BUSINESS_UNIT FROM PS_KK_REV_XREF B WHERE B.LEDGER_GROUP = 'REV_UU' AND B.ACCOUNT = A.ACCOUNT AND B.DEPTID = A.DEPTID AND B.OPERATING_UNIT = A.OPERATING_UNIT 
                                                                  AND B.FUND_CODE = A.FUND_CODE AND B.CHARTFIELD2 = A.CHARTFIELD2 AND B.PROJECT_ID = A.PROJECT_ID)
   AND A.PROJECT_ID =  C.PROJECT_ID (+)
   --AND DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' ') LIKE '%'
   )
GROUP BY DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '), A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2, C.INSTID, C.DEPTID
HAVING ( SUM( A.POSTED_BASE_AMT) <> 0)
ORDER BY DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '), A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2;


--UNU Contracts Query Development

--UNU Customer Contracts Revenue Query
--Experimental Version 1
SELECT A.BUSINESS_UNIT "Bus Unit", F.DESCR "BU Descriptioin", A.CURRENCY_CD "Currency", A.SOLD_TO_CUST_ID "Sold To Customer", E.NAMESHORT "Short Name", A.CONTRACT_TYPE "Contract Type", A.CONTRACT_NUM "Contract ID", 
       I.CONTRACT_LINE_NUM "Contract Line Nbr", I.DESCR "Contract Line Descr", I.PRICING_STRUCTURE, I.SHIP_TO_CUST_ID, I.START_DT, I.END_DT, I.GROSS_AMT, I.LASTUPDDTTM, I.LASTUPDOPRID, I.PRODUCT_ID, I.PRODUCT_GROUP,
       C.EVENT_NUM "Event Nbr", C.AP_EVENT_TYPE, X3.FIELDVALUE || ' - ' || X3.XLATLONGNAME AS "Event Type", C.AP_EVENT_STATUS, X4.FIELDVALUE || ' - ' || X4.XLATLONGNAME AS "Event Status",
       C.ACCOUNTING_DT "Acctg Date", B.ACCT_PLAN_ID "Revenue Plan", B.REV_RECOG_METHOD, X7.FIELDVALUE || ' - ' || X7.XLATLONGNAME AS "Revenue Method", 
       B.AP_STATUS, X1.FIELDVALUE || ' - ' || X1.XLATLONGNAME AS "Revenue Plan Status", 
       C.MILESTONE_ORIGIN, X5.FIELDVALUE || ' - ' || X5.XLATLONGNAME AS "Milestone Origin", C.MS_SEQNUM "Milestone Nbr", G.DESCR "Milestone Descr", 
       G.MILESTONE_STATUS, X6.FIELDVALUE || ' - ' || X6.XLATLONGNAME AS "Milestone Status", G.COMPLETION_DATE "Milestone Completion Date", G.ESTIMATED_COMP_DT "Milestone Estd Completion Date",
       C.AMOUNT "Revenue Amount", C.CURRENCY_CD "Transaction Currency",
       B.CA_ALLOC_METHOD, X2.FIELDVALUE || ' - ' || X2.XLATLONGNAME AS "Allocation Method",
       H.OPERATING_UNIT "Oper Unit", H.FUND_CODE "Fund", H.DEPTID "Detail DeptID", H.PROJECT_ID "Project ID", H.CHARTFIELD2 "Donor", H.COMBO_VALID_FLG
FROM PS_CA_CONTR_HDR A, PS_CA_DETAIL I,
     (((PS_CA_ACCTPLAN B LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'AP_STATUS' AND X1.FIELDVALUE = B.AP_STATUS AND X1.EFF_STATUS = 'A')
        LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'CA_ALLOC_METHOD' AND X2.FIELDVALUE = B.CA_ALLOC_METHOD AND X2.EFF_STATUS = 'A')
        LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'REV_RECOG_METHOD' AND X7.FIELDVALUE = B.REV_RECOG_METHOD AND X7.EFF_STATUS = 'A'), 
     (((PS_CA_AP_EVENT C LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'AP_EVENT_TYPE' AND X3.FIELDVALUE = C.AP_EVENT_TYPE AND X3.EFF_STATUS = 'A')
        LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'AP_EVENT_STATUS' AND X4.FIELDVALUE = C.AP_EVENT_STATUS AND X4.EFF_STATUS = 'A')
        LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MILESTONE_ORIGIN' AND X5.FIELDVALUE = C.MILESTONE_ORIGIN AND X5.EFF_STATUS = 'A'), 
     PS_SET_CNTRL_REC D, PS_CUSTOMER E, PS_BUS_UNIT_TBL_FS F, 
     (PS_CA_MILESTONE G LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'MILESTONE_STATUS' AND X6.FIELDVALUE = G.MILESTONE_STATUS AND X6.EFF_STATUS = 'A'),
     PS_CA_DETAIL_DST H
WHERE (A.CONTRACT_NUM = B.CONTRACT_NUM
   AND B.CONTRACT_NUM = C.CONTRACT_NUM
   AND B.ACCT_PLAN_ID = C.ACCT_PLAN_ID
   AND D.SETCNTRLVALUE = A.BUSINESS_UNIT
   AND D.RECNAME = 'CUSTOMER'
   AND E.SETID = D.SETID
   AND E.CUST_ID = A.SOLD_TO_CUST_ID
   AND F.BUSINESS_UNIT = A.BUSINESS_UNIT
   AND A.CONTRACT_NUM = G.CONTRACT_NUM
   AND C.MS_SEQNUM = G.MS_SEQNUM
   AND A.CONTRACT_NUM = I.CONTRACT_NUM
   AND A.CONTRACT_NUM = H.CONTRACT_NUM
   AND I.CONTRACT_LINE_NUM = H.CONTRACT_LINE_NUM
   AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_CA_DETAIL_DST H_ED WHERE H.CONTRACT_NUM = H_ED.CONTRACT_NUM AND H.CONTRACT_LINE_NUM = H_ED.CONTRACT_LINE_NUM AND H.DST_SEQ_NUM = H_ED.DST_SEQ_NUM AND H_ED.EFFDT<= SYSDATE)
   --AND B.AP_STATUS NOT IN ('DON','CAN')
   --AND C.AP_EVENT_STATUS NOT IN ('DON','CAN')
   AND A.BUSINESS_UNIT = 'UNUNI'
   AND A.SOLD_TO_CUST_ID IN ('10685', '10824')
   --AND A.CONTRACT_TYPE LIKE :3
   --AND A.CA_PROC_STATUS LIKE :4
   --AND A.CONTRACT_NUM = '00085195'
   --AND B.AP_STATUS LIKE :6
   --AND A.CA_RQST_SRC = :8
   )
ORDER BY A.CONTRACT_NUM, I.CONTRACT_LINE_NUM, C.EVENT_NUM, C.MS_SEQNUM, B.ACCT_PLAN_ID;

--Experimental Version 2
SELECT A.BUSINESS_UNIT "Bus Unit", F.DESCR "BU Descriptioin", A.CURRENCY_CD "Currency", A.SOLD_TO_CUST_ID "Sold To Customer", E.NAME1 "Customer Name", A.CONTRACT_TYPE "Contract Type", A.CONTRACT_NUM "Contract ID",
       A.CA_STATUS "Contract Status", --X8.FIELDVALUE || ' - ' || X8.XLATLONGNAME AS "Contract Status", 
       A.CA_PROC_STATUS, X9.FIELDVALUE || ' - ' || X9.XLATLONGNAME AS "Processing Status", A.ALLOCATION_DONE "Allocation Complete Y/N",
       A.CONTRACT_SIGN_DT "Contract Sign Date", A.AMENDMENT_DT "Amendment Date", A.REVISED_NET "Revised Net Amount", A.LEGAL_REVIEW_FLG "Legal Review Y/N",
       I.CONTRACT_LINE_NUM "Contract Line Nbr", I.DESCR "Contract Line Descr", I.PRICING_STRUCTURE "Pricing Structure", I.SHIP_TO_CUST_ID, I.START_DT "Start Date DTL", I.END_DT "End Date DTL", 
       I.GROSS_AMT "Gross Amount", I.LASTUPDDTTM "Last Update Date/Time DETAIL", I.LASTUPDOPRID "Last Update User DETAIL", I.PRODUCT_ID "Product DETAIL", I.PRODUCT_GROUP "Product Group",
       C.EVENT_NUM "Event Nbr", C.AP_EVENT_TYPE, X3.FIELDVALUE || ' - ' || X3.XLATLONGNAME AS "Event Type", C.AP_EVENT_STATUS, X4.FIELDVALUE || ' - ' || X4.XLATLONGNAME AS "Event Status",
       C.ACCOUNTING_DT "Acctg Date", B.ACCT_PLAN_ID "Revenue Plan", B.REV_RECOG_METHOD, X7.FIELDVALUE || ' - ' || X7.XLATLONGNAME AS "Revenue Method", 
       B.AP_STATUS, X1.FIELDVALUE || ' - ' || X1.XLATLONGNAME AS "Revenue Plan Status", 
       C.MILESTONE_ORIGIN, X5.FIELDVALUE || ' - ' || X5.XLATLONGNAME AS "M/S Origin", C.MS_SEQNUM "M/S Nbr", G.DESCR "M/S Descr", 
       G.MILESTONE_STATUS, X6.FIELDVALUE || ' - ' || X6.XLATLONGNAME AS "M/S Status", G.COMPLETION_DATE "M/S Compl Date", G.ESTIMATED_COMP_DT "M/S Estd Compl Date",
       C.AMOUNT "Revenue Amount", C.CURRENCY_CD "REV Transaction Currency", B.CA_ALLOC_METHOD, X2.FIELDVALUE || ' - ' || X2.XLATLONGNAME AS "REV Allocation Method",
       BP.BILL_PLAN_ID "Billing Plan", BP.BP_STATUS, X15.FIELDVALUE || ' - ' || X15.XLATLONGNAME AS "Bill Plan Status",
       BP.BILL_PLAN_TYPE, X16.FIELDVALUE || ' - ' || X16.XLATLONGNAME AS "Bill Plan Type", BPE.EVENT_OCCURRENCE "Bill Plan Evt Occur", 
       BPE.BILL_EVENT_TYPE, X17.FIELDVALUE || ' - ' || X17.XLATLONGNAME AS "Bill Plan Event Type", BPE.BP_EVENT_STATUS, X14.FIELDVALUE || ' - ' || X14.XLATLONGNAME AS "Bill Plan Event Status",
       BPE.AMOUNT "Billing Amount", BPE.CURRENCY_CD "Bill Transaction Curr",
       H.ACCOUNT "Cntrct Acct", H.OPERATING_UNIT "Cntrct Op Unit", H.FUND_CODE "Cntrct Fund", H.DEPTID "Cntrct Dtl DeptID", H.PROJECT_ID "Cntrct Prj ID", H.CHARTFIELD2 "Cntrct Donor", H.COMBO_VALID_FLG,
       CADP.BUSINESS_UNIT_PC "Cntrct Trms PC BU", CADP.PROJECT_ID "Cntrct Trms Prj ID", CADP.ACTIVITY_ID "Cntrct Trms Act ID",
       BIH.INVOICE, BIH.INVOICE_DT, BIH.ACCOUNTING_DT, BIH.RATE_DATE, BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       BIH.ADD_DTTM, BIH.LAST_UPDATE_DTTM, BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, BIL.CONTRACT_DT, BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID, BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE
FROM ((((((((((((((((((((((PS_CA_CONTR_HDR A LEFT OUTER JOIN PS_CA_DETAIL I ON A.CONTRACT_NUM = I.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_ACCTPLAN B ON A.CONTRACT_NUM = B.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_AP_EVENT C ON B.CONTRACT_NUM = C.CONTRACT_NUM AND B.ACCT_PLAN_ID = C.ACCT_PLAN_ID)
      LEFT OUTER JOIN PS_CA_MILESTONE G ON A.CONTRACT_NUM = G.CONTRACT_NUM AND C.MS_SEQNUM = G.MS_SEQNUM)
      LEFT OUTER JOIN PS_CA_DETAIL_DST H ON A.CONTRACT_NUM = H.CONTRACT_NUM AND I.CONTRACT_LINE_NUM = H.CONTRACT_LINE_NUM)
      LEFT OUTER JOIN PS_CA_DETAIL_PROJ CADP ON A.CONTRACT_NUM = CADP.CONTRACT_NUM AND I.CONTRACT_LINE_NUM = CADP.CONTRACT_LINE_NUM)
      LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON A.CONTRACT_NUM = BP.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_BP_EVENTS BPE ON BP.CONTRACT_NUM = BPE.CONTRACT_NUM AND BP.BILL_PLAN_ID = BPE.BILL_PLAN_ID AND C.EVENT_NUM = BPE.EVENT_OCCURRENCE)
      LEFT OUTER JOIN PS_BI_LINE BIL ON BIL.CONTRACT_NUM = A.CONTRACT_NUM AND BIL.BUSINESS_UNIT = A.BUSINESS_UNIT_BI AND BIL.BUSINESS_UNIT_CA = A.BUSINESS_UNIT AND BIL.BILL_PLAN_ID = I.BILL_PLAN_ID 
      AND BIL.BPLAN_LN_NBR = I.BPLAN_LN_NBR AND C.EVENT_NUM = BIL.EVENT_OCCURRENCE)
      LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'AP_STATUS' AND X1.FIELDVALUE = B.AP_STATUS AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'CA_ALLOC_METHOD' AND X2.FIELDVALUE = B.CA_ALLOC_METHOD AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'REV_RECOG_METHOD' AND X7.FIELDVALUE = B.REV_RECOG_METHOD AND X7.EFF_STATUS = 'A')
      --LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'CA_STATUS' AND X8.FIELDVALUE = A.CA_STATUS AND X8.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'CA_PROC_STATUS' AND X9.FIELDVALUE = A.CA_PROC_STATUS AND X9.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'AP_EVENT_TYPE' AND X3.FIELDVALUE = C.AP_EVENT_TYPE AND X3.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'AP_EVENT_STATUS' AND X4.FIELDVALUE = C.AP_EVENT_STATUS AND X4.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MILESTONE_ORIGIN' AND X5.FIELDVALUE = C.MILESTONE_ORIGIN AND X5.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'MILESTONE_STATUS' AND X6.FIELDVALUE = G.MILESTONE_STATUS AND X6.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'BP_EVENT_STATUS' AND X14.FIELDVALUE = BPE.BP_EVENT_STATUS AND X14.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'BP_STATUS' AND X15.FIELDVALUE = BP.BP_STATUS AND X15.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'BILL_PLAN_TYPE' AND X16.FIELDVALUE = BP.BILL_PLAN_TYPE AND X16.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X17 ON X17.FIELDNAME = 'BILL_EVENT_TYPE' AND X17.FIELDVALUE = BPE.BILL_EVENT_TYPE AND X17.EFF_STATUS = 'A'), PS_SET_CNTRL_REC D, PS_CUSTOMER E, PS_BUS_UNIT_TBL_FS F  
WHERE D.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND D.RECNAME = 'CUSTOMER'
  AND E.SETID = D.SETID
  AND E.CUST_ID = A.SOLD_TO_CUST_ID
  AND F.BUSINESS_UNIT = A.BUSINESS_UNIT
  AND (H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_CA_DETAIL_DST H_ED WHERE H.CONTRACT_NUM = H_ED.CONTRACT_NUM AND H.CONTRACT_LINE_NUM = H_ED.CONTRACT_LINE_NUM AND H.DST_SEQ_NUM = H_ED.DST_SEQ_NUM AND H_ED.EFFDT<= SYSDATE)
    OR H.EFFDT IS NULL)
  AND A.BUSINESS_UNIT = 'UNUNI'
  --AND A.SOLD_TO_CUST_ID IN ('10685', '10824')
  AND A.CONTRACT_TYPE NOT LIKE '%GRANTS%'
  --AND A.CA_PROC_STATUS LIKE :4
  --AND A.CONTRACT_NUM = '00085195'
  --AND B.AP_STATUS LIKE :6
  --AND A.CA_RQST_SRC = :8
ORDER BY A.CONTRACT_NUM, I.CONTRACT_LINE_NUM, C.EVENT_NUM, C.MS_SEQNUM, B.ACCT_PLAN_ID, BPE.EVENT_OCCURRENCE;

--Experimental Version 3
--Under testing
--Added Sponsor Type
SELECT A.BUSINESS_UNIT "Bus Unit", F.DESCR "BU Descriptioin", A.CURRENCY_CD "Currency", A.SOLD_TO_CUST_ID "Sold To Customer", E.NAME1 "Customer Name", E.SPNSR_TYPE, GM.DESCR "Sponsor Descr",
       A.CONTRACT_TYPE "Contract Type", A.CONTRACT_NUM "Contract ID", A.DESCR "Contract Description", A.CA_STATUS "Contract Status", --X8.FIELDVALUE || ' - ' || X8.XLATLONGNAME AS "Contract Status", 
       A.CA_PROC_STATUS, X9.FIELDVALUE || ' - ' || X9.XLATLONGNAME AS "Processing Status", A.ALLOCATION_DONE "Allocation Complete Y/N",
       TO_CHAR(A.CONTRACT_SIGN_DT,'YYYY-MM-DD') "Contract Sign Date", TO_CHAR(A.AMENDMENT_DT,'YYYY-MM-DD') "Amendment Date", A.REVISED_NET "Revised Net Amount", A.LEGAL_REVIEW_FLG "Legal Review Y/N",
       I.CONTRACT_LINE_NUM "Contract Line Nbr", I.DESCR "Contract Line Descr", I.PRICING_STRUCTURE "Pricing Structure", I.SHIP_TO_CUST_ID, 
       TO_CHAR(I.START_DT,'YYYY-MM-DD') "Start Date DTL", TO_CHAR(I.END_DT,'YYYY-MM-DD') "End Date DTL", I.GROSS_AMT "Gross Amount", I.NET_AMOUNT "Net Amount", 
       
       (SELECT NVL(SUM(AMOUNT), 0) FROM PS_CA_AP_EVENT CG WHERE CG.CONTRACT_NUM = C.CONTRACT_NUM AND CG.ACCT_PLAN_ID = C.ACCT_PLAN_ID AND CG.EVENT_NUM = C.EVENT_NUM AND CG.MS_SEQNUM = G.MS_SEQNUM 
                                                    AND CG.AP_EVENT_STATUS = 'DON') "Rev Events To Date",
       
       TO_CHAR(CAST((I.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time DETAIL", I.LASTUPDOPRID "Last Update User DETAIL", I.PRODUCT_ID "Product DETAIL", I.PRODUCT_GROUP "Product Group",
       C.EVENT_NUM "REV Event Nbr", C.AP_EVENT_TYPE, X3.FIELDVALUE || ' - ' || X3.XLATLONGNAME AS "REV Event Type", C.AP_EVENT_STATUS, X4.FIELDVALUE || ' - ' || X4.XLATLONGNAME AS "REV Event Status",
       TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') "REV Acctg Date", TO_CHAR(CAST((C.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "REV Last Update Date/Time",
       B.ACCT_PLAN_ID "Revenue Plan", B.REV_RECOG_METHOD, X7.FIELDVALUE || ' - ' || X7.XLATLONGNAME AS "Revenue Method", 
       B.AP_STATUS, X1.FIELDVALUE || ' - ' || X1.XLATLONGNAME AS "Revenue Plan Status", 
       C.MILESTONE_ORIGIN, X5.FIELDVALUE || ' - ' || X5.XLATLONGNAME AS "M/S Origin", C.MS_SEQNUM "M/S Nbr", G.DESCR "M/S Descr", 
       G.MILESTONE_STATUS, X6.FIELDVALUE || ' - ' || X6.XLATLONGNAME AS "M/S Status", TO_CHAR(G.COMPLETION_DATE,'YYYY-MM-DD') "M/S Compl Date", TO_CHAR(G.ESTIMATED_COMP_DT,'YYYY-MM-DD') "M/S Estd Compl Date",
       C.AMOUNT "Revenue Amount", C.CURRENCY_CD "REV Transaction Currency", B.CA_ALLOC_METHOD, X2.FIELDVALUE || ' - ' || X2.XLATLONGNAME AS "REV Allocation Method",
       
       BP.BILL_PLAN_ID "Billing Plan", BP.BP_STATUS, X15.FIELDVALUE || ' - ' || X15.XLATLONGNAME AS "Bill Plan Status",
       BP.BILL_PLAN_TYPE, X16.FIELDVALUE || ' - ' || X16.XLATLONGNAME AS "Bill Plan Type", BPE.EVENT_OCCURRENCE "Bill Plan Evt Occur", TO_CHAR(BPE.EVENT_DT,'YYYY-MM-DD') "Billing Plan Event Date",
       BPE.BILL_EVENT_TYPE, X17.FIELDVALUE || ' - ' || X17.XLATLONGNAME AS "Bill Plan Event Type", BPE.BP_EVENT_STATUS, X14.FIELDVALUE || ' - ' || X14.XLATLONGNAME AS "Bill Plan Event Status",
       BPE.AMOUNT "Billing Amount", BPE.CURRENCY_CD "Bill Transaction Curr",
       
       (SELECT NVL(SUM(AMOUNT), 0) FROM PS_CA_BP_EVENTS BPEG WHERE BPEG.CONTRACT_NUM = BP.CONTRACT_NUM AND BPEG.BILL_PLAN_ID = BP.BILL_PLAN_ID AND BPE.EVENT_OCCURRENCE = BPE.EVENT_OCCURRENCE 
                                                       AND BPEG.MS_SEQNUM = G.MS_SEQNUM AND BPEG.BP_EVENT_STATUS = 'DON') "Events Billed To Date",
                                                       
       H.ACCOUNT "Cntrct Acct", H.OPERATING_UNIT "Cntrct Op Unit", H.FUND_CODE "Cntrct Fund", H.DEPTID "Cntrct Dtl DeptID", H.PROJECT_ID "Cntrct Prj ID", H.CHARTFIELD2 "Cntrct Donor", H.COMBO_VALID_FLG,
       CADP.BUSINESS_UNIT_PC "Cntrct Trms PC BU", CADP.PROJECT_ID "Cntrct Trms Prj ID", CADP.ACTIVITY_ID "Cntrct Trms Act ID",
       BIH.INVOICE, TO_CHAR(BIH.INVOICE_DT,'YYYY-MM-DD') "Invoice Date", TO_CHAR(BIH.ACCOUNTING_DT,'YYYY-MM-DD') "Inv Acctg Date", TO_CHAR(BIH.RATE_DATE,'YYYY-MM-DD') "Inv Rate Date", BIH.RATE_MULT, BIH.RATE_DIV,
       BIH.AR_LVl, BIH.AR_DST_OPT, BIH.AR_ENTRY_CREATED, BIH.BUSINESS_UNIT_GL, BIH.GL_LVL, BIH.GL_ENTRY_CREATED, 
       TO_CHAR(CAST((BIH.ADD_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Billing Header Add Date/Time", TO_CHAR(CAST((BIH.LAST_UPDATE_DTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Bill Hdr Last Update Date/Time", 
       BIH.LAST_MAINT_OPRID, BIH.BILL_STATUS, BIH.BANK_CD, BIH.BANK_ACCT_KEY, 
       BIL.BUSINESS_UNIT_CA, BIL.CONTRACT_NUM, TO_CHAR(BIL.CONTRACT_DT,'YYYY-MM-DD') "BIL Inv Date", BIL.CONTRACT_LINE_NUM, BIL.LINE_SEQ_NUM, BIL.INVOICE_LINE, BIL.LINE_TYPE, 
       BIL.PRODUCT_ID, BIL.IDENTIFIER, BIL.DESCR, BIL.ERROR_STATUS_BI,
       BIL.BILL_PLAN_ID, BIL.BPLAN_LN_NBR, BIL.EVENT_OCCURRENCE, BIL.XREF_SEQ_NUM, BIL.GROSS_EXTENDED_AMT, BIL.NET_EXTENDED_AMT, BIL.GROSS_EXTENDED_BSE, BIL.NET_EXTENDED_BSE
FROM ((((((((((((((((((((((PS_CA_CONTR_HDR A LEFT OUTER JOIN PS_CA_DETAIL I ON A.CONTRACT_NUM = I.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_ACCTPLAN B ON A.CONTRACT_NUM = B.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_AP_EVENT C ON B.CONTRACT_NUM = C.CONTRACT_NUM AND B.ACCT_PLAN_ID = C.ACCT_PLAN_ID)
      LEFT OUTER JOIN PS_CA_MILESTONE G ON A.CONTRACT_NUM = G.CONTRACT_NUM AND C.MS_SEQNUM = G.MS_SEQNUM)
      LEFT OUTER JOIN PS_CA_DETAIL_DST H ON A.CONTRACT_NUM = H.CONTRACT_NUM AND I.CONTRACT_LINE_NUM = H.CONTRACT_LINE_NUM)
      LEFT OUTER JOIN PS_CA_DETAIL_PROJ CADP ON A.CONTRACT_NUM = CADP.CONTRACT_NUM AND I.CONTRACT_LINE_NUM = CADP.CONTRACT_LINE_NUM)
      LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON A.CONTRACT_NUM = BP.CONTRACT_NUM)
      LEFT OUTER JOIN PS_CA_BP_EVENTS BPE ON BP.CONTRACT_NUM = BPE.CONTRACT_NUM AND BP.BILL_PLAN_ID = BPE.BILL_PLAN_ID AND C.EVENT_NUM = BPE.EVENT_OCCURRENCE)
      LEFT OUTER JOIN PS_BI_LINE BIL ON BIL.CONTRACT_NUM = A.CONTRACT_NUM AND BIL.BUSINESS_UNIT = A.BUSINESS_UNIT_BI AND BIL.BUSINESS_UNIT_CA = A.BUSINESS_UNIT AND BIL.BILL_PLAN_ID = I.BILL_PLAN_ID 
      AND BIL.BPLAN_LN_NBR = I.BPLAN_LN_NBR AND C.EVENT_NUM = BIL.EVENT_OCCURRENCE)
      LEFT OUTER JOIN PS_BI_HDR BIH ON BIH.BUSINESS_UNIT = BIL.BUSINESS_UNIT AND BIH.INVOICE = BIL.INVOICE)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'AP_STATUS' AND X1.FIELDVALUE = B.AP_STATUS AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'CA_ALLOC_METHOD' AND X2.FIELDVALUE = B.CA_ALLOC_METHOD AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X7 ON X7.FIELDNAME = 'REV_RECOG_METHOD' AND X7.FIELDVALUE = B.REV_RECOG_METHOD AND X7.EFF_STATUS = 'A')
      --LEFT OUTER JOIN PSXLATITEM X8 ON X8.FIELDNAME = 'CA_STATUS' AND X8.FIELDVALUE = A.CA_STATUS AND X8.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X9 ON X9.FIELDNAME = 'CA_PROC_STATUS' AND X9.FIELDVALUE = A.CA_PROC_STATUS AND X9.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'AP_EVENT_TYPE' AND X3.FIELDVALUE = C.AP_EVENT_TYPE AND X3.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X4 ON X4.FIELDNAME = 'AP_EVENT_STATUS' AND X4.FIELDVALUE = C.AP_EVENT_STATUS AND X4.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X5 ON X5.FIELDNAME = 'MILESTONE_ORIGIN' AND X5.FIELDVALUE = C.MILESTONE_ORIGIN AND X5.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X6 ON X6.FIELDNAME = 'MILESTONE_STATUS' AND X6.FIELDVALUE = G.MILESTONE_STATUS AND X6.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X14 ON X14.FIELDNAME = 'BP_EVENT_STATUS' AND X14.FIELDVALUE = BPE.BP_EVENT_STATUS AND X14.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X15 ON X15.FIELDNAME = 'BP_STATUS' AND X15.FIELDVALUE = BP.BP_STATUS AND X15.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X16 ON X16.FIELDNAME = 'BILL_PLAN_TYPE' AND X16.FIELDVALUE = BP.BILL_PLAN_TYPE AND X16.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X17 ON X17.FIELDNAME = 'BILL_EVENT_TYPE' AND X17.FIELDVALUE = BPE.BILL_EVENT_TYPE AND X17.EFF_STATUS = 'A'), PS_SET_CNTRL_REC D, 
      (PS_CUSTOMER E LEFT OUTER JOIN PS_GM_SPNSR_TYPE GM ON E.SETID = GM.SETID AND E.SPNSR_TYPE = GM.SPNSR_TYPE), PS_BUS_UNIT_TBL_FS F
WHERE D.SETCNTRLVALUE = A.BUSINESS_UNIT
  AND D.RECNAME = 'CUSTOMER'
  AND E.SETID = D.SETID
  AND E.CUST_ID = A.SOLD_TO_CUST_ID
  AND F.BUSINESS_UNIT = A.BUSINESS_UNIT
  AND (H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_CA_DETAIL_DST H_ED WHERE H.CONTRACT_NUM = H_ED.CONTRACT_NUM AND H.CONTRACT_LINE_NUM = H_ED.CONTRACT_LINE_NUM AND H.DST_SEQ_NUM = H_ED.DST_SEQ_NUM AND H_ED.EFFDT<= SYSDATE)
    OR H.EFFDT IS NULL)
  AND A.BUSINESS_UNIT = 'UNUNI'
  --AND A.BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_CA WHERE BUSINESS_UNIT_GL = 'UNDP1')
  --AND A.SOLD_TO_CUST_ID IN ('10685', '10824')
  AND A.CONTRACT_TYPE NOT LIKE '%GRANTS%'
  --AND A.CONTRACT_TYPE NOT IN ('GRANTS', 'GLOC', 'PROJECT', 'PROJECTS', 'JPO')
  --AND A.CA_PROC_STATUS LIKE :4
  --AND A.CONTRACT_NUM = '00089610'
  --AND B.AP_STATUS LIKE :6
  --AND A.CA_RQST_SRC = :8
ORDER BY A.CONTRACT_NUM, I.CONTRACT_LINE_NUM, C.EVENT_NUM, C.MS_SEQNUM, B.ACCT_PLAN_ID, BPE.EVENT_OCCURRENCE;

--Verification queries
SELECT BUSINESS_UNIT, CONTRACT_TYPE, COUNT(1) 
FROM PS_CA_CONTR_HDR WHERE BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_CA WHERE BUSINESS_UNIT_GL = 'UNDP1')
GROUP BY BUSINESS_UNIT, CONTRACT_TYPE
ORDER BY BUSINESS_UNIT, CONTRACT_TYPE;

SELECT CONTRACT_TYPE, COUNT(1) 
FROM PS_CA_CONTR_HDR WHERE BUSINESS_UNIT IN (SELECT BUSINESS_UNIT FROM PS_BUS_UNIT_TBL_CA WHERE BUSINESS_UNIT_GL = 'UNDP1')
GROUP BY CONTRACT_TYPE
ORDER BY CONTRACT_TYPE;

--UNU Customer Contracts Billing Query


--UNU Customer Contracts Milestones Query                        


--UNU Customer Contracts Query                                


--Verification Queries
SELECT X.FIELDNAME, X.FIELDVALUE, X.XLATLONGNAME, X.FIELDVALUE || ' - ' || X.XLATLONGNAME AS DESCR
FROM PSXLATITEM X  
WHERE X.EFF_STATUS = 'A'  
  AND X.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM X_ED WHERE X_ED.FIELDNAME = X.FIELDNAME AND X_ED.FIELDVALUE = X.FIELDVALUE AND X_ED.EFFDT <= TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))
  AND X.FIELDNAME = 'AP_STATUS'
ORDER BY 1,2;

SELECT * FROM PSDBFLDLABL WHERE FIELDNAME = 'AP_STATUS';

SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'CA_MS_ENTRY' ORDER BY FIELDNUM;
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'CA_DETAIL_DST' ORDER BY FIELDNUM;
SELECT * FROM PSPNLFIELD WHERE PNLNAME = 'CA_OBLIGATIONS' ORDER BY FIELDNUM;

SELECT * FROM PS_CA_AP_EVENT WHERE CONTRACT_NUM IN ('00085195', '00085161');
SELECT * FROM PS_CA_DETAIL WHERE CONTRACT_NUM IN ('00085195', '00085161');
SELECT * FROM PS_CA_DETAIL_DST WHERE CONTRACT_NUM IN ('00085195', '00085161', '00085158', '00085196');

--UN_CA_CONTRACT_REV_DETAILS
SELECT E.OPERATING_UNIT, A.CONTRACT_NUM, A.CA_STATUS, B.AMOUNT, B.CURRENCY_CD, E.CHARTFIELD2, E.PROJECT_ID, E.ACCOUNT, E.FUND_CODE, E.DEPTID, E.CHARTFIELD1, A.BUSINESS_UNIT, G.BUSINESS_UNIT_PC, F.ACTIVITY_ID, B.EVENT_NUM, 
       Decode (B.AP_EVENT_TYPE,1,'Date',2,'Milestone'), D.XLATLONGNAME, B.ACCOUNTING_DT, C.MILESTONE_ID, Decode ( C.MILESTONE_STATUS,'C','Completed','P','Pending','R','Ready','X','Cancelled')
FROM PS_CA_CONTR_HDR A, (PS_CA_AP_EVENT B LEFT OUTER JOIN  PS_CA_MILESTONE C ON  B.CONTRACT_NUM = C.CONTRACT_NUM AND C.MS_SEQNUM = B.MS_SEQNUM ), PSXLATITEM D,
     (PS_CA_AP_DST E LEFT OUTER JOIN  PS_CA_DETAIL_PROJ F ON E.CONTRACT_NUM = F.CONTRACT_NUM AND E.CONTRACT_LINE_NUM = F.CONTRACT_LINE_NUM ), PS_CA_DETAIL G
WHERE (A.CONTRACT_NUM = B.CONTRACT_NUM
   AND D.EFFDT = (SELECT MAX(D_ED.EFFDT) FROM PSXLATITEM D_ED WHERE D.FIELDNAME = D_ED.FIELDNAME AND D.FIELDVALUE = D_ED.FIELDVALUE AND D_ED.EFFDT <= SYSDATE)
   AND B.CONTRACT_NUM = E.CONTRACT_NUM
   AND B.ACCT_PLAN_ID = E.ACCT_PLAN_ID
   AND B.EVENT_NUM = E.EVENT_NUM
   AND E.CONTRACT_NUM = G.CONTRACT_NUM
   AND E.ACCT_PLAN_ID = G.ACCT_PLAN_ID
   AND E.CONTRACT_LINE_NUM = G.CONTRACT_LINE_NUM
   AND D.FIELDNAME = 'AP_EVENT_STATUS'
   AND B.AP_EVENT_STATUS = D.FIELDVALUE
   AND E.BUSINESS_UNIT_GL = 'UNUNI'
   --AND A.CONTRACT_NUM LIKE :2
   --AND A.CA_STATUS LIKE :3
   AND E.OPERATING_UNIT = '606'
   )
ORDER BY 2; 


--F's Ed Grant Adjustment
--Thief
SELECT * FROM PS_LEDGER WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '63330' AND DEPTID ='11601';

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '63330' AND DEPTID ='11601';
SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND ACCOUNT = '14042' AND DEPTID ='11601';

SELECT * FROM PS_JRNL_LN WHERE BUSINESS_UNIT = 'UNUNI' AND JOURNAL_ID = '0004755314';

SELECT A.BUSINESS_UNIT "GL Bus Unit", A.JOURNAL_ID "Journal ID", A.JOURNAL_DATE "Journal Date", A.UNPOST_SEQ "Unpost Seq", A.BUSINESS_UNIT_IU "Header GL Bus Unit", 
       A.SOURCE "Journal Source", A.JOURNAL_CLASS "Journal Class", A.IU_TRAN_CD "Transaction Code", A.FISCAL_YEAR "Fiscal Year", A.ACCOUNTING_PERIOD "Accounting Period", 
       A.POSTED_DATE "Posted Date", A.UNPOST_JRNL_DATE "Unpost Date", A.REVERSAL_CD "Reversal Code", A.REVERSAL_DATE "Reversal Date", A.OPRID "User Id Entered", 
       A.SYSTEM_SOURCE "System Source", TO_CHAR(CAST((A.JRNL_CREATE_DTTM) AS TIMESTAMP) ,'YYYY-MM-DD-HH24.MI.SS.FF') "Creation Date", A.DESCR254 "Header Description", 
       B.JOURNAL_LINE "Journal Line", B.LEDGER "Ledger", B.ACCOUNT "Account", B.OPERATING_UNIT "Oper Unit", B.FUND_CODE "Fund", B.DEPTID "DeptID", B.BUSINESS_UNIT_PC "PC Bus Unit", 
       B.PROJECT_ID "Project", B.ACTIVITY_ID "Activity", B.CHARTFIELD2 "Donor", B.AFFILIATE "BU Affiliate", B.AFFILIATE_INTRA2 "Oper Unit Affil", B.AFFILIATE_INTRA1 "Fund Affil",
       B.ANALYSIS_TYPE "Analysis Type", C.OPEN_ITEM_KEY "Open Item Key", B.JRNL_LN_REF "Journal Ref", B.LINE_DESCR "Line Descr", B.FOREIGN_AMOUNT "Amount(TXN)", 
       B.FOREIGN_CURRENCY "Txn Currency", B.RATE_MULT "Exch Rate Multiplier", B.RATE_DIV "Exch Rate Divisor", B.MONETARY_AMOUNT "Amount(USD)"            
FROM PS_JRNL_HEADER A, PS_JRNL_LN B, PS_OPEN_ITEM_GL C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.JOURNAL_ID = B.JOURNAL_ID
  AND A.JOURNAL_DATE = B.JOURNAL_DATE
  AND A.UNPOST_SEQ = B.UNPOST_SEQ
  AND B.BUSINESS_UNIT = 'UNUNI'
  --AND B.OPERATING_UNIT LIKE '' 
  AND B.DEPTID = '11601'
  --AND B.PROJECT_ID LIKE :4
  --AND B.CHARTFIELD2 LIKE :5
  --AND B.ACCOUNT >= '15100'
  --AND B.ACCOUNT <= '15100'
  --AND B.JOURNAL_DATE >= TO_DATE('2013-01-01','YYYY-MM-DD')
  --AND B.JOURNAL_DATE <= TO_DATE('2013-12-31','YYYY-MM-DD')
  AND A.JRNL_HDR_STATUS IN ('P','U')
  AND A.LEDGER_GROUP = 'ACTUALS'
  AND B.BUSINESS_UNIT =  C.BUSINESS_UNIT (+)
  AND B.JOURNAL_ID =  C.JOURNAL_ID (+)
  AND B.JOURNAL_DATE =  C.JOURNAL_DATE (+)
  AND B.UNPOST_SEQ =  C.UNPOST_SEQ (+)
  AND B.JOURNAL_LINE =  C.JOURNAL_LINE (+)
  AND B.LEDGER =  C.LEDGER (+)
  AND A.JOURNAL_ID = '0004755314'
ORDER BY 1, 2, 3, 4, 19;

--SHIP_TO and BILL_TO
SELECT A.*, B.BILL_TO_CUST_ID, B.SLDTO_PRIORITY_NBR AS BILLTO_PRIORITY, B.LAST_MAINT_OPRID AS BILL_LAST_MAINT_OPRID, B.DATE_LAST_MAINT AS BILL_DATE_LAST_MAINT, 
       C.SHIP_TO_CUST_ID, C.SLDTO_PRIORITY_NBR AS SHIPTO_PRIORITY, C.LAST_MAINT_OPRID AS SHIPTO_LAST_MAINT_OPRID, C.DATE_LAST_MAINT AS SHIPTO_DATE_LAST_MAINT
FROM ((PS_CUSTOMER A LEFT OUTER JOIN PS_CUST_BILLTO B ON A.SETID = B.SETID AND A.CUST_ID = B.CUST_ID)
       LEFT OUTER JOIN PS_CUST_SHIPTO C ON A.SETID = C.SETID AND A.CUST_ID = C.CUST_ID)
WHERE A.SETID = 'UNUNI'
ORDER BY A.SETID, A.CUST_ID;

--PO_RECVPUSH Receipt Selection Logic
SELECT S.BUSINESS_UNIT, S.RECEIVER_ID, H.RECV_STATUS, H.RECEIPT_DT, H.LAST_DTTM_UPDATE, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR, S.INV_ITEM_ID, S.AMT_ONLY_FLG, S.RECV_SHIP_STATUS, S.SERIAL_STATUS
FROM PS_RECV_HDR H, PS_RECV_LN_SHIP S  
WHERE H.PROCESS_INSTANCE = 0  
  AND H.RECV_STATUS <> 'X'  
  AND H.BUSINESS_UNIT LIKE '6%'  
  AND H.BUSINESS_UNIT = S.BUSINESS_UNIT  
  AND H.RECEIVER_ID = S.RECEIVER_ID  
  AND S.PROCESS_COMPLETE = 'N'
  AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (0)),'YYYY-MM-DD') >= '2000-01-01' 
  AND TO_CHAR(((H.LAST_DTTM_UPDATE ) + (-1)),'YYYY-MM-DD') <= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY H.RECEIPT_DT DESC, H.LAST_DTTM_UPDATE DESC, S.BUSINESS_UNIT, S.RECEIVER_ID, S.RECV_LN_NBR, S.RECV_SHIP_SEQ_NBR;

--CRM Case ID 474800
SELECT * FROM PSMSGCATDEFN WHERE UPPER(MESSAGE_TEXT) LIKE '%THE BILL TO CUSTOMER%';
SELECT * FROM PS_CA_CUST_SLD_VW WHERE SETID = 'UNUNI' AND CUST_ID = '10036';
SELECT INTERUNIT_FLG, BUSINESS_UNIT_GL, A.* FROM PS_CUST_OPTION A WHERE SETID = 'UNUNI' AND CUST_ID = '10036';
SELECT INTERUNIT_FLG, BUSINESS_UNIT_GL, A.* FROM PS_CUST_OPTION A WHERE CUST_ID = '10036';

--Find all UNU Customers which have the same CUST_ID under different SETID(s) and have been setup as Interunit Customer
SELECT A.* FROM PS_CUSTOMER A
WHERE A.SETID = 'UNUNI'
  AND EXISTS (SELECT 'X' FROM PS_CUST_OPTION B WHERE A.SETID <> B.SETID AND A.CUST_ID = B.CUST_ID AND B.INTERUNIT_FLG = 'Y' 
                                                 AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_CUST_OPTION B_ED WHERE B.SETID = B_ED.SETID AND B.CUST_ID = B_ED.CUST_ID AND B_ED.EFFDT <= SYSDATE))
ORDER BY 1,2;


--UNU AM Retirement Report
--Trimmed Version based on 9.2 SQR AMRT2100
--Version 2
--Added XLAT
--Added CoA
--Added PROFILE_ID based on HM's email - 13July2015
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW "Capitalized Asset", R.ASSET_ID, B.DESCR, B.PROFILE_ID,
       TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, 
       TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, TO_DATE('1901-01-01','YYYY-MM-DD') AS TRANS_DT, R.ACCOUNTING_DT, R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, 
       R.DISPOSAL_CODE, X1.XLATLONGNAME AS DISPOSAL_CD_DESCR, R.RETIREMENT_TYPE, X2.XLATLONGNAME AS RETIREMENT_TYPE_DESCR, R.RETIREMENT_STATUS, X3.XLATLONGNAME AS RETIREMENT_STS_DESCR,
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, ACQ.CURRENCY_CD AS ACQ_CURR_CD, ACQ.AMOUNT AS ACQ_AMT, ACQ.TXN_CURRENCY_CD AS ACQ_TXN_CURR_CD, ACQ.TXN_AMOUNT AS ACQ_TXN_AMT,
       R.TXN_CURRENCY_CD, R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, R.IN_SERVICE_PDS,
       DECODE(C.OPERATING_UNIT, '',  ACQ.OPERATING_UNIT,  C.OPERATING_UNIT) OPERATING_UNIT,
       DECODE(C.FUND_CODE,'', ACQ.FUND_CODE, C.FUND_CODE) FUND_CODE,
       DECODE(C.DEPTID, '',  ACQ.DEPTID,  C.DEPTID) DEPTID,
       DECODE(C.CHARTFIELD2, '',  ACQ.CHARTFIELD2,  C.CHARTFIELD2) CHARTFIELD2,
       DECODE(C.PROJECT_ID, '',  ACQ.PROJECT_ID,  C.PROJECT_ID) PROJECT_ID,
       ASD.CUSTODIAN, ASD.OPERATING_UNIT AS CUST_OP_UNIT, ASD.FUND_CODE AS CUST_FUND_CODE, ASD.DEPTID AS CUST_DEPTID, ASD.CHARTFIELD2 AS CUST_DONOR, ASD.PROJECT_ID AS CUST_PROJECT_ID
FROM (((((((PS_RETIREMENT R LEFT OUTER JOIN PS_COST C ON R.BUSINESS_UNIT = C.BUSINESS_UNIT AND R.ASSET_ID = C.ASSET_ID AND R.BOOK = C.BOOK AND R.DTTM_STAMP = C.DTTM_STAMP)
      LEFT OUTER JOIN PS_ASSET_ACQ_DET ACQ ON R.BUSINESS_UNIT = ACQ.BUSINESS_UNIT AND R.ASSET_ID = ACQ.ASSET_ID)
      LEFT OUTER JOIN PS_UN_OAPR_COST_CF C ON R.BUSINESS_UNIT =  C.BUSINESS_UNIT AND R.ASSET_ID =  C.ASSET_ID)
      LEFT OUTER JOIN PS_ASSET_CUSTODIAN ASD ON R.BUSINESS_UNIT =  ASD.BUSINESS_UNIT AND R.ASSET_ID =  ASD.ASSET_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'DISPOSAL_CODE' AND X1.FIELDVALUE = R.DISPOSAL_CODE AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'RETIREMENT_TYPE' AND X2.FIELDVALUE = R.RETIREMENT_TYPE AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'RETIREMENT_STATUS' AND X3.FIELDVALUE = R.RETIREMENT_STATUS AND X3.EFF_STATUS = 'A'), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID 
  AND (ASD.EFFDT = (SELECT MAX(EFFDT) FROM PS_ASSET_CUSTODIAN A_ASD WHERE ASD.BUSINESS_UNIT = A_ASD.BUSINESS_UNIT AND ASD.ASSET_ID = A_ASD.ASSET_ID AND A_ASD.EFFDT <= SYSDATE)
    OR ASD.EFFDT IS NULL)
  AND (ASD.EFFSEQ = (SELECT MAX(ASD_ED.EFFSEQ) FROM PS_ASSET_CUSTODIAN ASD_ED WHERE ASD.BUSINESS_UNIT = ASD_ED.BUSINESS_UNIT AND ASD.ASSET_ID = ASD_ED.ASSET_ID AND ASD.EFFDT = ASD_ED.EFFDT)
    OR ASD.EFFSEQ IS NULL)
  AND R.BUSINESS_UNIT = 'UNUNI' 
  --AND C.AM_PHY_TXN_SW <> 'Y'
UNION
SELECT DISTINCT R.BUSINESS_UNIT, R.BOOK, B.FINANCIAL_ASSET_SW, R.ASSET_ID, B.DESCR, B.PROFILE_ID,
       TO_CHAR(CAST((R.DTTM_STAMP) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') AS DTTM_STAMP, TO_CHAR(R.RETIREMENT_DT, 'YYYY-MM-DD') AS RETIREMENT_DT, 
       R.TRANS_DT, TO_DATE('1901-01-01','YYYY-MM-DD') AS ACCOUNTING_DT, R.CONVENTION, TO_CHAR(R.END_DEPR_DT, 'YYYY-MM-DD') AS END_DEPR_DT, 
       R.DISPOSAL_CODE, X1.XLATLONGNAME AS DISPOSAL_CD_DESCR, R.RETIREMENT_TYPE, X2.XLATLONGNAME AS RETIREMENT_TYPE_DESCR, R.RETIREMENT_STATUS, X3.XLATLONGNAME AS RETIREMENT_STS_DESCR,
       R.REFERENCE, R.QUANTITY, R.RETIREMENT_AMT, R.RETIREMENT_RSV, R.GAIN_LOSS, ACQ.CURRENCY_CD AS ACQ_CURR_CD, ACQ.AMOUNT AS ACQ_AMT, ACQ.TXN_CURRENCY_CD AS ACQ_TXN_CURR_CD, ACQ.TXN_AMOUNT AS ACQ_TXN_AMT, 
       ' ', R.FROM_CUR, R.RETIREMENT_PCT, R.FULLY_DEPR_SW, 0.00,
       ACQ.OPERATING_UNIT, ACQ.FUND_CODE, ACQ.DEPTID, ACQ.CHARTFIELD2, ACQ.PROJECT_ID,
       ASD.CUSTODIAN, ASD.OPERATING_UNIT AS CUST_OP_UNIT, ASD.FUND_CODE AS CUST_FUND_CODE, ASD.DEPTID AS CUST_DEPTID, ASD.CHARTFIELD2 AS CUST_DONOR, ASD.PROJECT_ID AS CUST_PROJECT_ID
FROM (((((PS_RETIREMENT_NF R LEFT OUTER JOIN PS_ASSET_ACQ_DET ACQ ON R.BUSINESS_UNIT = ACQ.BUSINESS_UNIT AND R.ASSET_ID = ACQ.ASSET_ID)
      LEFT OUTER JOIN PS_ASSET_CUSTODIAN ASD ON R.BUSINESS_UNIT =  ASD.BUSINESS_UNIT AND R.ASSET_ID =  ASD.ASSET_ID)
      LEFT OUTER JOIN PSXLATITEM X1 ON X1.FIELDNAME = 'DISPOSAL_CODE' AND X1.FIELDVALUE = R.DISPOSAL_CODE AND X1.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X2 ON X2.FIELDNAME = 'RETIREMENT_TYPE' AND X2.FIELDVALUE = R.RETIREMENT_TYPE AND X2.EFF_STATUS = 'A')
      LEFT OUTER JOIN PSXLATITEM X3 ON X3.FIELDNAME = 'RETIREMENT_STATUS' AND X3.FIELDVALUE = R.RETIREMENT_STATUS AND X3.EFF_STATUS = 'A'), PS_ASSET B
WHERE R.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND R.ASSET_ID = B.ASSET_ID
  AND (ASD.EFFDT = (SELECT MAX(EFFDT) FROM PS_ASSET_CUSTODIAN A_ASD WHERE ASD.BUSINESS_UNIT = A_ASD.BUSINESS_UNIT AND ASD.ASSET_ID = A_ASD.ASSET_ID AND A_ASD.EFFDT <= SYSDATE)
    OR ASD.EFFDT IS NULL)
  AND (ASD.EFFSEQ = (SELECT MAX(ASD_ED.EFFSEQ) FROM PS_ASSET_CUSTODIAN ASD_ED WHERE ASD.BUSINESS_UNIT = ASD_ED.BUSINESS_UNIT AND ASD.ASSET_ID = ASD_ED.ASSET_ID AND ASD.EFFDT = ASD_ED.EFFDT)
    OR ASD.EFFSEQ IS NULL)
  AND R.BUSINESS_UNIT = 'UNUNI'
ORDER BY DTTM_STAMP DESC, BUSINESS_UNIT, ASSET_ID, BOOK, RETIREMENT_DT;

SELECT * FROM PSQRYSTATS WHERE QRYNAME = 'UNU_ARCLS_ITEMDST_NOTJG' ORDER BY EXECCOUNT DESC;

SELECT * FROM PSQRYSTATS WHERE QRYNAME = 'UNU_ARCLS_PAYMISC_NOTJG' ORDER BY LASTEXECDTTM DESC;

--Project Items Query
--Under testing
--Version 1
SELECT PROJECTNAME, OBJECTTYPE,
CASE OBJECTTYPE
  WHEN 0   THEN CASE NVL((SELECT RECTYPE FROM PSRECDEFN WHERE RECNAME = I.OBJECTVALUE1), 99)
                           WHEN 0 THEN 'SQL Table in DB'
                           WHEN 1 THEN 'SQL View in DB'
                           WHEN 2 THEN 'Work Record'
                           WHEN 3 THEN 'Sub Record'
                           WHEN 5 THEN 'Dynamic View'
                           WHEN 6 THEN 'Query View'
                           WHEN 7 THEN 'Temporary Table'
                           ELSE 'Other Record or Deleted' END
 
  WHEN 1   THEN 'Index'
  WHEN 2   THEN 'Field'
  WHEN 3   THEN 'Field Format'
  WHEN 4   THEN 'Translate Value'
  WHEN 5   THEN 'Page'
  WHEN 6   THEN 'Menu'
  WHEN 7   THEN 'Component'
  WHEN 8   THEN 'Record PeopleCode'
  WHEN 9   THEN 'Menu PeopleCode'
  WHEN 10  THEN 'Query'
  WHEN 11  THEN 'Tree Structure'
  WHEN 12  THEN 'Tree'
  WHEN 13  THEN 'Access Group'
  WHEN 14  THEN 'Color'
  WHEN 15  THEN 'Style'
  WHEN 16  THEN 'Business Process Map'
  WHEN 17  THEN 'Business Process'
  WHEN 18  THEN 'Activity'
  WHEN 19  THEN 'Role'
  WHEN 20  THEN 'Process Definition'
  WHEN 21  THEN 'Process Server Definition'
  WHEN 22  THEN 'Process Type Definition'
  WHEN 23  THEN 'Process Job Definition'
  WHEN 24  THEN 'Process Recurrence Definition'
  WHEN 25  THEN 'Message Catalog'
  WHEN 26  THEN 'Dimension'
  WHEN 27  THEN 'Cube Definition'
  WHEN 28  THEN 'Cube Instance Definition'
  WHEN 29  THEN 'Business Interlink'
  WHEN 30  THEN CASE OBJECTVALUE2
                               WHEN '0' THEN 'SQL Object'
                               WHEN '1' THEN 'App Engine SQL'
                               WHEN '2' THEN 'Record View SQL'
                               WHEN '5' THEN 'Query for DDDAUDIT or SYSAUDIT'
                               WHEN '6' THEN 'App Engine XML SQL'
                               ELSE 'SQL' END
  WHEN 31  THEN 'File Layout'
  WHEN 32  THEN 'Component Interface'
  WHEN 33  THEN 'Application Engine Program'
  WHEN 34  THEN 'Application Engine Section'
  WHEN 35  THEN 'Message Node'
  WHEN 36  THEN 'Message Channel'
  WHEN 37  THEN 'Message'
  WHEN 38  THEN 'Approval Rule Se'
  WHEN 39  THEN 'Message PeopleCode'
  WHEN 40  THEN 'Subscription PeopleCode'
  WHEN 41  THEN 'N/A'
  WHEN 42  THEN 'Component Interface PeopleCode'
  WHEN 43  THEN 'Application Engine PeopleCode'
  WHEN 44  THEN 'Page PeopleCode'
  WHEN 45  THEN 'Page Field PeopleCode'
  WHEN 46  THEN 'Component PeopleCode'
  WHEN 47  THEN 'Component Record PeopleCode'
  WHEN 48  THEN 'Component Rec Fld PeopleCode'
  WHEN 49  THEN 'Image'
  WHEN 50  THEN 'Style Sheet'
  WHEN 51  THEN 'HTML'
  WHEN 52  THEN 'Not used'
  WHEN 53  THEN 'Permission List'
  WHEN 54  THEN 'Portal Registry Definitions'
  WHEN 55  THEN 'Portal Registry Structure'
  WHEN 56  THEN 'URL Definitions'
  WHEN 57  THEN 'Application Packages'
  WHEN 58  THEN 'Application Package PeopleCode'
  WHEN 59  THEN 'Portal Registry User Homepage'
  WHEN 60  THEN 'Problem Type'
  WHEN 61  THEN 'Archive Templates'
  WHEN 62  THEN 'XSLT'
  WHEN 63  THEN 'Portal Registry User Favorite'
  WHEN 64  THEN 'Mobile Page'
  WHEN 65  THEN 'Relationships'
  WHEN 66  THEN 'Comp Intfce Property PCode'
  WHEN 67  THEN 'Optimization Models'
  WHEN 68  THEN 'File References'
  WHEN 69  THEN 'File Type Codes'
  WHEN 70  THEN 'Archive Object Definitions'
  WHEN 71  THEN 'Archive Templates (Type 2)'
  WHEN 72  THEN 'Diagnostic Plug In'
  WHEN 73  THEN 'Analytic Model'
  WHEN 74  THEN 'unused'
  WHEN 75  THEN 'Java Portlet User Preferences'
  WHEN 76  THEN 'WSRP Remote Producers'
  WHEN 77  THEN 'WSRP Remote Portlets'
  WHEN 78  THEN 'WSRP Cloned Portlets Handles'
  WHEN 79  THEN 'Service'
  WHEN 80  THEN 'Service Operation'
  WHEN 81  THEN 'Service Operation Handler'
  WHEN 82  THEN 'Service Operation Version'
  WHEN 83  THEN 'Service Operation Routing'
  WHEN 84  THEN 'Info Broker Queues'
  WHEN 85  THEN 'XLMP Template Definition'
  WHEN 86  THEN 'XLMP Report Definition'
  WHEN 87  THEN 'XMLP File Definition'
  WHEN 88  THEN 'XMPL Data Source Definition'
  WHEN 89  THEN 'WSDL'
  WHEN 90  THEN 'Schema'
  WHEN 91  THEN 'Connected Queries'
  WHEN 92  THEN 'Logical Schema'
  WHEN 93  THEN 'Physical Schema'
  WHEN 94  THEN 'Relational Schema'
  WHEN 95  THEN 'Logical Schema Dependancy'
  WHEN 96  THEN 'Document Schema'
  WHEN 97  THEN 'Essbase Cube Dimensions'
  WHEN 98  THEN 'Essbase Cube Outlines'
  WHEN 99  THEN 'Essbase Cube Connections'
  WHEN 100 THEN 'Essbase Cube Templates'
  ELSE 'Unknown '  END  AS Object_Type,
  CASE OBJECTTYPE
  WHEN 12  THEN OBJECTVALUE3
  WHEN 30  THEN CASE WHEN OBJECTVALUE2 = 0 THEN OBJECTVALUE1
                       WHEN OBJECTVALUE2 = 1 THEN SUBSTR(OBJECTVALUE1, 1, 12)
                       WHEN OBJECTVALUE2 = 2 THEN OBJECTVALUE1
                       ELSE ' ' END
  WHEN 34  THEN ltrim(RTRIM(OBJECTVALUE1)) || '.' || ltrim(RTRIM(OBJECTVALUE2))
  WHEN 62  THEN ltrim(rTRIM(SUBSTR(OBJECTVALUE1, 1, 12)))
  ELSE OBJECTVALUE1 END AS NAME,
  CASE
  WHEN OBJECTTYPE = 1    THEN 'Index: ' || OBJECTVALUE2
  WHEN OBJECTTYPE = 4    THEN 'XLAT: ' || OBJECTVALUE2 || '; Date: ' || OBJECTVALUE3 || '; ' || NVL((SELECT 'ShortName: ' || XLATSHORTNAME || '; LongName: ' || XLATLONGNAME || '; Status: ' || EFF_STATUS
                                  FROM PSXLATITEM WHERE FIELDNAME = I.OBJECTVALUE1 AND FIELDVALUE = I.OBJECTVALUE2 AND EFFDT = TO_DATE(I.OBJECTVALUE3, 'YYYY-MM-DD')), 'XLAT Deleted')
  WHEN OBJECTTYPE = 7    THEN 'Market: ' || OBJECTVALUE2
  WHEN OBJECTTYPE = 8    THEN OBJECTVALUE1 || '.' || OBJECTVALUE2 || '.' || OBJECTVALUE3
  WHEN OBJECTTYPE = 9    THEN OBJECTVALUE2 || '.' || OBJECTVALUE3 || '.' || OBJECTVALUE4
  WHEN OBJECTTYPE = 12   THEN 'EFFDT: ' || OBJECTVALUE4
  WHEN OBJECTTYPE = 20   THEN 'Process Name: ' || OBJECTVALUE2
  WHEN OBJECTTYPE IN(22, 40)   THEN OBJECTVALUE2 || '.' || OBJECTVALUE3
  WHEN OBJECTTYPE = 25   THEN 'Message: ' || OBJECTVALUE2 || '(Message Set Descr: ' || ltrim(rtrim(OBJECTVALUE3)) || ')'
  WHEN OBJECTTYPE = 30   THEN 
                         CASE WHEN OBJECTVALUE2 = 0 THEN ' '
                              WHEN OBJECTVALUE2 = 1 THEN 'AE Progam: ' || SUBSTR(OBJECTVALUE1, 1, 12) || '  Section: ' || SUBSTR(OBJECTVALUE1, 13, 8) || '  Step: ' || SUBSTR(OBJECTVALUE1, 21, 8) || '  Type: ' ||
                                           CASE WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'S' THEN 'SQL'
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'D' THEN 'Do Select' 
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'W' THEN 'Do While'
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'H' THEN 'Do When' 
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'N' THEN 'Do Until'
                               WHEN OBJECTVALUE2 = 2 THEN ' ' 
                               ELSE ' ' END
                         END     
  WHEN OBJECTTYPE = 38   THEN 'EFFDT: ' || OBJECTVALUE2
  WHEN OBJECTTYPE IN(39, 42, 44)   THEN OBJECTVALUE2
  WHEN OBJECTTYPE = 43   THEN
                         CASE 
                         WHEN ltrim(rTRIM(OBJECTVALUE4)) = 'OnExecute' 
                            THEN 'Section: ' || SUBSTR(OBJECTVALUE2, 1, 8) || '; Step: ' || OBJECTVALUE3 || '; Market: ' || SUBSTR(OBJECTVALUE2, 9, 3) || '; Database: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE2, 12, 8))) ||
                                     '; EFFDT: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE2, 21, 10)))
                            ELSE 'Section: ' || OBJECTVALUE2 || '; Market: ' || OBJECTVALUE3 || '; Database: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 12, 8))) || '; EFFDT: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 21, 10))) 
                         END
  WHEN OBJECTTYPE = 46   THEN 'Market: ' || OBJECTVALUE2 || '; Event: ' || OBJECTVALUE3
  WHEN OBJECTTYPE = 47   THEN 'Market: ' || OBJECTVALUE2 || '; Record: ' || OBJECTVALUE3 || '; Event: ' || OBJECTVALUE4
  WHEN OBJECTTYPE = 48   THEN 'Market: ' || OBJECTVALUE2 || '; Record: ' || OBJECTVALUE3 || '; Field: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 1, 18))) || '; Event: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 19, 16)))
  WHEN OBJECTTYPE = 55   THEN 
                         CASE WHEN ltrim(rtrim(OBJECTVALUE2)) = 'C' THEN 'Content: ' ELSE 'Folder: ' END || OBJECTVALUE3
  WHEN OBJECTTYPE = 57   THEN
                         CASE WHEN ltrim(rTRIM(OBJECTVALUE4)) NOT IN(' ', ':', '.') THEN
                                  'Subclass: ' || ltrim(rTRIM(OBJECTVALUE2)) || ':' || ltrim(rTRIM(OBJECTVALUE3)) || ':' || ltrim(rTRIM(OBJECTVALUE4))
                              ELSE
                                 CASE WHEN ltrim(rTRIM(OBJECTVALUE3)) NOT IN(' ', ':', '.') THEN
                                           'Subclass: ' || ltrim(rTRIM(OBJECTVALUE2)) || ':' || ltrim(rTRIM(OBJECTVALUE3))
                                     ELSE
                                         CASE WHEN ltrim(rTRIM(OBJECTVALUE2)) NOT IN(' ', ':', '.') THEN
                                                  'Subclass: ' ||  ltrim(rTRIM(OBJECTVALUE2))
                                              ELSE ' '
                                         END
                                 END
                         END
  WHEN OBJECTTYPE IN(58, 63, 68, 81, 82, 83, 87, 88) THEN
                         CASE WHEN ltrim(rTRIM(OBJECTVALUE4)) IS NOT NULL THEN
                                   ltrim(rTRIM(OBJECTVALUE2)) || '.' || ltrim(rTRIM(OBJECTVALUE3))  || '.' || ltrim(rTRIM(OBJECTVALUE4))
                              ELSE
                                  CASE WHEN ltrim(rTRIM(OBJECTVALUE3)) IS NOT NULL THEN
                                            ltrim(rTRIM(OBJECTVALUE2)) || '.' || ltrim(rTRIM(OBJECTVALUE3))
                                  ELSE
                                      CASE WHEN ltrim(rTRIM(OBJECTVALUE2)) IS NOT NULL THEN
                                                ltrim(rTRIM(OBJECTVALUE2))
                                           ELSE ' '
                                      END
                                  END
                              END
  WHEN OBJECTTYPE = 59   THEN ltrim(rTRIM(OBJECTVALUE2))
  WHEN OBJECTTYPE = 62   THEN 'AE Progam: ' || SUBSTR(OBJECTVALUE1, 1, 12) || '  Section: ' || SUBSTR(OBJECTVALUE1, 13, 8) || '  Step: ' || SUBSTR(OBJECTVALUE1, 21, 8)
  ELSE ' ' 
  END EXTENDED_OBJ_NAME,  
  CASE OBJECTTYPE
  WHEN 0    THEN NVL((SELECT OBJECTOWNERID || ' - ' || RECDESCR FROM PSRECDEFN WHERE RECNAME = I.OBJECTVALUE1), ' ')
  WHEN 1    THEN NVL((SELECT IDXCOMMENTS FROM PSINDEXDEFN WHERE RECNAME = I.OBJECTVALUE1 AND INDEXID = I.OBJECTVALUE2), ' ')
  --WHEN 2    THEN NVL((SELECT DESCRLONG FROM PSDBFIELD WHERE FIELDNAME = I.OBJECTVALUE1), ' ')
  WHEN 3    THEN NVL((SELECT DESCR FROM PSFMTDEFN WHERE FORMATFAMILY = I.OBJECTVALUE1), ' ')
  WHEN 5    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSPNLDEFN WHERE PNLNAME = I.OBJECTVALUE1), ' ')
  WHEN 6    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSMENUDEFN WHERE MENUNAME = I.OBJECTVALUE1), ' ')
  WHEN 7    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSPNLGRPDEFN WHERE PNLGRPNAME = I.OBJECTVALUE1 AND MARKET = I.OBJECTVALUE2), ' ')
  --WHEN 10   THEN NVL((SELECT DESCR FROM PSQRYDEFN WHERE QRYNAME = I.OBJECTVALUE1), ' ')
  WHEN 12   THEN NVL((SELECT SETCNTRLVALUE || ' - ' || TREE_STRCT_ID || ' - ' || DESCR FROM PSTREEDEFN WHERE TREE_NAME = I.OBJECTVALUE3), ' ')
  WHEN 13   THEN NVL((SELECT DESCR FROM PS_ACCESS_GRP_TBL WHERE ACCESS_GROUP = I.OBJECTVALUE1), ' ')
  WHEN 17   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR60 FROM PSBUSPROCDEFN WHERE BUSPROCNAME = I.OBJECTVALUE1), ' ')
  WHEN 18   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR60 FROM PSACTIVITYDEFN WHERE ACTIVITYNAME = I.OBJECTVALUE1), ' ')
  WHEN 19   THEN NVL((SELECT DESCR FROM PSROLEDEFN WHERE ROLENAME = I.OBJECTVALUE1), ' ')
  WHEN 20   THEN NVL((SELECT DESCR FROM PS_PRCSDEFN WHERE PRCSTYPE = I.OBJECTVALUE1 AND PRCSNAME = I.OBJECTVALUE2), ' ')
  WHEN 25   THEN NVL((SELECT MESSAGE_SET_NBR || ' - ' || MESSAGE_NBR || ' - ' || MESSAGE_TEXT FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = I.OBJECTVALUE1 AND MESSAGE_NBR = I.OBJECTVALUE2), ' ') 
  WHEN 31   THEN NVL((SELECT DESCR FROM PSFLDDEFN WHERE FLDDEFNNAME = I.OBJECTVALUE1), ' ') 
  WHEN 32   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSBCDEFN WHERE BCNAME = I.OBJECTVALUE1), ' ')
  WHEN 33   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSAEAPPLDEFN WHERE AE_APPLID = I.OBJECTVALUE1), ' ')
  WHEN 53   THEN NVL((SELECT CLASSDEFNDESC FROM PSCLASSDEFN WHERE CLASSID = I.OBJECTVALUE1), ' ')
  WHEN 56   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR || ' - ' || URL FROM PSURLDEFN WHERE URL_ID = I.OBJECTVALUE1), ' ')
  ELSE ' ' END AS "DESCR"
FROM PSPROJECTITEM I
WHERE PROJECTNAME LIKE 'UN%'
ORDER BY OBJECTTYPE, 2, OBJECTVALUE1, OBJECTVALUE2, OBJECTVALUE3, OBJECTVALUE4;

--Version 2
--Added PSPROJECTDEFN
SELECT I.PROJECTNAME, PD.PROJECTDESCR, OBJECTTYPE,
CASE OBJECTTYPE
  WHEN 0   THEN CASE NVL((SELECT RECTYPE FROM PSRECDEFN WHERE RECNAME = I.OBJECTVALUE1), 99)
                           WHEN 0 THEN 'SQL Table in DB'
                           WHEN 1 THEN 'SQL View in DB'
                           WHEN 2 THEN 'Work Record'
                           WHEN 3 THEN 'Sub Record'
                           WHEN 5 THEN 'Dynamic View'
                           WHEN 6 THEN 'Query View'
                           WHEN 7 THEN 'Temporary Table'
                           ELSE 'Other Record or Deleted' END
 
  WHEN 1   THEN 'Index'
  WHEN 2   THEN 'Field'
  WHEN 3   THEN 'Field Format'
  WHEN 4   THEN 'Translate Value'
  WHEN 5   THEN 'Page'
  WHEN 6   THEN 'Menu'
  WHEN 7   THEN 'Component'
  WHEN 8   THEN 'Record PeopleCode'
  WHEN 9   THEN 'Menu PeopleCode'
  WHEN 10  THEN 'Query'
  WHEN 11  THEN 'Tree Structure'
  WHEN 12  THEN 'Tree'
  WHEN 13  THEN 'Access Group'
  WHEN 14  THEN 'Color'
  WHEN 15  THEN 'Style'
  WHEN 16  THEN 'Business Process Map'
  WHEN 17  THEN 'Business Process'
  WHEN 18  THEN 'Activity'
  WHEN 19  THEN 'Role'
  WHEN 20  THEN 'Process Definition'
  WHEN 21  THEN 'Process Server Definition'
  WHEN 22  THEN 'Process Type Definition'
  WHEN 23  THEN 'Process Job Definition'
  WHEN 24  THEN 'Process Recurrence Definition'
  WHEN 25  THEN 'Message Catalog'
  WHEN 26  THEN 'Dimension'
  WHEN 27  THEN 'Cube Definition'
  WHEN 28  THEN 'Cube Instance Definition'
  WHEN 29  THEN 'Business Interlink'
  WHEN 30  THEN CASE OBJECTVALUE2
                               WHEN '0' THEN 'SQL Object'
                               WHEN '1' THEN 'App Engine SQL'
                               WHEN '2' THEN 'Record View SQL'
                               WHEN '5' THEN 'Query for DDDAUDIT or SYSAUDIT'
                               WHEN '6' THEN 'App Engine XML SQL'
                               ELSE 'SQL' END
  WHEN 31  THEN 'File Layout'
  WHEN 32  THEN 'Component Interface'
  WHEN 33  THEN 'Application Engine Program'
  WHEN 34  THEN 'Application Engine Section'
  WHEN 35  THEN 'Message Node'
  WHEN 36  THEN 'Message Channel'
  WHEN 37  THEN 'Message'
  WHEN 38  THEN 'Approval Rule Se'
  WHEN 39  THEN 'Message PeopleCode'
  WHEN 40  THEN 'Subscription PeopleCode'
  WHEN 41  THEN 'N/A'
  WHEN 42  THEN 'Component Interface PeopleCode'
  WHEN 43  THEN 'Application Engine PeopleCode'
  WHEN 44  THEN 'Page PeopleCode'
  WHEN 45  THEN 'Page Field PeopleCode'
  WHEN 46  THEN 'Component PeopleCode'
  WHEN 47  THEN 'Component Record PeopleCode'
  WHEN 48  THEN 'Component Rec Fld PeopleCode'
  WHEN 49  THEN 'Image'
  WHEN 50  THEN 'Style Sheet'
  WHEN 51  THEN 'HTML'
  WHEN 52  THEN 'Not used'
  WHEN 53  THEN 'Permission List'
  WHEN 54  THEN 'Portal Registry Definitions'
  WHEN 55  THEN 'Portal Registry Structure'
  WHEN 56  THEN 'URL Definitions'
  WHEN 57  THEN 'Application Packages'
  WHEN 58  THEN 'Application Package PeopleCode'
  WHEN 59  THEN 'Portal Registry User Homepage'
  WHEN 60  THEN 'Problem Type'
  WHEN 61  THEN 'Archive Templates'
  WHEN 62  THEN 'XSLT'
  WHEN 63  THEN 'Portal Registry User Favorite'
  WHEN 64  THEN 'Mobile Page'
  WHEN 65  THEN 'Relationships'
  WHEN 66  THEN 'Comp Intfce Property PCode'
  WHEN 67  THEN 'Optimization Models'
  WHEN 68  THEN 'File References'
  WHEN 69  THEN 'File Type Codes'
  WHEN 70  THEN 'Archive Object Definitions'
  WHEN 71  THEN 'Archive Templates (Type 2)'
  WHEN 72  THEN 'Diagnostic Plug In'
  WHEN 73  THEN 'Analytic Model'
  WHEN 74  THEN 'unused'
  WHEN 75  THEN 'Java Portlet User Preferences'
  WHEN 76  THEN 'WSRP Remote Producers'
  WHEN 77  THEN 'WSRP Remote Portlets'
  WHEN 78  THEN 'WSRP Cloned Portlets Handles'
  WHEN 79  THEN 'Service'
  WHEN 80  THEN 'Service Operation'
  WHEN 81  THEN 'Service Operation Handler'
  WHEN 82  THEN 'Service Operation Version'
  WHEN 83  THEN 'Service Operation Routing'
  WHEN 84  THEN 'Info Broker Queues'
  WHEN 85  THEN 'XLMP Template Definition'
  WHEN 86  THEN 'XLMP Report Definition'
  WHEN 87  THEN 'XMLP File Definition'
  WHEN 88  THEN 'XMPL Data Source Definition'
  WHEN 89  THEN 'WSDL'
  WHEN 90  THEN 'Schema'
  WHEN 91  THEN 'Connected Queries'
  WHEN 92  THEN 'Logical Schema'
  WHEN 93  THEN 'Physical Schema'
  WHEN 94  THEN 'Relational Schema'
  WHEN 95  THEN 'Logical Schema Dependancy'
  WHEN 96  THEN 'Document Schema'
  WHEN 97  THEN 'Essbase Cube Dimensions'
  WHEN 98  THEN 'Essbase Cube Outlines'
  WHEN 99  THEN 'Essbase Cube Connections'
  WHEN 100 THEN 'Essbase Cube Templates'
  ELSE 'Unknown '  END  AS Object_Type,
  CASE OBJECTTYPE
  WHEN 12  THEN OBJECTVALUE3
  WHEN 30  THEN CASE WHEN OBJECTVALUE2 = 0 THEN OBJECTVALUE1
                       WHEN OBJECTVALUE2 = 1 THEN SUBSTR(OBJECTVALUE1, 1, 12)
                       WHEN OBJECTVALUE2 = 2 THEN OBJECTVALUE1
                       ELSE ' ' END
  WHEN 34  THEN ltrim(RTRIM(OBJECTVALUE1)) || '.' || ltrim(RTRIM(OBJECTVALUE2))
  WHEN 62  THEN ltrim(rTRIM(SUBSTR(OBJECTVALUE1, 1, 12)))
  ELSE OBJECTVALUE1 END AS NAME,
  CASE
  WHEN OBJECTTYPE = 1    THEN 'Index: ' || OBJECTVALUE2
  WHEN OBJECTTYPE = 4    THEN 'XLAT: ' || OBJECTVALUE2 || '; Date: ' || OBJECTVALUE3 || '; ' || NVL((SELECT 'ShortName: ' || XLATSHORTNAME || '; LongName: ' || XLATLONGNAME || '; Status: ' || EFF_STATUS
                                  FROM PSXLATITEM WHERE FIELDNAME = I.OBJECTVALUE1 AND FIELDVALUE = I.OBJECTVALUE2 AND EFFDT = TO_DATE(I.OBJECTVALUE3, 'YYYY-MM-DD')), 'XLAT Deleted')
  WHEN OBJECTTYPE = 7    THEN 'Market: ' || OBJECTVALUE2
  WHEN OBJECTTYPE = 8    THEN OBJECTVALUE1 || '.' || OBJECTVALUE2 || '.' || OBJECTVALUE3
  WHEN OBJECTTYPE = 9    THEN OBJECTVALUE2 || '.' || OBJECTVALUE3 || '.' || OBJECTVALUE4
  WHEN OBJECTTYPE = 12   THEN 'EFFDT: ' || OBJECTVALUE4
  WHEN OBJECTTYPE = 20   THEN 'Process Name: ' || OBJECTVALUE2
  WHEN OBJECTTYPE IN(22, 40)   THEN OBJECTVALUE2 || '.' || OBJECTVALUE3
  WHEN OBJECTTYPE = 25   THEN 'Message: ' || OBJECTVALUE2 || '(Message Set Descr: ' || ltrim(rtrim(OBJECTVALUE3)) || ')'
  WHEN OBJECTTYPE = 30   THEN 
                         CASE WHEN OBJECTVALUE2 = 0 THEN ' '
                              WHEN OBJECTVALUE2 = 1 THEN 'AE Progam: ' || SUBSTR(OBJECTVALUE1, 1, 12) || '  Section: ' || SUBSTR(OBJECTVALUE1, 13, 8) || '  Step: ' || SUBSTR(OBJECTVALUE1, 21, 8) || '  Type: ' ||
                                           CASE WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'S' THEN 'SQL'
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'D' THEN 'Do Select' 
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'W' THEN 'Do While'
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'H' THEN 'Do When' 
                                                WHEN SUBSTR(OBJECTVALUE1, 29, 1) = 'N' THEN 'Do Until'
                               WHEN OBJECTVALUE2 = 2 THEN ' ' 
                               ELSE ' ' END
                         END     
  WHEN OBJECTTYPE = 38   THEN 'EFFDT: ' || OBJECTVALUE2
  WHEN OBJECTTYPE IN(39, 42, 44)   THEN OBJECTVALUE2
  WHEN OBJECTTYPE = 43   THEN
                         CASE 
                         WHEN ltrim(rTRIM(OBJECTVALUE4)) = 'OnExecute' 
                            THEN 'Section: ' || SUBSTR(OBJECTVALUE2, 1, 8) || '; Step: ' || OBJECTVALUE3 || '; Market: ' || SUBSTR(OBJECTVALUE2, 9, 3) || '; Database: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE2, 12, 8))) ||
                                     '; EFFDT: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE2, 21, 10)))
                            ELSE 'Section: ' || OBJECTVALUE2 || '; Market: ' || OBJECTVALUE3 || '; Database: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 12, 8))) || '; EFFDT: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 21, 10))) 
                         END
  WHEN OBJECTTYPE = 46   THEN 'Market: ' || OBJECTVALUE2 || '; Event: ' || OBJECTVALUE3
  WHEN OBJECTTYPE = 47   THEN 'Market: ' || OBJECTVALUE2 || '; Record: ' || OBJECTVALUE3 || '; Event: ' || OBJECTVALUE4
  WHEN OBJECTTYPE = 48   THEN 'Market: ' || OBJECTVALUE2 || '; Record: ' || OBJECTVALUE3 || '; Field: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 1, 18))) || '; Event: ' || ltrim(rTRIM(SUBSTR(OBJECTVALUE4, 19, 16)))
  WHEN OBJECTTYPE = 55   THEN 
                         CASE WHEN ltrim(rtrim(OBJECTVALUE2)) = 'C' THEN 'Content: ' ELSE 'Folder: ' END || OBJECTVALUE3
  WHEN OBJECTTYPE = 57   THEN
                         CASE WHEN ltrim(rTRIM(OBJECTVALUE4)) NOT IN(' ', ':', '.') THEN
                                  'Subclass: ' || ltrim(rTRIM(OBJECTVALUE2)) || ':' || ltrim(rTRIM(OBJECTVALUE3)) || ':' || ltrim(rTRIM(OBJECTVALUE4))
                              ELSE
                                 CASE WHEN ltrim(rTRIM(OBJECTVALUE3)) NOT IN(' ', ':', '.') THEN
                                           'Subclass: ' || ltrim(rTRIM(OBJECTVALUE2)) || ':' || ltrim(rTRIM(OBJECTVALUE3))
                                     ELSE
                                         CASE WHEN ltrim(rTRIM(OBJECTVALUE2)) NOT IN(' ', ':', '.') THEN
                                                  'Subclass: ' ||  ltrim(rTRIM(OBJECTVALUE2))
                                              ELSE ' '
                                         END
                                 END
                         END
  WHEN OBJECTTYPE IN(58, 63, 68, 81, 82, 83, 87, 88) THEN
                         CASE WHEN ltrim(rTRIM(OBJECTVALUE4)) IS NOT NULL THEN
                                   ltrim(rTRIM(OBJECTVALUE2)) || '.' || ltrim(rTRIM(OBJECTVALUE3))  || '.' || ltrim(rTRIM(OBJECTVALUE4))
                              ELSE
                                  CASE WHEN ltrim(rTRIM(OBJECTVALUE3)) IS NOT NULL THEN
                                            ltrim(rTRIM(OBJECTVALUE2)) || '.' || ltrim(rTRIM(OBJECTVALUE3))
                                  ELSE
                                      CASE WHEN ltrim(rTRIM(OBJECTVALUE2)) IS NOT NULL THEN
                                                ltrim(rTRIM(OBJECTVALUE2))
                                           ELSE ' '
                                      END
                                  END
                              END
  WHEN OBJECTTYPE = 59   THEN ltrim(rTRIM(OBJECTVALUE2))
  WHEN OBJECTTYPE = 62   THEN 'AE Progam: ' || SUBSTR(OBJECTVALUE1, 1, 12) || '  Section: ' || SUBSTR(OBJECTVALUE1, 13, 8) || '  Step: ' || SUBSTR(OBJECTVALUE1, 21, 8)
  ELSE ' ' 
  END EXTENDED_OBJ_NAME,  
  CASE OBJECTTYPE
  WHEN 0    THEN NVL((SELECT OBJECTOWNERID || ' - ' || RECDESCR FROM PSRECDEFN WHERE RECNAME = I.OBJECTVALUE1), ' ')
  WHEN 8    THEN NVL((SELECT OBJECTOWNERID || ' - ' || RECDESCR FROM PSRECDEFN WHERE RECNAME = I.OBJECTVALUE1), ' ')
  WHEN 1    THEN NVL((SELECT IDXCOMMENTS FROM PSINDEXDEFN WHERE RECNAME = I.OBJECTVALUE1 AND INDEXID = I.OBJECTVALUE2), ' ')
  --WHEN 2    THEN NVL((SELECT DESCRLONG FROM PSDBFIELD WHERE FIELDNAME = I.OBJECTVALUE1), ' ')
  WHEN 3    THEN NVL((SELECT DESCR FROM PSFMTDEFN WHERE FORMATFAMILY = I.OBJECTVALUE1), ' ')
  WHEN 5    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSPNLDEFN WHERE PNLNAME = I.OBJECTVALUE1), ' ')
  WHEN 6    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSMENUDEFN WHERE MENUNAME = I.OBJECTVALUE1), ' ')
  WHEN 7    THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSPNLGRPDEFN WHERE PNLGRPNAME = I.OBJECTVALUE1 AND MARKET = I.OBJECTVALUE2), ' ')
  --WHEN 10   THEN NVL((SELECT DESCR FROM PSQRYDEFN WHERE QRYNAME = I.OBJECTVALUE1), ' ')
  WHEN 12   THEN NVL((SELECT SETCNTRLVALUE || ' - ' || TREE_STRCT_ID || ' - ' || DESCR FROM PSTREEDEFN WHERE TREE_NAME = I.OBJECTVALUE3), ' ')
  WHEN 13   THEN NVL((SELECT DESCR FROM PS_ACCESS_GRP_TBL WHERE ACCESS_GROUP = I.OBJECTVALUE1), ' ')
  WHEN 17   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR60 FROM PSBUSPROCDEFN WHERE BUSPROCNAME = I.OBJECTVALUE1), ' ')
  WHEN 18   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR60 FROM PSACTIVITYDEFN WHERE ACTIVITYNAME = I.OBJECTVALUE1), ' ')
  WHEN 19   THEN NVL((SELECT DESCR FROM PSROLEDEFN WHERE ROLENAME = I.OBJECTVALUE1), ' ')
  WHEN 20   THEN NVL((SELECT DESCR FROM PS_PRCSDEFN WHERE PRCSTYPE = I.OBJECTVALUE1 AND PRCSNAME = I.OBJECTVALUE2), ' ')
  WHEN 23   THEN NVL((SELECT DESCR FROM PS_PRCSJOBDEFN WHERE PRCSJOBNAME = I.OBJECTVALUE1), ' ')
  WHEN 21   THEN NVL((SELECT DESCR FROM PS_SERVERDEFN WHERE SERVERNAME = I.OBJECTVALUE1), ' ')
  WHEN 25   THEN NVL((SELECT MESSAGE_SET_NBR || ' - ' || MESSAGE_NBR || ' - ' || MESSAGE_TEXT FROM PSMSGCATDEFN WHERE MESSAGE_SET_NBR = I.OBJECTVALUE1 AND MESSAGE_NBR = I.OBJECTVALUE2), ' ') 
  WHEN 31   THEN NVL((SELECT DESCR FROM PSFLDDEFN WHERE FLDDEFNNAME = I.OBJECTVALUE1), ' ') 
  WHEN 32   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSBCDEFN WHERE BCNAME = I.OBJECTVALUE1), ' ')
  WHEN 33   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR FROM PSAEAPPLDEFN WHERE AE_APPLID = I.OBJECTVALUE1), ' ')
  --WHEN 34   THEN NVL((SELECT TOP 1 DESCR FROM PSAESECTDTLDEFN WHERE AE_APPLID = I.OBJECTVALUE1 AND AE_SECTION = I.OBJECTVALUE2), ' ')
  WHEN 53   THEN NVL((SELECT CLASSDEFNDESC FROM PSCLASSDEFN WHERE CLASSID = I.OBJECTVALUE1), ' ')
  WHEN 56   THEN NVL((SELECT OBJECTOWNERID || ' - ' || DESCR || ' - ' || URL FROM PSURLDEFN WHERE URL_ID = I.OBJECTVALUE1), ' ')
  ELSE ' ' END AS "DESCR",
  PD.LASTUPDOPRID, PD.LASTUPDDTTM, dbms_lob.substr(PD.DESCRLONG) AS PROJECT_LONG_DESCR
FROM PSPROJECTITEM I, PSPROJECTDEFN PD
WHERE PD.PROJECTNAME = I.PROJECTNAME
  AND I.PROJECTNAME LIKE 'UN%'
ORDER BY PD.LASTUPDDTTM DESC, OBJECTTYPE, OBJECTVALUE1, OBJECTVALUE2, OBJECTVALUE3, OBJECTVALUE4;

--UNU_CA_CONTRACT_DETAILS
--Modified/PPs version
--Version 1
SELECT A.SOLD_TO_CUST_ID "Sold To Customer", A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, 
       TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Rcvd Date", 
       TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time", A.LASTUPDOPRID "Last Update User ID", 
       TO_CHAR(D.START_DT,'YYYY-MM-DD') "Start Date", TO_CHAR(D.END_DT,'YYYY-MM-DD') "End Date", 
       A.MAST_CONTR_ID "Master Contract", A.LEGAL_REVIEW_FLG "Legal Review Complete", C.UNDP_DONOR_REF "Donor Reference", A.CURRENCY_CD "Currency", A.REVISED_GROSS "Negotiated Amount", SUM(G.AMOUNT) "Events Billed To Date", 
       F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID
FROM ((((((PS_CA_CONTR_HDR A LEFT OUTER JOIN PS_CA_CHG_HDR B ON  A.CONTRACT_NUM = B.CONTRACT_NUM AND A.CHG_ID = B.CHG_ID) 
         LEFT OUTER JOIN PS_UNDP_DONOR_REF C ON A.CONTRACT_NUM = C.CONTRACT_NUM) 
         LEFT OUTER JOIN PS_CA_DETAIL D ON A.CONTRACT_NUM = D.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON A.CONTRACT_NUM = BP.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_BP_EVENTS G ON A.CONTRACT_NUM = G.CONTRACT_NUM AND BP.BILL_PLAN_ID = G.BILL_PLAN_ID AND G.BP_EVENT_STATUS = 'DON')
         LEFT OUTER JOIN PS_CA_DETAIL_DST F ON A.CONTRACT_NUM = F.CONTRACT_NUM), PS_CUSTOMER E, PS_SET_CNTRL_REC H 
WHERE (A.BUSINESS_UNIT = 'UNUNI'
   --AND A.CA_STATUS LIKE :2 
   --AND F.CHARTFIELD2 LIKE :3 
   --AND F.OPERATING_UNIT LIKE :4 
   --AND A.CONTRACT_TYPE IN ('CORE','NON_CORE','NON_CORE_EC','NON_CORE_NONSTD')
   AND A.CONTRACT_TYPE NOT LIKE '%GRANTS%'
   AND (F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_CA_DETAIL_DST F_ED WHERE F.CONTRACT_NUM = F_ED.CONTRACT_NUM AND F.CONTRACT_LINE_NUM = F_ED.CONTRACT_LINE_NUM AND F_ED.EFFDT <= SYSDATE)
     OR F.EFFDT IS NULL)
   AND H.SETCNTRLVALUE = A.BUSINESS_UNIT 
   AND H.RECNAME = 'CUSTOMER'
   AND E.SETID = H.SETID
   AND E.CUST_ID = A.SOLD_TO_CUST_ID)
GROUP BY A.SOLD_TO_CUST_ID, A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), 
         TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.LASTUPDOPRID, TO_CHAR(D.START_DT,'YYYY-MM-DD'), TO_CHAR(D.END_DT,'YYYY-MM-DD'), A.MAST_CONTR_ID, A.LEGAL_REVIEW_FLG, C.UNDP_DONOR_REF, 
         A.CURRENCY_CD, A.REVISED_GROSS, F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID 
ORDER BY A.CONTRACT_NUM;

--Version 2
--Invalid Contract lines are not being reported
SELECT A.SOLD_TO_CUST_ID "Sold To Customer", A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.DESCR "Contract Description", A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, 
       TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Rcvd Date", 
       TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time", A.LASTUPDOPRID "Last Update User ID", D.CONTRACT_LINE_NUM, D.PRODUCT_GROUP,
       TO_CHAR(D.START_DT,'YYYY-MM-DD') "Start Date", TO_CHAR(D.END_DT,'YYYY-MM-DD') "End Date", 
       A.MAST_CONTR_ID "Master Contract", A.LEGAL_REVIEW_FLG "Legal Review Complete", C.UNDP_DONOR_REF "Donor Reference", A.CURRENCY_CD "Currency", A.REVISED_GROSS "Header Negotiated Amount",
       D.GROSS_AMT "Gross Amount", D.NET_AMOUNT "Net Amount", SUM(G.AMOUNT) "Events Billed To Date", 
       F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID
FROM ((((((PS_CA_CONTR_HDR A LEFT OUTER JOIN PS_CA_CHG_HDR B ON  A.CONTRACT_NUM = B.CONTRACT_NUM AND A.CHG_ID = B.CHG_ID) 
         LEFT OUTER JOIN PS_UNDP_DONOR_REF C ON A.CONTRACT_NUM = C.CONTRACT_NUM) 
         LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON A.CONTRACT_NUM = BP.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_DETAIL D ON A.CONTRACT_NUM = D.CONTRACT_NUM AND D.BILL_PLAN_ID = BP.BILL_PLAN_ID)
         LEFT OUTER JOIN PS_CA_BP_EVENTS G ON A.CONTRACT_NUM = G.CONTRACT_NUM AND BP.BILL_PLAN_ID = G.BILL_PLAN_ID AND G.BP_EVENT_STATUS = 'DON')
         LEFT OUTER JOIN PS_CA_DETAIL_DST F ON A.CONTRACT_NUM = F.CONTRACT_NUM AND D.CONTRACT_LINE_NUM = F.CONTRACT_LINE_NUM), PS_CUSTOMER E, PS_SET_CNTRL_REC H 
WHERE (A.BUSINESS_UNIT = 'UNUNI'
   --AND A.CA_STATUS LIKE :2 
   --AND F.CHARTFIELD2 LIKE :3 
   --AND F.OPERATING_UNIT LIKE :4 
   --AND A.CONTRACT_TYPE IN ('CORE','NON_CORE','NON_CORE_EC','NON_CORE_NONSTD')
   AND A.CONTRACT_TYPE NOT LIKE '%GRANTS%'
   AND (F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_CA_DETAIL_DST F_ED WHERE F.CONTRACT_NUM = F_ED.CONTRACT_NUM AND F.CONTRACT_LINE_NUM = F_ED.CONTRACT_LINE_NUM AND F_ED.EFFDT <= SYSDATE)
     OR F.EFFDT IS NULL)
   AND H.SETCNTRLVALUE = A.BUSINESS_UNIT 
   AND H.RECNAME = 'CUSTOMER'
   AND E.SETID = H.SETID
   AND E.CUST_ID = A.SOLD_TO_CUST_ID)
   --AND A.CONTRACT_NUM = '00085196'
GROUP BY A.SOLD_TO_CUST_ID, A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.DESCR, A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), 
         TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.LASTUPDOPRID, D.CONTRACT_LINE_NUM, D.PRODUCT_GROUP, TO_CHAR(D.START_DT,'YYYY-MM-DD'), TO_CHAR(D.END_DT,'YYYY-MM-DD'), 
         A.MAST_CONTR_ID, A.LEGAL_REVIEW_FLG, C.UNDP_DONOR_REF, A.CURRENCY_CD, A.REVISED_GROSS, D.GROSS_AMT, D.NET_AMOUNT, F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID 
ORDER BY A.CONTRACT_NUM, D.CONTRACT_LINE_NUM;

--Version 3
--Included a NOT NULL clause for Billing Plan Event Table to ensure that incorrect lines are reported
--Aggregation seems to work correctly
SELECT A.SOLD_TO_CUST_ID "Sold To Customer", A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.DESCR "Contract Description", A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, 
       BP.BILL_PLAN_ID, D.ACCT_PLAN_ID, D.BILL_PLAN_ID,
       TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Rcvd Date", 
       TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF') "Last Update Date/Time", A.LASTUPDOPRID "Last Update User ID", D.CONTRACT_LINE_NUM, D.PRODUCT_GROUP,
       TO_CHAR(D.START_DT,'YYYY-MM-DD') "Start Date", TO_CHAR(D.END_DT,'YYYY-MM-DD') "End Date", 
       A.MAST_CONTR_ID "Master Contract", A.LEGAL_REVIEW_FLG "Legal Review Complete", C.UNDP_DONOR_REF "Donor Reference", A.CURRENCY_CD "Currency", A.REVISED_GROSS "Header Negotiated Amount",
       D.GROSS_AMT "Gross Amount", D.NET_AMOUNT "Net Amount", SUM(G.AMOUNT) "Events Billed To Date", 
       F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID
FROM ((((((PS_CA_CONTR_HDR A LEFT OUTER JOIN PS_CA_CHG_HDR B ON  A.CONTRACT_NUM = B.CONTRACT_NUM AND A.CHG_ID = B.CHG_ID) 
         LEFT OUTER JOIN PS_UNDP_DONOR_REF C ON A.CONTRACT_NUM = C.CONTRACT_NUM)
         --LEFT OUTER JOIN PS_CA_DETAIL D ON A.CONTRACT_NUM = D.CONTRACT_NUM) 
         LEFT OUTER JOIN PS_CA_BILL_PLAN BP ON A.CONTRACT_NUM = BP.CONTRACT_NUM)
         LEFT OUTER JOIN PS_CA_DETAIL D ON (BP.BILL_PLAN_ID IS NOT NULL AND A.CONTRACT_NUM = D.CONTRACT_NUM AND D.BILL_PLAN_ID = BP.BILL_PLAN_ID) OR (BP.BILL_PLAN_ID IS NULL AND A.CONTRACT_NUM = D.CONTRACT_NUM))
         LEFT OUTER JOIN PS_CA_BP_EVENTS G ON A.CONTRACT_NUM = G.CONTRACT_NUM AND BP.BILL_PLAN_ID = G.BILL_PLAN_ID AND G.BP_EVENT_STATUS = 'DON')
         LEFT OUTER JOIN PS_CA_DETAIL_DST F ON A.CONTRACT_NUM = F.CONTRACT_NUM AND D.CONTRACT_LINE_NUM = F.CONTRACT_LINE_NUM), PS_CUSTOMER E, PS_SET_CNTRL_REC H 
WHERE (A.BUSINESS_UNIT = 'UNUNI'
   --AND A.CA_STATUS LIKE :2 
   --AND F.CHARTFIELD2 LIKE :3 
   --AND F.OPERATING_UNIT LIKE :4 
   --AND A.CONTRACT_TYPE IN ('CORE','NON_CORE','NON_CORE_EC','NON_CORE_NONSTD')
   AND A.CONTRACT_TYPE NOT LIKE '%GRANTS%'
   AND (F.EFFDT = (SELECT MAX(F_ED.EFFDT) FROM PS_CA_DETAIL_DST F_ED WHERE F.CONTRACT_NUM = F_ED.CONTRACT_NUM AND F.CONTRACT_LINE_NUM = F_ED.CONTRACT_LINE_NUM AND F_ED.EFFDT <= SYSDATE)
     OR F.EFFDT IS NULL)
   AND H.SETCNTRLVALUE = A.BUSINESS_UNIT 
   AND H.RECNAME = 'CUSTOMER'
   AND E.SETID = H.SETID
   AND E.CUST_ID = A.SOLD_TO_CUST_ID)
   --AND A.CONTRACT_NUM IN ('00085173', '00085197')
GROUP BY A.SOLD_TO_CUST_ID, A.BILL_TO_CUST_ID, E.NAME1, A.CONTRACT_TYPE, A.CONTRACT_NUM, A.DESCR, A.CA_STATUS, A.CA_PROC_STATUS, B.CHG_STATUS, BP.BILL_PLAN_ID, D.CONTRACT_LINE_NUM, D.ACCT_PLAN_ID, D.BILL_PLAN_ID,
         TO_CHAR(CAST((B.CHG_RCVD_DT) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), 
         TO_CHAR(CAST((A.LASTUPDDTTM) AS TIMESTAMP),'YYYY-MM-DD-HH24.MI.SS.FF'), A.LASTUPDOPRID, D.CONTRACT_LINE_NUM, D.PRODUCT_GROUP, TO_CHAR(D.START_DT,'YYYY-MM-DD'), TO_CHAR(D.END_DT,'YYYY-MM-DD'), 
         A.MAST_CONTR_ID, A.LEGAL_REVIEW_FLG, C.UNDP_DONOR_REF, A.CURRENCY_CD, A.REVISED_GROSS, D.GROSS_AMT, D.NET_AMOUNT, F.OPERATING_UNIT, F.DEPTID, F.FUND_CODE, F.CHARTFIELD2, F.PROJECT_ID 
ORDER BY A.CONTRACT_NUM, D.CONTRACT_LINE_NUM;

--Find all Open AR Items which do not have a correspinding Worksheet entry
SELECT IT.BUSINESS_UNIT "AR BU", IT.CUST_ID "Customer ID", C.NAME1 "Customer Name", C.SPNSR_TYPE, GM.DESCR "Sponsor Descr", IT.ITEM "Item", IT.ITEM_LINE "Item Line", 
       IT.ENTRY_TYPE, ET2.DESCR "Entry Type Descr", IT.ENTRY_REASON, ER2.DESCR "Entry Reason Desr", IT.ENTRY_EVENT, IT.REF_REASON, IT.BAL_AMT "Item Balance", IT.BAL_CURRENCY "Currency Code Bal Amt", 
       TO_CHAR(IT.ACCOUNTING_DT,'YYYY-MM-DD') "Acctg Date", TO_CHAR(IT.ASOF_DT,'YYYY-MM-DD') "As Of Date", TO_CHAR(IT.POST_DT,'YYYY-MM-DD') "Posted Date", TO_CHAR(IT.DUE_DT,'YYYY-MM-DD') "Due Date", 
       IT.CR_ANALYST "Credit Analyst", IT.SALES_PERSON "Sales Person", IT.PO_REF "PO Ref", IT.PYMNT_TERMS_CD "Payment Terms ID", IT.AGING_CATEGORY "Aging Category", IT.DST_ID_AR "AR Distribution Code", 
       IT.UPDATE_STATUS "Update Status", IT.ITEM_SEQ_NUM "Item Seq #", IT.RT_TYPE "Rate Type", IT.RATE_MULT "Rate Multiplier", IT.RATE_DIV "Rate Divisor", IT.BAL_AMT_BASE "Balance Base Curr", 
       IT.BAL_AMT_LAST "Display Letter Amount", IT.CURRENCY_CD "Curr Code", IT.ENTRY_USE_ID, ENT.DESCR "Entry ID Descr", 
       IT.CONTRACT_NUM "Contract", IT.BUSINESS_UNIT_BI "BI BU", IT.ADDRESS_SEQ_NUM "Address Seq #", IT.PAYMENT_METHOD "Pay Method", IT.BANK_SETID "Bank SetID", IT.BANK_CD "Bank Code", IT.BANK_ACCT_KEY "Bank Account", 
       IT.USER_AMT1 "User Amt 1", IT.ORIG_ITEM_AMT "Original Item Amount", 
       TO_CHAR(IT.LAST_ACTIVITY_DT,'YYYY-MM-DD') "Last Activity Date", TO_CHAR(IT.DT_INVOICED,'YYYY-MM-DD') "Invoice Date", IT.INVOICE "Invoice", IT.INVOICE_BU "Invoice BU", IT.SHIP_TO_CUST_ID "Ship To Customer", 
       IT.SOLD_TO_CUST_ID "Sold To Customer", IT.PROCESS_INSTANCE
FROM (((PS_ITEM IT LEFT OUTER JOIN PS_ENTRY_TYPE_TBL ET2 ON IT.ENTRY_TYPE = ET2.ENTRY_TYPE)
       LEFT OUTER JOIN PS_ENTRY_REASN_TBL ER2 ON IT.ENTRY_TYPE = ER2.ENTRY_TYPE AND IT.ENTRY_REASON = ER2.ENTRY_REASON)
       LEFT OUTER JOIN PS_ENTRY_USE_TBL ENT ON IT.ENTRY_USE_ID = ENT.ENTRY_USE_ID), (PS_CUSTOMER C LEFT OUTER JOIN PS_GM_SPNSR_TYPE GM ON C.SETID = GM.SETID AND C.SPNSR_TYPE = GM.SPNSR_TYPE), PS_SET_CNTRL_REC D
WHERE D.SETCNTRLVALUE = IT.BUSINESS_UNIT
  AND D.RECNAME = 'CUSTOMER'
  AND C.SETID = D.SETID
  AND IT.CUST_ID = C.CUST_ID
  AND (ET2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = IT.BUSINESS_UNIT AND RECNAME = 'ENTRY_TYPE_TBL') OR ET2.SETID IS NULL)
  AND (ER2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = IT.BUSINESS_UNIT AND RECNAME = 'ENTRY_REASN_TBL') OR ER2.SETID IS NULL)
  AND IT.BUSINESS_UNIT LIKE '6%'
  AND IT.ITEM_STATUS = 'O' 
  AND EXISTS (SELECT 'X' FROM PS_ITEM_ACTIVITY ITA WHERE IT.BUSINESS_UNIT = ITA.BUSINESS_UNIT AND IT.CUST_ID = ITA.CUST_ID AND IT.ITEM = ITA.ITEM AND IT.ITEM_LINE = ITA.ITEM_LINE AND ENTRY_USE_ID <> 'WS-01')
ORDER BY IT.ACCOUNTING_DT DESC, IT.BUSINESS_UNIT, IT.CUST_ID, IT.ITEM, IT.ITEM_LINE;

SELECT A.FIELDNAME  
  FROM PSRECFIELDDB A  
 WHERE RECNAME = 'JOB'  
   AND ((A.USEEDIT - ((A.USEEDIT / 2) * 2)) <> 0  OR ROUND(A.USEEDIT/2,0)*2 <> A.USEEDIT)  
ORDER BY A.FIELDNUM;

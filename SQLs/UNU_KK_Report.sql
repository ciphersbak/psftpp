--UNU_KK_RESOURCE_OVERVIEW > 2010
SELECT DECODE( A.DEPTID,' ', B.DEPTID, A.DEPTID) AS "Department", A.FUND_CODE "Fund", A.CHARTFIELD2 AS "Donor", A.PROGRAM AS "Program", A.PROJECT_ID AS "Project", A.BUDGET_PERIOD AS "Budget Period",
            SUM(DECODE(A.LEDGER,'AX1_UU_BUD',- A.POSTED_BASE_AMT,'ALT_UU_BUD',- A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Budget",
            SUM(DECODE(A.LEDGER,'REV_UU_COL',- A.POSTED_BASE_AMT,0)) AS "Cash Collected",
            SUM(DECODE(A.LEDGER,'AX1_UU_PRE', A.POSTED_BASE_AMT,'ALT_UU_PRE', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Pre-Enc",
            SUM(DECODE(A.LEDGER,'AX1_UU_ENC', A.POSTED_BASE_AMT,'ALT_UU_ENC', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Enc",
            SUM(DECODE(A.LEDGER,'AX1_UU_EXP', A.POSTED_BASE_AMT,'ALT_UU_EXP', A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Exp",
            SUM(DECODE(A.LEDGER,'AX1_UU_BUD',- A.POSTED_BASE_AMT,'ALT_UU_BUD',- A.POSTED_BASE_AMT,'AX1_UU_ENC',- A.POSTED_BASE_AMT,'ALT_UU_ENC',- A.POSTED_BASE_AMT,'AX1_UU_EXP',- A.POSTED_BASE_AMT,'ALT_UU_EXP',- A.POSTED_BASE_AMT,'REV_UU_COL',- A.POSTED_BASE_AMT,0)) AS "Allotment/Cash Avail Budget",
            SUM(DECODE(A.LEDGER,'PAR_UU_BUD',- A.POSTED_BASE_AMT,0)) AS "Project Budget",
            SUM(DECODE(A.LEDGER,'PAR_UU_PRE', A.POSTED_BASE_AMT,0)) AS "Project Pre-Enc",
            SUM(DECODE(A.LEDGER,'PAR_UU_ENC', A.POSTED_BASE_AMT,0)) AS "Project Enc",
            SUM(DECODE(A.LEDGER,'PAR_UU_EXP', A.POSTED_BASE_AMT,0)) AS "Project Exp",
            SUM(DECODE(A.LEDGER,'PAR_UU_BUD',- A.POSTED_BASE_AMT,'PAR_UU_ENC',- A.POSTED_BASE_AMT,'PAR_UU_EXP',- A.POSTED_BASE_AMT,0)) AS "Project Avail Budget"
FROM PS_UNU_LEDG_KK_PVW A, PS_GM_PRJ_DEPT B
WHERE A.BUSINESS_UNIT = 'UNUNI'
     --AND DECODE(  A.DEPTID,' ',  B.DEPTID,  A.DEPTID) = 'B0119'
     --AND A.FUND_CODE LIKE :3
     --AND A.PROJECT_ID = '00064159'
     AND ((A.BUDGET_PERIOD >= '2010') OR A.BUDGET_PERIOD = ' ')
     AND A.PROJECT_ID = B.PROJECT_ID (+)
GROUP BY DECODE(A.DEPTID,' ',  B.DEPTID,  A.DEPTID), A.FUND_CODE, A.CHARTFIELD2, A.PROGRAM, A.PROJECT_ID, A.BUDGET_PERIOD
ORDER BY 1, 2, 3, 4, 5, 6;
--UNU_BSB_BUDGET_BALANCE aka LEVEL1 for 2012 & 2013
SELECT 'LEVEL1_2012-2013', A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, PROJECT_ID,
            SUM( DECODE(SUBSTR(A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0)) AS BUDGET, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) ENCUMBRANCE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS EXPANDENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'ENC',0-POSTED_BASE_AMT,'EXP',0-POSTED_BASE_AMT,0)) AS AVAILABLE
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.LEDGER LIKE 'ALT%'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND (A.BUDGET_PERIOD IN ('2012', '2013') OR A.BUDGET_PERIOD = ' ')
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
    AND A.BUSINESS_UNIT = B.SETID
    AND A.DEPTID = B.DEPTID
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, PROJECT_ID
ORDER BY A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT;
--UNU_BSB_BUDGET_BALANCE aka LEVEL1 for 2014 & 2015
SELECT 'LEVEL1_2014-2015', A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, PROJECT_ID,
            SUM( DECODE(SUBSTR(A.LEDGER,8,3),'BUD',0- A.POSTED_BASE_AMT,0)) AS BUDGET, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'PRE',POSTED_BASE_AMT,0)) AS PRE_ENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,0)) ENCUMBRANCE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'EXP',POSTED_BASE_AMT,0)) AS EXPENSE, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'ENC',POSTED_BASE_AMT,'EXP',POSTED_BASE_AMT,0)) AS EXPANDENC, 
            SUM( DECODE(SUBSTR(LEDGER,8,3),'BUD',0-POSTED_BASE_AMT,'ENC',0-POSTED_BASE_AMT,'EXP',0-POSTED_BASE_AMT,0)) AS AVAILABLE
FROM PS_LEDGER_KK A, PS_DEPT_TBL B
WHERE A.LEDGER LIKE 'ALT%'
    AND A.BUSINESS_UNIT = 'UNUNI'
    AND (A.BUDGET_PERIOD IN ('2014', '2015') OR A.BUDGET_PERIOD = ' ')    
    AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED WHERE B.SETID = B_ED.SETID AND B.DEPTID = B_ED.DEPTID AND B_ED.EFFDT <= SYSDATE)
    AND A.BUSINESS_UNIT = B.SETID
    AND A.DEPTID = B.DEPTID
GROUP BY A.BUSINESS_UNIT, A.BUDGET_PERIOD, A.ACCOUNT, A.DEPTID, B.DESCRSHORT, A.OPERATING_UNIT, A.FUND_CODE, A.CHARTFIELD2, PROJECT_ID
ORDER BY A.ACCOUNT, A.DEPTID, A.OPERATING_UNIT;
--GLC8043
--GL Report for Project Exp
--Grouped
SELECT 'PROJECT_EXP_KK', X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDG_TYPE, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2,
            SUM(BUD) AS "Budget", SUM(PRE) AS "Pre-Encumbrance", SUM(ENC) AS "Encumbrance", SUM(EXP) AS "Expense", SUM((-1*BUD) - (EXP + (ENC))) AS "Available Budget"
FROM (            
SELECT E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, H.BUDG_TYPE, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2,            
            CASE WHEN E.LEDGER LIKE '%_UU_BUD' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS BUD,
            CASE WHEN E.LEDGER LIKE '%_UU_PRE' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS PRE,
            CASE WHEN E.LEDGER LIKE '%_UU_ENC' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS ENC,
            CASE WHEN E.LEDGER LIKE '%_UU_EXP' THEN (1 * SUM(D.POSTED_BASE_AMT)) ELSE 0 END AS EXP            
FROM PS_PROJECT_FS A, PS_PROJECT_STATUS C, PS_LEDGER_KK D, PS_LED_GRP_LED_TBL E, PS_KK_BUDGET_TYPE H, PS_SET_CNTRL_REC I 
WHERE A.BUSINESS_UNIT = 'UNUNI'
    AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
    AND A.PROJECT_ID = C.PROJECT_ID
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_PROJECT_STATUS C_ED WHERE C.BUSINESS_UNIT = C_ED.BUSINESS_UNIT AND C.PROJECT_ID = C_ED.PROJECT_ID AND C_ED.EFFDT <= SYSDATE) 
    AND C.EFFSEQ = (SELECT MAX(C_ES.EFFSEQ) FROM PS_PROJECT_STATUS C_ES WHERE C.BUSINESS_UNIT = C_ES.BUSINESS_UNIT AND C.PROJECT_ID = C_ES.PROJECT_ID AND C.EFFDT = C_ES.EFFDT) 
    AND A.BUSINESS_UNIT = D.BUSINESS_UNIT
    AND A.PROJECT_ID = D.PROJECT_ID
    AND D.LEDGER = E.LEDGER
    AND E.LEDGER_GROUP = 'PAR_UU'
    AND E.SETID = I.SETID
    AND H.EFFDT = (SELECT MAX(H_ED.EFFDT) FROM PS_KK_BUDGET_TYPE H_ED WHERE H.SETID1 = H_ED.SETID1 AND H.LEDGER_GROUP = H_ED.LEDGER_GROUP AND H_ED.EFFDT <= SYSDATE) 
    AND H.LEDGER_GROUP = E.LEDGER_GROUP
    AND H.SETID1 = E.SETID
    AND I.SETCNTRLVALUE = A.BUSINESS_UNIT
    AND I.RECNAME = 'LED_GRP_LED_TBL'
    --AND A.PROJECT_ID = '00064158'
    AND D.BUDGET_PERIOD > '2011'
GROUP BY E.LEDGER, A.PROJECT_ID, A.DESCR, A.START_DT, A.END_DT, C.PROJECT_STATUS, H.BUDG_TYPE, D.BUDGET_PERIOD, D.OPERATING_UNIT, D.FUND_CODE, D.DEPTID, D.CHARTFIELD2) X
GROUP BY X.PROJECT_ID, X.DESCR, X.START_DT, X.END_DT, X.PROJECT_STATUS, X.BUDG_TYPE, X.BUDGET_PERIOD, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.CHARTFIELD2
ORDER BY X.PROJECT_ID, X.BUDGET_PERIOD;
--UNU_KK_REVENUE_NOT_ASSOCIATED
SELECT 'KK_REV_NOT_ASSOCIATED', DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' ') "Type (R = Recog, C=Collected) ", A.BUSINESS_UNIT "Bus Unit", A.LEDGER "Ledger", 
       A.ACCOUNT "Account", A.OPERATING_UNIT "Oper Unit", A.FUND_CODE "Fund", A.DEPTID "DeptID", A.PROJECT_ID "Project", A.CHARTFIELD2 "Donor", 
       SUM(A.POSTED_BASE_AMT) "Amount", C.INSTID "Project Institution", C.DEPTID "Project DeptID"
FROM PS_LEDGER_KK A, PS_GM_PRJ_DEPT C
WHERE (A.BUSINESS_UNIT = 'UNUNI'
   AND A.LEDGER LIKE 'REV_UU%'
   AND NOT EXISTS (SELECT B.BUSINESS_UNIT FROM PS_KK_REV_XREF B WHERE B.LEDGER_GROUP = 'REV_UU' AND B.ACCOUNT = A.ACCOUNT AND B.DEPTID = A.DEPTID AND B.OPERATING_UNIT = A.OPERATING_UNIT 
                                                                  AND B.FUND_CODE = A.FUND_CODE AND B.CHARTFIELD2 = A.CHARTFIELD2 AND B.PROJECT_ID = A.PROJECT_ID)
   AND A.PROJECT_ID =  C.PROJECT_ID (+)
   --AND DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' ') LIKE '%'
   )
GROUP BY DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '), A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2, C.INSTID, C.DEPTID
HAVING ( SUM( A.POSTED_BASE_AMT) <> 0)
ORDER BY DECODE(A.LEDGER, 'REV_UU_COL', 'C', 'REV_UU_REC','R',' '), A.BUSINESS_UNIT, A.LEDGER, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.PROJECT_ID, A.CHARTFIELD2;
--GLvsKK - 2015
SELECT T.BUSINESS_UNIT, T.OPERATING_UNIT, T.FUND_CODE, T.DEPTID, T.PROJECT_ID, T.PRJ_DESCR, T.CHARTFIELD2, T.ACCT_ROLLUP, T.ACCOUNT, T.ACCT_DESCR,
            SUM(T.EXP_AMT_GL) AS EXP_AMT_GL, SUM(T.EXP_AMT_KK) AS EXP_AMT_KK, (SUM(T.EXP_AMT_GL) - SUM(T.EXP_AMT_KK)) AS VARIANCE, 
            SUM(T.JAN_GL) AS JAN_GL, SUM(T.JAN_KK) AS JAN_KK, SUM(T.FEB_GL) AS FEB_GL, SUM(T.FEB_KK) AS FEB_KK, SUM(T.MAR_GL) AS MAR_GL, SUM(T.MAR_KK) AS MAR_KK, 
            SUM(T.APR_GL) AS APR_GL, SUM(T.APR_KK) AS APR_KK, SUM(T.MAY_GL) AS MAY_GL, SUM(T.MAY_KK) AS MAY_KK, 
            SUM(T.JUN_GL) AS JUN_GL, SUM(T.JUN_KK) AS JUN_KK, SUM(T.JUL_GL) AS JUL_GL, SUM(T.JUL_KK) AS JUL_KK, SUM(T.AUG_GL) AS AUG_GL, SUM(T.AUG_KK) AS AUG_KK, 
            SUM(T.SEP_GL) AS SEP_GL, SUM(T.SEP_KK) AS SEP_KK, SUM(T.OCT_GL) AS OCT_GL, SUM(T.OCT_KK) AS OCT_KK, 
            SUM(T.NOV_GL) AS NOV_GL, SUM(T.NOV_KK) AS NOV_KK, SUM(T.DEC_GL) AS DEC_GL, SUM(T.DEC_KK) AS DEC_KK
FROM
(SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, X.CHARTFIELD2,
             (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
            SUM(X.EXP_AMT) AS EXP_AMT_GL, 0.0 AS EXP_AMT_KK,
            SUM(X.JAN) JAN_GL, 0.0 AS JAN_KK, SUM(X.FEB) FEB_GL, 0.0 AS FEB_KK, SUM(X.MAR) MAR_GL, 0.0 AS MAR_KK, SUM(X.APR) APR_GL, 0.0 AS APR_KK, SUM(X.MAY) MAY_GL, 0.0 AS MAY_KK, 
            SUM(X.JUN) JUN_GL, 0.0 AS JUN_KK, SUM(X.JUL) JUL_GL, 0.0 AS JUL_KK, SUM(X.AUG) AUG_GL, 0.0 AS AUG_KK, SUM(X.SEP) SEP_GL, 0.0 AS SEP_KK, SUM(X.OCT) OCT_GL, 0.0 AS OCT_KK, 
            SUM(X.NOV) NOV_GL, 0.0 AS NOV_KK, SUM(X.DEC) DEC_GL, 0.0 AS DEC_KK
FROM (
SELECT ST.BUSINESS_UNIT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ET.DESCR, ST.PROJECT_ID, ST.CHARTFIELD2, SUM(ST.POSTED_BASE_AMT) AS EXP_AMT   
 , CASE ST.ACCOUNTING_PERIOD WHEN 1 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JAN
 , CASE ST.ACCOUNTING_PERIOD WHEN 2 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS FEB 
 , CASE ST.ACCOUNTING_PERIOD WHEN 3 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 4 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS APR 
 , CASE ST.ACCOUNTING_PERIOD WHEN 5 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS MAY 
 , CASE ST.ACCOUNTING_PERIOD WHEN 6 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUN 
 , CASE ST.ACCOUNTING_PERIOD WHEN 7 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS JUL 
 , CASE ST.ACCOUNTING_PERIOD WHEN 8 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS AUG 
 , CASE ST.ACCOUNTING_PERIOD WHEN 9 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS SEP 
 , CASE ST.ACCOUNTING_PERIOD WHEN 10 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS OCT 
 , CASE ST.ACCOUNTING_PERIOD WHEN 11 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS NOV 
 , CASE ST.ACCOUNTING_PERIOD WHEN 12 THEN SUM(ST.POSTED_BASE_AMT) ELSE 0 END AS DEC 
FROM  PS_LEDGER ST, PS_GL_ACCOUNT_TBL ET, PS_SET_CNTRL_REC B2
WHERE ST.BUSINESS_UNIT = 'UNUNI'    
    AND ST.ACCOUNT = ET.ACCOUNT
    AND B2.SETCNTRLVALUE = ST.BUSINESS_UNIT
    AND B2.RECNAME = 'GL_ACCOUNT_TBL'
    AND B2.SETID = ET.SETID
    AND ET.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = ET.SETID AND CJ.ACCOUNT = ET.ACCOUNT AND CJ.EFFDT <= sysdate)      
    AND ST.LEDGER = 'USD'
    AND (ST.ACCOUNTING_PERIOD BETWEEN 1 AND 12) 
    AND ST.FISCAL_YEAR IN ('2015')
    --AND ST.STATISTICS_CODE = ' ' 
    --AND ST.CURRENCY_CD = 'USD'
    AND ET.ACCOUNT_TYPE IN ('E', 'R')    
    --AND ST.PROJECT_ID = '00064158'
    --AND ST.DEPTID = '11901'
GROUP BY ST.BUSINESS_UNIT, ST.OPERATING_UNIT, ST.FUND_CODE, ST.DEPTID, ST.ACCOUNT, ET.DESCR, ST.PROJECT_ID, ST.CHARTFIELD2, ST.ACCOUNTING_PERIOD) X, 
               PS_PROJECT B, PS_DEPTID_BUGL_VW C
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND X.PROJECT_ID = B.PROJECT_ID (+)
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL')
    AND X.DEPTID = C.DEPTID
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE)    
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR, X.ACCOUNT, X.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2
--ORDER BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X1.ACCOUNT, X.PROJECT_ID, X.CHARTFIELD2
UNION ALL
SELECT X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR AS DEPT_DESCR, X.PROJECT_ID, B.DESCR AS PRJ_DESCR, X.CHARTFIELD2,
            (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') AS ACCT_ROLLUP, X.ACCOUNT, X.DESCR AS ACCT_DESCR,
            0.0 AS EXP_AMT_GL, SUM(X.EXP_AMT) AS EXP_AMT_KK, 
            0.0 AS JAN_GL, SUM(X.JAN) JAN_KK, 0.0 AS FEB_GL, SUM(X.FEB) FEB_KK, 0.0 AS MAR_GL, SUM(X.MAR) MAR_KK, 0.0 AS APR_GL, SUM(X.APR) APR_KK, 0.0 AS MAY_GL, SUM(X.MAY) MAY_KK, 
            0.0 AS JUN_GL, SUM(X.JUN) JUN_KK, 0.0 AS JUL_GL, SUM(X.JUL) JUL_KK, 0.0 AS AUG_GL, SUM(X.AUG) AUG_KK, 0.0 AS SEP_GL, SUM(X.SEP) SEP_KK, 0.0 AS OCT_GL, SUM(X.OCT) OCT_KK, 
            0.0 AS NOV_GL, SUM(X.NOV) NOV_KK, 0.0 AS DEC_GL, SUM(X.DEC) DEC_KK
FROM
(SELECT A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2,
             DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) AS EXP_AMT,
            CASE A.ACCOUNTING_PERIOD WHEN 1 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JAN
          , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS FEB 
          , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAR 
          , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS APR 
          , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS MAY 
          , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUN 
          , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS JUL 
          , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS AUG 
          , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS SEP 
          , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS OCT 
          , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS NOV 
          , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN DECODE(SUBSTR(LEDGER,1,6),'DET_UU',SUM(POSTED_BASE_AMT),0) ELSE 0 END AS DEC            
FROM PS_LEDGER_KK A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4
WHERE A.BUSINESS_UNIT = 'UNUNI'
     AND B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= sysdate)
     --AND (A.FISCAL_YEAR IN ('2012') AND (A.ACCOUNTING_PERIOD BETWEEN 1 AND 12))
     AND A.BUDGET_PERIOD IN ('2015')
     AND A.LEDGER LIKE 'DET_UU%'
     --AND A.PROJECT_ID = '00064158'
     --AND A.DEPTID = '11901'
     --AND A.POSTED_BASE_AMT <> 0
     AND D.ACCOUNT_TYPE IN ('E', 'R')     
GROUP BY A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.ACCOUNTING_PERIOD, LEDGER) X, 
               PS_PROJECT B, PS_DEPTID_BUGL_VW C
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
     AND X.PROJECT_ID = B.PROJECT_ID (+)     
     AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL')
     AND X.DEPTID = C.DEPTID
     AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE)    
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, X.ACCOUNT, X.DESCR) T
GROUP BY T.BUSINESS_UNIT, T.OPERATING_UNIT, T.FUND_CODE, T.DEPTID, T.PROJECT_ID, T.PRJ_DESCR, T.CHARTFIELD2, T.ACCT_ROLLUP, T.ACCOUNT, T.ACCT_DESCR
--HAVING (SUM(T.EXP_AMT_GL) <> 0 AND SUM(T.EXP_AMT_KK) <> 0)
ORDER BY ACCOUNT,2,3,4,5,6,7,8;

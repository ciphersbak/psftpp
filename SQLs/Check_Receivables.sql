-----------------AR
--UNU_ARCLS_PAYMISC_NOTJG
SELECT 'PAYMISC_NOTJG', C.DEPOSIT_BU, C.DEPOSIT_ID, B.GROUP_ID, A.BANK_SETID, A.BANK_CD, A.BANK_ACCT_KEY, A.BNK_ID_NBR, A.BANK_ACCOUNT_NUM, A.RECON_STATUS, A.CASH_CNTRL, A.DEPOSIT_STATUS,
            C.PAYMENT_SEQ_NUM, B.MISC_PAYMENT, B.MISC_DST_BAL, B.CASH_CNTRL_DONE, B.CC_AFFECTED, B.BUDGET_HDR_STATUS, C.DST_SEQ_NUM, 
            C.BUSINESS_UNIT_GL, C.ACCOUNT, C.FUND_CODE, C.OPERATING_UNIT, C.DEPTID, C.BUSINESS_UNIT_PC, C.PROJECT_ID, C.ACTIVITY_ID, C.CHARTFIELD1, 
            C.CHARTFIELD2, C.AFFILIATE, C.AFFILIATE_INTRA1, C.AFFILIATE_INTRA2, TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, C.FOREIGN_CURRENCY, 
            C.FOREIGN_AMOUNT, C.CURRENCY_CD, C.MONETARY_AMOUNT, C.GL_DISTRIB_STATUS, C.JRNL_LN_REF, C.OPEN_ITEM_KEY, C.LINE_DESCR, 
            C.APPL_JRNL_ID, C.JOURNAL_ID, TO_CHAR(C.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, C.FISCAL_YEAR, C.ACCOUNTING_PERIOD, C.JOURNAL_LINE, 
            A.ASSN_OPRID, B.OPRID_APPROVED_BY, B.PAYMENT_STATUS
FROM PS_DEPOSIT_CONTROL A, PS_PAYMENT B, PS_PAY_MISC_DST C
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND B.DEPOSIT_BU = C.DEPOSIT_BU
     AND B.DEPOSIT_ID = C.DEPOSIT_ID
     AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM
     AND C.GL_DISTRIB_STATUS NOT IN ('D','I')
     AND C.BUSINESS_UNIT_GL = 'UNUNI'
     --AND C.ACCOUNTING_DT >= TO_DATE(:2,'YYYY-MM-DD')
     --AND C.ACCOUNTING_DT <= TO_DATE(:3,'YYYY-MM-DD')     
ORDER BY 1, 2, 9, 15;
--UNU_ARCLS_ITEMDST_NOTJG     
SELECT 'ITEMDST_NOTJG', A.BUSINESS_UNIT, A.CUST_ID, A.ITEM, A.ITEM_LINE, A.ITEM_SEQ_NUM, A.LEDGER_GROUP, A.LEDGER, A.DST_SEQ_NUM, B.ARRE_STATUS, C.BUDGET_HDR_STATUS, 
            A.BUSINESS_UNIT_GL, A.ACCOUNT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, A.BUSINESS_UNIT_PC, A.PROJECT_ID, A.ACTIVITY_ID, A.CHARTFIELD2, A.AFFILIATE, 
            A.AFFILIATE_INTRA1, A.AFFILIATE_INTRA2, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, A.FOREIGN_CURRENCY, A.FOREIGN_AMOUNT, A.CURRENCY_CD, A.MONETARY_AMOUNT, 
            A.GL_DISTRIB_STATUS, A.JRNL_LN_REF, A.OPEN_ITEM_KEY, A.LINE_DESCR, A.APPL_JRNL_ID, A.JOURNAL_ID, TO_CHAR(A.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, A.FISCAL_YEAR, 
            A.ACCOUNTING_PERIOD, A.JOURNAL_LINE
FROM PS_ITEM_DST A, PS_ITEM_ACTIVITY B, PS_AR_CC_TRAN_HDR C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
    AND A.CUST_ID = B.CUST_ID
    AND A.ITEM = B.ITEM
    AND A.ITEM_LINE = B.ITEM_LINE
    AND A.ITEM_SEQ_NUM = B.ITEM_SEQ_NUM
    AND B.BUSINESS_UNIT =  C.BUSINESS_UNIT (+)
    AND B.CUST_ID =  C.CUST_ID (+)
    AND B.ITEM =  C.ITEM (+)
    AND B.ITEM_LINE =  C.ITEM_LINE (+)
    AND B.ITEM_SEQ_NUM =  C.ITEM_SEQ_NUM (+)
    AND A.GL_DISTRIB_STATUS NOT IN ('D','I')
    AND A.BUSINESS_UNIT_GL = 'UNUNI'
    AND A.ACCOUNTING_DT >= TO_DATE('2012-01-01','YYYY-MM-DD')
    AND A.ACCOUNTING_DT <= TO_DATE('2015-12-31','YYYY-MM-DD')
    --AND A.ACCOUNT LIKE :4
ORDER BY 1, 2, 3, 4, 5, 6, 7, 8;
--Find WO in AR which have not been posted to GL
SELECT 'WO_IN_AR_NOTPOSTED_GL', B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.ITEM_SEQ_NUM, A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, 
       B.ACCOUNT, B.DEPTID, B.OPERATING_UNIT, B.FUND_CODE, B.AFFILIATE, B.AFFILIATE_INTRA1, B.AFFILIATE_INTRA2, B.CHARTFIELD1, B.CHARTFIELD2, 
       B.PROJECT_ID, B.FOREIGN_CURRENCY, B.FOREIGN_AMOUNT, B.CURRENCY_CD, B.MONETARY_AMOUNT, B.GL_DISTRIB_STATUS,
       TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS ACCTG_DT, B.BUSINESS_UNIT_GL, B.JOURNAL_ID, TO_CHAR(B.JOURNAL_DATE,'YYYY-MM-DD') AS JRNL_DT, B.FISCAL_YEAR, 
       B.ACCOUNTING_PERIOD, B.JOURNAL_LINE, C.JRNL_HDR_STATUS, C.OPRID
FROM PS_ITEM_ACTIVITY A, PS_ITEM_DST B, PS_JRNL_HEADER C
WHERE A.BUSINESS_UNIT = B.BUSINESS_UNIT
  AND A.CUST_ID = B.CUST_ID
  AND A.ITEM = B.ITEM
  AND A.ITEM_LINE = B.ITEM_LINE
  AND A.ITEM_SEQ_NUM = B.ITEM_SEQ_NUM
  AND B.BUSINESS_UNIT_GL = C.BUSINESS_UNIT (+)
  AND B.JOURNAL_ID = C.JOURNAL_ID (+)
  AND B.JOURNAL_DATE = C.JOURNAL_DATE (+)
  AND A.BUSINESS_UNIT LIKE '6%'
  --AND A.ITEM LIKE :2
  AND C.BUSINESS_UNIT (+) = 'UNUNI'
  --AND ( C.JOURNAL_ID LIKE 'AR%' OR C.JOURNAL_ID LIKE 'BI%')
  AND B.ACCOUNTING_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2015-12-31','YYYY-MM-DD')
  --AND B.ACCOUNT LIKE :9  
  AND A.ENTRY_TYPE = 'WO'
  AND B.GL_DISTRIB_STATUS NOT IN ('D', 'G')
ORDER BY 1, 2, 3, 4, 5;
--UNU_ARDJ_ERROR_OR_INCOMPLETE
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.PAYMENT_CURRENCY, A.PAYMENT_AMT,  
            A.PAYMENT_AMT * A.PYMT_RATE_MULT /  A.PYMT_RATE_DIV, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, B.OPRID, B.BAL_STATUS, 
            B.CONTROL_AMT, B.CONTROL_CNT, B.ENTERED_AMT, B.ENTERED_CNT, TO_CHAR(B.RECEIVED_DT,'YYYY-MM-DD') AS RCVD_DT, 
            TO_CHAR(B.ENTRY_DT,'YYYY-MM-DD') AS ENTRY_DT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT, 
            decode(  A.BUDGET_HDR_STATUS,' ','Budget Not Checked','N','Budget Not Checked','E','Budget Error', 'V','Valid') AS OUTPUT
FROM PS_PAYMENT A, PS_DEPOSIT_CONTROL B
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
     AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND A.DEPOSIT_BU LIKE '6%'
     --AND A.DEPOSIT_ID LIKE :2
     AND A.MISC_PAYMENT = 'Y'
     AND A.MISC_DST_BAL = 'C'
     AND A.BUDGET_HDR_STATUS IN ('E','N',' ')
     --AND A.ACCOUNTING_DT BETWEEN TO_DATE(:3,'YYYY-MM-DD') AND TO_DATE(:4,'YYYY-MM-DD')
UNION
SELECT C.DEPOSIT_BU, C.DEPOSIT_ID, C.PAYMENT_SEQ_NUM, C.PAYMENT_ID, C.PAYMENT_CURRENCY, C.PAYMENT_AMT,  
            ROUND((C.PAYMENT_AMT * C.PYMT_RATE_MULT /  C.PYMT_RATE_DIV), 2), TO_CHAR(C.ACCOUNTING_DT,'YYYY-MM-DD') AS C_ACCTG_DT, 
            F.OPRID, F.BAL_STATUS, F.CONTROL_AMT, F.CONTROL_CNT, F.ENTERED_AMT, F.ENTERED_CNT, 
            TO_CHAR(F.RECEIVED_DT,'YYYY-MM-DD') AS F_RCVD_DT, TO_CHAR(F.ENTRY_DT,'YYYY-MM-DD') AS F_ENTRY_DT, 
            TO_CHAR(F.ACCOUNTING_DT,'YYYY-MM-DD') AS F_ACCTG_DT, 
            decode(  C.MISC_DST_BAL,'N','Incomplete Direct Journal','O', 'Out Of Balance',' ', 'Incomplete Direct Journal','I','Balanced But Not Marked Complete') AS OUTPUT
FROM PS_PAYMENT C, PS_DEPOSIT_CONTROL F
WHERE C.DEPOSIT_BU = F.DEPOSIT_BU
     AND C.DEPOSIT_ID = F.DEPOSIT_ID
     AND C.DEPOSIT_BU LIKE '6%'
     AND C.MISC_PAYMENT = 'Y'
     AND C.MISC_DST_BAL <> 'C'
     --AND C.ACCOUNTING_DT BETWEEN TO_DATE(:3,'YYYY-MM-DD') AND TO_DATE(:4,'YYYY-MM-DD')
ORDER BY 1, 2, 3;
--UNU_AR_UNAPPLIED_DEPOSITS
SELECT 'UNU_AR_UNAPPLIED_DEPOSITS', A.DEPOSIT_BU, A.DEPOSIT_ID, B.PAYMENT_SEQ_NUM, B.PAYMENT_ID, B.PAYMENT_CURRENCY, B.PAYMENT_AMT,  
            ROUND(B.PYMT_RATE_MULT*(B.PAYMENT_AMT)/(B.PYMT_RATE_DIV), 2) AS B_PYMNT_AMT, TO_CHAR(B.ACCOUNTING_DT,'YYYY-MM-DD') AS B_ACCTG_DT, 
            A.OPRID, A.BAL_STATUS, TO_CHAR(A.RECEIVED_DT,'YYYY-MM-DD') AS A_RCVD_DT, A.DEPOSIT_TYPE, F.BANK_CD, A.BANK_ACCT_KEY, 
            F.DESCR, TO_CHAR(A.ENTRY_DT,'YYYY-MM-DD') AS A_ENTRY_DT, TO_CHAR(A.ACCOUNTING_DT,'YYYY-MM-DD') AS A_ACCTG_DT, C.CUST_ID, C.NAME1, 
            E.DEP_DESCR, ROUND(SYSDATE-RECEIVED_DT, 2) AS DAYS_AGED,F.SETID
FROM PS_DEPOSIT_CONTROL A,
          (PS_PAYMENT B LEFT OUTER JOIN  PS_PAYMENT_ID_CUST C 
                                  ON B.DEPOSIT_BU = C.DEPOSIT_BU 
                                AND B.DEPOSIT_ID = C.DEPOSIT_ID 
                                AND B.PAYMENT_SEQ_NUM = C.PAYMENT_SEQ_NUM 
                                AND C.ID_SEQ_NUM = 1 ), 
          (PS_PAYMENT D LEFT OUTER JOIN  PS_UN_DEP_DSCR E 
                                   ON  D.DEPOSIT_BU = E.DEPOSIT_BU 
                                  AND D.DEPOSIT_ID = E.DEPOSIT_ID 
                                  AND D.PAYMENT_SEQ_NUM = E.PAYMENT_SEQ_NUM 
                                  AND E.ID_SEQ_NUM = 1 ), PS_BANK_CD_TBL F
WHERE A.DEPOSIT_BU = B.DEPOSIT_BU
    AND A.DEPOSIT_ID = B.DEPOSIT_ID
     AND B.DEPOSIT_BU LIKE '6%'
     AND B.MISC_PAYMENT = 'N'
     AND B.POST_DT IS NULL
     AND A.CASH_CNTRL = B.CASH_CNTRL_USE
     AND (( B.CASH_CNTRL_USE = 'Y' AND B.CASH_CNTRL_DONE = 'Y') OR B.CASH_CNTRL_USE = 'N')
     AND A.LB_FORMAT_ERROR = 'N'
     AND B.PROCESS_INSTANCE = 0
     AND B.ACCOUNTING_DT BETWEEN TO_DATE('2012-01-01','YYYY-MM-DD') AND TO_DATE('2015-12-31','YYYY-MM-DD')
     AND B.DEPOSIT_BU = D.DEPOSIT_BU
     AND B.DEPOSIT_ID = D.DEPOSIT_ID
     AND B.PAYMENT_SEQ_NUM = D.PAYMENT_SEQ_NUM
     AND F.BANK_CD = A.BANK_CD
     AND F.SETID = A.BANK_SETID
ORDER BY 1, 2, 3;
--Identify GROUP_IDs which will not be selected in the next Receivable update run
SELECT 'GROUPS_EXCLUDED', A.* FROM PS_RP_PARALLEL A WHERE A.GROUP_BU LIKE '6%';
--Identify all Items with a blank PS_ITEM.PAYMENT_METHOD
SELECT 'BLANK_ITEM.PAYMENT_METHOD', A.* FROM PS_ITEM A WHERE BUSINESS_UNIT LIKE '6%' AND PAYMENT_METHOD = ' ';
--Identify blank PENDING_ITEM.DST_ID_AR
SELECT 'BLANK_PENDING_ITEM.DST_ID_AR', A.* FROM PS_PENDING_ITEM A WHERE GROUP_BU LIKE '6%' AND DST_ID_AR = ' ';
--Review GROUP POST_ACTION & POST_STATUS
SELECT GROUP_BU, 
            CASE POST_ACTION
                     WHEN 'A' THEN 'No Action'
                     WHEN 'B' THEN 'Balance Only Now'
                     WHEN 'D' THEN 'Delete This Group Now'
                     WHEN 'E' THEN 'Delete ALL Accouting Entries'
                     WHEN 'G' THEN 'Generate GL Distribution'
                     WHEN 'I' THEN 'Balance and Post Later'
                     WHEN 'L' THEN 'Batch Standard'
                     WHEN 'N' THEN 'Batch Priority'
                     WHEN 'V' THEN 'View'
                     ELSE 'Unknown'
            END AS POST_ACTION, 
            CASE POST_STATUS 
                     WHEN 'C' THEN 'Complete' 
                     WHEN 'E' THEN 'Errors'
                     WHEN 'N' THEN 'Not Posted' 
                     ELSE 'Unknown'
                     END AS POST_STATUS, COUNT(1) 
FROM PS_GROUP_CONTROL WHERE GROUP_BU LIKE '6%' GROUP BY GROUP_BU, POST_ACTION, POST_STATUS ORDER BY 1,2,3;
--No ACTION and Not POSTED GROUPs for UNU
SELECT 'NO_ACTION_NOT_POSTED', A.* FROM PS_GROUP_CONTROL A 
WHERE A.GROUP_BU LIKE '6%' AND A.POST_ACTION = 'A' AND A.POST_STATUS = 'N'
ORDER BY A.ENTRY_DT DESC, GROUP_BU, GROUP_ID, BUSINESS_UNIT;
--Review Payment(s)
SELECT DEPOSIT_BU, 
       CASE CREATE_PEND_ITEMS
            WHEN 'A' THEN 'No Action'
            WHEN 'L' THEN 'Batch Standard'
            WHEN 'N' THEN 'Batch Priority'                     
            ELSE 'Unknown'
       END AS CREATE_PEND_ITEMS, COUNT(1) 
FROM PS_PAYMENT WHERE DEPOSIT_BU LIKE '6%'
GROUP BY DEPOSIT_BU, CREATE_PEND_ITEMS
ORDER BY DEPOSIT_BU, CREATE_PEND_ITEMS;
--Locked Pending Items
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND POSTED_FLAG = 'I';
--Monitor AR_ERROR_CD for UNU AR BUs
--Version 1
SELECT GROUP_BU, AR_ERROR_CD, COUNT(1) 
FROM PS_PENDING_ITEM 
WHERE GROUP_BU LIKE '6%'
GROUP BY GROUP_BU, AR_ERROR_CD
ORDER BY 1,2;
--Monitor AR_ERROR_CD for UNU AR BUs
--Included Group Type and its Description
--Version 2
SELECT GRP.GROUP_BU, GRP.GROUP_TYPE, TYP.DESCRSHORT, PEN.AR_ERROR_CD, COUNT(1) 
FROM PS_PENDING_ITEM PEN, PS_GROUP_CONTROL GRP, PS_GROUP_TYPE_TBL TYP
WHERE GRP.GROUP_BU = PEN.GROUP_BU
     AND GRP.GROUP_ID = PEN.GROUP_ID
     AND TYP.GROUP_TYPE = GRP.GROUP_TYPE
     AND TYP.SETID = (SELECT C.SETID FROM PS_SET_CNTRL_REC C WHERE C.SETCNTRLVALUE = GRP.GROUP_BU AND C.RECNAME = 'GROUP_TYPE_TBL')
     AND TYP.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_GROUP_TYPE_TBL B_ED WHERE TYP.SETID = B_ED.SETID AND TYP.GROUP_TYPE = B_ED.GROUP_TYPE AND B_ED.EFFDT <= SYSDATE)     
     AND TYP.EFF_STATUS = 'A' 
     AND GRP.GROUP_BU LIKE '6%'
GROUP BY GRP.GROUP_BU, GRP.GROUP_TYPE, TYP.DESCRSHORT, PEN.AR_ERROR_CD
ORDER BY GRP.GROUP_BU, GRP.GROUP_TYPE, TYP.DESCRSHORT, PEN.AR_ERROR_CD;
--AR Groups ready for posting
SELECT 'GROUPS_READY_FOR_POSTING', G.GROUP_BU, G.GROUP_ID, G.CONTROL_CNT 
FROM PS_POSTING_REQUEST R, PS_GROUP_CONTROL G 
WHERE R.OPRID = 'prakash.prashant'
    AND R.RUN_CNTL_ID = 'UNU_AR_ARUPDATE_D1'
    AND ((R.PROCESS_FREQUENCY = 'O' AND R.PROCESS_STATUS = 'N') OR R.PROCESS_FREQUENCY = 'A')
    AND G.GROUP_BU = R.GROUP_BU
    AND G.POST_ACTION IN ( 'N', 'L' )
    AND G.POST_STATUS <> 'C'
    AND G.PROCESS_INSTANCE = 0
    AND G.ACCOUNTING_DT BETWEEN R.POST_FR_DT AND R.POST_TO_DT
    AND NOT EXISTS (SELECT 'X' FROM PS_RP_PARALLEL P WHERE P.GROUP_BU = G.GROUP_BU AND P.GROUP_ID = G.GROUP_ID)
ORDER BY G.CONTROL_CNT DESC;
--Groups with a non zero PI
SELECT * FROM PS_GROUP_CONTROL WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Customers with a non Zero PI
SELECT * FROM PS_CUST_DATA WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Pending Items with a non zero PI
SELECT * FROM PS_PENDING_ITEM WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--Pending Items DST with a non zero PI
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU LIKE '6%' AND PROCESS_INSTANCE <> 0;
--AR_CC_TRAN_HDR
SELECT * FROM PS_AR_CC_TRAN_HDR WHERE BUSINESS_UNIT LIKE '6%' AND PROCESS_INSTANCE = 0;
--Check LEDGER_GROUP and LEDGER for UNU AR BUs
SELECT * FROM PS_PENDING_DST WHERE GROUP_BU LIKE '6%' AND ((LEDGER_GROUP = ' ' AND PRIMARY_LEDGER = 'Y') OR (LEDGER = ' ' AND PRIMARY_LEDGER = 'Y'));
--Groups which have not been posted
SELECT A.GROUP_BU, A.GROUP_TYPE, TO_CHAR(A.ENTRY_DT, 'YYYY') AS ENTRY_YEAR, COUNT(1) 
FROM PS_GROUP_CONTROL A
WHERE A.POST_STATUS = 'E'
    AND A.GROUP_BU LIKE '6%'
GROUP BY GROUP_BU, GROUP_TYPE, TO_CHAR(A.ENTRY_DT, 'YYYY')
ORDER BY A.GROUP_BU, A.GROUP_TYPE;
--Payment(s) Posting Errors
SELECT A.DEPOSIT_BU, A.DEPOSIT_ID, A.PAYMENT_SEQ_NUM, A.PAYMENT_ID, A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, 
            A.ASSN_OPRID, A.ENTRY_DT, A.POST_STATUS, A.POST_DT, B.ENTRY_TYPE, B.DST_BAL_ITEM, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT
FROM PS_GROUP_CONTROL A, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM) 
WHERE A.GROUP_TYPE = 'P' 
    AND A.POST_STATUS = 'E' 
    AND A.GROUP_BU=B.GROUP_BU 
    AND A.GROUP_ID=B.GROUP_ID 
    AND (B.AR_ERROR_CD <> ' ' OR B.POSTED_FLAG <> 'Y')
    AND A.DEPOSIT_BU LIKE '6%'
ORDER BY 1,2;
--External Item(s) Posting Errors
SELECT A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, A.ASSN_OPRID, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT,
            B.DST_BAL_ITEM, A.ORIGIN_ID, A.ENTRY_DT, A.POST_DT
FROM PS_GROUP_CONTROL A, PS_ORIGIN_TBL C, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
WHERE A.GROUP_TYPE <> 'P' 
    AND A.GROUP_TYPE <> 'D' 
    AND A.GROUP_TYPE <> 'M' 
    AND A.GROUP_TYPE <> 'T' 
    AND A.GROUP_TYPE <> 'U' 
    AND A.GROUP_TYPE <> 'F' 
    AND A.POST_STATUS = 'E' 
    AND B.POSTED_FLAG <> 'Y' 
    AND A.GROUP_BU = B.GROUP_BU 
    AND A.GROUP_ID = B.GROUP_ID 
    AND A.ORIGIN_ID = C.ORIGIN_ID 
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME = 'ORIGIN_TBL') 
    AND C.EFFDT = (SELECT MAX(EFFDT) FROM PS_ORIGIN_TBL WHERE SETID=C.SETID AND ORIGIN_ID=C.ORIGIN_ID AND EFFDT <= SYSDATE AND EFF_STATUS = 'A') 
    AND C.ORIGIN_METHOD = 'E'
    AND A.GROUP_BU LIKE '6%'
ORDER BY 1,2;
--Online and External Item(s) Posting Errors
--ORIGIN_METHOD has been commented to include both Online and External Items
SELECT A.GROUP_BU, A.GROUP_ID, B.BUSINESS_UNIT, B.CUST_ID, B.ITEM, B.ITEM_LINE, B.GROUP_SEQ_NUM, A.OPRID, A.ASSN_OPRID, B.AR_ERROR_CD, ERR.AR_MSG_NUM, CAT.MESSAGE_TEXT,
            B.DST_BAL_ITEM, A.GROUP_TYPE, A.ENTRY_DT, A.POST_DT, A.ORIGIN_ID, C.DESCR AS ORIGIN_DESCR, C.ORIGIN_METHOD
FROM PS_GROUP_CONTROL A, PS_ORIGIN_TBL C, ((PS_PENDING_ITEM B
         LEFT OUTER JOIN PS_AR_ERROR_TBL ERR ON B.AR_ERROR_CD = ERR.AR_ERROR_CD)
         LEFT OUTER JOIN PSMSGCATDEFN CAT ON CAT.MESSAGE_SET_NBR = 6035 AND MESSAGE_NBR = ERR.AR_MSG_NUM)
WHERE A.GROUP_TYPE <> 'P' 
    AND A.GROUP_TYPE <> 'D' 
    AND A.GROUP_TYPE <> 'M' 
    AND A.GROUP_TYPE <> 'T' 
    AND A.GROUP_TYPE <> 'U' 
    AND A.GROUP_TYPE <> 'F' 
    AND A.POST_STATUS = 'E' 
    AND B.POSTED_FLAG <> 'Y' 
    AND A.GROUP_BU = B.GROUP_BU 
    AND A.GROUP_ID = B.GROUP_ID 
    AND A.ORIGIN_ID = C.ORIGIN_ID 
    AND C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE SETCNTRLVALUE = A.BUSINESS_UNIT AND RECNAME = 'ORIGIN_TBL') 
    AND C.EFFDT = (SELECT MAX(EFFDT) FROM PS_ORIGIN_TBL WHERE SETID=C.SETID AND ORIGIN_ID=C.ORIGIN_ID AND EFFDT <= SYSDATE AND EFF_STATUS = 'A') 
    --AND C.ORIGIN_METHOD = 'E'
    AND A.GROUP_BU LIKE '6%'
ORDER BY A.GROUP_BU, A.GROUP_ID, A.ENTRY_DT DESC, A.POST_DT DESC;
--Monitor ITEM(s) and PENDING ITEM(s)
--Version 1
--Still need to test ENTRY_TYPE and Group Statuses
SELECT 'ITEMS_PENDING_POSTING', TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, 
       SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, COUNT(1) 
FROM PS_PENDING_ITEM PEN, PS_CUSTOMER CUST
WHERE PEN.BUSINESS_UNIT LIKE '6%'
    --AND PEN.CUST_ID = '10033'
    AND PEN.POSTED_FLAG <> 'Y'
    AND NOT EXISTS (SELECT 'X' FROM PS_ITEM ITM WHERE ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE)
--    AND NOT EXISTS (SELECT 'X' FROM PS_GROUP_CONTROL GRP WHERE GRP.GROUP_BU = PEN.GROUP_BU AND GRP.GROUP_ID = PEN.GROUP_ID 
--                                                                                                    AND (GRP.POST_ACTION = 'A' AND GRP.POST_STATUS IN ('E', 'N') OR GRP.POST_ACTION = 'E'))
    AND EXISTS (SELECT 'X' FROM PS_GROUP_CONTROL GRP WHERE GRP.GROUP_BU = PEN.GROUP_BU AND GRP.GROUP_ID = PEN.GROUP_ID AND GRP.POST_DT IS NULL)
    AND CUST.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = PEN.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
    AND PEN.CUST_ID = CUST.CUST_ID
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM;
--Items which do not have a corresponding PY row in PS_PENDING_ITEM
--Check ITEMs which do not have a Payment Row yet
--Experimental Version 2
--Included LISTAGG to group together fields for better representation of the data
SELECT TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') AS YEAR, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, SUM(PEN.ENTRY_AMT_BASE) ENTRY_AMT_BASE, PEN.ENTRY_TYPE, COUNT(1), 
            LISTAGG(NVL(DECODE(PEN.CONTRACT_NUM, ' ', '', PEN.CONTRACT_NUM), 'NO_CONTRACT') || '-' || PEN.GROUP_BU || '-' || PEN.GROUP_ID || '-' || PEN.BUSINESS_UNIT || '-' || 
            PEN.CUST_ID || '-' || PEN.ITEM || '-' || PEN.ITEM_LINE || '-' || PEN.GROUP_SEQ_NUM || '-(' || PEN.ENTRY_AMT_BASE || ')-' 
            || NVL(DECODE(PEN.AR_ERROR_CD, ' ', '', PEN.AR_ERROR_CD), 'NO_ERROR'), '|') WITHIN GROUP (ORDER BY PEN.GROUP_BU, PEN.GROUP_ID) GRP_BU_ID_CUST_ITEM_LN_SEQ_AMT
FROM PS_CUSTOMER CUST, (PS_PENDING_ITEM PEN LEFT OUTER JOIN PS_ITEM ITM ON ITM.BUSINESS_UNIT = PEN.BUSINESS_UNIT AND ITM.CUST_ID =  PEN.CUST_ID AND ITM.ITEM = PEN.ITEM 
                                                                                  AND ITM.ITEM_LINE = PEN.ITEM_LINE AND ITEM_STATUS = 'O')
--With a self-join, be careful about Group BU, Group ID and Group Sequence Number, as they can be different for the same ITEM
WHERE (NOT EXISTS (SELECT 'X' FROM PS_PENDING_ITEM PEN2 WHERE --PEN.GROUP_BU = PEN2.GROUP_BU AND PEN.GROUP_ID = PEN2.GROUP_ID AND 
                                                                                                         PEN.BUSINESS_UNIT = PEN2.BUSINESS_UNIT 
                                                                                           AND PEN.CUST_ID = PEN2.CUST_ID AND PEN.ITEM = PEN2.ITEM AND PEN.ITEM_LINE = PEN2.ITEM_LINE 
                                                                                           --AND PEN.GROUP_SEQ_NUM = PEN2.GROUP_SEQ_NUM 
                                                                                           AND PEN2.ENTRY_TYPE = 'PY')
    OR NOT EXISTS (SELECT 'X' FROM PS_ITEM_ACTIVITY IACT WHERE PEN.BUSINESS_UNIT = IACT.BUSINESS_UNIT AND PEN.CUST_ID = IACT.CUST_ID AND PEN.ITEM = IACT.ITEM 
                                                                                                   AND PEN.ITEM_LINE = IACT.ITEM_LINE AND IACT.ENTRY_TYPE = 'PY')
    )
    AND PEN.ENTRY_TYPE IN ('CONNA', 'IN')
    --make sure to check the ENTRY TYPE to exclude AU, WAU etc.,
    AND CUST.SETID = (SELECT D.SETID FROM PS_SET_CNTRL_REC D WHERE D.SETCNTRLVALUE = PEN.BUSINESS_UNIT AND D.RECNAME = 'CUSTOMER')
    AND PEN.CUST_ID = CUST.CUST_ID
    AND PEN.BUSINESS_UNIT LIKE '6%'
    --AND PEN.CUST_ID = '10685'
GROUP BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY'), PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE
ORDER BY TO_CHAR(PEN.ACCOUNTING_DT, 'YYYY') DESC, PEN.BUSINESS_UNIT, PEN.CUST_ID, CUST.NAME1, PEN.ITEM, PEN.ENTRY_TYPE;
--Keep Track of UN Custom PSJob UNARUPDT
--Experimental Version 1
SELECT PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, ML.MESSAGE_NBR, 
       CAT.MESSAGE_TEXT, LISTAGG(PL.MESSAGE_PARM, '|') WITHIN GROUP (ORDER BY PARM_SEQ) MESSAGE_PARM, PR.RUNDTTM 
FROM PS_MESSAGE_LOGPARM PL, PS_MESSAGE_LOG ML, PSPRCSRQST PR, PSMSGCATDEFN CAT
WHERE PL.PROCESS_INSTANCE = ML.PROCESS_INSTANCE
    AND PL.MESSAGE_SEQ = ML.MESSAGE_SEQ
    AND PL.PROCESS_INSTANCE = PR.PRCSINSTANCE
    AND ML.MESSAGE_SET_NBR = CAT.MESSAGE_SET_NBR
    AND ML.MESSAGE_NBR = CAT.MESSAGE_NBR
    --AND PR.PRCSJOBNAME = 'PO_POREP'
    --AND PR.PRCSNAME = 'PO_PORECON'
    AND ML.MESSAGE_SET_NBR IN (6000, 6810, 6832, 6840)
    --AND ML.MESSAGE_NBR IN (2, 9, 20, 21, 22, 23)
    AND PR.OPRID = 'prakash.prashant'
    AND PR.PRCSINSTANCE >= (SELECT MIN(PR_ED.PRCSINSTANCE) FROM PSPRCSRQST PR_ED WHERE PR_ED.OPRID = 'prakash.prashant' AND PR_ED.MAINJOBNAME = 'UNARUPDT' 
                                                           AND TO_CHAR(PR_ED.RUNDTTM, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))
    --AND PR.RUNCNTLID = 'UNU_PO_CLOSE_31DEC'
GROUP BY PL.PROCESS_INSTANCE, PL.MESSAGE_SEQ, PR.PRCSNAME, PR.PRCSJOBNAME, PR.MAINJOBNAME, PR.RUNSTATUS, ML.MESSAGE_SET_NBR, 
         ML.MESSAGE_NBR, CAT.MESSAGE_TEXT, PR.RUNDTTM;

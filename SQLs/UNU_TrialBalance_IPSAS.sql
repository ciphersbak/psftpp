--UNU TB Roll-up
--Experimental Version 1
--2nd Oct 2014
--Trial Balance using UNU IPSAS Account Tree with Tree Node Descriptions from UNU custom view 
--DOES NOT include all Adjustment Periods
--21May2015 - Included Adjustment Periods 100 and 998
SELECT X.BUSINESS_UNIT "GL Bus Unit", X.OPERATING_UNIT "Oper Unit", OP.DESCR AS "Oper Unit Description", X.FUND_CODE "Fund", FD.DESCR "Fund Description", X.DEPTID "Detail DeptId", C.DESCR AS "DeptId Description", 
       X.PROJECT_ID "Project ID", B.DESCR "Project Description", X.CHARTFIELD2 "Donor", CF2.DESCR "Donor Description",
       X.Level_0 "Level 0", X.Level_0_Descr "Level 0 Description", X.Level_1 "Level 1", X.Level_1_Descr "Level 1 Description", X.Level_2 "Level 2", X.Level_2_Descr "Level 2 Description", 
       X.Level_3 "Level 3", X.Level_3_Descr "Level 3 Descrption", X.Level_4 "Level 4", X.Level_4_Descr "Level 4 Description", X.Level_5 "Level 5", X.Level_5_Descr "Level 5 Description",
       (SUBSTR(X.ACCOUNT,1,LENGTH(X.ACCOUNT)-2) || '00') "Account Roll-Up", X.ACCOUNT "Account", X.DESCR "Account Description", 
       SUM(X.POSTED_BASE_AMT) AS "Total GL", SUM(X.PERIOD_0) "Year Opening", 
       SUM(X.JAN) "January", SUM(X.FEB) "February", SUM(X.MAR) "March", SUM(X.APR) "April", SUM(X.MAY) "May", SUM(X.JUN) "June", 
       SUM(X.JUL) "July", SUM(X.AUG) "August", SUM(X.SEP) "September", SUM(X.OCT) "October", SUM(X.NOV) "November", SUM(X.DEC) "December", 
       SUM(X.ADJ_IP0) "IPSAS Opening Balance", SUM(X.ADJ_EOY) "Year End Adjustments"
FROM
(SELECT A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, 
             DNM.TREE_NODE Level_0, DNM.DESCR Level_0_Descr, DNM.TREE_NODE1 Level_1, DNM.DESCR1 Level_1_Descr, DNM.TREE_NODE2 Level_2, DNM.DESCR2 Level_2_Descr, 
             DNM.TREE_NODE3 Level_3, DNM.DESCR3 Level_3_Descr, DNM.TREE_NODE4 Level_4, DNM.DESCR30 Level_4_Descr, DNM.TREE_NODE5 Level_5, DNM.DESCR4 Level_5_Descr,
             A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, SUM(A.POSTED_BASE_AMT) AS POSTED_BASE_AMT
           , CASE A.ACCOUNTING_PERIOD WHEN 0 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS PERIOD_0 
           , CASE A.ACCOUNTING_PERIOD WHEN 1 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JAN
           , CASE A.ACCOUNTING_PERIOD WHEN 2 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS FEB 
           , CASE A.ACCOUNTING_PERIOD WHEN 3 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAR 
           , CASE A.ACCOUNTING_PERIOD WHEN 4 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS APR 
           , CASE A.ACCOUNTING_PERIOD WHEN 5 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS MAY 
           , CASE A.ACCOUNTING_PERIOD WHEN 6 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUN 
           , CASE A.ACCOUNTING_PERIOD WHEN 7 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS JUL 
           , CASE A.ACCOUNTING_PERIOD WHEN 8 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS AUG 
           , CASE A.ACCOUNTING_PERIOD WHEN 9 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS SEP 
           , CASE A.ACCOUNTING_PERIOD WHEN 10 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS OCT 
           , CASE A.ACCOUNTING_PERIOD WHEN 11 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS NOV 
           , CASE A.ACCOUNTING_PERIOD WHEN 12 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS DEC
           , CASE A.ACCOUNTING_PERIOD WHEN 100 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS ADJ_IP0
           , CASE A.ACCOUNTING_PERIOD WHEN 998 THEN SUM(A.POSTED_BASE_AMT) ELSE 0 END AS ADJ_EOY
FROM PS_LEDGER A, PS_GL_ACCOUNT_TBL D, PS_SET_CNTRL_REC B4, UNDPFS.PS_UN_DNORM_TRE_VW DNM
WHERE B4.SETCNTRLVALUE = A.BUSINESS_UNIT
     AND B4.RECNAME = 'GL_ACCOUNT_TBL'
     AND B4.SETID = D.SETID
    --AND D.SETID = 'SHARE'
     AND A.ACCOUNT = D.ACCOUNT
     AND D.EFFDT = (SELECT MAX(CJ.EFFDT) FROM PS_GL_ACCOUNT_TBL CJ WHERE CJ.SETID = D.SETID AND CJ.ACCOUNT = D.ACCOUNT AND CJ.EFFDT <= SYSDATE)
     AND DNM.TREE_NAME = 'UNU_IPSAS_ACCOUNT' 
     AND DNM.SETID = 'SHARE' 
     AND DNM.EFFDT = TO_DATE('1901-01-01','YYYY-MM-DD')
     AND D.ACCOUNT BETWEEN DNM.RANGE_FROM AND DNM.RANGE_TO
     AND A.BUSINESS_UNIT = 'UNUNI'
     AND A.LEDGER = 'USD'
     AND A.FISCAL_YEAR = '2015'
     AND ((A.ACCOUNTING_PERIOD BETWEEN 1 and 12 AND D.ACCOUNT_TYPE IN ('E', 'R')) OR (A.ACCOUNTING_PERIOD BETWEEN 0 and 12 AND D.ACCOUNT_TYPE NOT IN ('E', 'R'))
            OR A.ACCOUNTING_PERIOD IN ('100', '998'))
     AND A.STATISTICS_CODE = ' '
     --AND A.PROJECT_ID = '00064158'
     --AND A.ACCOUNT = '29109'
GROUP BY A.BUSINESS_UNIT, A.OPERATING_UNIT, A.FUND_CODE, A.DEPTID, DNM.TREE_NODE, DNM.DESCR, DNM.TREE_NODE1, DNM.DESCR1, DNM.TREE_NODE2, DNM.DESCR2, DNM.TREE_NODE3, 
               DNM.DESCR3, DNM.TREE_NODE4, DNM.DESCR30, DNM.TREE_NODE5, DNM.DESCR4, A.ACCOUNT, D.DESCR, A.PROJECT_ID, A.CHARTFIELD2, A.ACCOUNTING_PERIOD, LEDGER
               )X, PS_PROJECT B, PS_DEPTID_BUGL_VW C, PS_CHARTFIELD2_TBL CF2, PS_FUND_TBL FD, PS_OPER_UNIT_TBL OP
WHERE X.BUSINESS_UNIT = B.BUSINESS_UNIT (+)
    AND X.PROJECT_ID = B.PROJECT_ID (+)
    AND (C.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC G WHERE G.SETCNTRLVALUE = X.BUSINESS_UNIT AND G.RECNAME = 'DEPT_TBL') OR C.SETID IS NULL)
    AND X.DEPTID = C.DEPTID (+)
    AND (C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_DEPTID_BUGL_VW C_ED WHERE C.SETID = C_ED.SETID AND C.DEPTID = C_ED.DEPTID AND C_ED.EFFDT <= SYSDATE) OR C.EFFDT IS NULL)
    AND (CF2.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC GR WHERE GR.SETCNTRLVALUE = X.BUSINESS_UNIT AND GR.RECNAME = 'CHARTFIELD2_TBL') OR CF2.SETID IS NULL)
    AND X.CHARTFIELD2 =  CF2.CHARTFIELD2 (+)
    AND (CF2.EFFDT IS NULL OR 
           (CF2.EFFDT = (SELECT MAX(CF2_ED.EFFDT) FROM PS_CHARTFIELD2_TBL CF2_ED WHERE CF2.SETID = CF2_ED.SETID AND CF2.CHARTFIELD2 = CF2_ED.CHARTFIELD2 
                                                                                                                                        AND CF2_ED.EFFDT <= SYSDATE)))
    AND X.FUND_CODE = FD.FUND_CODE (+)
    AND (FD.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC FDS WHERE FDS.SETCNTRLVALUE = X.BUSINESS_UNIT AND FDS.RECNAME = 'FUND_TBL') OR FD.SETID IS NULL)
    AND (FD.EFFDT IS NULL OR 
           (FD.EFFDT = (SELECT MAX(FD_ED.EFFDT) FROM PS_FUND_TBL FD_ED WHERE FD.SETID = FD_ED.SETID AND FD.FUND_CODE = FD_ED.FUND_CODE AND FD_ED.EFFDT <= SYSDATE)))
    AND X.OPERATING_UNIT = OP.OPERATING_UNIT (+)
    AND (OP.SETID = (SELECT SETID FROM PS_SET_CNTRL_REC OPS WHERE OPS.SETCNTRLVALUE = X.BUSINESS_UNIT AND OPS.RECNAME = 'OPER_UNIT_TBL') OR OP.SETID IS NULL)
    AND (OP.EFFDT IS NULL OR 
           (OP.EFFDT = (SELECT MAX(OP_ED.EFFDT) FROM PS_OPER_UNIT_TBL OP_ED WHERE OP.SETID = OP_ED.SETID AND OP.OPERATING_UNIT = OP_ED.OPERATING_UNIT 
                                                                                                                                AND OP_ED.EFFDT <= SYSDATE))) 
GROUP BY X.BUSINESS_UNIT, X.OPERATING_UNIT, OP.DESCR, X.FUND_CODE, FD.DESCR, X.DEPTID, C.DESCR, X.PROJECT_ID, B.DESCR, X.CHARTFIELD2, CF2.DESCR, 
               X.Level_0, X.Level_0_Descr, X.Level_1, X.Level_1_Descr, X.Level_2, X.Level_2_Descr, X.Level_3, X.Level_3_Descr, X.Level_4, X.Level_4_Descr, X.Level_5, X.Level_5_Descr, 
               X.ACCOUNT, X.DESCR
ORDER BY X.Level_0, X.Level_1, X.Level_2, X.Level_3, X.Level_4, X.Level_5, X.ACCOUNT, X.OPERATING_UNIT, X.FUND_CODE, X.DEPTID, X.PROJECT_ID, X.CHARTFIELD2;
